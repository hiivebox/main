{"version":3,"file":"beepbox_synth.js","sources":["../build/synth/SynthConfig.js","../build/editor/EditorConfig.js","../build/synth/FFT.js","../build/synth/Deque.js","../build/global/Events.js","../build/synth/filtering.js","../node_modules/js-xxhash/dist/esm/xxHash32.js","../build/synth/synth.js"],"sourcesContent":["/*!\nCopyright (c) 2012-2022 John Nesky and contributing authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nexport const TypePresets = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"pulse width\", \"picked string\", \"supersaw\", \"chip (custom)\", \"mod\", \"FM (6-op)\"];\nexport function getSampleLoadingStatusName(status) {\n    switch (status) {\n        case 0: return \"loading\";\n        case 1: return \"loaded\";\n        case 2: return \"error\";\n    }\n}\nexport class SampleLoadingState {\n    constructor() {\n        this.statusTable = {};\n        this.urlTable = {};\n        this.totalSamples = 0;\n        this.samplesLoaded = 0;\n    }\n}\nexport const sampleLoadingState = new SampleLoadingState();\nexport class SampleLoadedEvent extends Event {\n    constructor(totalSamples, samplesLoaded) {\n        super(\"sampleloaded\");\n        this.totalSamples = totalSamples;\n        this.samplesLoaded = samplesLoaded;\n    }\n}\nexport class SampleLoadEvents extends EventTarget {\n    constructor() {\n        super();\n    }\n}\nexport const sampleLoadEvents = new SampleLoadEvents();\nexport function startLoadingSample(url, chipWaveIndex, presetSettings, rawLoopOptions, customSampleRate) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const sampleLoaderAudioContext = new AudioContext({ sampleRate: customSampleRate });\n        let closedSampleLoaderAudioContext = false;\n        const chipWave = Config.chipWaves[chipWaveIndex];\n        const rawChipWave = Config.rawChipWaves[chipWaveIndex];\n        const rawRawChipWave = Config.rawRawChipWaves[chipWaveIndex];\n        if (OFFLINE) {\n            if (url.slice(0, 5) === \"file:\") {\n                const dirname = yield getDirname();\n                const joined = yield pathJoin(dirname, url.slice(5));\n                url = joined;\n            }\n        }\n        fetch(url).then((response) => {\n            if (!response.ok) {\n                sampleLoadingState.statusTable[chipWaveIndex] = 2;\n                return Promise.reject(new Error(\"Couldn't load sample\"));\n            }\n            return response.arrayBuffer();\n        }).then((arrayBuffer) => {\n            return sampleLoaderAudioContext.decodeAudioData(arrayBuffer);\n        }).then((audioBuffer) => {\n            const samples = centerWave(Array.from(audioBuffer.getChannelData(0)));\n            const integratedSamples = performIntegral(samples);\n            chipWave.samples = integratedSamples;\n            rawChipWave.samples = samples;\n            rawRawChipWave.samples = samples;\n            if (rawLoopOptions[\"isUsingAdvancedLoopControls\"]) {\n                presetSettings[\"chipWaveLoopStart\"] = rawLoopOptions[\"chipWaveLoopStart\"] != null ? rawLoopOptions[\"chipWaveLoopStart\"] : 0;\n                presetSettings[\"chipWaveLoopEnd\"] = rawLoopOptions[\"chipWaveLoopEnd\"] != null ? rawLoopOptions[\"chipWaveLoopEnd\"] : samples.length - 1;\n                presetSettings[\"chipWaveLoopMode\"] = rawLoopOptions[\"chipWaveLoopMode\"] != null ? rawLoopOptions[\"chipWaveLoopMode\"] : 0;\n                presetSettings[\"chipWavePlayBackwards\"] = rawLoopOptions[\"chipWavePlayBackwards\"];\n                presetSettings[\"chipWaveStartOffset\"] = rawLoopOptions[\"chipWaveStartOffset\"] != null ? rawLoopOptions[\"chipWaveStartOffset\"] : 0;\n            }\n            sampleLoadingState.samplesLoaded++;\n            sampleLoadingState.statusTable[chipWaveIndex] = 1;\n            sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n            if (!closedSampleLoaderAudioContext) {\n                closedSampleLoaderAudioContext = true;\n                sampleLoaderAudioContext.close();\n            }\n        }).catch((error) => {\n            sampleLoadingState.statusTable[chipWaveIndex] = 2;\n            alert(\"Failed to load \" + url + \":\\n\" + error);\n            if (!closedSampleLoaderAudioContext) {\n                closedSampleLoaderAudioContext = true;\n                sampleLoaderAudioContext.close();\n            }\n        });\n    });\n}\nexport function getLocalStorageItem(key, defaultValue) {\n    let value = localStorage.getItem(key);\n    if (value == null || value === \"null\" || value === \"undefined\") {\n        value = defaultValue;\n    }\n    return value;\n}\nfunction loadScript(url) {\n    const result = new Promise((resolve, reject) => {\n        if (!Config.willReloadForCustomSamples) {\n            const script = document.createElement(\"script\");\n            script.src = url;\n            document.head.appendChild(script);\n            script.addEventListener(\"load\", (event) => {\n                resolve();\n            });\n        }\n        else {\n        }\n    });\n    return result;\n}\nexport function loadBuiltInSamples(set) {\n    const defaultIndex = 0;\n    const defaultIntegratedSamples = Config.chipWaves[defaultIndex].samples;\n    const defaultSamples = Config.rawRawChipWaves[defaultIndex].samples;\n    if (set == 0) {\n        const chipWaves = [\n            { name: \"paandorasbox kick\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox snare\", expression: 3.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox piano1\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 2 },\n            { name: \"paandorasbox WOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n            { name: \"paandorasbox overdrive\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -2 },\n            { name: \"paandorasbox trumpet\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 1.2 },\n            { name: \"paandorasbox saxophone\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -5 },\n            { name: \"paandorasbox orchestrahit\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n            { name: \"paandorasbox detatched violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n            { name: \"paandorasbox synth\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -0.8 },\n            { name: \"paandorasbox sonic3snare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox come on\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n            { name: \"paandorasbox choir\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n            { name: \"paandorasbox overdriveguitar\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6.2 },\n            { name: \"paandorasbox flute\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6 },\n            { name: \"paandorasbox legato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -28 },\n            { name: \"paandorasbox tremolo violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -33 },\n            { name: \"paandorasbox amen break\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -55 },\n            { name: \"paandorasbox pizzicato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -11 },\n            { name: \"paandorasbox tim allen grunt\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -20 },\n            { name: \"paandorasbox tuba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 44 },\n            { name: \"paandorasbox loopingcymbal\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17 },\n            { name: \"paandorasbox standardkick\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -7 },\n            { name: \"paandorasbox standardsnare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox closedhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 5 },\n            { name: \"paandorasbox foothihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 4 },\n            { name: \"paandorasbox openhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -31 },\n            { name: \"paandorasbox crashcymbal\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -43 },\n            { name: \"paandorasbox pianoC4\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.5 },\n            { name: \"paandorasbox liver pad\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -22.5 },\n            { name: \"paandorasbox marimba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -15.5 },\n            { name: \"paandorasbox susdotwav\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -24.5 },\n            { name: \"paandorasbox wackyboxtts\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17.5 },\n            { name: \"paandorasbox peppersteak_1\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.2 },\n            { name: \"paandorasbox peppersteak_2\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -47 },\n            { name: \"paandorasbox vinyl_noise\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -50 },\n            { name: \"paandorasbeta slap bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -56 },\n            { name: \"paandorasbeta HD EB overdrive guitar\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60 },\n            { name: \"paandorasbeta sunsoft bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -18.5 },\n            { name: \"paandorasbeta masculine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n            { name: \"paandorasbeta feminine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60.5 },\n            { name: \"paandorasbeta tololoche\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -29.5 },\n            { name: \"paandorasbeta harp\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -54 },\n            { name: \"paandorasbeta pan flute\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -58 },\n            { name: \"paandorasbeta krumhorn\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -46 },\n            { name: \"paandorasbeta timpani\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n            { name: \"paandorasbeta crowd hey\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -29 },\n            { name: \"paandorasbeta wario land 4 brass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -68 },\n            { name: \"paandorasbeta wario land 4 rock organ\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -63 },\n            { name: \"paandorasbeta wario land 4 DAOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -35 },\n            { name: \"paandorasbeta wario land 4 hour chime\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -47.5 },\n            { name: \"paandorasbeta wario land 4 tick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -12.5 },\n            { name: \"paandorasbeta kirby kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta kirby snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta kirby bongo\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta kirby click\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta sonor kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n            { name: \"paandorasbeta sonor snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n            { name: \"paandorasbeta sonor snare (left hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n            { name: \"paandorasbeta sonor snare (right hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n            { name: \"paandorasbeta sonor high tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n            { name: \"paandorasbeta sonor low tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n            { name: \"paandorasbeta sonor hihat (closed)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -17 },\n            { name: \"paandorasbeta sonor hihat (half opened)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -21 },\n            { name: \"paandorasbeta sonor hihat (open)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -54.5 },\n            { name: \"paandorasbeta sonor hihat (open tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -43.5 },\n            { name: \"paandorasbeta sonor hihat (pedal)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28 },\n            { name: \"paandorasbeta sonor crash\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -51 },\n            { name: \"paandorasbeta sonor crash (tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -50.5 },\n            { name: \"paandorasbeta sonor ride\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46 }\n        ];\n        sampleLoadingState.totalSamples += chipWaves.length;\n        const startIndex = Config.rawRawChipWaves.length;\n        for (const chipWave of chipWaves) {\n            const chipWaveIndex = Config.rawRawChipWaves.length;\n            const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n            Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n            Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n            Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n            Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n            Config.chipWaves[chipWaveIndex] = integratedChipWave;\n            Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = \"legacySamples\";\n        }\n        loadScript(\"samples.js\")\n            .then(() => loadScript(\"samples2.js\"))\n            .then(() => loadScript(\"samples3.js\"))\n            .then(() => loadScript(\"drumsamples.js\"))\n            .then(() => loadScript(\"wario_samples.js\"))\n            .then(() => loadScript(\"kirby_samples.js\"))\n            .then(() => {\n            const chipWaveSamples = [\n                centerWave(kicksample),\n                centerWave(snaresample),\n                centerWave(pianosample),\n                centerWave(WOWsample),\n                centerWave(overdrivesample),\n                centerWave(trumpetsample),\n                centerWave(saxophonesample),\n                centerWave(orchhitsample),\n                centerWave(detatchedviolinsample),\n                centerWave(synthsample),\n                centerWave(sonic3snaresample),\n                centerWave(comeonsample),\n                centerWave(choirsample),\n                centerWave(overdrivensample),\n                centerWave(flutesample),\n                centerWave(legatoviolinsample),\n                centerWave(tremoloviolinsample),\n                centerWave(amenbreaksample),\n                centerWave(pizzicatoviolinsample),\n                centerWave(timallengruntsample),\n                centerWave(tubasample),\n                centerWave(loopingcymbalsample),\n                centerWave(kickdrumsample),\n                centerWave(snaredrumsample),\n                centerWave(closedhihatsample),\n                centerWave(foothihatsample),\n                centerWave(openhihatsample),\n                centerWave(crashsample),\n                centerWave(pianoC4sample),\n                centerWave(liverpadsample),\n                centerWave(marimbasample),\n                centerWave(susdotwavsample),\n                centerWave(wackyboxttssample),\n                centerWave(peppersteak1),\n                centerWave(peppersteak2),\n                centerWave(vinyl),\n                centerWave(slapbass),\n                centerWave(hdeboverdrive),\n                centerWave(sunsoftbass),\n                centerWave(masculinechoir),\n                centerWave(femininechoir),\n                centerWave(southtololoche),\n                centerWave(harp),\n                centerWave(panflute),\n                centerWave(krumhorn),\n                centerWave(timpani),\n                centerWave(crowdhey),\n                centerWave(warioland4brass),\n                centerWave(warioland4organ),\n                centerWave(warioland4daow),\n                centerWave(warioland4hourchime),\n                centerWave(warioland4tick),\n                centerWave(kirbykick),\n                centerWave(kirbysnare),\n                centerWave(kirbybongo),\n                centerWave(kirbyclick),\n                centerWave(funkkick),\n                centerWave(funksnare),\n                centerWave(funksnareleft),\n                centerWave(funksnareright),\n                centerWave(funktomhigh),\n                centerWave(funktomlow),\n                centerWave(funkhihatclosed),\n                centerWave(funkhihathalfopen),\n                centerWave(funkhihatopen),\n                centerWave(funkhihatopentip),\n                centerWave(funkhihatfoot),\n                centerWave(funkcrash),\n                centerWave(funkcrashtip),\n                centerWave(funkride)\n            ];\n            let chipWaveIndexOffset = 0;\n            for (const chipWaveSample of chipWaveSamples) {\n                const chipWaveIndex = startIndex + chipWaveIndexOffset;\n                Config.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n                sampleLoadingState.statusTable[chipWaveIndex] = 1;\n                sampleLoadingState.samplesLoaded++;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                chipWaveIndexOffset++;\n            }\n        });\n    }\n    else if (set == 1) {\n        const chipWaves = [\n            { name: \"chronoperc1final\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"synthkickfm\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"mcwoodclick1\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"acoustic snare\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 }\n        ];\n        sampleLoadingState.totalSamples += chipWaves.length;\n        const startIndex = Config.rawRawChipWaves.length;\n        for (const chipWave of chipWaves) {\n            const chipWaveIndex = Config.rawRawChipWaves.length;\n            const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n            Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n            Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n            Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n            Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n            Config.chipWaves[chipWaveIndex] = integratedChipWave;\n            Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = \"nintariboxSamples\";\n        }\n        loadScript(\"nintaribox_samples.js\")\n            .then(() => {\n            const chipWaveSamples = [\n                centerWave(chronoperc1finalsample),\n                centerWave(synthkickfmsample),\n                centerWave(woodclicksample),\n                centerWave(acousticsnaresample)\n            ];\n            let chipWaveIndexOffset = 0;\n            for (const chipWaveSample of chipWaveSamples) {\n                const chipWaveIndex = startIndex + chipWaveIndexOffset;\n                Config.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n                sampleLoadingState.statusTable[chipWaveIndex] = 1;\n                sampleLoadingState.samplesLoaded++;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                chipWaveIndexOffset++;\n            }\n        });\n    }\n    else if (set == 2) {\n        const chipWaves = [\n            { name: \"cat\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n            { name: \"gameboy\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 7 },\n            { name: \"mario\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n            { name: \"drum\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 4 },\n            { name: \"yoshi\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n            { name: \"star\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n            { name: \"fire flower\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n            { name: \"dog\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n            { name: \"oink\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 3 },\n            { name: \"swan\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 1 },\n            { name: \"face\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -12 }\n        ];\n        sampleLoadingState.totalSamples += chipWaves.length;\n        const startIndex = Config.rawRawChipWaves.length;\n        for (const chipWave of chipWaves) {\n            const chipWaveIndex = Config.rawRawChipWaves.length;\n            const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n            Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n            Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n            Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n            Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n            Config.chipWaves[chipWaveIndex] = integratedChipWave;\n            Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = \"marioPaintboxSamples\";\n        }\n        loadScript(\"mario_paintbox_samples.js\")\n            .then(() => {\n            const chipWaveSamples = [\n                centerWave(catpaintboxsample),\n                centerWave(gameboypaintboxsample),\n                centerWave(mariopaintboxsample),\n                centerWave(drumpaintboxsample),\n                centerWave(yoshipaintboxsample),\n                centerWave(starpaintboxsample),\n                centerWave(fireflowerpaintboxsample),\n                centerWave(dogpaintbox),\n                centerWave(oinkpaintbox),\n                centerWave(swanpaintboxsample),\n                centerWave(facepaintboxsample)\n            ];\n            let chipWaveIndexOffset = 0;\n            for (const chipWaveSample of chipWaveSamples) {\n                const chipWaveIndex = startIndex + chipWaveIndexOffset;\n                Config.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n                sampleLoadingState.statusTable[chipWaveIndex] = 1;\n                sampleLoadingState.samplesLoaded++;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                chipWaveIndexOffset++;\n            }\n        });\n    }\n    else {\n        console.log(\"invalid set of built-in samples\");\n    }\n}\nexport class Config {\n    static generateSineWave() {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength);\n        }\n        return wave;\n    }\n    static generateTriWave() {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength)) / (Math.PI / 2);\n        }\n        return wave;\n    }\n    static generateTrapezoidWave(drive = 2) {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength)) * drive));\n        }\n        return wave;\n    }\n    static generateSquareWave(phaseWidth = 0) {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        const centerPoint = _a.sineWaveLength / 4;\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * _a.sineWaveLength / 2)\n                || ((Math.abs(i - _a.sineWaveLength - centerPoint) < phaseWidth * _a.sineWaveLength / 2))) * 2 - 1;\n        }\n        return wave;\n    }\n    static generateSawWave(inverse = false) {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = ((i + (_a.sineWaveLength / 4.0)) * 2.0 / _a.sineWaveLength) % 2 - 1;\n            wave[i] = inverse ? -wave[i] : wave[i];\n        }\n        return wave;\n    }\n    static generateQuasiSineWave() {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.round(Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength));\n        }\n        return wave;\n    }\n}\n_a = Config;\nConfig.thresholdVal = -10;\nConfig.kneeVal = 40;\nConfig.ratioVal = 12;\nConfig.attackVal = 0;\nConfig.releaseVal = 0.25;\nConfig.willReloadForCustomSamples = false;\nConfig.jsonFormat = \"slarmoosbox\";\nConfig.scales = toNameMap([\n    { name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] },\n    { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] },\n    { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] },\n    { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] },\n    { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] },\n    { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] },\n    { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] },\n    { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] },\n    { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] },\n    { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] },\n    { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] },\n    { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] },\n    { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] },\n    { name: \"Blues Major\", realName: \"blues major\", flags: [true, false, true, true, true, false, false, true, false, true, false, false] },\n    { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] },\n    { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] },\n    { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] },\n    { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] },\n    { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] },\n    { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] },\n    { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] },\n    { name: \"No Dabbing (MB)\", realName: \"no dabbing\", flags: [true, true, false, true, true, true, true, true, true, false, true, false] },\n    { name: \"Jacked Toad (TB)\", realName: \"jacked toad\", flags: [true, false, true, true, false, true, true, true, true, false, true, true] },\n    { name: \"Test Scale (TB)\", realName: \"**t\", flags: [true, true, false, false, false, true, true, false, false, true, true, false] },\n    { name: \"Custom\", realName: \"custom\", flags: [true, false, true, true, false, false, false, true, true, false, true, true] },\n]);\nConfig.keys = toNameMap([\n    { name: \"C\", isWhiteKey: true, basePitch: 12 },\n    { name: \"C♯\", isWhiteKey: false, basePitch: 13 },\n    { name: \"D\", isWhiteKey: true, basePitch: 14 },\n    { name: \"D♯\", isWhiteKey: false, basePitch: 15 },\n    { name: \"E\", isWhiteKey: true, basePitch: 16 },\n    { name: \"F\", isWhiteKey: true, basePitch: 17 },\n    { name: \"F♯\", isWhiteKey: false, basePitch: 18 },\n    { name: \"G\", isWhiteKey: true, basePitch: 19 },\n    { name: \"G♯\", isWhiteKey: false, basePitch: 20 },\n    { name: \"A\", isWhiteKey: true, basePitch: 21 },\n    { name: \"A♯\", isWhiteKey: false, basePitch: 22 },\n    { name: \"B\", isWhiteKey: true, basePitch: 23 },\n]);\nConfig.blackKeyNameParents = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\nConfig.tempoMin = 1;\nConfig.tempoMax = 500;\nConfig.octaveMin = -2;\nConfig.octaveMax = 2;\nConfig.echoDelayRange = 24;\nConfig.echoDelayStepTicks = 4;\nConfig.echoSustainRange = 8;\nConfig.echoShelfHz = 4000.0;\nConfig.echoShelfGain = Math.pow(2.0, -0.5);\nConfig.reverbShelfHz = 8000.0;\nConfig.reverbShelfGain = Math.pow(2.0, -1.5);\nConfig.reverbRange = 32;\nConfig.reverbDelayBufferSize = 16384;\nConfig.reverbDelayBufferMask = _a.reverbDelayBufferSize - 1;\nConfig.beatsPerBarMin = 1;\nConfig.beatsPerBarMax = 64;\nConfig.barCountMin = 1;\nConfig.barCountMax = 1024;\nConfig.instrumentCountMin = 1;\nConfig.layeredInstrumentCountMax = 10;\nConfig.patternInstrumentCountMax = 10;\nConfig.partsPerBeat = 24;\nConfig.ticksPerPart = 2;\nConfig.ticksPerArpeggio = 3;\nConfig.arpeggioPatterns = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7]];\nConfig.rhythms = toNameMap([\n    { name: \"÷3 (triplets)\", stepsPerBeat: 3, roundUpThresholds: [5, 12, 18] },\n    { name: \"÷4 (standard)\", stepsPerBeat: 4, roundUpThresholds: [3, 9, 17, 21] },\n    { name: \"÷6\", stepsPerBeat: 6, roundUpThresholds: null },\n    { name: \"÷8\", stepsPerBeat: 8, roundUpThresholds: null },\n    { name: \"÷12\", stepsPerBeat: 12, roundUpThresholds: null },\n    { name: \"freehand\", stepsPerBeat: 24, roundUpThresholds: null },\n]);\nConfig.instrumentTypeNames = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"supersaw\", \"custom chip\", \"mod\", \"FM6op\"];\nConfig.instrumentTypeHasSpecialInterval = [true, true, false, false, false, true, false, false, false, false, false];\nConfig.chipBaseExpression = 0.03375;\nConfig.fmBaseExpression = 0.03;\nConfig.noiseBaseExpression = 0.19;\nConfig.spectrumBaseExpression = 0.3;\nConfig.drumsetBaseExpression = 0.45;\nConfig.harmonicsBaseExpression = 0.025;\nConfig.pwmBaseExpression = 0.04725;\nConfig.supersawBaseExpression = 0.061425;\nConfig.pickedStringBaseExpression = 0.025;\nConfig.distortionBaseVolume = 0.011;\nConfig.bitcrusherBaseVolume = 0.010;\nConfig.granularOutputLoudnessCompensation = 0.5;\nConfig.rawChipWaves = toNameMap([\n    { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\n    { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\n    { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\n    { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\n    { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\n    { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\n    { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\n    { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\n    { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\n    { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\n    { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\n    { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n    { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\n    { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\n    { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\n    { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\n    { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\n    { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\n    { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\n    { name: \"trapezoid\", expression: 1.0, samples: centerWave([1.0 / 15.0, 6.0 / 15.0, 10.0 / 15.0, 14.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 14.0 / 15.0, 10.0 / 15.0, 6.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -6.0 / 15.0, -10.0 / 15.0, -14.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -14.0 / 15.0, -10.0 / 15.0, -6.0 / 15.0, -1.0 / 15.0,]) },\n    { name: \"modbox 10% pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"modbox sunsoft bass\", expression: 1.0, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, 1.0, 0.6875, 0.5, 0.625, 0.625, 0.5, 0.375, 0.5625, 0.4375, 0.5625, 0.4375, 0.4375, 0.3125, 0.1875, 0.1875, 0.375, 0.5625, 0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n    { name: \"modbox loud pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.7, 0.1, 0.1, 0, 0, 0, 0, 0, 0.1, 0.2, 0.15, 0.25, 0.125, 0.215, 0.345, 4.0]) },\n    { name: \"modbox sax\", expression: 0.5, samples: centerAndNormalizeWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 9.0, 0.06]) },\n    { name: \"modbox guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.5, 3.5, 3.0, -0.5, -0.25, -1.0]) },\n    { name: \"modbox sine\", expression: 0.5, samples: centerAndNormalizeWave([0.0, 0.05, 0.125, 0.2, 0.25, 0.3, 0.425, 0.475, 0.525, 0.625, 0.675, 0.725, 0.775, 0.8, 0.825, 0.875, 0.9, 0.925, 0.95, 0.975, 0.98, 0.99, 0.995, 1, 0.995, 0.99, 0.98, 0.975, 0.95, 0.925, 0.9, 0.875, 0.825, 0.8, 0.775, 0.725, 0.675, 0.625, 0.525, 0.475, 0.425, 0.3, 0.25, 0.2, 0.125, 0.05, 0.0, -0.05, -0.125, -0.2, -0.25, -0.3, -0.425, -0.475, -0.525, -0.625, -0.675, -0.725, -0.775, -0.8, -0.825, -0.875, -0.9, -0.925, -0.95, -0.975, -0.98, -0.99, -0.995, -1, -0.995, -0.99, -0.98, -0.975, -0.95, -0.925, -0.9, -0.875, -0.825, -0.8, -0.775, -0.725, -0.675, -0.625, -0.525, -0.475, -0.425, -0.3, -0.25, -0.2, -0.125, -0.05]) },\n    { name: \"modbox atari bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]) },\n    { name: \"modbox atari pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n    { name: \"modbox 1% pulse\", expression: 0.5, samples: centerAndNormalizeWave},\n    { name: \"modbox curved sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0 / 2.0, 1.0 / 3.0, 1.0 / 4.0]) },\n    { name: \"modbox viola\", expression: 0.45, samples: centerAndNormalizeWave([-0.9, -1.0, -0.85, -0.775, -0.7, -0.6, -0.5, -0.4, -0.325, -0.225, -0.2, -0.125, -0.1, -0.11, -0.125, -0.15, -0.175, -0.18, -0.2, -0.21, -0.22, -0.21, -0.2, -0.175, -0.15, -0.1, -0.5, 0.75, 0.11, 0.175, 0.2, 0.25, 0.26, 0.275, 0.26, 0.25, 0.225, 0.2, 0.19, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.275, 0.28, 0.29, 0.3, 0.29, 0.28, 0.27, 0.26, 0.25, 0.225, 0.2, 0.175, 0.15, 0.1, 0.075, 0.0, -0.01, -0.025, 0.025, 0.075, 0.2, 0.3, 0.475, 0.6, 0.75, 0.85, 0.85, 1.0, 0.99, 0.95, 0.8, 0.675, 0.475, 0.275, 0.01, -0.15, -0.3, -0.475, -0.5, -0.6, -0.71, -0.81, -0.9, -1.0, -0.9]) },\n    { name: \"modbox brass\", expression: 0.45, samples: centerAndNormalizeWave([-1.0, -0.95, -0.975, -0.9, -0.85, -0.8, -0.775, -0.65, -0.6, -0.5, -0.475, -0.35, -0.275, -0.2, -0.125, -0.05, 0.0, 0.075, 0.125, 0.15, 0.20, 0.21, 0.225, 0.25, 0.225, 0.21, 0.20, 0.19, 0.175, 0.125, 0.10, 0.075, 0.06, 0.05, 0.04, 0.025, 0.04, 0.05, 0.10, 0.15, 0.225, 0.325, 0.425, 0.575, 0.70, 0.85, 0.95, 1.0, 0.9, 0.675, 0.375, 0.2, 0.275, 0.4, 0.5, 0.55, 0.6, 0.625, 0.65, 0.65, 0.65, 0.65, 0.64, 0.6, 0.55, 0.5, 0.4, 0.325, 0.25, 0.15, 0.05, -0.05, -0.15, -0.275, -0.35, -0.45, -0.55, -0.65, -0.7, -0.78, -0.825, -0.9, -0.925, -0.95, -0.975]) },\n    { name: \"modbox acoustic bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 0.1, -0.1, -0.2, -0.4, -0.3, -1.0]) },\n    { name: \"modbox lyre\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, 4.0, 2.15, 4.13, 5.15, 0.0, -0.05, 1.0]) },\n    { name: \"modbox ramp pulse\", expression: 0.5, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\n    { name: \"modbox piccolo\", expression: 0.5, samples: centerAndNormalizeWave([1, 4, 2, 1, -0.1, -1, -0.12]) },\n    { name: \"modbox squaretooth\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\n    { name: \"modbox flatline\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]) },\n    { name: \"modbox pnryshk a (u5)\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]) },\n    { name: \"modbox pnryshk b (riff)\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -0.9, 0.8, -0.7, 0.6, -0.5, 0.4, -0.3, 0.2, -0.1, 0.0, -0.1, 0.2, -0.3, 0.4, -0.5, 0.6, -0.7, 0.8, -0.9, 1.0]) },\n    { name: \"sandbox shrill lute\", expression: 0.94, samples: centerAndNormalizeWave([1.0, 1.5, 1.25, 1.2, 1.3, 1.5]) },\n    { name: \"sandbox bassoon\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]) },\n    { name: \"sandbox shrill bass\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 0, 0, 1, 0, 1, 0, 0, 0]) },\n    { name: \"sandbox nes pulse\", expression: 0.4, samples: centerAndNormalizeWave([2.1, -2.2, 1.2, 3]) },\n    { name: \"sandbox saw bass\", expression: 0.25, samples: centerAndNormalizeWave([1, 1, 1, 1, 0, 2, 1, 2, 3, 1, -2, 1, 4, 1, 4, 2, 1, 6, -3, 4, 2, 1, 5, 1, 4, 1, 5, 6, 7, 1, 6, 1, 4, 1, 9]) },\n    { name: \"sandbox euphonium\", expression: 0.3, samples: centerAndNormalizeWave([0, 1, 2, 1, 2, 1, 4, 2, 5, 0, -2, 1, 5, 1, 2, 1, 2, 4, 5, 1, 5, -2, 5, 10, 1]) },\n    { name: \"sandbox shrill pulse\", expression: 0.3, samples: centerAndNormalizeWave([4 - 2, 0, 4, 1, 4, 6, 7, 3]) },\n    { name: \"sandbox r-sawtooth\", expression: 0.2, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\n    { name: \"sandbox recorder\", expression: 0.2, samples: centerAndNormalizeWave([5.0, -5.1, 4.0, -4.1, 3.0, -3.1, 2.0, -2.1, 1.0, -1.1, 6.0]) },\n    { name: \"sandbox narrow saw\", expression: 1.2, samples: centerAndNormalizeWave([0.1, 0.13 / -0.1, 0.13 / -0.3, 0.13 / -0.5, 0.13 / -0.7, 0.13 / -0.9, 0.13 / -0.11, 0.13 / -0.31, 0.13 / -0.51, 0.13 / -0.71, 0.13 / -0.91, 0.13 / -0.12, 0.13 / -0.32, 0.13 / -0.52, 0.13 / -0.72, 0.13 / -0.92, 0.13 / -0.13, 0.13 / 0.13, 0.13 / 0.92, 0.13 / 0.72, 0.13 / 0.52, 0.13 / 0.32, 0.13 / 0.12, 0.13 / 0.91, 0.13 / 0.71, 0.13 / 0.51, 0.13 / 0.31, 0.13 / 0.11, 0.13 / 0.9, 0.13 / 0.7, 0.13 / 0.5, 0.13 / 0.3, 0.13]) },\n    { name: \"sandbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n    { name: \"sandbox ring pulse\", expression: 1.0, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"sandbox double sine\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.0, -1.0, -1.1, -1.2, -1.3, -1.4, -1.5, -1.6, -1.7, -1.8, -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1.0]) },\n    { name: \"sandbox contrabass\", expression: 0.5, samples: centerAndNormalizeWave([4.20, 6.9, 1.337, 6.66]) },\n    { name: \"sandbox double bass\", expression: 0.4, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, -1.0, -0.6875, -0.5, -0.625, -0.625, -0.5, -0.375, -0.5625, -0.4375, -0.5625, -0.4375, -0.4375, -0.3125, -0.1875, 0.1875, 0.375, 0.5625, -0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n    { name: \"haileybox test1\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.5, -1.0]) },\n    { name: \"brucebox pokey 4bit lfsr\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0]) },\n    { name: \"brucebox pokey 5step bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0]) },\n    { name: \"brucebox isolated spiky\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0, -1.0]) },\n    { name: \"nerdbox unnamed 1\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 0.8 / 0.2, 0.7, -0.4, -1.0, 0.5, -0.5 / 0.6]) },\n    { name: \"nerdbox unnamed 2\", expression: 0.5, samples: centerAndNormalizeWave([2.0, 5.0 / 55.0, -9.0, 6.5 / 6.5, -55.0, 18.5 / -26.0]) },\n    { name: \"zefbox semi-square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.5, 2.0, 2.5, 2.5, 2.5, 2.0, 1.5, 1.0]) },\n    { name: \"zefbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n    { name: \"zefbox squaretal\", expression: 0.7, samples: centerAndNormalizeWave([1.5, 1.0, 1.5, -1.5, -1.0, -1.5]) },\n    { name: \"zefbox saw wide\", expression: 0.65, samples: centerAndNormalizeWave([0.0, -0.4, -0.8, -1.2, -1.6, -2.0, 0.0, -0.4, -0.8, -1.2, -1.6]) },\n    { name: \"zefbox saw narrow\", expression: 0.65, samples: centerAndNormalizeWave([1, 0.5, 1, 0.5, 1, 0.5, 1, 2, 1, 2, 1]) },\n    { name: \"zefbox deep sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([0, 2, 3, 4, 4.5, 5, 5.5, 6, 6.25, 6.5, 6.75, 7, 6.75, 6.5, 6.25, 6, 5.5, 5, 4.5, 4, 3, 2, 1]) },\n    { name: \"zefbox sawtal\", expression: 0.3, samples: centerAndNormalizeWave([1.5, 1.0, 1.25, -0.5, 1.5, -0.5, 0.0, -1.5, 1.5, 0.0, 0.5, -1.5, 0.5, 1.25, -1.0, -1.5]) },\n    { name: \"zefbox deep sawtal\", expression: 0.7, samples: centerAndNormalizeWave([0.75, 0.25, 0.5, -0.5, 0.5, -0.5, -0.25, -0.75]) },\n    { name: \"zefbox pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -2.0, -2.0, -1.5, -1.5, -1.25, -1.25, -1.0, -1.0]) },\n    { name: \"zefbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },\n    { name: \"zefbox high pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, -2, 2, -3, 3, -4, 5, -4, 3, -3, 2, -2, 1]) },\n    { name: \"zefbox deep pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, 2, 2, -2, -2, -3, -4, -4, -5, -5, -5, -5, 0, -1, -2]) },\n    { name: \"wackybox guitar string\", expression: 0.6, samples: centerAndNormalizeWave([0, 63, 63, 63, 63, 19, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 11, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 27, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 34, 63, 63, 63, 63]) },\n    { name: \"wackybox intense\", expression: 0.6, samples: centerAndNormalizeWave([36, 25, 33, 35, 18, 51, 22, 40, 27, 37, 31, 33, 25, 29, 41, 23, 31, 31, 45, 20, 37, 23, 29, 26, 42, 29, 33, 26, 31, 27, 40, 25, 40, 26, 37, 24, 41, 32, 0, 32, 33, 29, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]) },\n    { name: \"wackybox buzz wave\", expression: 0.6, samples: centerAndNormalizeWave([0, 1, 1, 2, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8, 8, 8, 11, 15, 23, 62, 61, 60, 58, 56, 56, 54, 53, 52, 50, 49, 48, 47, 47, 45, 45, 45, 44, 44, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 53]) },\n    { name: \"todbox 1/3 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0]) },\n    { name: \"todbox 1/5 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"todbox slap bass\", expression: 0.5, samples: centerAndNormalizeWave([1, 0.5, 0, 0.5, 1.25, 0.5, -0.25, 0.1, -0.1, 0.1, 1.1, 2.1, 3, 3.5, 2.9, 3.3, 2.7, 2.9, 2.3, 2, 1.9, 1.8, 1, 0.7, 0.9, 0.8, 0.4, 0.1, 0.0, 0.2, 0.4, 0.6, 0.5, 0.8]) },\n    { name: \"todbox harsh wave\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 0.5, 0.5, 0.5, 0.7, 0.39, 1.3, 0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"todbox accordian\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 1, 2, 2, 1.5, 1.5, 0.8, 0, -2, -3.25, -4, -4.5, -5.5, -6, -5.75, -5.5, -5, -5, -5, -6, -6, -6, -5, -4, -3, -2, -1, 0.75, 1, 2, 3, 4, 5, 6, 6.5, 7.5, 8, 7.75, 6, 5.25, 5, 5, 5, 5, 5, 4.25, 3.75, 3.25, 2.75, 1.25, -0.75, -2, -0.75, 1.25, 1.25, 2, 2, 2, 2, 1.5, -1, -2, -1, 1.5, 2, 2.75, 2.75, 2.75, 3, 2.75, -1, -2, -2.5, -2, -1, -2.25, -2.75, -2, -3, -1.75, 1, 2, 3.5, 4, 5.25, 6, 8, 9.75, 10, 9.5, 9, 8.5, 7.5, 6.5, 5.25, 5, 4.5, 4, 4, 4, 3.25, 2.5, 2, 1, -0.5, -2, -3.5, -4, -4, -4, -3.75, -3, -2, -1]) },\n    { name: \"todbox beta banana wave\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0]) },\n    { name: \"todbox beta test wave\", expression: 0.5, samples: centerAndNormalizeWave([56, 0, -52, 16, 3, 3, 2, -35, 20, 147, -53, 0, 0, 5, -6]) },\n    { name: \"todbox beta real snare\", expression: 1.0, samples: centerAndNormalizeWave([0.00000, -0.01208, -0.02997, -0.04382, -0.06042, -0.07529, -0.09116, -0.10654, -0.12189, -0.13751, -0.15289, -0.16849, -0.18387, -0.19974, -0.21484, -0.23071, -0.24557, -0.26144, -0.27731, -0.29141, -0.30350, -0.32416, -0.34406, -0.32947, -0.31158, -0.33725, -0.37579, -0.39746, -0.40201, -0.40906, -0.44180, -0.47229, -0.47379, -0.47733, -0.45239, -0.33954, -0.22894, -0.22443, -0.32138, -0.46371, -0.57178, -0.61081, -0.59998, -0.61459, -0.62189, -0.43979, -0.19217, -0.12643, -0.17252, -0.20956, -0.20981, -0.19217, -0.22845, -0.34332, -0.50629, -0.64307, -0.72922, -0.81384, -0.87857, -0.90149, -0.88687, -0.86169, -0.87781, -0.80478, -0.52493, -0.31308, -0.33249, -0.39395, -0.39017, -0.30301, -0.19949, -0.13071, -0.02493, 0.14307, 0.34961, 0.52542, 0.63223, 0.68613, 0.74710, 0.87305, 0.98184, 0.98889, 0.97052, 0.99066, 0.99747, 0.99344, 0.99469, 0.99393, 0.99570, 0.99393, 0.99521, 0.99469, 0.99420, 0.99521, 0.99420, 0.99521, 0.99469, 0.99469, 0.99521, 0.99420, 0.99545, 0.99445, 0.99469, 0.99493, 0.99420, 0.99521, 0.99393, 0.99493, 0.99469, 0.99445, 0.99570, 0.99445, 0.99521, 0.99469, 0.99469, 0.99521, 0.99420, 0.99545, 0.99445, 0.99445, 0.99493, 0.99420, 0.99545, 0.99420, 0.99493, 0.99493, 0.99420, 0.99545, 0.99445, 0.99521, 0.99469, 0.99445, 0.99545, 0.99368, 0.99393, 0.99445, 0.99268, 0.97983, 0.97229, 0.95944, 0.88486, 0.76773, 0.64481, 0.53098, 0.39847, 0.19318, -0.03827, -0.20325, -0.39319, -0.68765, -0.88461, -0.93448, -0.96069, -0.97681, -0.98715, -0.99042, -0.99142, -0.99091, -0.99142, -0.99219, -0.99091, -0.99219, -0.99066, -0.99142, -0.99142, -0.99118, -0.99191, -0.99066, -0.99191, -0.99142, -0.99142, -0.99191, -0.99091, -0.99219, -0.99118, -0.99142, -0.99167, -0.99091, -0.99219, -0.99091, -0.99167, -0.99142, -0.99091, -0.99191, -0.99091, -0.99191, -0.99142, -0.99118, -0.99191, -0.99066, -0.99191, -0.99118, -0.99142, -0.99191, -0.99066, -0.99191, -0.99091, -0.99167, -0.99191, -0.99118, -0.99219, -0.99091, -0.99191, -0.99142, -0.99142, -0.99243, -0.98865, -0.98764, -0.99219, -0.98083, -0.92517, -0.92770, -0.91486, -0.59042, -0.15189, 0.02945, 0.05667, 0.06195, 0.00629, -0.18008, -0.56497, -0.88010, -0.92770, -0.92871, -0.97705, -0.99167, -0.98663, -0.99118, -0.99042, -0.99219, -0.99142, -0.99118, -0.98941, -0.99219, -1.00000, -0.97580, -0.95993, -0.99948, -0.98236, -0.84659, -0.74860, -0.70679, -0.59747, -0.48035, -0.41687, -0.36826, -0.29745, -0.18185, -0.06219, 0.02164, 0.07907, 0.13123, 0.18033, 0.19620, 0.15692, 0.14053, 0.20251, 0.27530, 0.30905, 0.29092, 0.27252, 0.30402, 0.32416, 0.32214, 0.35239, 0.39670, 0.43198, 0.49420, 0.58487, 0.64154, 0.65967, 0.67050, 0.67026, 0.66522, 0.65540, 0.66119, 0.70627, 0.75842, 0.78738, 0.78940, 0.78763, 0.80402, 0.85944, 0.94559, 0.98990, 0.98160, 0.98007, 0.99368, 0.99393, 0.98538, 0.97580, 0.97101, 0.93802, 0.81812, 0.64633, 0.46649, 0.28613, 0.14685, 0.08966, 0.12543, 0.20325, 0.24557, 0.18866, 0.02795, -0.20175, -0.44205, -0.58713, -0.57629, -0.41385, -0.14255, 0.18033, 0.47882, 0.68311, 0.72314, 0.62064, 0.48309, 0.43073, 0.53577, 0.72794, 0.90250, 0.97354, 0.97000, 0.98083, 0.99191, 0.99319, 0.99493, 0.99393, 0.99521, 0.99393, 0.99545, 0.99420, 0.99493, 0.99493, 0.99445, 0.99545, 0.99420, 0.99545, 0.99243, 0.98917, 0.98386, 0.97781, 0.95844, 0.89066, 0.81561, 0.78134, 0.77277, 0.75995, 0.73022, 0.67126, 0.57178, 0.47000, 0.38361, 0.29419, 0.20703, 0.14734, 0.15866, 0.25162, 0.35818, 0.45062, 0.56750, 0.69748, 0.81232, 0.89697, 0.95062, 0.97656, 0.98615, 0.99191, 0.99219, 0.99243, 0.99368, 0.99368, 0.97028, 0.95566, 0.94559, 0.82617, 0.59973, 0.38361, 0.23901, 0.15338, 0.12921, 0.11206, 0.04382, -0.12946, -0.43552, -0.72644, -0.89847, -0.95465, -0.95541, -0.97229, -0.99268, -0.99319, -0.98840, -0.99142, -0.99167, -0.99091, -0.98840, -0.98965, -0.99368, -0.97455, -0.95010, -0.94684, -0.96219, -0.98514, -0.99243, -0.98889, -0.98917, -0.99142, -0.99219, -0.99091, -0.99191, -0.99142, -0.99142, -0.99191, -0.99066, -0.99167, -0.99091, -0.99142, -0.99191, -0.99091, -0.99191, -0.99091, -0.99167, -0.99167, -0.99091, -0.99219, -0.99091, -0.99191, -0.99142, -0.99118, -0.99191, -0.99066, -0.99191, -0.99091, -0.99118, -0.99243, -0.98941, -0.98462, -0.96976, -0.96320, -0.96194, -0.87305, -0.66196, -0.44809, -0.29495, -0.18085, -0.11813, -0.11334, -0.18564, -0.34885, -0.58237, -0.80450, -0.93726, -0.97806, -0.97354, -0.97531, -0.98990, -0.99368, -0.98941, -0.99219, -0.99091, -0.99142, -0.99167, -0.99091, -0.99191, -0.99118, -0.99219, -0.98236, -0.97781, -0.97656, -0.95135, -0.87204, -0.71335, -0.52139, -0.34232, -0.17783, -0.00906, 0.14886, 0.30450, 0.48889, 0.67404, 0.84030, 0.94128, 0.97681, 0.98462, 0.98337, 0.99142, 0.99521, 0.99493, 0.99420, 0.99445, 0.99521, 0.99393, 0.99545, 0.99445, 0.99521, 0.99521, 0.99445, 0.99570, 0.99445, 0.99521, 0.99469, 0.99445, 0.99521, 0.99420, 0.99521, 0.99445, 0.99445, 0.99521, 0.99445, 0.99545, 0.99445, 0.99469, 0.99493, 0.99393, 0.99493, 0.99445, 0.99393, 0.98285, 0.97781, 0.97479, 0.92844, 0.82114, 0.66095, 0.52417, 0.46826, 0.46722, 0.47934, 0.47379, 0.47076, 0.48209, 0.42014, 0.25439, 0.10074, -0.00302, -0.08966, -0.16068, -0.21436, -0.22040, -0.15137, -0.00476, 0.18536, 0.37631, 0.52292, 0.62164, 0.70425, 0.74835, 0.72366, 0.63928, 0.52567, 0.40805, 0.35666, 0.42896, 0.60175, 0.80200, 0.92743, 0.96548, 0.97632, 0.98337, 0.99066, 0.99521, 0.99420, 0.99368, 0.99292, 0.98840, 0.98083, 0.96774, 0.93323, 0.85440, 0.69470, 0.47202, 0.20425, -0.08890, -0.36423, -0.60025, -0.77481, -0.90173, -0.96017, -0.97028, -0.98108, -0.98840, -0.99219, -0.98990, -0.99219, -0.99142, -0.99142, -0.99219, -0.99091, -0.99243, -0.99066, -0.99142, -0.99142, -0.99118, -0.99191, -0.99066, -0.99167, -0.99142, -0.99142, -0.99219, -0.99091, -0.99191, -0.99118, -0.99142, -0.99191, -0.99091, -0.99191, -0.99091, -0.99167, -0.99191, -0.99118, -0.99219, -0.99091, -0.99167, -0.99142, -0.99142, -0.99219, -0.99091, -0.99191, -0.99142, -0.99118, -0.98917, -0.99042, -0.99445, -0.97330, -0.95590, -0.96219, -0.89670, -0.72241, -0.55112, -0.44809, -0.39319, -0.37833, -0.35641, -0.26270, -0.14230, -0.11282, -0.13525, -0.11536, -0.09671, -0.11511, -0.18060, -0.26874, -0.33374, -0.42215, -0.51358, -0.44785, -0.30450, -0.28613, -0.30527, -0.25037, -0.15390, -0.08286, -0.11157, -0.12592, -0.00327, 0.13803, 0.19141, 0.12820, 0.01788, -0.03952, -0.12592, -0.26773, -0.34634, -0.31384, -0.18060, -0.01080, 0.13574, 0.26120, 0.36975, 0.46573, 0.55087, 0.63626, 0.73022, 0.83072, 0.92014, 0.97177, 0.98587, 0.98413, 0.99167, 0.99445, 0.99292, 0.99219, 0.98740, 0.98007, 0.96472, 0.92239, 0.82166, 0.69067, 0.57959, 0.54962, 0.59695, 0.64255, 0.64633, 0.60629, 0.55942, 0.54910, 0.58966, 0.61887, 0.56952, 0.54181, 0.59518, 0.63248, 0.63876, 0.65463, 0.73398, 0.88312, 0.96927, 0.97101, 0.97958, 0.99344, 0.99420, 0.99268, 0.99493, 0.99469, 0.99445, 0.99521, 0.99445, 0.99545, 0.99420, 0.99493, 0.99493, 0.99420, 0.99545, 0.99420, 0.99493, 0.99420, 0.99393, 0.99420, 0.98840, 0.98309, 0.98309, 0.96069, 0.88461, 0.79370, 0.72064, 0.65765, 0.59998, 0.53247, 0.49268, 0.48615, 0.44205, 0.38034, 0.36447, 0.38715, 0.39294, 0.32645, 0.19595, 0.07782, -0.05893, -0.27832, -0.48309, -0.62619, -0.72995, -0.79999, -0.84583, -0.82166, -0.73575, -0.67227, -0.65491, -0.64960, -0.66397, -0.70175, -0.72894, -0.74658, -0.76724, -0.79520, -0.82846, -0.86523, -0.90527, -0.94382, -0.89948, -0.69849, -0.47479, -0.31662, -0.15414, -0.00729, 0.07077, 0.08237, 0.04431, -0.02292, -0.11761, -0.24307, -0.36926, -0.45087, -0.46170, -0.40250, -0.30679, -0.17529, 0.00000, 0.14331, 0.24179, 0.36774, 0.49545, 0.56522, 0.57907, 0.56775, 0.53851, 0.51132, 0.48688, 0.41913, 0.26044, 0.00955, -0.26297, -0.46396, -0.62341, -0.82214, -0.94684, -0.96774, -0.97531, -0.98413, -0.99017, -0.98990, -0.99219, -0.99066, -0.99142, -0.99167, -0.99118, -0.99219, -0.98990, -0.99118, -0.99368, -0.99142, -0.97757, -0.97403, -0.98007, -0.96170, -0.86826, -0.67783, -0.52719, -0.48788, -0.45490, -0.43146, -0.47681, -0.54105, -0.57983, -0.60904, -0.62317, -0.59949, -0.55566, -0.52063, -0.52115, -0.55112, -0.56244, -0.58337, -0.65540, -0.73373, -0.77228, -0.74759, -0.68890, -0.64609, -0.61887, -0.58060, -0.50351, -0.40729, -0.33929, -0.35110, -0.42944, -0.47028, -0.42267, -0.32718, -0.20224, -0.05640, 0.04556, 0.10529, 0.17630, 0.26169, 0.33197, 0.32138, 0.23776, 0.20956, 0.23148, 0.20352, 0.23325, 0.39267, 0.52719, 0.58438, 0.62289, 0.66345, 0.70023, 0.66296, 0.54330, 0.42618, 0.33475, 0.24533, 0.14105, 0.03851, 0.01358, 0.09143, 0.22845, 0.34961, 0.41711, 0.48740, 0.58914, 0.69519, 0.78186, 0.84357, 0.89822, 0.95389, 0.98135, 0.98615, 0.99167, 0.99243, 0.99445, 0.99420, 0.99469, 0.99493, 0.99393, 0.99545, 0.99445, 0.99521, 0.99469, 0.99445, 0.99521, 0.99420, 0.99469, 0.98965, 0.98715, 0.98563, 0.96295, 0.91736, 0.86624, 0.82367, 0.77554, 0.68411, 0.53549, 0.38916, 0.26120, 0.11435, -0.04053, -0.18161, -0.23172, -0.19394, -0.15237, -0.10730, -0.02997, 0.08588, 0.22620, 0.34305, 0.44104, 0.55740, 0.65765, 0.71259, 0.69217, 0.65363, 0.69748, 0.79572, 0.89368, 0.95514, 0.97733, 0.98413, 0.98816, 0.99243, 0.99445, 0.99243, 0.97302, 0.96674, 0.97983, 0.90378, 0.71005, 0.51056, 0.40451, 0.40982, 0.41559, 0.32996, 0.24356, 0.18866, 0.11411, 0.05365, 0.01157, -0.03247, -0.09216, -0.16095, -0.23248, -0.31662, -0.39771, -0.48663, -0.59647, -0.71536, -0.82013, -0.85287, -0.82947, -0.84937, -0.92215, -0.97177, -0.98663, -0.98816, -0.98438, -0.99091, -0.99219, -0.99091, -0.99191, -0.99042, -0.99191, -0.99091, -0.99142, -0.99191, -0.99091, -0.99191, -0.99091, -0.99167, -0.99142]) },\n    { name: \"ultrabox shortened od guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.82785, -0.67621, -0.40268, -0.43817, -0.45468, -0.22531, -0.18329, 0.24750, 0.71246, 0.52155, 0.56082, 0.48395, 0.33990, 0.46957, 0.27744, 0.42313, 0.47104, 0.18796, 0.12930, -0.13901, -0.07431, -0.16348, -0.74857, -0.73206, -0.35181, -0.26227, -0.41882, -0.27786, -0.19806, -0.19867, 0.18643, 0.24808, 0.08847, -0.06964, 0.06912, 0.20474, -0.05304, 0.29416, 0.31967, 0.14243, 0.27521, -0.23932, -0.14752, 0.12360, -0.26123, -0.26111, 0.06616, 0.26520, 0.08090, 0.15240, 0.16254, -0.12061, 0.04562, 0.00131, 0.04050, 0.08182, -0.21729, -0.17041, -0.16312, -0.08563, 0.06390, 0.05099, 0.05627, 0.02728, 0.00726, -0.13028, -0.05673, -0.14969, -0.17645, 0.35492, 0.16766, -0.00897, 0.24326, -0.00461, -0.04456, 0.01776, -0.04950, -0.01221, 0.02039, 0.07684, 0.13397, 0.39850, 0.35962, 0.13754, 0.42310, 0.27161, -0.17609, 0.03659, 0.10635, -0.21909, -0.22046, -0.20258, -0.40973, -0.40280, -0.40521, -0.66284]) },\n]);\nConfig.chipWaves = rawChipToIntegrated(_a.rawChipWaves);\nConfig.rawRawChipWaves = _a.rawChipWaves;\nConfig.firstIndexForSamplesInChipWaveList = _a.chipWaves.length;\nConfig.chipNoises = toNameMap([\n    { name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n    { name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\n    { name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\n    { name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"static\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"1-bit white\", expression: 0.5, basePitch: 74.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"1-bit metallic\", expression: 0.5, basePitch: 86.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"crackling\", expression: 0.9, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"pink\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n    { name: \"brownian\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n]);\nConfig.filterFreqStep = 1.0 / 4.0;\nConfig.filterFreqRange = 34;\nConfig.filterFreqReferenceSetting = 28;\nConfig.filterFreqReferenceHz = 8000.0;\nConfig.filterFreqMaxHz = _a.filterFreqReferenceHz * Math.pow(2.0, _a.filterFreqStep * (_a.filterFreqRange - 1 - _a.filterFreqReferenceSetting));\nConfig.filterFreqMinHz = 8.0;\nConfig.filterGainRange = 15;\nConfig.filterGainCenter = 7;\nConfig.filterGainStep = 1.0 / 2.0;\nConfig.filterMaxPoints = 12;\nConfig.filterTypeNames = [\"low-pass\", \"high-pass\", \"peak\"];\nConfig.filterMorphCount = 10;\nConfig.filterSimpleCutRange = 11;\nConfig.filterSimplePeakRange = 8;\nConfig.fadeInRange = 10;\nConfig.fadeOutTicks = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\nConfig.fadeOutNeutral = 4;\nConfig.drumsetFadeOutTicks = 48;\nConfig.transitions = toNameMap([\n    { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\n    { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n    { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n    { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\n    { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false }\n]);\nConfig.vibratos = toNameMap([\n    { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\n    { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\n    { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 },\n    { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\n    { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\n]);\nConfig.vibratoTypes = toNameMap([\n    { name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\n    { name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 },\n]);\nConfig.arpSpeedScale = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\nConfig.unisons = toNameMap([\n    { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\n    { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\n    { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\n    { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\n    { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\n    { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\n    { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\n    { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 },\n    { name: \"hecking gosh\", voices: 2, spread: 6.25, offset: -6.0, expression: 0.8, sign: -0.7 },\n    { name: \"spinner\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"detune\", voices: 1, spread: 0.0, offset: 0.25, expression: 1.0, sign: 1.0 },\n    { name: \"rising\", voices: 2, spread: 1.0, offset: 0.7, expression: 0.95, sign: 1.0 },\n    { name: \"vibrate\", voices: 2, spread: 3.5, offset: 7, expression: 0.975, sign: 1.0 },\n    { name: \"fourths\", voices: 2, spread: 4, offset: 4, expression: 0.95, sign: 1.0 },\n    { name: \"bass\", voices: 1, spread: 0, offset: -7, expression: 1.0, sign: 1.0 },\n    { name: \"dirty\", voices: 2, spread: 0, offset: 0.1, expression: 0.975, sign: 1.0 },\n    { name: \"stationary\", voices: 2, spread: 3.5, offset: 0.0, expression: 0.9, sign: 1.0 },\n    { name: \"recurve\", voices: 2, spread: 0.005, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"voiced\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"fluctuate\", voices: 2, spread: 12, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"thin\", voices: 1, spread: 0.0, offset: 50.0, expression: 1.0, sign: 1.0 },\n    { name: \"inject\", voices: 2, spread: 6.0, offset: 0.4, expression: 1.0, sign: 1.0 },\n    { name: \"askewed\", voices: 2, spread: 0.0, offset: 0.42, expression: 0.7, sign: 1.0 },\n    { name: \"resonance\", voices: 2, spread: 0.0025, offset: 0.1, expression: 0.8, sign: -1.5 },\n    { name: \"FART\", voices: 2, spread: 13, offset: -5, expression: 1.0, sign: -3 },\n    { name: \"augmented\", voices: 4, spread: 6, offset: 6, expression: 0.5, sign: 1.0 },\n    { name: \"diminished\", voices: 5, spread: 6, offset: 6, expression: 0.4, sign: 1.0 },\n    { name: \"chorus\", voices: 9, spread: 0.22, offset: 0, expression: 0.15, sign: 1.0 },\n    { name: \"block\", voices: 9, spread: 6, offset: 6, expression: 0.15, sign: 0.8 },\n    { name: \"extraterrestrial\", voices: 6, spread: 15.2, offset: -6, expression: 0.35, sign: 0.7 },\n    { name: \"bow\", voices: 9, spread: 0.006, offset: 0, expression: 0.15, sign: 0.5 }\n]);\nConfig.effectNames = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\", \"\", \"ring mod\", \"granular\"];\nConfig.effectOrder = [2, 10, 11, 7, 8, 9, 5, 14, 3, 4, 1, 6, 0, 13];\nConfig.noteSizeMax = 6;\nConfig.volumeRange = 50;\nConfig.volumeLogScale = 0.1428;\nConfig.panCenter = 50;\nConfig.panMax = _a.panCenter * 2;\nConfig.panDelaySecondsMax = 0.001;\nConfig.ringModRange = 8;\nConfig.ringModHzRange = 64;\nConfig.ringModMinHz = 20;\nConfig.ringModMaxHz = 4400;\nConfig.rmHzOffsetCenter = 200;\nConfig.rmHzOffsetMax = 400;\nConfig.rmHzOffsetMin = 0;\nConfig.granularRange = 10;\nConfig.grainSizeMin = 40;\nConfig.grainSizeMax = 2000;\nConfig.grainSizeStep = 40;\nConfig.grainRangeMax = 1600;\nConfig.grainAmountsMax = 10;\nConfig.granularEnvelopeType = 0;\nConfig.chorusRange = 8;\nConfig.chorusPeriodSeconds = 2.0;\nConfig.chorusDelayRange = 0.0034;\nConfig.chorusDelayOffsets = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\nConfig.chorusPhaseOffsets = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\nConfig.chorusMaxDelay = _a.chorusDelayRange * (1.0 + _a.chorusDelayOffsets[0].concat(_a.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\nConfig.chords = toNameMap([\n    { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\n    { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\n    { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\n    { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\n    { name: \"monophonic\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: true }\n]);\nConfig.maxChordSize = 9;\nConfig.operatorCount = 4;\nConfig.maxPitchOrOperatorCount = Math.max(_a.maxChordSize, _a.operatorCount + 2);\nConfig.algorithms = toNameMap([\n    { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\n    { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\n    { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\n    { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\n    { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\n    { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\n    { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\n    { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\n    { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\n    { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\n    { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\n    { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\n    { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\n    { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\n    { name: \"1←(2 (3 (4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[2, 3, 4], [3, 4], [4], []] },\n]);\nConfig.algorithms6Op = toNameMap([\n    { name: \"Custom\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n    { name: \"1←2←3←4←5←6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2], [3], [4], [5], [6], []] },\n    { name: \"1←3 2←4←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5], [6], []] },\n    { name: \"1←3←4 2←5←6\", carrierCount: 2, associatedCarrier: [1, 1, 1, 2, 2, 2], modulatedBy: [[3], [5], [4], [], [6], []] },\n    { name: \"1←4 2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [5], [6], [], [], []] },\n    { name: \"1←3 2←(4 5←6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [], [6], []] },\n    { name: \"1←(3 4) 2←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [5], [], [], [6], []] },\n    { name: \"1←3 2←(4 5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5, 6], [], [], [], []] },\n    { name: \"1←3 2←(4 5)←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [6], [6], []] },\n    { name: \"1←3 2←4←(5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5, 6], [], []] },\n    { name: \"1←(2 3 4 5 6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n    { name: \"1←(2 3←5 4←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [5], [6], [], []] },\n    { name: \"1←(2 3 4←5←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], [5], [6], []] },\n    { name: \"1←4←5 (2 3)←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [6], [6], [5], [], []] },\n    { name: \"1←(3 4)←5 2←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [6], [5], [5], [], []] },\n    { name: \"(1 2)←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [4], [5, 6], [], [], []] },\n    { name: \"(1 2)←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [5], [6], [6], [], []] },\n    { name: \"(1 2 3)←(4 5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4, 5, 6], [4, 5, 6], [4, 5, 6], [], [], []] },\n    { name: \"1←5 (2 3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [6], [6], [6], [], []] },\n    { name: \"1 2←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [5], [6], [6], [], []] },\n    { name: \"1 2 (3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [6], [6], [6], []] },\n    { name: \"1 2 3 (4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [6], [6], []] },\n    { name: \"1 2←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3], modulatedBy: [[], [4], [5, 6], [], [], []] },\n    { name: \"1←4 2←(5 6) 3\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3,], modulatedBy: [[4], [5, 6], [], [], [], []] },\n    { name: \"1 2 3←5 4←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5], [6], [], []] },\n    { name: \"1 (2 3)←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4,], modulatedBy: [[], [5], [5], [], [6], []] },\n    { name: \"1 2 3←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5, 6], [], [], []] },\n    { name: \"(1 2 3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[6], [6], [6], [6], [6], []] },\n    { name: \"1 2 3 4 5←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [], [6], []] },\n    { name: \"1 2 3 4 5 6\", carrierCount: 6, associatedCarrier: [1, 2, 3, 4, 5, 6], modulatedBy: [[], [], [], [], [], []] },\n    { name: \"1←(2 (3 (4 (5 (6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n    { name: \"1←(2(3(4(5(6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n    { name: \"1←4(2←5(3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [3, 5], [6], [], [], []] },\n    { name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] },\n]);\nConfig.operatorCarrierInterval = [0.0, 0.04, -0.073, 0.091, 0.061, 0.024];\nConfig.operatorAmplitudeMax = 15;\nConfig.operatorFrequencies = toNameMap([\n    { name: \"0.12×\", mult: 0.125, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"0.75×\", mult: 0.75, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\n    { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\n    { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\n    { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~4×\", mult: 4.0, hzOffset: -2.4, amplitudeSign: -1.0 },\n    { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"10×\", mult: 10.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"12×\", mult: 12.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"14×\", mult: 14.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"15×\", mult: 15.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"17×\", mult: 17.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"18×\", mult: 18.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"19×\", mult: 19.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~20×\", mult: 20.0, hzOffset: -5.0, amplitudeSign: -1.0 },\n    { name: \"25×\", mult: 25.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"50×\", mult: 50.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"75×\", mult: 75.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"100×\", mult: 100.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"128×\", mult: 128.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"256×\", mult: 250.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n]);\nConfig.envelopes = toNameMap([\n    { name: \"none\", type: 0, speed: 1.0 },\n    { name: \"note size\", type: 1, speed: 1.0 },\n    { name: \"pitch\", type: 2, speed: 1.0 },\n    { name: \"punch\", type: 4, speed: 1.0 },\n    { name: \"flare -1\", type: 5, speed: 128.0 },\n    { name: \"flare 1\", type: 5, speed: 32.0 },\n    { name: \"flare 2\", type: 5, speed: 8.0 },\n    { name: \"flare 3\", type: 5, speed: 2.0 },\n    { name: \"twang -1\", type: 6, speed: 128.0 },\n    { name: \"twang 1\", type: 6, speed: 32.0 },\n    { name: \"twang 2\", type: 6, speed: 8.0 },\n    { name: \"twang 3\", type: 6, speed: 2.0 },\n    { name: \"swell -1\", type: 7, speed: 128.0 },\n    { name: \"swell 1\", type: 7, speed: 32.0 },\n    { name: \"swell 2\", type: 7, speed: 8.0 },\n    { name: \"swell 3\", type: 7, speed: 2.0 },\n    { name: \"tremolo0\", type: 8, speed: 8.0 },\n    { name: \"tremolo1\", type: 8, speed: 4.0 },\n    { name: \"tremolo2\", type: 8, speed: 2.0 },\n    { name: \"tremolo3\", type: 8, speed: 1.0 },\n    { name: \"tremolo4\", type: 9, speed: 4.0 },\n    { name: \"tremolo5\", type: 9, speed: 2.0 },\n    { name: \"tremolo6\", type: 9, speed: 1.0 },\n    { name: \"decay -1\", type: 10, speed: 40.0 },\n    { name: \"decay 1\", type: 10, speed: 10.0 },\n    { name: \"decay 2\", type: 10, speed: 7.0 },\n    { name: \"decay 3\", type: 10, speed: 4.0 },\n    { name: \"wibble-1\", type: 11, speed: 128.0 },\n    { name: \"wibble 1\", type: 11, speed: 24.0 },\n    { name: \"wibble 2\", type: 11, speed: 12.0 },\n    { name: \"wibble 3\", type: 11, speed: 4.0 },\n    { name: \"linear-2\", type: 12, speed: 256.0 },\n    { name: \"linear-1\", type: 12, speed: 128.0 },\n    { name: \"linear 1\", type: 12, speed: 32.0 },\n    { name: \"linear 2\", type: 12, speed: 8.0 },\n    { name: \"linear 3\", type: 12, speed: 2.0 },\n    { name: \"rise -2\", type: 13, speed: 256.0 },\n    { name: \"rise -1\", type: 13, speed: 128.0 },\n    { name: \"rise 1\", type: 13, speed: 32.0 },\n    { name: \"rise 2\", type: 13, speed: 8.0 },\n    { name: \"rise 3\", type: 13, speed: 2.0 },\n    { name: \"flute 1\", type: 11, speed: 16.0 },\n    { name: \"flute 2\", type: 11, speed: 8.0 },\n    { name: \"flute 3\", type: 11, speed: 4.0 },\n    { name: \"tripolo1\", type: 8, speed: 9.0 },\n    { name: \"tripolo2\", type: 8, speed: 6.0 },\n    { name: \"tripolo3\", type: 8, speed: 3.0 },\n    { name: \"tripolo4\", type: 9, speed: 9.0 },\n    { name: \"tripolo5\", type: 9, speed: 6.0 },\n    { name: \"tripolo6\", type: 9, speed: 3.0 },\n    { name: \"pentolo1\", type: 8, speed: 10.0 },\n    { name: \"pentolo2\", type: 8, speed: 5.0 },\n    { name: \"pentolo3\", type: 8, speed: 2.5 },\n    { name: \"pentolo4\", type: 9, speed: 10.0 },\n    { name: \"pentolo5\", type: 9, speed: 5.0 },\n    { name: \"pentolo6\", type: 9, speed: 2.5 },\n    { name: \"flutter 1\", type: 8, speed: 14.0 },\n    { name: \"flutter 2\", type: 9, speed: 11.0 },\n    { name: \"water-y flutter\", type: 8, speed: 9.0 },\n    { name: \"blip 1\", type: 14, speed: 6.0 },\n    { name: \"blip 2\", type: 14, speed: 16.0 },\n    { name: \"blip 3\", type: 14, speed: 32.0 },\n    { name: \"fall 1\", type: 15, speed: 8.0 },\n    { name: \"fall 2\", type: 15, speed: 4.0 },\n    { name: \"fall 3\", type: 15, speed: 2.0 },\n]);\nConfig.newEnvelopes = toNameMap([\n    { name: \"none\", type: 0, speed: 1.0 },\n    { name: \"note size\", type: 1, speed: 1.0 },\n    { name: \"pitch\", type: 2, speed: 1.0 },\n    { name: \"random\", type: 3, speed: 4.0 },\n    { name: \"punch\", type: 4, speed: 1.0 },\n    { name: \"flare\", type: 5, speed: 32.0 },\n    { name: \"twang\", type: 6, speed: 32.0 },\n    { name: \"swell\", type: 7, speed: 32.0 },\n    { name: \"lfo\", type: 8, speed: 4.0 },\n    { name: \"decay\", type: 10, speed: 10.0 },\n    { name: \"wibble\", type: 11, speed: 24.0 },\n    { name: \"linear\", type: 12, speed: 32.0 },\n    { name: \"rise\", type: 13, speed: 32.0 },\n    { name: \"blip\", type: 14, speed: 6.0 },\n    { name: \"fall\", type: 15, speed: 2.0 },\n]);\nConfig.feedbacks = toNameMap([\n    { name: \"1⟲\", indices: [[1], [], [], []] },\n    { name: \"2⟲\", indices: [[], [2], [], []] },\n    { name: \"3⟲\", indices: [[], [], [3], []] },\n    { name: \"4⟲\", indices: [[], [], [], [4]] },\n    { name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\n    { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\n    { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\n    { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\n    { name: \"1→2\", indices: [[], [1], [], []] },\n    { name: \"1→3\", indices: [[], [], [1], []] },\n    { name: \"1→4\", indices: [[], [], [], [1]] },\n    { name: \"2→3\", indices: [[], [], [2], []] },\n    { name: \"2→4\", indices: [[], [], [], [2]] },\n    { name: \"3→4\", indices: [[], [], [], [3]] },\n    { name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\n    { name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\n    { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\n    { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\n    { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\n    { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\n    { name: \"1→2→3→4→1\", indices: [[4], [1], [2], [3]] },\n    { name: \"(1 2 3)→4\", indices: [[], [], [], [1, 2, 3]] },\n    { name: \"ALL\", indices: [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]] },\n]);\nConfig.feedbacks6Op = toNameMap([\n    { name: \"Custom\", indices: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n    { name: \"1⟲\", indices: [[1], [], [], [], [], []] },\n    { name: \"2⟲\", indices: [[], [2], [], [], [], []] },\n    { name: \"3⟲\", indices: [[], [], [3], [], [], []] },\n    { name: \"4⟲\", indices: [[], [], [], [4], [], []] },\n    { name: \"5⟲\", indices: [[], [], [], [], [5], []] },\n    { name: \"6⟲\", indices: [[], [], [], [], [], [6]] },\n    { name: \"1⟲ 2⟲\", indices: [[1], [2], [], [], [], []] },\n    { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\n    { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], [], [], []] },\n    { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4], [], []] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4], [], []] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲\", indices: [[1], [2], [3], [4], [5], []] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲\", indices: [[1], [2], [3], [4], [5], [6]] },\n    { name: \"1→2\", indices: [[], [1], [], [], [], []] },\n    { name: \"1→3\", indices: [[], [], [1], [], [], []] },\n    { name: \"1→4\", indices: [[], [], [], [1], [], []] },\n    { name: \"1→5\", indices: [[], [], [], [], [1], []] },\n    { name: \"1→6\", indices: [[], [], [], [], [], [1]] },\n    { name: \"2→3\", indices: [[], [], [2], [], [], []] },\n    { name: \"2→4\", indices: [[], [], [], [2], [], []] },\n    { name: \"3→4\", indices: [[], [], [], [3], [], []] },\n    { name: \"4→5\", indices: [[], [], [], [], [4], []] },\n    { name: \"1→4 2→5 3→6\", indices: [[], [], [], [1], [2], [3]] },\n    { name: \"1→5 2→6 3→4\", indices: [[], [], [], [3], [1], [2]] },\n    { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n    { name: \"2→1→6→5→4→3→2\", indices: [[2], [3], [4], [5], [6], [1]] },\n    { name: \"1→2→3→4→5→6→1\", indices: [[6], [1], [2], [3], [4], [5]] },\n    { name: \"1↔2 3↔4 5↔6\", indices: [[2], [1], [4], [3], [6], [5]] },\n    { name: \"1↔4 2↔5 3↔6\", indices: [[4], [5], [6], [1], [2], [3]] },\n    { name: \"(1,2,3,4,5)→6\", indices: [[], [], [], [], [], [1, 2, 3, 4, 5]] },\n    { name: \"ALL\", indices: [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]] },\n]);\nConfig.chipNoiseLength = 1 << 15;\nConfig.spectrumNoiseLength = 1 << 15;\nConfig.spectrumBasePitch = 24;\nConfig.spectrumControlPoints = 30;\nConfig.spectrumControlPointsPerOctave = 7;\nConfig.spectrumControlPointBits = 3;\nConfig.spectrumMax = (1 << _a.spectrumControlPointBits) - 1;\nConfig.harmonicsControlPoints = 28;\nConfig.harmonicsRendered = 64;\nConfig.harmonicsRenderedForPickedString = 1 << 8;\nConfig.harmonicsControlPointBits = 3;\nConfig.harmonicsMax = (1 << _a.harmonicsControlPointBits) - 1;\nConfig.harmonicsWavelength = 1 << 11;\nConfig.pulseWidthRange = 50;\nConfig.pulseWidthStepPower = 0.5;\nConfig.supersawVoiceCount = 7;\nConfig.supersawDynamismMax = 6;\nConfig.supersawSpreadMax = 12;\nConfig.supersawShapeMax = 6;\nConfig.pitchChannelCountMin = 1;\nConfig.pitchChannelCountMax = 60;\nConfig.noiseChannelCountMin = 0;\nConfig.noiseChannelCountMax = 60;\nConfig.modChannelCountMin = 0;\nConfig.modChannelCountMax = 60;\nConfig.noiseInterval = 6;\nConfig.pitchesPerOctave = 12;\nConfig.drumCount = 12;\nConfig.pitchOctaves = 8;\nConfig.modCount = 6;\nConfig.maxPitch = _a.pitchOctaves * _a.pitchesPerOctave;\nConfig.maximumTonesPerChannel = _a.maxChordSize * 2;\nConfig.justIntonationSemitones = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * _a.pitchesPerOctave);\nConfig.pitchShiftRange = _a.justIntonationSemitones.length;\nConfig.pitchShiftCenter = _a.pitchShiftRange >> 1;\nConfig.detuneCenter = 200;\nConfig.detuneMax = 400;\nConfig.detuneMin = 0;\nConfig.songDetuneMin = 0;\nConfig.songDetuneMax = 500;\nConfig.unisonVoicesMin = 1;\nConfig.unisonVoicesMax = 9;\nConfig.unisonSpreadMin = -96;\nConfig.unisonSpreadMax = 96;\nConfig.unisonOffsetMin = -96;\nConfig.unisonOffsetMax = 96;\nConfig.unisonExpressionMin = -2;\nConfig.unisonExpressionMax = 2;\nConfig.unisonSignMin = -2;\nConfig.unisonSignMax = 2;\nConfig.sineWaveLength = 1 << 8;\nConfig.sineWaveMask = _a.sineWaveLength - 1;\nConfig.sineWave = _a.generateSineWave();\nConfig.perEnvelopeSpeedIndices = [0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.2, 0.25, 0.3, 0.3333, 0.4, 0.5, 0.6, 0.6667, 0.7, 0.75, 0.8, 0.9, 1, 1.25, 1.3333, 1.5, 1.6667, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 32, 40, 64, 128, 256];\nConfig.perEnvelopeSpeedToIndices = {\n    0: 0,\n    0.01: 1,\n    0.02: 2,\n    0.03: 3,\n    0.04: 4,\n    0.05: 5,\n    0.06: 6,\n    0.07: 7,\n    0.08: 8,\n    0.09: 9,\n    0.1: 10,\n    0.2: 11,\n    0.25: 12,\n    0.3: 13,\n    0.3333: 14,\n    0.4: 15,\n    0.5: 16,\n    0.6: 17,\n    0.6667: 18,\n    0.7: 19,\n    0.75: 20,\n    0.8: 21,\n    0.9: 22,\n    1: 23,\n    1.25: 24,\n    1.3333: 25,\n    1.5: 26,\n    1.6667: 27,\n    1.75: 28,\n    2: 29,\n    2.25: 30,\n    2.5: 31,\n    2.75: 32,\n    3: 33,\n    3.5: 34,\n    4: 35,\n    4.5: 36,\n    5: 37,\n    5.5: 38,\n    6: 39,\n    6.5: 40,\n    7: 41,\n    7.5: 42,\n    8: 43,\n    8.5: 44,\n    9: 45,\n    9.5: 46,\n    10: 47,\n    11: 48,\n    12: 49,\n    13: 50,\n    14: 51,\n    15: 52,\n    16: 53,\n    17: 54,\n    18: 55,\n    19: 56,\n    20: 57,\n    24: 58,\n    32: 59,\n    40: 60,\n    64: 61,\n    128: 62,\n    256: 63,\n};\nConfig.perEnvelopeBoundMin = 0;\nConfig.perEnvelopeBoundMax = 2;\nConfig.randomEnvelopeSeedMax = 63;\nConfig.randomEnvelopeStepsMax = 32;\nConfig.pickedStringDispersionCenterFreq = 6000.0;\nConfig.pickedStringDispersionFreqScale = 0.3;\nConfig.pickedStringDispersionFreqMult = 4.0;\nConfig.pickedStringShelfHz = 4000.0;\nConfig.distortionRange = 8;\nConfig.stringSustainRange = 15;\nConfig.stringDecayRate = 0.12;\nConfig.enableAcousticSustain = false;\nConfig.sustainTypeNames = [\"bright\", \"acoustic\"];\nConfig.bitcrusherFreqRange = 14;\nConfig.bitcrusherOctaveStep = 0.5;\nConfig.bitcrusherQuantizationRange = 8;\nConfig.maxEnvelopeCount = 16;\nConfig.defaultAutomationRange = 13;\nConfig.instrumentAutomationTargets = toNameMap([\n    { name: \"none\", computeIndex: null, displayName: \"none\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: null },\n    { name: \"noteVolume\", computeIndex: 0, displayName: \"note volume\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: null },\n    { name: \"pulseWidth\", computeIndex: 2, displayName: \"pulse width\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [6, 8] },\n    { name: \"stringSustain\", computeIndex: 3, displayName: \"sustain\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [7] },\n    { name: \"unison\", computeIndex: 4, displayName: \"unison\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [0, 5, 7, 9, 6, 2, 3, 4] },\n    { name: \"operatorFrequency\", computeIndex: 5, displayName: \"fm# freq\", interleave: true, isFilter: false, maxCount: _a.operatorCount + 2, effect: null, compatibleInstruments: [1, 11] },\n    { name: \"operatorAmplitude\", computeIndex: 11, displayName: \"fm# volume\", interleave: false, isFilter: false, maxCount: _a.operatorCount + 2, effect: null, compatibleInstruments: [1, 11] },\n    { name: \"feedbackAmplitude\", computeIndex: 17, displayName: \"fm feedback\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [1, 11] },\n    { name: \"pitchShift\", computeIndex: 18, displayName: \"pitch shift\", interleave: false, isFilter: false, maxCount: 1, effect: 7, compatibleInstruments: null },\n    { name: \"detune\", computeIndex: 19, displayName: \"detune\", interleave: false, isFilter: false, maxCount: 1, effect: 8, compatibleInstruments: null },\n    { name: \"vibratoDepth\", computeIndex: 20, displayName: \"vibrato depth\", interleave: false, isFilter: false, maxCount: 1, effect: 9, compatibleInstruments: null },\n    { name: \"noteFilterAllFreqs\", computeIndex: 1, displayName: \"n. filter freqs\", interleave: false, isFilter: true, maxCount: 1, effect: 5, compatibleInstruments: null },\n    { name: \"noteFilterFreq\", computeIndex: 21, displayName: \"n. filter # freq\", interleave: false, isFilter: true, maxCount: _a.filterMaxPoints, effect: 5, compatibleInstruments: null },\n    { name: \"decimalOffset\", computeIndex: 37, displayName: \"decimal offset\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [6, 8] },\n    { name: \"supersawDynamism\", computeIndex: 38, displayName: \"dynamism\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [8] },\n    { name: \"supersawSpread\", computeIndex: 39, displayName: \"spread\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [8] },\n    { name: \"supersawShape\", computeIndex: 40, displayName: \"saw↔pulse\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [8] },\n    { name: \"panning\", computeIndex: 41, displayName: \"panning\", interleave: false, isFilter: false, maxCount: 1, effect: 2, compatibleInstruments: null },\n    { name: \"distortion\", computeIndex: 42, displayName: \"distortion\", interleave: false, isFilter: false, maxCount: 1, effect: 3, compatibleInstruments: null },\n    { name: \"bitcrusherQuantization\", computeIndex: 43, displayName: \"bitcrush\", interleave: false, isFilter: false, maxCount: 1, effect: 4, compatibleInstruments: null },\n    { name: \"bitcrusherFrequency\", computeIndex: 44, displayName: \"freq crush\", interleave: false, isFilter: false, maxCount: 1, effect: 4, compatibleInstruments: null },\n    { name: \"chorus\", computeIndex: 45, displayName: \"chorus\", interleave: false, isFilter: false, maxCount: 1, effect: 1, compatibleInstruments: null },\n    { name: \"echoSustain\", computeIndex: 46, displayName: \"echo\", interleave: false, isFilter: false, maxCount: 1, effect: 6, compatibleInstruments: null },\n    { name: \"reverb\", computeIndex: 47, displayName: \"reverb\", interleave: false, isFilter: false, maxCount: 1, effect: 0, compatibleInstruments: null },\n    { name: \"arpeggioSpeed\", computeIndex: 48, displayName: \"arpeggio speed\", interleave: false, isFilter: false, maxCount: 1, effect: 11, compatibleInstruments: null },\n    { name: \"ringModulation\", computeIndex: 49, displayName: \"ring mod\", interleave: false, isFilter: false, maxCount: 1, effect: 13, compatibleInstruments: null },\n    { name: \"ringModulationHz\", computeIndex: 50, displayName: \"ring mod hz\", interleave: false, isFilter: false, maxCount: 1, effect: 13, compatibleInstruments: null },\n    { name: \"granular\", computeIndex: 51, displayName: \"granular\", interleave: false, isFilter: false, maxCount: 1, effect: 14, compatibleInstruments: null },\n    { name: \"grainFreq\", computeIndex: 52, displayName: \"grain freq\", interleave: false, isFilter: false, maxCount: 1, effect: 14, compatibleInstruments: null },\n    { name: \"grainSize\", computeIndex: 53, displayName: \"grain size\", interleave: false, isFilter: false, maxCount: 1, effect: 14, compatibleInstruments: null },\n    { name: \"grainRange\", computeIndex: 54, displayName: \"grain range\", interleave: false, isFilter: false, maxCount: 1, effect: 14, compatibleInstruments: null },\n    { name: \"echoDelay\", computeIndex: 55, displayName: \"echo delay\", interleave: false, isFilter: false, maxCount: 1, effect: 6, compatibleInstruments: null },\n]);\nConfig.operatorWaves = toNameMap([\n    { name: \"sine\", samples: _a.sineWave },\n    { name: \"triangle\", samples: _a.generateTriWave() },\n    { name: \"pulse width\", samples: _a.generateSquareWave(0.5) },\n    { name: \"sawtooth\", samples: _a.generateSawWave() },\n    { name: \"ramp\", samples: _a.generateSawWave(true) },\n    { name: \"trapezoid\", samples: _a.generateTrapezoidWave(2) },\n    { name: \"quasi-sine\", samples: _a.generateQuasiSineWave() },\n]);\nConfig.pwmOperatorWaves = toNameMap([\n    { name: \"1%\", samples: _a.generateSquareWave(0.01) },\n    { name: \"5%\", samples: _a.generateSquareWave(0.05) },\n    { name: \"12.5%\", samples: _a.generateSquareWave(0.125) },\n    { name: \"25%\", samples: _a.generateSquareWave(0.25) },\n    { name: \"33%\", samples: _a.generateSquareWave(1 / 3) },\n    { name: \"50%\", samples: _a.generateSquareWave(0.5) },\n    { name: \"66%\", samples: _a.generateSquareWave(2 / 3) },\n    { name: \"75%\", samples: _a.generateSquareWave(0.75) },\n    { name: \"87.5%\", samples: _a.generateSquareWave(0.875) },\n    { name: \"95%\", samples: _a.generateSquareWave(0.95) },\n    { name: \"99%\", samples: _a.generateSquareWave(0.99) },\n]);\nConfig.barEditorHeight = 10;\nConfig.modulators = toNameMap([\n    { name: \"none\", pianoName: \"None\", maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"No Mod Setting\", promptDesc: [\"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\"] },\n    { name: \"song volume\", pianoName: \"Volume\", maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Song Volume\", promptDesc: [\"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"tempo\", pianoName: \"Tempo\", maxRawVol: _a.tempoMax - _a.tempoMin, newNoteVol: Math.ceil((_a.tempoMax - _a.tempoMin) / 2), forSong: true, convertRealFactor: _a.tempoMin, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Song Tempo\", promptDesc: [\"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\"] },\n    { name: \"song reverb\", pianoName: \"Reverb\", maxRawVol: _a.reverbRange * 2, newNoteVol: _a.reverbRange, forSong: true, convertRealFactor: -_a.reverbRange, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Song Reverb\", promptDesc: [\"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n    { name: \"next bar\", pianoName: \"Next Bar\", maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Go To Next Bar\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\"] },\n    { name: \"note volume\", pianoName: \"Note Vol.\", maxRawVol: _a.volumeRange, newNoteVol: Math.ceil(_a.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-_a.volumeRange / 2.0), associatedEffect: 15, maxIndex: 0,\n        promptName: \"Note Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n    { name: \"pan\", pianoName: \"Pan\", maxRawVol: _a.panMax, newNoteVol: Math.ceil(_a.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: 2, maxIndex: 0,\n        promptName: \"Instrument Panning\", promptDesc: [\"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\"] },\n    { name: \"reverb\", pianoName: \"Reverb\", maxRawVol: _a.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 0, maxIndex: 0,\n        promptName: \"Instrument Reverb\", promptDesc: [\"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"distortion\", pianoName: \"Distortion\", maxRawVol: _a.distortionRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 3, maxIndex: 0,\n        promptName: \"Instrument Distortion\", promptDesc: [\"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"fm slider 1\", pianoName: \"FM 1\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 1\", promptDesc: [\"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 2\", pianoName: \"FM 2\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 2\", promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 3\", pianoName: \"FM 3\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 3\", promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 4\", pianoName: \"FM 4\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 4\", promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm feedback\", pianoName: \"FM Feedbck\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Feedback\", promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"pulse width\", pianoName: \"Pulse Width\", maxRawVol: _a.pulseWidthRange, newNoteVol: _a.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Pulse Width\", promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\n    { name: \"detune\", pianoName: \"Detune\", maxRawVol: _a.detuneMax - _a.detuneMin, newNoteVol: _a.detuneCenter, forSong: false, convertRealFactor: -_a.detuneCenter, associatedEffect: 8, maxIndex: 0,\n        promptName: \"Instrument Detune\", promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\n    { name: \"vibrato depth\", pianoName: \"Vibrato Depth\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 9, maxIndex: 0,\n        promptName: \"Vibrato Depth\", promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\n    { name: \"song detune\", pianoName: \"Detune\", maxRawVol: _a.songDetuneMax - _a.songDetuneMin, newNoteVol: Math.ceil((_a.songDetuneMax - _a.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Song Detune\", promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [cents x4]\"] },\n    { name: \"vibrato speed\", pianoName: \"Vibrato Speed\", maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 9, maxIndex: 0,\n        promptName: \"Vibrato Speed\", promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"vibrato delay\", pianoName: \"Vibrato Delay\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 9, maxIndex: 0,\n        promptName: \"Vibrato Delay\", promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\n    { name: \"arp speed\", pianoName: \"Arp Speed\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: 11, maxIndex: 0,\n        promptName: \"Arpeggio Speed\", promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\n            \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\", \"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"pan delay\", pianoName: \"Pan Delay\", maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: 2, maxIndex: 0,\n        promptName: \"Panning Delay\", promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"reset arp\", pianoName: \"Reset Arp\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: 11, maxIndex: 0,\n        promptName: \"Reset Arpeggio\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\n    { name: \"eq filter\", pianoName: \"EQFlt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"EQ Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"note filter\", pianoName: \"N.Flt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 5, maxIndex: 0,\n        promptName: \"Note Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"bit crush\", pianoName: \"Bitcrush\", maxRawVol: _a.bitcrusherQuantizationRange - 1, newNoteVol: Math.round(_a.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: 4, maxIndex: 0,\n        promptName: \"Instrument Bit Crush\", promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"freq crush\", pianoName: \"Freq Crush\", maxRawVol: _a.bitcrusherFreqRange - 1, newNoteVol: Math.round(_a.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: 4, maxIndex: 0,\n        promptName: \"Instrument Frequency Crush\", promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"echo\", pianoName: \"Echo\", maxRawVol: _a.echoSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Echo Sustain\", promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"echo delay\", pianoName: \"Echo Delay\", maxRawVol: _a.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Echo Delay\", promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\"]\n    },\n    { name: \"chorus\", pianoName: \"Chorus\", maxRawVol: _a.chorusRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 1, maxIndex: 0,\n        promptName: \"Instrument Chorus\", promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"eq filt cut\", pianoName: \"EQFlt Cut\", maxRawVol: _a.filterSimpleCutRange - 1, newNoteVol: _a.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"EQ Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"eq filt peak\", pianoName: \"EQFlt Peak\", maxRawVol: _a.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"EQ Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"note filt cut\", pianoName: \"N.Flt Cut\", maxRawVol: _a.filterSimpleCutRange - 1, newNoteVol: _a.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: 5, maxIndex: 0,\n        promptName: \"Note Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"note filt peak\", pianoName: \"N.Flt Peak\", maxRawVol: _a.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 5, maxIndex: 0,\n        promptName: \"Note Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"pitch shift\", pianoName: \"Pitch Shift\", maxRawVol: _a.pitchShiftRange - 1, newNoteVol: _a.pitchShiftCenter, forSong: false, convertRealFactor: -_a.pitchShiftCenter, associatedEffect: 7, maxIndex: 0,\n        promptName: \"Pitch Shift\", promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\n    { name: \"sustain\", pianoName: \"Sustain\", maxRawVol: _a.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Picked String Sustain\", promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"mix volume\", pianoName: \"Mix Vol.\", maxRawVol: _a.volumeRange, newNoteVol: Math.ceil(_a.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-_a.volumeRange / 2.0), associatedEffect: 15, maxIndex: 0,\n        promptName: \"Mix Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n    { name: \"fm slider 5\", pianoName: \"FM 5\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 5\", promptDesc: [\"This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 6\", pianoName: \"FM 6\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 6\", promptDesc: [\"This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"decimal offset\", pianoName: \"Decimal Offset\", maxRawVol: 99, newNoteVol: 0, forSong: false, convertRealFactor: 0, invertSliderIndicator: true, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Decimal Offset\", promptDesc: [\"This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.\", \"[$LO - $HI]\"] },\n    { name: \"envelope speed\", pianoName: \"EnvelopeSpd\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Envelope Speed\", promptDesc: [\"This setting controls how fast all of the envelopes for the instrument play.\", \"At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:\",\n            \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\", \"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"dynamism\", pianoName: \"Dynamism\", maxRawVol: _a.supersawDynamismMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Supersaw Dynamism\", promptDesc: [\"This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.\", \"At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"spread\", pianoName: \"Spread\", maxRawVol: _a.supersawSpreadMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Supersaw Spread\", promptDesc: [\"This setting controls the supersaw spread of your instrument, just like the spread slider.\", \"At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"saw shape\", pianoName: \"Saw Shape\", maxRawVol: _a.supersawShapeMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Supersaw Shape\", promptDesc: [\"This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.\", \"As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\n    { name: \"individual envelope speed\", pianoName: \"IndvEnvSpd\", maxRawVol: 63, newNoteVol: 23, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Individual Envelope Speed\", promptDesc: [\"This setting controls how fast the specified envelope of the instrument will play.\", \"At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:\",\n            \"[0-4]: x0, x0.01, x0.02, x0.03, x0.04,\", \"[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,\", \"[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,\", \"[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,\", \"[20-24]: x0.75, x0.8, x0.9, x1, x1.25,\", \"[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,\", \"[30-34]: x2.25, x2.5, x2.75, x3, x3.5,\", \"[35-39]: x4, x4.5, x5, x5.5, x6,\", \"[40-44]: x6.5, x7, x7.5, x8, x8.5,\", \"[45-49]: x9, x9.5, x10, x11, x12\", \"[50-54]: x13, x14, x15, x16, x17\", \"[55-59]: x18, x19, x20, x24, x32\", \"[60-63]: x40, x64, x128, x256\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"song eq\", pianoName: \"Song EQ\", maxRawVol: 10, newNoteVol: 0, forSong: true, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Song EQ Filter\", promptDesc: [\"This setting overwrites every instrument's eq filter. You can do this in a few separate ways, similar to the per instrument eq filter modulator.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"reset envelope\", pianoName: \"ResetEnv\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Reset Envelope\", promptDesc: [\"This setting functions a lot like the reset arp modulator. Wherever a note is placed, the envelope of this instrument at the specified index will reset at the very start of that note. \", \"[$LO - $HI]\",] },\n    { name: \"ring modulation\", pianoName: \"Ring Mod\", maxRawVol: _a.ringModRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 13, maxIndex: 0,\n        promptName: \"Ring Modulation\", promptDesc: [\"This setting controls the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"ring mod hertz\", pianoName: \"Ring Mod(Hz)\", maxRawVol: _a.ringModHzRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 13, maxIndex: 0,\n        promptName: \"Ring Modulation (Hertz)\", promptDesc: [\"This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"granular\", pianoName: \"Granular\", maxRawVol: _a.granularRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 14, maxIndex: 0,\n        promptName: \"Granular\", promptDesc: [\"This setting controls the granular effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"grain freq\", pianoName: \"Grain #\", maxRawVol: _a.grainAmountsMax, newNoteVol: 8, forSong: false, convertRealFactor: 0, associatedEffect: 14, maxIndex: 0,\n        promptName: \"Grain Count\", promptDesc: [\"This setting controls the density of grains for the granular effect on your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"grain size\", pianoName: \"Grain Size\", maxRawVol: _a.grainSizeMax / _a.grainSizeStep, newNoteVol: _a.grainSizeMin / _a.grainSizeStep, forSong: false, convertRealFactor: 0, associatedEffect: 14, maxIndex: 0,\n        promptName: \"Grain Size\", promptDesc: [\"This setting controls the grain size of the granular effect in your instrument.\", \"The number shown in the mod channel is multiplied by \" + _a.grainSizeStep + \" to get the actual grain size.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"grain range\", pianoName: \"Grain Range\", maxRawVol: _a.grainRangeMax / _a.grainSizeStep, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 14, maxIndex: 0,\n        promptName: \"Grain Range\", promptDesc: [\"This setting controls the range of values for your grain size of the granular effect in your instrument, from no variation to a lot\", \"The number shown in the mod channel is multiplied by \" + _a.grainSizeStep + \" to get the actual grain size.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"individual envelope lower bound\", pianoName: \"IndvEnvLow\", maxRawVol: _a.perEnvelopeBoundMax * 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Individual Envelope Lower Bound\", promptDesc: [\"This setting controls the envelope lower bound\", \"At $LO, your the envelope will output an upper envelope bound to 0, and at $HI your envelope will output an upper envelope bound to 2.\", \"This settings will not work if your lower envelope bound is higher than your upper envelope bound\",] },\n    { name: \"individual envelope upper bound\", pianoName: \"IndvEnvUp\", maxRawVol: _a.perEnvelopeBoundMax * 10, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Individual Envelope Upper Bound\", promptDesc: [\"This setting controls the envelope upper bound\", \"At $LO, your the envelope will output a 0 to lower envelope bound, and at $HI your envelope will output a 2 to lower envelope bound.\", \"This settings will not work if your lower envelope bound is higher than your upper envelope bound\",] },\n]);\nfunction centerWave(wave) {\n    let sum = 0.0;\n    for (let i = 0; i < wave.length; i++)\n        sum += wave[i];\n    const average = sum / wave.length;\n    for (let i = 0; i < wave.length; i++)\n        wave[i] -= average;\n    performIntegral(wave);\n    wave.push(0);\n    return new Float32Array(wave);\n}\nfunction centerAndNormalizeWave(wave) {\n    let magn = 0.0;\n    centerWave(wave);\n    for (let i = 0; i < wave.length - 1; i++) {\n        magn += Math.abs(wave[i]);\n    }\n    const magnAvg = magn / (wave.length - 1);\n    for (let i = 0; i < wave.length - 1; i++) {\n        wave[i] = wave[i] / magnAvg;\n    }\n    return new Float32Array(wave);\n}\nexport function performIntegral(wave) {\n    let cumulative = 0.0;\n    let newWave = new Float32Array(wave.length);\n    for (let i = 0; i < wave.length; i++) {\n        newWave[i] = cumulative;\n        cumulative += wave[i];\n    }\n    return newWave;\n}\nexport function performIntegralOld(wave) {\n    let cumulative = 0.0;\n    for (let i = 0; i < wave.length; i++) {\n        const temp = wave[i];\n        wave[i] = cumulative;\n        cumulative += temp;\n    }\n}\nexport function getPulseWidthRatio(pulseWidth) {\n    return pulseWidth / (Config.pulseWidthRange * 2);\n}\nexport function getDrumWave(index, inverseRealFourierTransform, scaleElementsByFactor) {\n    let wave = Config.chipNoises[index].samples;\n    if (wave == null) {\n        wave = new Float32Array(Config.chipNoiseLength + 1);\n        Config.chipNoises[index].samples = wave;\n        if (index == 0) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 1 << 14;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 1) {\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = Math.random() * 2.0 - 1.0;\n            }\n        }\n        else if (index == 2) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 2 << 14;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 3) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 4) {\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\n            inverseRealFourierTransform(wave, Config.chipNoiseLength);\n            scaleElementsByFactor(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n        }\n        else if (index == 5) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 6) {\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\n            inverseRealFourierTransform(wave, Config.chipNoiseLength);\n            scaleElementsByFactor(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n        }\n        else if (index == 7) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1) - 8.0;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 15 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 8) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) / 2.0 - 0.5;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer -= 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 9) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 8 ^ 2 << 16;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 10) {\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = Math.round(Math.random());\n            }\n        }\n        else if (index == 11) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = Math.round((drumBuffer & 1));\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer -= 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 12) {\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                var ultraboxnewchipnoiserand = Math.random();\n                wave[i] = Math.pow(ultraboxnewchipnoiserand, Math.clz32(ultraboxnewchipnoiserand));\n            }\n        }\n        else if (index == 13) {\n            var b0 = 0, b1 = 0, b2 = 0, b3, b4, b5, b6;\n            b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                var white = Math.random() * 2 - 1;\n                b0 = 0.99886 * b0 + white * 0.0555179;\n                b1 = 0.99332 * b1 + white * 0.0750759;\n                b2 = 0.96900 * b2 + white * 0.1538520;\n                b3 = 0.86650 * b3 + white * 0.3104856;\n                b4 = 0.55000 * b4 + white * 0.5329522;\n                b5 = -0.7616 * b5 - white * 0.0168980;\n                wave[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n                wave[i] *= 0.44;\n                b6 = white * 0.115926;\n            }\n        }\n        else if (index == 14) {\n            var lastOut = 0.0;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                var white = Math.random() * 2 - 1;\n                wave[i] = (lastOut + (0.02 * white)) / 1.02;\n                lastOut = wave[i];\n                wave[i] *= 14;\n            }\n        }\n        else {\n            throw new Error(\"Unrecognized drum index: \" + index);\n        }\n        wave[Config.chipNoiseLength] = wave[0];\n    }\n    return wave;\n}\nexport function drawNoiseSpectrum(wave, waveLength, lowOctave, highOctave, lowPower, highPower, overallSlope) {\n    const referenceOctave = 11;\n    const referenceIndex = 1 << referenceOctave;\n    const lowIndex = Math.pow(2, lowOctave) | 0;\n    const highIndex = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\n    const retroWave = getDrumWave(0, null, null);\n    let combinedAmplitude = 0.0;\n    for (let i = lowIndex; i < highIndex; i++) {\n        let lerped = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\n        let amplitude = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\n        combinedAmplitude += amplitude;\n        amplitude *= retroWave[i];\n        const radians = 0.61803398875 * i * i * Math.PI * 2.0;\n        wave[i] = Math.cos(radians) * amplitude;\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\n    }\n    return combinedAmplitude;\n}\nexport function getArpeggioPitchIndex(pitchCount, useFastTwoNoteArp, arpeggio) {\n    let arpeggioPattern = Config.arpeggioPatterns[pitchCount - 1];\n    if (arpeggioPattern != null) {\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\n            arpeggioPattern = [0, 0, 1, 1];\n        }\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\n    }\n    else {\n        return arpeggio % pitchCount;\n    }\n}\nexport function toNameMap(array) {\n    const dictionary = {};\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        value.index = i;\n        dictionary[value.name] = value;\n    }\n    const result = array;\n    result.dictionary = dictionary;\n    return result;\n}\nexport function effectsIncludeTransition(effects) {\n    return (effects & (1 << 10)) != 0;\n}\nexport function effectsIncludeChord(effects) {\n    return (effects & (1 << 11)) != 0;\n}\nexport function effectsIncludePitchShift(effects) {\n    return (effects & (1 << 7)) != 0;\n}\nexport function effectsIncludeDetune(effects) {\n    return (effects & (1 << 8)) != 0;\n}\nexport function effectsIncludeVibrato(effects) {\n    return (effects & (1 << 9)) != 0;\n}\nexport function effectsIncludeNoteFilter(effects) {\n    return (effects & (1 << 5)) != 0;\n}\nexport function effectsIncludeDistortion(effects) {\n    return (effects & (1 << 3)) != 0;\n}\nexport function effectsIncludeBitcrusher(effects) {\n    return (effects & (1 << 4)) != 0;\n}\nexport function effectsIncludePanning(effects) {\n    return (effects & (1 << 2)) != 0;\n}\nexport function effectsIncludeChorus(effects) {\n    return (effects & (1 << 1)) != 0;\n}\nexport function effectsIncludeEcho(effects) {\n    return (effects & (1 << 6)) != 0;\n}\nexport function effectsIncludeReverb(effects) {\n    return (effects & (1 << 0)) != 0;\n}\nexport function effectsIncludeRingModulation(effects) {\n    return (effects & (1 << 13)) != 0;\n}\nexport function effectsIncludeGranular(effects) {\n    return (effects & (1 << 14)) != 0;\n}\nexport function effectsIncludeNoteRange(effects) {\n    return (effects & (1 << 12)) != 0;\n}\nexport function calculateRingModHertz(sliderHz, sliderHzOffset = 0) {\n    if (sliderHz == 0)\n        return 0;\n    if (sliderHz > 0)\n        sliderHz -= 1 / Config.ringModHzRange;\n    if (sliderHz > 1 / Config.ringModHzRange)\n        sliderHz += 1 / Config.ringModHzRange;\n    return Math.floor(Config.ringModMinHz * Math.pow(Config.ringModMaxHz / Config.ringModMinHz, sliderHz));\n}\nexport function rawChipToIntegrated(raw) {\n    const newArray = new Array(raw.length);\n    const dictionary = {};\n    for (let i = 0; i < newArray.length; i++) {\n        newArray[i] = Object.assign([], raw[i]);\n        const value = newArray[i];\n        value.index = i;\n        dictionary[value.name] = value;\n    }\n    for (let key in dictionary) {\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\n    }\n    const result = newArray;\n    result.dictionary = dictionary;\n    return result;\n}\n//# sourceMappingURL=SynthConfig.js.map","import { toNameMap, TypePresets } from \"../synth/SynthConfig\";\nexport const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\nexport function prettyNumber(value) {\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\n}\nexport class EditorConfig {\n    static valueToPreset(presetValue) {\n        var _a;\n        const categoryIndex = presetValue >> 6;\n        const presetIndex = presetValue & 0x3F;\n        return (_a = EditorConfig.presetCategories[categoryIndex]) === null || _a === void 0 ? void 0 : _a.presets[presetIndex];\n    }\n    static midiProgramToPresetValue(program) {\n        for (let categoryIndex = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset = category.presets[presetIndex];\n                if (preset.generalMidi && preset.midiProgram == program)\n                    return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n    static nameToPresetValue(presetName) {\n        for (let categoryIndex = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset = category.presets[presetIndex];\n                if (preset.name == presetName)\n                    return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n    static instrumentToPreset(instrument) {\n        var _a;\n        return (_a = EditorConfig.presetCategories[0].presets.dictionary) === null || _a === void 0 ? void 0 : _a[TypePresets === null || TypePresets === void 0 ? void 0 : TypePresets[instrument]];\n    }\n}\nEditorConfig.version = \"1.4.7\";\nEditorConfig.versionDisplayName = \"Slarmoo's Box \" + EditorConfig.version;\nEditorConfig.releaseNotesURL = \"./patch_notes.html\";\nEditorConfig.isOnMac = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\nEditorConfig.ctrlSymbol = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\nEditorConfig.ctrlName = EditorConfig.isOnMac ? \"command\" : \"control\";\nEditorConfig.presetCategories = toNameMap([\n    {\n        name: \"Custom Instruments\", presets: toNameMap([\n            { name: TypePresets[0], customType: 0 },\n            { name: TypePresets[1], customType: 1 },\n            { name: TypePresets[2], customType: 2 },\n            { name: TypePresets[3], customType: 3 },\n            { name: TypePresets[4], customType: 4 },\n            { name: TypePresets[5], customType: 5 },\n            { name: TypePresets[6], customType: 6 },\n            { name: TypePresets[7], customType: 7 },\n            { name: TypePresets[8], customType: 8 },\n            { name: TypePresets[9], customType: 9 },\n            { name: TypePresets[11], customType: 11 },\n        ])\n    },\n    {\n        name: \"Retro Presets\", presets: toNameMap([\n            { name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"triangle\", \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"hum\", \"envelopes\": [] } },\n            { name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"shimmer\", \"envelopes\": [] } },\n            { name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }], \"effects\": [\"vibrato\", \"aliasing\"], \"vibrato\": \"light\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [] } },\n            { name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": [\"aliasing\"], \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\n            { name: \"supersaw lead\", midiProgram: 81, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 67, \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"pulseWidth\": 50, \"dynamism\": 100, \"spread\": 58, \"shape\": 0, \"envelopes\": [] } },\n            { name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n            { name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"20×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\n            { name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n            { name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"2×\", \"amplitude\": 11 }], \"envelopes\": [] } },\n            { name: \"FM sine\", midiProgram: 55, settings: { \"type\": \"FM\", \"eqFilter\": [], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"effects\": [], \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }], \"envelopes\": [] } },\n            { name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"vibrato\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\n            { name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\n            { name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\n            { name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\n            { name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\n            { name: \"Sunsoft Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [24, 24, 15, 15, 9, 9, -4, -4, 0, 0, -13, -13, -19, -19, -24, -24, -24, -24, -10, -10, 0, 0, -7, -7, -7, -7, 0, 0, 6, 6, -4, -4, 3, 3, -4, -4, 3, 3, 3, 3, 9, 9, 15, 15, 15, 15, 6, 6, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 12, 12, 24, 24] } },\n        ])\n    },\n    {\n        name: \"Keyboard Presets\", presets: toNameMap([\n            { name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n            { name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 1.4142 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 71, 71, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"envelopes\": [] } },\n            { name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"1/8 pulse\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n            { name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 43, 57, 57, 57, 43, 43, 43, 43], \"unison\": \"honky tonk\", \"stringSustain\": 71, \"envelopes\": [] } },\n            { name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n            { name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"16×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n            { name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 100, 86, 57, 86, 86, 86, 86, 57, 57, 71, 71, 86, 86, 71, 71, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71], \"unison\": \"none\", \"stringSustain\": 79, \"envelopes\": [] } },\n            { name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.3536 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"8×\", \"amplitude\": 4 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 2\" }] } },\n            { name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [] } },\n            { name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n            { name: \"grand piano 3\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 4 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 125, \"linearGain\": 0.0884 }], \"reverb\": 67, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 71, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"stringSustainType\": \"acoustic\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 1 }] } },\n        ])\n    },\n    {\n        name: \"Idiophone Presets\", presets: toNameMap([\n            { name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\n            { name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 193, \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"20×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0], \"unison\": \"none\", \"stringSustain\": 64, \"envelopes\": [] } },\n            { name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.7071 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"stringSustain\": 29, \"envelopes\": [] } },\n            { name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n            { name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 197, \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }], \"isDrum\": false } },\n            { name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 198, \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 7, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"20×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }], \"isDrum\": false } },\n            { name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\n            { name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"chord\": \"strum\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14], \"unison\": \"shimmer\", \"stringSustain\": 86, \"envelopes\": [] } },\n            { name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\n            { name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\n            { name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\n            { name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 205, \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 8, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Guitar Presets\", presets: toNameMap([\n            { name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n            { name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [] } },\n            { name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n            { name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\n            { name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\n        ])\n    },\n    {\n        name: \"Picked Bass Presets\", presets: toNameMap([\n            { name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\n            { name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\n            { name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\n            { name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\n            { name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\n            { name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n            { name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\n            { name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\n            { name: \"dubstep yoi yoi\", midiProgram: 87, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.7071 }], \"effects\": [\"note filter\", \"bitcrusher\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 594.6, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 1.5, \"bitcrusherQuantization\": 0, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"wave\": \"sawtooth\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"flare 2\", \"index\": 0 }] } },\n        ])\n    },\n    {\n        name: \"Picked String Presets\", presets: toNameMap([\n            { name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\n            { name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\n            { name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\n            { name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n            { name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n            { name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\n            { name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\n        ])\n    },\n    {\n        name: \"Distortion Presets\", presets: toNameMap([\n            { name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"distortion\": 71, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n            { name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 1 }], \"distortion\": 86, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n            { name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 1 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13 }, { \"frequency\": \"~1×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6 }, { \"frequency\": \"3×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12 }, { \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2 }, { \"frequency\": \"~1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 3 }] } },\n            { name: \"PWM overdrive\", midiProgram: 29, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1.4142 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 17.67767, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"punch\" }] } },\n            { name: \"PWM distortion\", midiProgram: 30, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 50, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"swell 1\" }] } },\n            { name: \"FM overdrive\", midiProgram: 29, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"~2×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"punch\" }] } },\n            { name: \"FM distortion\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"~2×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }] } },\n        ])\n    },\n    {\n        name: \"Bellows Presets\", presets: toNameMap([\n            { name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\n            { name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 515, \"effects\": [\"vibrato\", \"note filter\", \"chorus\", \"reverb\"], \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": true, \"noteSimpleCut\": 8, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.5 }], \"chorus\": 100, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"6×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n            { name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n            { name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\n            { name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\n            { name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\n            { name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\n        ])\n    },\n    {\n        name: \"String Presets\", presets: toNameMap([\n            { name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9 }, { \"frequency\": \"3×\", \"amplitude\": 9 }, { \"frequency\": \"2×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n            { name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.0884 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"6×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }] } },\n            { name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n            { name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n            { name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.1768 }], \"chorus\": 100, \"reverb\": 0, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"7×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 4, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n            { name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\n            { name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\n            { name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n            { name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\n            { name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\n            { name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 588, \"effects\": [\"vibrato\", \"note filter\", \"chorus\", \"reverb\"], \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": true, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"chorus\": 100, \"reverb\": 0, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"supersaw string\", midiProgram: 41, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }, { \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 500, \"linearGain\": 0.1768 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 6, \"pulseWidth\": 35.35534, \"dynamism\": 83, \"spread\": 8, \"shape\": 50, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }] } },\n            { name: \"supersaw string 2\", midiProgram: 41, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"chorus\": 57, \"reverb\": 42, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"pulseWidth\": 50, \"dynamism\": 67, \"spread\": 58, \"shape\": 0, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"pulseWidth\", \"envelope\": \"flare 2\" }] } },\n        ])\n    },\n    {\n        name: \"Vocal Presets\", presets: toNameMap([\n            { name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 24, \"harmonics\": [100, 100, 86, 57, 29, 29, 57, 71, 57, 29, 14, 14, 14, 29, 43, 57, 43, 29, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 8 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1.4142 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\n            { name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n            { name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 33, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"~1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"effects\": [\"note filter\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 6, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 4 }], \"reverb\": 0, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n            { name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\n            { name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\n            { name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\n        ])\n    },\n    {\n        name: \"Brass Presets\", presets: toNameMap([\n            { name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 5 }, { \"frequency\": \"9×\", \"amplitude\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n            { name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 1\" }] } },\n            { name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\n            { name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\n            { name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\n            { name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\n        ])\n    },\n    {\n        name: \"Reed Presets\", presets: toNameMap([\n            { name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n            { name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\n            { name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n            { name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n            { name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\n            { name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n            { name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n            { name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 778, \"effects\": [\"note filter\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"tremolo2\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Flute Presets\", presets: toNameMap([\n            { name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9656.85, \"linearGain\": 0.5 }], \"eqFilterType\": true, \"eqSimpleCut\": 9, \"eqSimplePeak\": 1, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 832, \"eqSubFilters1\": [], \"effects\": [\"reverb\"], \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 4, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 7, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n            { name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\n            { name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\n            { name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14], \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\n            { name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\n            { name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\n            { name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\n            { name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }], \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }] } },\n            { name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n        ])\n    },\n    {\n        name: \"Pad Presets\", presets: toNameMap([\n            { name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 4 }, { \"frequency\": \"6×\", \"amplitude\": 3 }, { \"frequency\": \"13×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 3\" }] } },\n            { name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }] } },\n            { name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"honky tonk\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n            { name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.1768 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 2 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n            { name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }] } },\n            { name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 9 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n            { name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 100, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n            { name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14], \"unison\": \"octave\", \"stringSustain\": 86, \"envelopes\": [] } },\n            { name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 3\" }] } },\n            { name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13 }, { \"frequency\": \"2×\", \"amplitude\": 10 }, { \"frequency\": \"5×\", \"amplitude\": 5 }, { \"frequency\": \"11×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo5\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }] } },\n            { name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 8 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"custom interval\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 15 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n            { name: \"supersaw pad\", midiProgram: 93, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }], \"effects\": [\"reverb\"], \"reverb\": 100, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 24, \"pulseWidth\": 50, \"dynamism\": 100, \"spread\": 58, \"shape\": 0, \"envelopes\": [] } },\n        ])\n    },\n    {\n        name: \"Drum Presets\", presets: toNameMap([\n            { name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\n            { name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"chorus\": 67, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14 }, { \"frequency\": \"7×\", \"amplitude\": 3 }, { \"frequency\": \"3×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 3 }] } },\n            { name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12 }, { \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\n            { name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"effects\": [\"pitch shift\", \"note filter\", \"reverb\"], \"pitchShiftSemitones\": 15, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }] } },\n            { name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n            { name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\n            { name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\n            { name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n            { name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n            { name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\n            { name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\n            { name: \"synth kick\", midiProgram: 47, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n        ])\n    },\n    {\n        name: \"Novelty Presets\", presets: toNameMap([\n            { name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n            { name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n            { name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }] } },\n            { name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n            { name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\n            { name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\n            { name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"chord type\", \"vibrato\", \"reverb\"], \"chord\": \"strum\", \"vibrato\": \"heavy\", \"reverb\": 67, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay 1\" }] } },\n            { name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 4 }, { \"frequency\": \"20×\", \"amplitude\": 1 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo4\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 1 }] } },\n            { name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\n            { name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\n            { name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\n            { name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"double saw\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }] } },\n            { name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"11×\", \"amplitude\": 12 }], \"envelopes\": [] } },\n            { name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"shaky\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"pulseWidth\": 4.41942, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"tremolo6\" }] } },\n            { name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\n            { name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\n            { name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.7071 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"heavy\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n        ])\n    },\n    {\n        name: \"UltraBox Presets\", presets: toNameMap([\n            { name: \"nes white\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [], \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit white\", \"envelopes\": [] } },\n            { name: \"nes ping\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [], \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit metallic\", \"envelopes\": [] } },\n            { name: \"distorted pulse vocal\", generalMidi: false, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }], \"effects\": [\"transition type\", \"pitch shift\", \"vibrato\", \"note filter\", \"bitcrusher\", \"echo\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"echoSustain\": 14, \"echoDelayBeats\": 0.167, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"1/8 pulse\", \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"dubstep bwah\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"transition type\", \"chord type\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }] } },\n            { name: \"FM cool bass\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 }], \"effects\": [\"transition type\", \"note filter\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\n            { name: \"FM funky bass\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.1768 }], \"eqFilterType\": true, \"eqSimpleCut\": 5, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" }] } },\n            { name: \"talking bass\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chord type\"], \"chord\": \"custom interval\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"2×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"note size\" }] } },\n            { name: \"synth marimba\", generalMidi: false, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 176.78, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"echo\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 }], \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"harmonics\": [86, 100, 29, 29, 0, 0, 0, 100, 0, 0, 0, 86, 29, 0, 14, 100, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 86], \"unison\": \"fifth\", \"stringSustain\": 7, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }] } },\n            { name: \"italian accordian\", generalMidi: false, settings: { \"type\": \"custom chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6000, \"linearGain\": 0.5 }], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 1, \"eqSubFilters1\": [], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 71, \"reverb\": 45, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"honky tonk\", \"customChipWave\": { \"0\": -24, \"1\": -24, \"2\": -24, \"3\": -24, \"4\": -24, \"5\": -24, \"6\": -24, \"7\": -24, \"8\": -24, \"9\": -24, \"10\": -24, \"11\": -24, \"12\": -24, \"13\": -24, \"14\": -24, \"15\": -24, \"16\": 24, \"17\": 24, \"18\": 24, \"19\": 24, \"20\": 24, \"21\": 24, \"22\": 24, \"23\": 24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": -24, \"32\": -24, \"33\": -24, \"34\": -24, \"35\": -24, \"36\": -24, \"37\": -24, \"38\": -24, \"39\": -24, \"40\": 24, \"41\": 24, \"42\": 24, \"43\": 24, \"44\": 24, \"45\": 24, \"46\": 24, \"47\": 24, \"48\": -24, \"49\": -24, \"50\": -24, \"51\": -24, \"52\": -24, \"53\": -24, \"54\": -24, \"55\": -24, \"56\": -24, \"57\": -24, \"58\": -24, \"59\": -24, \"60\": -24, \"61\": -24, \"62\": -24, \"63\": -24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n            { name: \"chip supersaw\", generalMidi: false, settings: { \"type\": \"custom chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"vibrato\", \"chorus\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"chorus\": 29, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"dissonant\", \"customChipWave\": { \"0\": 22, \"1\": 22, \"2\": 16, \"3\": 6, \"4\": 0, \"5\": -3, \"6\": -8, \"7\": -10, \"8\": -13, \"9\": -16, \"10\": -19, \"11\": -19, \"12\": -20, \"13\": -22, \"14\": -22, \"15\": -24, \"16\": -24, \"17\": -24, \"18\": -24, \"19\": -24, \"20\": -24, \"21\": -24, \"22\": -24, \"23\": -24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": 24, \"32\": 24, \"33\": 16, \"34\": 9, \"35\": 6, \"36\": 4, \"37\": 2, \"38\": 0, \"39\": -1, \"40\": -3, \"41\": -4, \"42\": -4, \"43\": -6, \"44\": -6, \"45\": -6, \"46\": -6, \"47\": -5, \"48\": -5, \"49\": -4, \"50\": -2, \"51\": -2, \"52\": 1, \"53\": 4, \"54\": 6, \"55\": 8, \"56\": 10, \"57\": 12, \"58\": 14, \"59\": 16, \"60\": 18, \"61\": 19, \"62\": 22, \"63\": 24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n            { name: \"fm supersaw\", generalMidi: false, settings: { \"type\": \"FM6op\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }], \"effects\": [\"transition type\", \"pitch shift\", \"note filter\", \"chorus\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"chorus\": 71, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4 5 6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 10, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 7, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 6, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }], \"envelopes\": [] } },\n            { name: \"wind\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 250.03, \"linearGain\": 11.3137 }], \"eqFilterType\": true, \"eqSimpleCut\": 0, \"eqSimplePeak\": 7, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [] } },\n            { name: \"mrow\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [], \"effects\": [\"chord type\", \"reverb\"], \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"reverb\": 35, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\n            { name: \"vocal why\", generalMidi: false, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"harmonics\": [100, 86, 29, 29, 14, 14, 0, 14, 14, 43, 71, 100, 100, 86, 71, 71, 57, 57, 43, 43, 43, 43, 43, 0, 0, 0, 0, 0], \"unison\": \"octave\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Presets\", presets: toNameMap([\n            { name: \"radio fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.3536 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.3536 }], \"effects\": [\"detune\", \"vibrato\", \"bitcrusher\", \"reverb\"], \"detuneCents\": 0, \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 43, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 6, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.12×\", \"amplitude\": 7, \"waveform\": \"trapezoid\", \"pulseWidth\": 5 }, { \"frequency\": \"0.5×\", \"amplitude\": 10, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"anguished underworld\", generalMidi: false, settings: { \"type\": \"FM6op\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\", \"bitcrusher\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"distortion\": 43, \"aliases\": false, \"bitcrusherOctave\": 4.5, \"bitcrusherQuantization\": 43, \"reverb\": 0, \"fadeInSeconds\": 0.075, \"fadeOutTicks\": 6, \"algorithm\": \"1 2←4 3←(5 6)\", \"feedbackType\": \"1→5 2→6 3→4\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"0.25×\", \"amplitude\": 14, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"0.5×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12, \"waveform\": \"trapezoid\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.75×\", \"amplitude\": 3, \"waveform\": \"ramp\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"decay -1\", \"index\": 5 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"wibble 3\" }], \"isDrum\": false } },\n            { name: \"faint sorrow\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4240.89, \"linearGain\": 2 }], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 4, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"detune\", \"vibrato\", \"echo\", \"reverb\"], \"detuneCents\": 22, \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"echoSustain\": 100, \"echoDelayBeats\": 0.667, \"reverb\": 87, \"fadeInSeconds\": 0.075, \"fadeOutTicks\": 48, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"bright sorrow fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [], \"effects\": [\"chord type\", \"note filter\", \"echo\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 1.4142 }], \"echoSustain\": 71, \"echoDelayBeats\": 1.333, \"reverb\": 61, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"wet sorrow fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"reverb\": 23, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"decay 3\", \"index\": 2 }], \"isDrum\": false } },\n            { name: \"scream fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.7071 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.7071 }], \"effects\": [\"detune\", \"note filter\", \"distortion\", \"reverb\"], \"detuneCents\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.125 }, { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 11.3137 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.125 }, { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 11.3137 }], \"distortion\": 0, \"aliases\": false, \"reverb\": 87, \"fadeInSeconds\": 0.135, \"fadeOutTicks\": -3, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 11, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"7×\", \"amplitude\": 5, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"swell 1\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"tremolo4\" }], \"isDrum\": false } },\n            { name: \"anguished radio fm pad\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }], \"eqSubFilters4\": [], \"effects\": [\"detune\", \"note filter\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"detuneCents\": -16, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 11.3137 }], \"noteSubFilters2\": [{ \"type\": \"low-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 11.3137 }], \"noteSubFilters4\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 43, \"chorus\": 29, \"echoSustain\": 43, \"echoDelayBeats\": 1, \"reverb\": 58, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1→3\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"juicy kick\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"effects\": [], \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"20×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }], \"isDrum\": false } },\n            { name: \"good vibes supersaw\", generalMidi: false, settings: { \"type\": \"supersaw\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 6, \"discreteEnvelope\": false, \"pitchEnvelopeStart\": 37, \"pitchEnvelopeEnd\": 96, \"pitchEnvelopeInverse\": true, \"eqSubFilters0\": [], \"effects\": [\"transition type\", \"detune\", \"chorus\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"detuneCents\": 30, \"chorus\": 14, \"reverb\": 23, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"pulseWidth\": 26, \"decimalOffset\": 0, \"dynamism\": 33, \"spread\": 33, \"shape\": 17, \"envelopes\": [{ \"target\": \"supersawShape\", \"envelope\": \"pitch\" }, { \"target\": \"detune\", \"envelope\": \"tremolo2\" }], \"isDrum\": false } },\n            { name: \"ethereal\", generalMidi: false, isNoise: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1.4142 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 4, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1.4142 }], \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"chord type\", \"pitch shift\", \"detune\", \"vibrato\", \"note filter\", \"bitcrusher\", \"chorus\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"chord\": \"simultaneous\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pitchShiftSemitones\": 12, \"detuneCents\": 36, \"vibrato\": \"custom\", \"vibratoDepth\": 0.12, \"vibratoDelay\": 36, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.7071 }], \"noteSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.7071 }], \"bitcrusherOctave\": 4.5, \"bitcrusherQuantization\": 43, \"chorus\": 71, \"reverb\": 100, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"spectrum\": [43, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 57, 0, 43, 0, 43, 0, 0, 29, 0, 29, 0, 14, 14, 14, 0, 0], \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"pitchEnvelopeStart2\": 0, \"pitchEnvelopeEnd2\": 96, \"envelopeInverse2\": false, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"detune\", \"envelope\": \"tremolo3\" }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\" }], \"isDrum\": false } },\n            { name: \"walrus wuh\", generalMidi: false, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"pitchEnvelopeInverse\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"bitcrusher\", \"chorus\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.125 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.125 }], \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 71, \"chorus\": 86, \"reverb\": 32, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 48, \"pulseWidth\": 50, \"decimalOffset\": 0, \"dynamism\": 100, \"spread\": 50, \"shape\": 0, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"decay 3\" }], \"isDrum\": false } },\n            { name: \"saturnic\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4240.89, \"linearGain\": 2 }], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 4, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"vibrato\", \"chorus\", \"echo\", \"reverb\"], \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"chorus\": 100, \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"reverb\": 45, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"glassy harmonics\", generalMidi: false, settings: { \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"detune\", \"note filter\", \"chorus\", \"reverb\"], \"detuneCents\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"chorus\": 14, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"harmonics\": [100, 0, 43, 29, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 14, 29, 14, 0, 14, 0, 0, 0, 0, 100, 0, 0, 14, 0], \"unison\": \"none\", \"envelopes\": [], \"isDrum\": false } },\n            { name: \"plucked\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }], \"effects\": [\"transition type\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"echoSustain\": 100, \"echoDelayBeats\": 1.333, \"reverb\": 26, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"harmonics\": [100, 86, 57, 0, 0, 57, 57, 57, 86, 57, 57, 43, 43, 43, 29, 29, 14, 14, 29, 14, 14, 14, 29, 100, 57, 43, 14, 14], \"unison\": \"none\", \"stringSustain\": 14, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"spectrum wind\", generalMidi: false, isNoise: true, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 1.4142 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 1.4142 }], \"reverb\": 87, \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"spectrum\": [29, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 14, 57, 14, 0, 57, 57, 0, 0, 57, 0, 71, 14, 29, 100, 71, 0, 100, 14, 86], \"unison\": \"none\", \"envelopes\": [], \"isDrum\": true } },\n            { name: \"hi-hat\", generalMidi: false, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqSubFilters2\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqSubFilters3\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"effects\": [], \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"white\", \"unison\": \"none\", \"envelopes\": [], \"isDrum\": true } },\n            { name: \"jungle bass\", generalMidi: false, isNoise: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 0.0884 }], \"effects\": [\"vibrato\", \"note filter\", \"chorus\", \"reverb\"], \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 0.0884 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 0.0884 }], \"chorus\": 14, \"reverb\": 3, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1↔2 3↔4\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"pitchEnvelopeStart2\": 12, \"pitchEnvelopeEnd2\": 28, \"envelopeInverse2\": false, \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"swell 3\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"pitch\", \"index\": 0 }], \"isDrum\": false } },\n            { name: \"beach tide\", generalMidi: false, isNoise: false, settings: { \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 0.0884 }], \"effects\": [\"transition type\", \"chord type\", \"note filter\", \"chorus\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"chord\": \"simultaneous\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.1768 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.1768 }], \"chorus\": 14, \"reverb\": 32, \"fadeInSeconds\": 0.0938, \"fadeOutTicks\": 72, \"harmonics\": [86, 86, 71, 57, 57, 43, 43, 43, 29, 29, 14, 14, 14, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"pitch\" }], \"isDrum\": false } },\n            { name: \"starlight\", generalMidi: false, isNoise: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }], \"effects\": [\"transition type\", \"vibrato\", \"bitcrusher\", \"echo\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 29, \"echoSustain\": 29, \"echoDelayBeats\": 1, \"reverb\": 13, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"distant monument\", generalMidi: false, isNoise: false, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 210.22, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 5.6569 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 210.22, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 5.6569 }], \"effects\": [\"transition type\", \"chord type\", \"detune\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"chord\": \"strum\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"detuneCents\": 24, \"bitcrusherOctave\": 2.5, \"bitcrusherQuantization\": 14, \"chorus\": 86, \"echoSustain\": 71, \"echoDelayBeats\": 1, \"reverb\": 35, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"wave\": \"modbox pnryshk a (u5)\", \"unison\": \"detune\", \"isUsingAdvancedLoopControls\": false, \"chipWaveLoopStart\": 0, \"chipWaveLoopEnd\": 11, \"chipWaveLoopMode\": 0, \"chipWavePlayBackwards\": false, \"chipWaveStartOffset\": 0, \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 1\" }], \"isDrum\": false } },\n            { name: \"mercurial\", generalMidi: false, isNoise: false, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.1768 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.1768 }], \"eqSubFilters1\": [], \"effects\": [\"distortion\", \"chorus\"], \"distortion\": 43, \"aliases\": false, \"chorus\": 43, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"Custom\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 8, \"customAlgorithm\": { \"mods\": [[3], [5], [4], [], [6], []], \"carrierCount\": 2 }, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.5×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorFrequency\", \"envelope\": \"linear\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"distortion\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 20, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"air hiss\", generalMidi: false, isNoise: true, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"eqFilterType\": true, \"eqSimpleCut\": 7, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.3536 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.3536 }], \"distortion\": 71, \"aliases\": false, \"reverb\": 6, \"fadeInSeconds\": 0, \"fadeOutTicks\": -24, \"spectrum\": [57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 57, 71, 86, 100, 100, 100, 100, 86, 71, 71, 43], \"unison\": \"none\", \"envelopes\": [], \"isDrum\": true } },\n            { name: \"spectral phaser\", generalMidi: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 10, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"note filter\", \"distortion\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 0.1768 }], \"noteSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 0.1768 }], \"distortion\": 14, \"aliases\": false, \"bitcrusherOctave\": 6, \"bitcrusherQuantization\": 14, \"chorus\": 100, \"echoSustain\": 86, \"echoDelayBeats\": 1, \"reverb\": 32, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"spectrum\": [86, 0, 0, 0, 57, 0, 0, 71, 0, 0, 0, 86, 0, 0, 57, 0, 43, 0, 43, 0, 0, 43, 0, 29, 0, 29, 14, 14, 29, 14], \"unison\": \"piano\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.07, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.06, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.05, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.04, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.09, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 4 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.08, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 5 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 6 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.03, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 7 }, { \"target\": \"distortion\", \"envelope\": \"none\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 0.3 }], \"isDrum\": false } },\n            { name: \"shaker\", generalMidi: false, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4000, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 6, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4000, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 0.25 }], \"effects\": [\"transition type\", \"detune\", \"distortion\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"detuneCents\": 30, \"distortion\": 43, \"aliases\": false, \"bitcrusherOctave\": 2.5, \"bitcrusherQuantization\": 43, \"chorus\": 43, \"echoSustain\": 29, \"echoDelayBeats\": 1, \"reverb\": 23, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 96, \"wave\": \"deep\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"tremolo2\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"flare\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 12, \"inverse\": false, \"perEnvelopeSpeed\": 64, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": true } },\n            { name: \"distant sorrow\", generalMidi: false, settings: { \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.5 }], \"effects\": [\"transition type\", \"detune\", \"vibrato\", \"note filter\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"detuneCents\": 0, \"vibrato\": \"custom\", \"vibratoDepth\": 0.2, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }], \"echoSustain\": 100, \"echoDelayBeats\": 1, \"reverb\": 74, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"harmonics\": [86, 71, 57, 43, 43, 29, 57, 0, 14, 0, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 57, 57, 57, 0, 57, 57, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"fall\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2.5, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 2 }], \"isDrum\": false } },\n            { name: \"metallic kick\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 28, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"effects\": [], \"panDelay\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"256x\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"128x\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"256x\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 16, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 3.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }], \"isDrum\": false } },\n            { name: \"chimes\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }], \"effects\": [\"chord type\", \"detune\", \"note filter\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"detuneCents\": 24, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 1 }], \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 29, \"panDelay\": 0, \"chorus\": 29, \"echoSustain\": 86, \"echoDelayBeats\": 0.667, \"reverb\": 84, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"harmonics\": [0, 100, 71, 71, 29, 0, 57, 86, 0, 0, 0, 0, 71, 29, 0, 0, 57, 0, 0, 86, 0, 0, 0, 100, 0, 100, 0, 57], \"unison\": \"none\", \"stringSustain\": 36, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 4.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"stringSustain\", \"envelope\": \"random\", \"inverse\": false, \"perEnvelopeSpeed\": 16, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 1, \"steps\": 14, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"detune\", \"envelope\": \"pitch\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96 }], \"isDrum\": false } },\n            { name: \"supersaw bass\", generalMidi: false, settings: { \"type\": \"supersaw\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\", \"chorus\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"distortion\": 14, \"aliases\": false, \"chorus\": 29, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"pulseWidth\": 50, \"decimalOffset\": 0, \"dynamism\": 100, \"spread\": 67, \"shape\": 0, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"ascension\", generalMidi: false, isNoise: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }], \"eqSubFilters1\": [], \"effects\": [\"granular\", \"chorus\", \"reverb\"], \"granular\": 7, \"grainSize\": 44, \"grainAmounts\": 9, \"grainRange\": 37, \"chorus\": 71, \"reverb\": 19, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"spectrum\": [43, 0, 0, 57, 0, 0, 14, 100, 29, 0, 0, 100, 29, 0, 100, 0, 57, 29, 86, 14, 14, 100, 14, 0, 14, 14, 0, 0, 43, 0], \"unison\": \"voiced\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 0.7, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"panning\", \"envelope\": \"lfo\", \"inverse\": false, \"perEnvelopeSpeed\": 0.3, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false, \"waveform\": 2, \"steps\": 6 }], \"isDrum\": false } },\n            { name: \"liminal\", generalMidi: false, isNoise: false, settings: { \"type\": \"supersaw\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"detune\", \"vibrato\", \"note filter\", \"granular\", \"distortion\", \"bitcrusher\", \"chorus\", \"reverb\"], \"detuneCents\": 8, \"vibrato\": \"custom\", \"vibratoDepth\": 0.48, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2196.8, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2196.8, \"linearGain\": 1 }], \"granular\": 6, \"grainSize\": 49, \"grainAmounts\": 10, \"grainRange\": 40, \"distortion\": 57, \"aliases\": false, \"bitcrusherOctave\": 5, \"bitcrusherQuantization\": 0, \"chorus\": 29, \"reverb\": 48, \"fadeInSeconds\": 0, \"fadeOutTicks\": 72, \"pulseWidth\": 30, \"decimalOffset\": 0, \"dynamism\": 17, \"spread\": 83, \"shape\": 67, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 17, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"pulseWidth\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 1.3333, \"perEnvelopeLowerBound\": 0.1, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"distortion\", \"envelope\": \"random\", \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0.2, \"perEnvelopeUpperBound\": 1, \"discrete\": true, \"steps\": 8, \"seed\": 2, \"waveform\": 2 }, { \"target\": \"panning\", \"envelope\": \"lfo\", \"inverse\": false, \"perEnvelopeSpeed\": 0.3333, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false, \"waveform\": 2, \"steps\": 2 }, { \"target\": \"noteVolume\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 18, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"granular\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Chip Presets\", presets: toNameMap([\n            { name: \"Slarmoo's Pulse\", midiProgram: 80, settings: { \"type\": \"PWM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [], \"effects\": [\"transition type\", \"chord type\", \"detune\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 8, \"detuneCents\": 24, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"pulseWidth\": 50, \"decimalOffset\": 0, \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"pitch\" }], \"isDrum\": false } },\n            { name: \"discovery square\", midiProgram: 80, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"bitcrusher\"], \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 57, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"octave\", \"isUsingAdvancedLoopControls\": false, \"chipWaveLoopStart\": 0, \"chipWaveLoopEnd\": 2, \"chipWaveLoopMode\": 0, \"chipWavePlayBackwards\": false, \"chipWaveStartOffset\": 0, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"VRC6 Sawtooth alt\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.5 }], \"effects\": [\"transition type\", \"chord type\", \"pitch shift\", \"detune\", \"vibrato\", \"distortion\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"pitchShiftSemitones\": 12, \"detuneCents\": 0, \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"distortion\": 0, \"aliases\": false, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"none\", \"customChipWave\": { \"0\": -1, \"1\": -1, \"2\": -1, \"3\": -1, \"4\": -1, \"5\": -1, \"6\": -1, \"7\": -1, \"8\": -1, \"9\": -5, \"10\": -5, \"11\": -5, \"12\": -4, \"13\": -4, \"14\": -4, \"15\": -3, \"16\": -3, \"17\": -3, \"18\": -7, \"19\": -7, \"20\": -6, \"21\": -6, \"22\": -5, \"23\": -5, \"24\": -4, \"25\": -4, \"26\": -4, \"27\": -7, \"28\": -7, \"29\": -6, \"30\": -6, \"31\": -5, \"32\": -5, \"33\": -4, \"34\": -4, \"35\": -4, \"36\": -8, \"37\": -8, \"38\": -7, \"39\": -7, \"40\": -6, \"41\": -6, \"42\": -5, \"43\": -5, \"44\": -4, \"45\": -4, \"46\": 21, \"47\": 20, \"48\": 18, \"49\": 17, \"50\": 16, \"51\": 14, \"52\": 13, \"53\": 12, \"54\": 11, \"55\": 7, \"56\": 6, \"57\": 6, \"58\": 5, \"59\": 5, \"60\": 5, \"61\": 4, \"62\": 4, \"63\": 4 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"pulse arps\", midiProgram: 80, settings: { \"type\": \"PWM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.125 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 7, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.125 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"effects\": [\"transition type\", \"chord type\", \"detune\", \"chorus\", \"echo\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 8, \"detuneCents\": 64, \"chorus\": 43, \"echoSustain\": 71, \"echoDelayBeats\": 0.333, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"pulseWidth\": 50, \"decimalOffset\": 0, \"unison\": \"none\", \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"pitch\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96 }, { \"target\": \"pulseWidth\", \"envelope\": \"pitch\", \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"pitchEnvelopeStart\": 24, \"pitchEnvelopeEnd\": 83 }, { \"target\": \"panning\", \"envelope\": \"lfo\", \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"waveform\": 0, \"steps\": 2 }, { \"target\": \"noteVolume\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"chorus\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Instrumental Presets\", presets: toNameMap([\n            { name: \"rusty flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 13454.34, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 13454.34, \"linearGain\": 2.8284 }], \"effects\": [\"transition type\", \"detune\", \"distortion\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"detuneCents\": -7, \"distortion\": 14, \"aliases\": false, \"reverb\": 100, \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 4, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"20×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"bitcrushed piano\", midiProgram: 4, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.5 }], \"effects\": [\"transition type\", \"detune\", \"distortion\", \"bitcrusher\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"detuneCents\": 0, \"distortion\": 29, \"aliases\": true, \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 43, \"panDelay\": 0, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"triangle\", \"unison\": \"none\", \"isUsingAdvancedLoopControls\": true, \"chipWaveLoopStart\": 0, \"chipWaveLoopEnd\": 32, \"chipWaveLoopMode\": 0, \"chipWavePlayBackwards\": false, \"chipWaveStartOffset\": 0, \"envelopes\": [{ \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0.6, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n            { name: \"detuned piano\", midiProgram: 3, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }], \"effects\": [\"transition type\", \"detune\", \"vibrato\", \"note filter\", \"bitcrusher\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"detuneCents\": 44, \"vibrato\": \"custom\", \"vibratoDepth\": 0.04, \"vibratoDelay\": 13, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }], \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 14, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"harmonics\": [86, 86, 71, 71, 57, 57, 43, 29, 14, 29, 29, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 14, 14, 0, 0, 0], \"unison\": \"custom\", \"unisonVoices\": 2, \"unisonSpread\": 0.26, \"unisonOffset\": 0, \"unisonExpression\": 1, \"unisonSign\": 1, \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"random\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 49, \"waveform\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1.6667, \"perEnvelopeLowerBound\": 0.4, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"unison\", \"envelope\": \"random\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 20, \"waveform\": 1 }, { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"pitch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }], \"isDrum\": false } },\n            { name: \"pan flute 2\", midiProgram: 75, isNoise: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"effects\": [\"transition type\", \"note filter\", \"bitcrusher\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"bitcrusherOctave\": 6, \"bitcrusherQuantization\": 57, \"reverb\": 16, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -6, \"spectrum\": [100, 29, 14, 14, 57, 0, 0, 71, 0, 86, 57, 43, 57, 71, 14, 29, 14, 14, 14, 100, 71, 14, 14, 14, 14, 86, 43, 14, 0, 0], \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"pitchEnvelopeStart2\": 0, \"pitchEnvelopeEnd2\": 96, \"envelopeInverse2\": false, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" }], \"isDrum\": false } },\n            { name: \"trumpet 2\", midiProgram: 56, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3049.17, \"linearGain\": 1.4142 }], \"eqFilterType\": true, \"eqSimpleCut\": 7, \"eqSimplePeak\": 3, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"detune\", \"vibrato\", \"note filter\", \"distortion\", \"chorus\", \"reverb\"], \"detuneCents\": -64, \"vibrato\": \"custom\", \"vibratoDepth\": 0.68, \"vibratoDelay\": 17, \"vibratoSpeed\": 12, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"distortion\": 29, \"aliases\": false, \"chorus\": 14, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"0.75×\", \"amplitude\": 14, \"waveform\": \"pulse width\", \"pulseWidth\": 2 }, { \"frequency\": \"1×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"flare\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorFrequency\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 128, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"detune\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"harp 2\", midiProgram: 46, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"eqSubFilters1\": [], \"effects\": [\"detune\", \"note filter\", \"echo\", \"reverb\"], \"detuneCents\": -23, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 105.11, \"linearGain\": 2.8284 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 105.11, \"linearGain\": 2.8284 }], \"echoSustain\": 29, \"echoDelayBeats\": 1.083, \"reverb\": 74, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←4 2←5 3←6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"6×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 4, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorFrequency\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"detune\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 7, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo2\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 4 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0.4, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"electric guitar 1\", midiProgram: 30, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"effects\": [\"chord type\", \"vibrato\", \"note filter\", \"distortion\", \"reverb\"], \"chord\": \"monophonic\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"monoChordTone\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 4 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 4 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 1 }], \"distortion\": 100, \"aliases\": false, \"panDelay\": 0, \"reverb\": 6, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 0, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.25×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"vibratoDepth\", \"envelope\": \"rise\", \"inverse\": false, \"perEnvelopeSpeed\": 9, \"perEnvelopeLowerBound\": 1, \"perEnvelopeUpperBound\": 2, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"distortion\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n            { name: \"electric guitar 2\", midiProgram: 30, settings: { \"type\": \"PWM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 2 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 2 }], \"effects\": [\"chord type\", \"vibrato\", \"note filter\", \"distortion\", \"bitcrusher\", \"chorus\", \"reverb\"], \"chord\": \"monophonic\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"monoChordTone\": 0, \"vibrato\": \"custom\", \"vibratoDepth\": 0.68, \"vibratoDelay\": 22, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }], \"distortion\": 43, \"aliases\": false, \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"panDelay\": 0, \"chorus\": 14, \"reverb\": 13, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"pulseWidth\": 50, \"decimalOffset\": 0, \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"rise\", \"inverse\": false, \"perEnvelopeSpeed\": 0.3333, \"perEnvelopeLowerBound\": 0.8, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"pulseWidth\", \"envelope\": \"twang\", \"inverse\": true, \"perEnvelopeSpeed\": 2.25, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 0.9, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Novelty Presets\", presets: toNameMap([\n            { name: \"bitcrushed artifacts\", generalMidi: false, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9656.85, \"linearGain\": 0.5 }], \"eqFilterType\": true, \"eqSimpleCut\": 9, \"eqSimplePeak\": 1, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"distortion\", \"bitcrusher\", \"echo\"], \"distortion\": 71, \"aliases\": false, \"bitcrusherOctave\": 2, \"bitcrusherQuantization\": 86, \"echoSustain\": 0, \"echoDelayBeats\": 1, \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 100, 43, 0, 0, 14, 86, 0, 14, 0, 0, 0, 0, 0, 86], \"unison\": \"none\", \"stringSustain\": 14, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"whistle 2\", midiProgram: 78, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2110.37, \"linearGain\": 1.4142 }], \"eqFilterType\": true, \"eqSimpleCut\": 6, \"eqSimplePeak\": 3, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"pitch shift\", \"note filter\", \"distortion\", \"echo\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 11, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 4 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 4 }], \"distortion\": 43, \"aliases\": false, \"echoSustain\": 57, \"echoDelayBeats\": 1.083, \"reverb\": 87, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -1, \"harmonics\": [57, 0, 0, 0, 0, 0, 0, 0, 0, 86, 57, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 57, 29, 0, 29, 100, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"pitchShift\", \"envelope\": \"decay 1\" }], \"isDrum\": false } },\n            { name: \"frog wuh\", generalMidi: false, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 8 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.125 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 8 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.125 }], \"eqSubFilters1\": [], \"effects\": [\"pitch shift\", \"note filter\"], \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 1 }], \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"spectrum\": [100, 29, 14, 29, 0, 14, 0, 71, 0, 43, 14, 71, 0, 0, 71, 14, 100, 0, 71, 0, 43, 86, 43, 0, 43, 0, 0, 43, 29, 29], \"envelopes\": [{ \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }, { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }], \"isDrum\": false } },\n            { name: \"stationary harmonics\", generalMidi: false, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.5 }], \"effects\": [\"transition type\", \"chord type\", \"vibrato\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"chord\": \"simultaneous\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"vibrato\": \"shaky\", \"vibratoDepth\": 0.1, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 1, \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"harmonics\": [100, 0, 57, 29, 14, 57, 29, 29, 14, 14, 29, 43, 14, 14, 14, 0, 14, 29, 29, 14, 0, 0, 14, 0, 0, 29, 14, 14], \"unison\": \"stationary\", \"envelopes\": [], \"isDrum\": false } },\n            { name: \"dead souls\", generalMidi: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 1.4142 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": true, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 1.4142 }], \"effects\": [\"transition type\", \"chord type\", \"pitch shift\", \"detune\", \"distortion\", \"chorus\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pitchShiftSemitones\": 24, \"detuneCents\": -200, \"distortion\": 100, \"aliases\": false, \"chorus\": 14, \"reverb\": 35, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"spectrum\": [100, 71, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 14, 14, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"pitchShift\", \"envelope\": \"random\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 24, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1.2, \"steps\": 16, \"seed\": 37, \"waveform\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"detune\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"distortion\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }], \"isDrum\": false } },\n            { name: \"flutter\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 2.8284 }], \"effects\": [\"transition type\", \"chorus\", \"reverb\", \"ring mod\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"ringMod\": 100, \"ringModHz\": 100, \"ringModWaveformIndex\": 0, \"panDelay\": 0, \"chorus\": 14, \"reverb\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"ringModulationHz\", \"envelope\": \"fall\", \"inverse\": false, \"perEnvelopeSpeed\": 1.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1.9 }, { \"target\": \"noteVolume\", \"envelope\": \"blip\", \"inverse\": false, \"perEnvelopeSpeed\": 0.25, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"vinyl\", generalMidi: false, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 0.25 }], \"effects\": [\"transition type\", \"note filter\", \"distortion\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.5 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.5 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"distortion\": 14, \"aliases\": false, \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 14, \"chorus\": 29, \"echoSustain\": 14, \"echoDelayBeats\": 0.083, \"reverb\": 32, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"wave\": \"crackling\", \"unison\": \"none\", \"envelopes\": [], \"isDrum\": false } },\n        ])\n    }\n]);\n//# sourceMappingURL=EditorConfig.js.map","export function scaleElementsByFactor(array, factor) {\n    for (let i = 0; i < array.length; i++) {\n        array[i] *= factor;\n    }\n}\nfunction isPowerOf2(n) {\n    return !!n && !(n & (n - 1));\n}\nfunction countBits(n) {\n    if (!isPowerOf2(n))\n        throw new Error(\"FFT array length must be a power of 2.\");\n    return Math.round(Math.log(n) / Math.log(2));\n}\nfunction reverseIndexBits(array, fullArrayLength) {\n    const bitCount = countBits(fullArrayLength);\n    if (bitCount > 16)\n        throw new Error(\"FFT array length must not be greater than 2^16.\");\n    const finalShift = 16 - bitCount;\n    for (let i = 0; i < fullArrayLength; i++) {\n        let j;\n        j = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\n        j = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\n        j = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\n        j = ((j >> 8) | ((j & 0xff) << 8)) >> finalShift;\n        if (j > i) {\n            let temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    }\n}\nexport function discreteFourierTransform(realArray, imagArray) {\n    const fullArrayLength = realArray.length;\n    if (fullArrayLength != imagArray.length)\n        throw new Error(\"FFT arrays must be the same length.\");\n    const realOut = [];\n    const imagOut = [];\n    for (let i = 0; i < fullArrayLength; i++) {\n        realOut[i] = 0.0;\n        imagOut[i] = 0.0;\n        for (let j = 0; j < fullArrayLength; j++) {\n            const radians = -6.2831853 * j * i / fullArrayLength;\n            const c = Math.cos(radians);\n            const s = Math.sin(radians);\n            realOut[i] += realArray[j] * c - imagArray[j] * s;\n            imagOut[i] += realArray[j] * s + imagArray[j] * c;\n        }\n    }\n    return [realOut, imagOut];\n}\nexport function fastFourierTransform(realArray, imagArray) {\n    const fullArrayLength = realArray.length;\n    if (!isPowerOf2(fullArrayLength))\n        throw new Error(\"FFT array length must be a power of 2.\");\n    if (fullArrayLength < 4)\n        throw new Error(\"FFT array length must be at least 4.\");\n    if (fullArrayLength != imagArray.length)\n        throw new Error(\"FFT arrays must be the same length.\");\n    reverseIndexBits(realArray, fullArrayLength);\n    reverseIndexBits(imagArray, fullArrayLength);\n    for (let startIndex = 0; startIndex < fullArrayLength; startIndex += 4) {\n        const startIndex1 = startIndex + 1;\n        const startIndex2 = startIndex + 2;\n        const startIndex3 = startIndex + 3;\n        const real0 = realArray[startIndex];\n        const real1 = realArray[startIndex1];\n        const real2 = realArray[startIndex2];\n        const real3 = realArray[startIndex3];\n        const imag0 = imagArray[startIndex];\n        const imag1 = imagArray[startIndex1];\n        const imag2 = imagArray[startIndex2];\n        const imag3 = imagArray[startIndex3];\n        const realTemp0 = real0 + real1;\n        const realTemp1 = real0 - real1;\n        const realTemp2 = real2 + real3;\n        const realTemp3 = real2 - real3;\n        const imagTemp0 = imag0 + imag1;\n        const imagTemp1 = imag0 - imag1;\n        const imagTemp2 = imag2 + imag3;\n        const imagTemp3 = imag2 - imag3;\n        realArray[startIndex] = realTemp0 + realTemp2;\n        realArray[startIndex1] = realTemp1 + imagTemp3;\n        realArray[startIndex2] = realTemp0 - realTemp2;\n        realArray[startIndex3] = realTemp1 - imagTemp3;\n        imagArray[startIndex] = imagTemp0 + imagTemp2;\n        imagArray[startIndex1] = imagTemp1 - realTemp3;\n        imagArray[startIndex2] = imagTemp0 - imagTemp2;\n        imagArray[startIndex3] = imagTemp1 + realTemp3;\n    }\n    for (let stride = 8; stride <= fullArrayLength; stride += stride) {\n        const halfLength = stride >>> 1;\n        const radiansIncrement = Math.PI * 2.0 / stride;\n        const cosIncrement = Math.cos(radiansIncrement);\n        const sinIncrement = Math.sin(radiansIncrement);\n        const oscillatorMultiplier = 2.0 * cosIncrement;\n        for (let startIndex = 0; startIndex < fullArrayLength; startIndex += stride) {\n            let c = 1.0;\n            let s = 0.0;\n            let cPrev = cosIncrement;\n            let sPrev = sinIncrement;\n            const secondHalf = startIndex + halfLength;\n            for (let i = startIndex; i < secondHalf; i++) {\n                const j = i + halfLength;\n                const real0 = realArray[i];\n                const imag0 = imagArray[i];\n                const real1 = realArray[j] * c - imagArray[j] * s;\n                const imag1 = realArray[j] * s + imagArray[j] * c;\n                realArray[i] = real0 + real1;\n                imagArray[i] = imag0 + imag1;\n                realArray[j] = real0 - real1;\n                imagArray[j] = imag0 - imag1;\n                const cTemp = oscillatorMultiplier * c - cPrev;\n                const sTemp = oscillatorMultiplier * s - sPrev;\n                cPrev = c;\n                sPrev = s;\n                c = cTemp;\n                s = sTemp;\n            }\n        }\n    }\n}\nexport function forwardRealFourierTransform(array) {\n    const fullArrayLength = array.length;\n    const totalPasses = countBits(fullArrayLength);\n    if (fullArrayLength < 4)\n        throw new Error(\"FFT array length must be at least 4.\");\n    reverseIndexBits(array, fullArrayLength);\n    for (let index = 0; index < fullArrayLength; index += 4) {\n        const index1 = index + 1;\n        const index2 = index + 2;\n        const index3 = index + 3;\n        const real0 = array[index];\n        const real1 = array[index1];\n        const real2 = array[index2];\n        const real3 = array[index3];\n        const tempA = real0 + real1;\n        const tempB = real2 + real3;\n        array[index] = tempA + tempB;\n        array[index1] = real0 - real1;\n        array[index2] = tempA - tempB;\n        array[index3] = real2 - real3;\n    }\n    const sqrt2over2 = Math.sqrt(2.0) / 2.0;\n    for (let index = 0; index < fullArrayLength; index += 8) {\n        const index1 = index + 1;\n        const index3 = index + 3;\n        const index4 = index + 4;\n        const index5 = index + 5;\n        const index7 = index + 7;\n        const real0 = array[index];\n        const real1 = array[index1];\n        const imag3 = array[index3];\n        const real4 = array[index4];\n        const real5 = array[index5];\n        const imag7 = array[index7];\n        const tempA = (real5 - imag7) * sqrt2over2;\n        const tempB = (real5 + imag7) * sqrt2over2;\n        array[index] = real0 + real4;\n        array[index1] = real1 + tempA;\n        array[index3] = real1 - tempA;\n        array[index4] = real0 - real4;\n        array[index5] = tempB - imag3;\n        array[index7] = tempB + imag3;\n    }\n    for (let pass = 3; pass < totalPasses; pass++) {\n        const subStride = 1 << pass;\n        const midSubStride = subStride >> 1;\n        const stride = subStride << 1;\n        const radiansIncrement = Math.PI * 2.0 / stride;\n        const cosIncrement = Math.cos(radiansIncrement);\n        const sinIncrement = Math.sin(radiansIncrement);\n        const oscillatorMultiplier = 2.0 * cosIncrement;\n        for (let startIndex = 0; startIndex < fullArrayLength; startIndex += stride) {\n            const startIndexA = startIndex;\n            const startIndexB = startIndexA + subStride;\n            const stopIndex = startIndexB + subStride;\n            const realStartA = array[startIndexA];\n            const realStartB = array[startIndexB];\n            array[startIndexA] = realStartA + realStartB;\n            array[startIndexB] = realStartA - realStartB;\n            let c = cosIncrement;\n            let s = -sinIncrement;\n            let cPrev = 1.0;\n            let sPrev = 0.0;\n            for (let index = 1; index < midSubStride; index++) {\n                const indexA0 = startIndexA + index;\n                const indexA1 = startIndexB - index;\n                const indexB0 = startIndexB + index;\n                const indexB1 = stopIndex - index;\n                const real0 = array[indexA0];\n                const imag0 = array[indexA1];\n                const real1 = array[indexB0];\n                const imag1 = array[indexB1];\n                const tempA = real1 * c + imag1 * s;\n                const tempB = real1 * s - imag1 * c;\n                array[indexA0] = real0 + tempA;\n                array[indexA1] = real0 - tempA;\n                array[indexB0] = -imag0 - tempB;\n                array[indexB1] = imag0 - tempB;\n                const cTemp = oscillatorMultiplier * c - cPrev;\n                const sTemp = oscillatorMultiplier * s - sPrev;\n                cPrev = c;\n                sPrev = s;\n                c = cTemp;\n                s = sTemp;\n            }\n        }\n    }\n}\nexport function inverseRealFourierTransform(array, fullArrayLength) {\n    const totalPasses = countBits(fullArrayLength);\n    if (fullArrayLength < 4)\n        throw new Error(\"FFT array length must be at least 4.\");\n    for (let pass = totalPasses - 1; pass >= 2; pass--) {\n        const subStride = 1 << pass;\n        const midSubStride = subStride >> 1;\n        const stride = subStride << 1;\n        const radiansIncrement = Math.PI * 2.0 / stride;\n        const cosIncrement = Math.cos(radiansIncrement);\n        const sinIncrement = Math.sin(radiansIncrement);\n        const oscillatorMultiplier = 2.0 * cosIncrement;\n        for (let startIndex = 0; startIndex < fullArrayLength; startIndex += stride) {\n            const startIndexA = startIndex;\n            const midIndexA = startIndexA + midSubStride;\n            const startIndexB = startIndexA + subStride;\n            const midIndexB = startIndexB + midSubStride;\n            const stopIndex = startIndexB + subStride;\n            const realStartA = array[startIndexA];\n            const imagStartB = array[startIndexB];\n            array[startIndexA] = realStartA + imagStartB;\n            array[midIndexA] *= 2;\n            array[startIndexB] = realStartA - imagStartB;\n            array[midIndexB] *= 2;\n            let c = cosIncrement;\n            let s = -sinIncrement;\n            let cPrev = 1.0;\n            let sPrev = 0.0;\n            for (let index = 1; index < midSubStride; index++) {\n                const indexA0 = startIndexA + index;\n                const indexA1 = startIndexB - index;\n                const indexB0 = startIndexB + index;\n                const indexB1 = stopIndex - index;\n                const real0 = array[indexA0];\n                const real1 = array[indexA1];\n                const imag0 = array[indexB0];\n                const imag1 = array[indexB1];\n                const tempA = real0 - real1;\n                const tempB = imag0 + imag1;\n                array[indexA0] = real0 + real1;\n                array[indexA1] = imag1 - imag0;\n                array[indexB0] = tempA * c - tempB * s;\n                array[indexB1] = tempB * c + tempA * s;\n                const cTemp = oscillatorMultiplier * c - cPrev;\n                const sTemp = oscillatorMultiplier * s - sPrev;\n                cPrev = c;\n                sPrev = s;\n                c = cTemp;\n                s = sTemp;\n            }\n        }\n    }\n    for (let index = 0; index < fullArrayLength; index += 4) {\n        const index1 = index + 1;\n        const index2 = index + 2;\n        const index3 = index + 3;\n        const real0 = array[index];\n        const real1 = array[index1] * 2;\n        const imag2 = array[index2];\n        const imag3 = array[index3] * 2;\n        const tempA = real0 + imag2;\n        const tempB = real0 - imag2;\n        array[index] = tempA + real1;\n        array[index1] = tempA - real1;\n        array[index2] = tempB + imag3;\n        array[index3] = tempB - imag3;\n    }\n    reverseIndexBits(array, fullArrayLength);\n}\n//# sourceMappingURL=FFT.js.map","export class Deque {\n    constructor() {\n        this._capacity = 1;\n        this._buffer = [undefined];\n        this._mask = 0;\n        this._offset = 0;\n        this._count = 0;\n    }\n    pushFront(element) {\n        if (this._count >= this._capacity)\n            this._expandCapacity();\n        this._offset = (this._offset - 1) & this._mask;\n        this._buffer[this._offset] = element;\n        this._count++;\n    }\n    pushBack(element) {\n        if (this._count >= this._capacity)\n            this._expandCapacity();\n        this._buffer[(this._offset + this._count) & this._mask] = element;\n        this._count++;\n    }\n    popFront() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        const element = this._buffer[this._offset];\n        this._buffer[this._offset] = undefined;\n        this._offset = (this._offset + 1) & this._mask;\n        this._count--;\n        return element;\n    }\n    popBack() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        this._count--;\n        const index = (this._offset + this._count) & this._mask;\n        const element = this._buffer[index];\n        this._buffer[index] = undefined;\n        return element;\n    }\n    peakFront() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        return this._buffer[this._offset];\n    }\n    peakBack() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        return this._buffer[(this._offset + this._count - 1) & this._mask];\n    }\n    count() {\n        return this._count;\n    }\n    set(index, element) {\n        if (index < 0 || index >= this._count)\n            throw new Error(\"Invalid index\");\n        this._buffer[(this._offset + index) & this._mask] = element;\n    }\n    get(index) {\n        if (index < 0 || index >= this._count)\n            throw new Error(\"Invalid index\");\n        return this._buffer[(this._offset + index) & this._mask];\n    }\n    remove(index) {\n        if (index < 0 || index >= this._count)\n            throw new Error(\"Invalid index\");\n        if (index <= (this._count >> 1)) {\n            while (index > 0) {\n                this.set(index, this.get(index - 1));\n                index--;\n            }\n            this.popFront();\n        }\n        else {\n            index++;\n            while (index < this._count) {\n                this.set(index - 1, this.get(index));\n                index++;\n            }\n            this.popBack();\n        }\n    }\n    _expandCapacity() {\n        if (this._capacity >= 0x40000000)\n            throw new Error(\"Capacity too big.\");\n        this._capacity = this._capacity << 1;\n        const oldBuffer = this._buffer;\n        const newBuffer = new Array(this._capacity);\n        const size = this._count | 0;\n        const offset = this._offset | 0;\n        for (let i = 0; i < size; i++) {\n            newBuffer[i] = oldBuffer[(offset + i) & this._mask];\n        }\n        for (let i = size; i < this._capacity; i++) {\n            newBuffer[i] = undefined;\n        }\n        this._offset = 0;\n        this._buffer = newBuffer;\n        this._mask = this._capacity - 1;\n    }\n}\n//# sourceMappingURL=Deque.js.map","class EventManager {\n    constructor() {\n        this.activeEvents = [];\n        this.listeners = {};\n        this.activeEvents = [];\n        this.listeners = {};\n    }\n    raise(eventType, eventData, extraEventData) {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.activeEvents.push(eventType);\n        for (let i = 0; i < this.listeners[eventType].length; i++) {\n            this.listeners[eventType][i](eventData, extraEventData);\n        }\n        this.activeEvents.pop();\n    }\n    listen(eventType, callback) {\n        if (this.listeners[eventType] == undefined) {\n            this.listeners[eventType] = [];\n        }\n        this.listeners[eventType].push(callback);\n    }\n    unlisten(eventType, callback) {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        const lisen = this.listeners[eventType].indexOf(callback);\n        if (lisen != -1) {\n            this.listeners[eventType].splice(lisen, 1);\n        }\n    }\n    unlistenAll(eventType) {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.listeners[eventType] = [];\n    }\n}\nexport const events = new EventManager();\n//# sourceMappingURL=Events.js.map","export class FilterCoefficients {\n    constructor() {\n        this.a = [1.0];\n        this.b = [1.0];\n        this.order = 0;\n    }\n    linearGain0thOrder(linearGain) {\n        this.b[0] = linearGain;\n        this.order = 0;\n    }\n    lowPass1stOrderButterworth(cornerRadiansPerSample) {\n        const g = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n        const a0 = 1.0 + g;\n        this.a[1] = (1.0 - g) / a0;\n        this.b[1] = this.b[0] = 1 / a0;\n        this.order = 1;\n    }\n    lowPass1stOrderSimplified(cornerRadiansPerSample) {\n        const g = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n        this.a[1] = g - 1.0;\n        this.b[0] = g;\n        this.b[1] = 0.0;\n        this.order = 1;\n    }\n    highPass1stOrderButterworth(cornerRadiansPerSample) {\n        const g = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n        const a0 = 1.0 + g;\n        this.a[1] = (1.0 - g) / a0;\n        this.b[0] = g / a0;\n        this.b[1] = -g / a0;\n        this.order = 1;\n    }\n    highShelf1stOrder(cornerRadiansPerSample, shelfLinearGain) {\n        const tan = Math.tan(cornerRadiansPerSample * 0.5);\n        const sqrtGain = Math.sqrt(shelfLinearGain);\n        const g = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\n        const a0 = 1.0;\n        this.a[1] = g / a0;\n        this.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n        this.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n        this.order = 1;\n    }\n    allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample) {\n        const g = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n        this.a[1] = g;\n        this.b[0] = g;\n        this.b[1] = 1.0;\n        this.order = 1;\n    }\n    allPass1stOrderFractionalDelay(delay) {\n        const g = (1.0 - delay) / (1.0 + delay);\n        this.a[1] = g;\n        this.b[0] = g;\n        this.b[1] = 1.0;\n        this.order = 1;\n    }\n    lowPass2ndOrderButterworth(cornerRadiansPerSample, peakLinearGain) {\n        const alpha = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\n        const cos = Math.cos(cornerRadiansPerSample);\n        const a0 = 1.0 + alpha;\n        this.a[1] = -2.0 * cos / a0;\n        this.a[2] = (1 - alpha) / a0;\n        this.b[2] = this.b[0] = (1 - cos) / (2.0 * a0);\n        this.b[1] = (1 - cos) / a0;\n        this.order = 2;\n    }\n    lowPass2ndOrderSimplified(cornerRadiansPerSample, peakLinearGain) {\n        const g = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\n        const filterResonance = 1.0 - 1.0 / (2.0 * peakLinearGain);\n        const feedback = filterResonance + filterResonance / (1.0 - g);\n        this.a[1] = 2.0 * g + (g - 1.0) * g * feedback - 2.0;\n        this.a[2] = (g - 1.0) * (g - g * feedback - 1.0);\n        this.b[0] = g * g;\n        this.b[1] = 0;\n        this.b[2] = 0;\n        this.order = 2;\n    }\n    highPass2ndOrderButterworth(cornerRadiansPerSample, peakLinearGain) {\n        const alpha = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\n        const cos = Math.cos(cornerRadiansPerSample);\n        const a0 = 1.0 + alpha;\n        this.a[1] = -2.0 * cos / a0;\n        this.a[2] = (1.0 - alpha) / a0;\n        this.b[2] = this.b[0] = (1.0 + cos) / (2.0 * a0);\n        this.b[1] = -(1.0 + cos) / a0;\n        this.order = 2;\n    }\n    highShelf2ndOrder(cornerRadiansPerSample, shelfLinearGain, slope) {\n        const A = Math.sqrt(shelfLinearGain);\n        const c = Math.cos(cornerRadiansPerSample);\n        const Aplus = A + 1.0;\n        const Aminus = A - 1.0;\n        const alpha = Math.sin(cornerRadiansPerSample) * 0.5 * Math.sqrt((Aplus / A) * (1.0 / slope - 1.0) + 2.0);\n        const sqrtA2Alpha = 2.0 * Math.sqrt(A) * alpha;\n        const a0 = (Aplus - Aminus * c + sqrtA2Alpha);\n        this.a[1] = 2 * (Aminus - Aplus * c) / a0;\n        this.a[2] = (Aplus - Aminus * c - sqrtA2Alpha) / a0;\n        this.b[0] = A * (Aplus + Aminus * c + sqrtA2Alpha) / a0;\n        this.b[1] = -2 * A * (Aminus + Aplus * c) / a0;\n        this.b[2] = A * (Aplus + Aminus * c - sqrtA2Alpha) / a0;\n        this.order = 2;\n    }\n    peak2ndOrder(cornerRadiansPerSample, peakLinearGain, bandWidthScale) {\n        const sqrtGain = Math.sqrt(peakLinearGain);\n        const bandWidth = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1 / sqrtGain);\n        const alpha = Math.tan(bandWidth * 0.5);\n        const a0 = 1.0 + alpha / sqrtGain;\n        this.b[0] = (1.0 + alpha * sqrtGain) / a0;\n        this.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\n        this.b[2] = (1.0 - alpha * sqrtGain) / a0;\n        this.a[2] = (1.0 - alpha / sqrtGain) / a0;\n        this.order = 2;\n    }\n}\nexport class FrequencyResponse {\n    constructor() {\n        this.real = 0.0;\n        this.imag = 0.0;\n        this.denom = 1.0;\n    }\n    analyze(filter, radiansPerSample) {\n        this.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\n    }\n    analyzeComplex(filter, real, imag) {\n        const a = filter.a;\n        const b = filter.b;\n        const realZ1 = real;\n        const imagZ1 = -imag;\n        let realNum = b[0] + b[1] * realZ1;\n        let imagNum = b[1] * imagZ1;\n        let realDenom = 1.0 + a[1] * realZ1;\n        let imagDenom = a[1] * imagZ1;\n        let realZ = realZ1;\n        let imagZ = imagZ1;\n        for (let i = 2; i <= filter.order; i++) {\n            const realTemp = realZ * realZ1 - imagZ * imagZ1;\n            const imagTemp = realZ * imagZ1 + imagZ * realZ1;\n            realZ = realTemp;\n            imagZ = imagTemp;\n            realNum += b[i] * realZ;\n            imagNum += b[i] * imagZ;\n            realDenom += a[i] * realZ;\n            imagDenom += a[i] * imagZ;\n        }\n        this.denom = realDenom * realDenom + imagDenom * imagDenom;\n        this.real = realNum * realDenom + imagNum * imagDenom;\n        this.imag = imagNum * realDenom - realNum * imagDenom;\n    }\n    magnitude() {\n        return Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\n    }\n    angle() {\n        return Math.atan2(this.imag, this.real);\n    }\n}\nexport class DynamicBiquadFilter {\n    constructor() {\n        this.a1 = 0.0;\n        this.a2 = 0.0;\n        this.b0 = 1.0;\n        this.b1 = 0.0;\n        this.b2 = 0.0;\n        this.a1Delta = 0.0;\n        this.a2Delta = 0.0;\n        this.b0Delta = 0.0;\n        this.b1Delta = 0.0;\n        this.b2Delta = 0.0;\n        this.output1 = 0.0;\n        this.output2 = 0.0;\n        this.useMultiplicativeInputCoefficients = false;\n    }\n    resetOutput() {\n        this.output1 = 0.0;\n        this.output2 = 0.0;\n    }\n    loadCoefficientsWithGradient(start, end, deltaRate, useMultiplicativeInputCoefficients) {\n        if (start.order != 2 || end.order != 2)\n            throw new Error();\n        this.a1 = start.a[1];\n        this.a2 = start.a[2];\n        this.b0 = start.b[0];\n        this.b1 = start.b[1];\n        this.b2 = start.b[2];\n        this.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\n        this.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\n        if (useMultiplicativeInputCoefficients) {\n            this.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\n            this.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\n            this.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\n        }\n        else {\n            this.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\n            this.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\n            this.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\n        }\n        this.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\n    }\n}\nexport function warpNyquistToInfinity(radians) {\n    return 2.0 * Math.tan(radians * 0.5);\n}\nexport function warpInfinityToNyquist(radians) {\n    return 2.0 * Math.atan(radians * 0.5);\n}\n//# sourceMappingURL=filtering.js.map","const PRIME32_1 = 2654435761;\nconst PRIME32_2 = 2246822519;\nconst PRIME32_3 = 3266489917;\nconst PRIME32_4 = 668265263;\nconst PRIME32_5 = 374761393;\nlet encoder;\n/**\n *\n * @param input - byte array or string\n * @param seed - optional seed (32-bit unsigned);\n */\nexport function xxHash32(input, seed = 0) {\n    const buffer = typeof input === 'string' ? (encoder ??= new TextEncoder()).encode(input) : input;\n    const b = buffer;\n    /*\n        Step 1. Initialize internal accumulators\n        Each accumulator gets an initial value based on optional seed input. Since the seed is optional, it can be 0.\n\n        ```\n            u32 acc1 = seed + PRIME32_1 + PRIME32_2;\n            u32 acc2 = seed + PRIME32_2;\n            u32 acc3 = seed + 0;\n            u32 acc4 = seed - PRIME32_1;\n        ```\n        Special case : input is less than 16 bytes\n        When input is too small (< 16 bytes), the algorithm will not process any stripe. Consequently, it will not\n        make use of parallel accumulators.\n\n        In which case, a simplified initialization is performed, using a single accumulator :\n\n        u32 acc  = seed + PRIME32_5;\n        The algorithm then proceeds directly to step 4.\n    */\n    let acc = (seed + PRIME32_5) & 0xffffffff;\n    let offset = 0;\n    if (b.length >= 16) {\n        const accN = [\n            (seed + PRIME32_1 + PRIME32_2) & 0xffffffff,\n            (seed + PRIME32_2) & 0xffffffff,\n            (seed + 0) & 0xffffffff,\n            (seed - PRIME32_1) & 0xffffffff,\n        ];\n        /*\n            Step 2. Process stripes\n            A stripe is a contiguous segment of 16 bytes. It is evenly divided into 4 lanes, of 4 bytes each.\n            The first lane is used to update accumulator 1, the second lane is used to update accumulator 2, and so on.\n\n            Each lane read its associated 32-bit value using little-endian convention.\n\n            For each {lane, accumulator}, the update process is called a round, and applies the following formula :\n\n            ```\n            accN = accN + (laneN * PRIME32_2);\n            accN = accN <<< 13;\n            accN = accN * PRIME32_1;\n            ```\n\n            This shuffles the bits so that any bit from input lane impacts several bits in output accumulator.\n            All operations are performed modulo 2^32.\n\n            Input is consumed one full stripe at a time. Step 2 is looped as many times as necessary to consume\n            the whole input, except the last remaining bytes which cannot form a stripe (< 16 bytes). When that\n            happens, move to step 3.\n        */\n        const b = buffer;\n        const limit = b.length - 16;\n        let lane = 0;\n        for (offset = 0; (offset & 0xfffffff0) <= limit; offset += 4) {\n            const i = offset;\n            const laneN0 = b[i + 0] + (b[i + 1] << 8);\n            const laneN1 = b[i + 2] + (b[i + 3] << 8);\n            const laneNP = laneN0 * PRIME32_2 + ((laneN1 * PRIME32_2) << 16);\n            let acc = (accN[lane] + laneNP) & 0xffffffff;\n            acc = (acc << 13) | (acc >>> 19);\n            const acc0 = acc & 0xffff;\n            const acc1 = acc >>> 16;\n            accN[lane] = (acc0 * PRIME32_1 + ((acc1 * PRIME32_1) << 16)) & 0xffffffff;\n            lane = (lane + 1) & 0x3;\n        }\n        /*\n            Step 3. Accumulator convergence\n            All 4 lane accumulators from previous steps are merged to produce a single remaining accumulator\n            of same width (32-bit). The associated formula is as follows :\n\n            ```\n            acc = (acc1 <<< 1) + (acc2 <<< 7) + (acc3 <<< 12) + (acc4 <<< 18);\n            ```\n        */\n        acc =\n            (((accN[0] << 1) | (accN[0] >>> 31)) +\n                ((accN[1] << 7) | (accN[1] >>> 25)) +\n                ((accN[2] << 12) | (accN[2] >>> 20)) +\n                ((accN[3] << 18) | (accN[3] >>> 14))) &\n                0xffffffff;\n    }\n    /*\n        Step 4. Add input length\n        The input total length is presumed known at this stage. This step is just about adding the length to\n        accumulator, so that it participates to final mixing.\n\n        ```\n        acc = acc + (u32)inputLength;\n        ```\n    */\n    acc = (acc + buffer.length) & 0xffffffff;\n    /*\n        Step 5. Consume remaining input\n        There may be up to 15 bytes remaining to consume from the input. The final stage will digest them according\n        to following pseudo-code :\n        ```\n        while (remainingLength >= 4) {\n            lane = read_32bit_little_endian(input_ptr);\n            acc = acc + lane * PRIME32_3;\n            acc = (acc <<< 17) * PRIME32_4;\n            input_ptr += 4; remainingLength -= 4;\n        }\n        ```\n        This process ensures that all input bytes are present in the final mix.\n    */\n    const limit = buffer.length - 4;\n    for (; offset <= limit; offset += 4) {\n        const i = offset;\n        const laneN0 = b[i + 0] + (b[i + 1] << 8);\n        const laneN1 = b[i + 2] + (b[i + 3] << 8);\n        const laneP = laneN0 * PRIME32_3 + ((laneN1 * PRIME32_3) << 16);\n        acc = (acc + laneP) & 0xffffffff;\n        acc = (acc << 17) | (acc >>> 15);\n        acc = ((acc & 0xffff) * PRIME32_4 + (((acc >>> 16) * PRIME32_4) << 16)) & 0xffffffff;\n    }\n    /*\n        ```\n        while (remainingLength >= 1) {\n            lane = read_byte(input_ptr);\n            acc = acc + lane * PRIME32_5;\n            acc = (acc <<< 11) * PRIME32_1;\n            input_ptr += 1; remainingLength -= 1;\n        }\n        ```\n    */\n    for (; offset < b.length; ++offset) {\n        const lane = b[offset];\n        acc = acc + lane * PRIME32_5;\n        acc = (acc << 11) | (acc >>> 21);\n        acc = ((acc & 0xffff) * PRIME32_1 + (((acc >>> 16) * PRIME32_1) << 16)) & 0xffffffff;\n    }\n    /*\n        Step 6. Final mix (avalanche)\n        The final mix ensures that all input bits have a chance to impact any bit in the output digest,\n        resulting in an unbiased distribution. This is also called avalanche effect.\n        ```\n        acc = acc xor (acc >> 15);\n        acc = acc * PRIME32_2;\n        acc = acc xor (acc >> 13);\n        acc = acc * PRIME32_3;\n        acc = acc xor (acc >> 16);\n        ```\n    */\n    acc = acc ^ (acc >>> 15);\n    acc = (((acc & 0xffff) * PRIME32_2) & 0xffffffff) + (((acc >>> 16) * PRIME32_2) << 16);\n    acc = acc ^ (acc >>> 13);\n    acc = (((acc & 0xffff) * PRIME32_3) & 0xffffffff) + (((acc >>> 16) * PRIME32_3) << 16);\n    acc = acc ^ (acc >>> 16);\n    // turn any negatives back into a positive number;\n    return acc < 0 ? acc + 4294967296 : acc;\n}\n//# sourceMappingURL=xxHash32.js.map","import { startLoadingSample, sampleLoadingState, sampleLoadEvents, SampleLoadedEvent, loadBuiltInSamples, toNameMap, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegralOld, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, effectsIncludeRingModulation, effectsIncludeGranular, calculateRingModHertz } from \"./SynthConfig\";\nimport { EditorConfig } from \"../editor/EditorConfig\";\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\nimport { Deque } from \"./Deque\";\nimport { events } from \"../global/Events\";\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter, warpInfinityToNyquist } from \"./filtering\";\nimport { xxHash32 } from \"js-xxhash\";\nconst epsilon = (1.0e-24);\nexport function clamp(min, max, val) {\n    max = max - 1;\n    if (val <= max) {\n        if (val >= min)\n            return val;\n        else\n            return min;\n    }\n    else {\n        return max;\n    }\n}\nfunction validateRange(min, max, val) {\n    if (min <= val && val <= max)\n        return val;\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\n}\nexport function parseFloatWithDefault(s, defaultValue) {\n    let result = parseFloat(s);\n    if (Number.isNaN(result))\n        result = defaultValue;\n    return result;\n}\nexport function parseIntWithDefault(s, defaultValue) {\n    let result = parseInt(s);\n    if (Number.isNaN(result))\n        result = defaultValue;\n    return result;\n}\nfunction encode32BitNumber(buffer, x) {\n    buffer.push(base64IntToCharCode[(x >>> (6 * 5)) & 0x3]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 4)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 3)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 2)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 1)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 0)) & 0x3f]);\n}\nfunction decode32BitNumber(compressed, charIndex) {\n    let x = 0;\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0);\n    return x;\n}\nfunction encodeUnisonSettings(buffer, v, s, o, e, i) {\n    buffer.push(base64IntToCharCode[v]);\n    buffer.push(base64IntToCharCode[Number((s > 0))]);\n    let cleanS = Math.round(Math.abs(s) * 1000);\n    let cleanSDivided = Math.floor(cleanS / 63);\n    buffer.push(base64IntToCharCode[cleanS % 63], base64IntToCharCode[cleanSDivided % 63], base64IntToCharCode[Math.floor(cleanSDivided / 63)]);\n    buffer.push(base64IntToCharCode[Number((o > 0))]);\n    let cleanO = Math.round(Math.abs(o) * 1000);\n    let cleanODivided = Math.floor(cleanO / 63);\n    buffer.push(base64IntToCharCode[cleanO % 63], base64IntToCharCode[cleanODivided % 63], base64IntToCharCode[Math.floor(cleanODivided / 63)]);\n    buffer.push(base64IntToCharCode[Number((e > 0))]);\n    let cleanE = Math.round(Math.abs(e) * 1000);\n    buffer.push(base64IntToCharCode[cleanE % 63], base64IntToCharCode[Math.floor(cleanE / 63)]);\n    buffer.push(base64IntToCharCode[Number((i > 0))]);\n    let cleanI = Math.round(Math.abs(i) * 1000);\n    buffer.push(base64IntToCharCode[cleanI % 63], base64IntToCharCode[Math.floor(cleanI / 63)]);\n}\nfunction convertLegacyKeyToKeyAndOctave(rawKeyIndex) {\n    let key = clamp(0, Config.keys.length, rawKeyIndex);\n    let octave = 0;\n    if (rawKeyIndex === 12) {\n        key = 0;\n        octave = 1;\n    }\n    else if (rawKeyIndex === 13) {\n        key = 6;\n        octave = -1;\n    }\n    else if (rawKeyIndex === 14) {\n        key = 0;\n        octave = -1;\n    }\n    else if (rawKeyIndex === 15) {\n        key = 5;\n        octave = -1;\n    }\n    return [key, octave];\n}\nconst base64IntToCharCode = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\nconst base64CharCodeToInt = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0];\nclass BitFieldReader {\n    constructor(source, startIndex, stopIndex) {\n        this._bits = [];\n        this._readIndex = 0;\n        for (let i = startIndex; i < stopIndex; i++) {\n            const value = base64CharCodeToInt[source.charCodeAt(i)];\n            this._bits.push((value >> 5) & 0x1);\n            this._bits.push((value >> 4) & 0x1);\n            this._bits.push((value >> 3) & 0x1);\n            this._bits.push((value >> 2) & 0x1);\n            this._bits.push((value >> 1) & 0x1);\n            this._bits.push(value & 0x1);\n        }\n    }\n    read(bitCount) {\n        let result = 0;\n        while (bitCount > 0) {\n            result = result << 1;\n            result += this._bits[this._readIndex++];\n            bitCount--;\n        }\n        return result;\n    }\n    readLongTail(minValue, minBits) {\n        let result = minValue;\n        let numBits = minBits;\n        while (this._bits[this._readIndex++]) {\n            result += 1 << numBits;\n            numBits++;\n        }\n        while (numBits > 0) {\n            numBits--;\n            if (this._bits[this._readIndex++]) {\n                result += 1 << numBits;\n            }\n        }\n        return result;\n    }\n    readPartDuration() {\n        return this.readLongTail(1, 3);\n    }\n    readLegacyPartDuration() {\n        return this.readLongTail(1, 2);\n    }\n    readPinCount() {\n        return this.readLongTail(1, 0);\n    }\n    readPitchInterval() {\n        if (this.read(1)) {\n            return -this.readLongTail(1, 3);\n        }\n        else {\n            return this.readLongTail(1, 3);\n        }\n    }\n}\nclass BitFieldWriter {\n    constructor() {\n        this._index = 0;\n        this._bits = [];\n    }\n    clear() {\n        this._index = 0;\n    }\n    write(bitCount, value) {\n        bitCount--;\n        while (bitCount >= 0) {\n            this._bits[this._index++] = (value >>> bitCount) & 1;\n            bitCount--;\n        }\n    }\n    writeLongTail(minValue, minBits, value) {\n        if (value < minValue)\n            throw new Error(\"value out of bounds\");\n        value -= minValue;\n        let numBits = minBits;\n        while (value >= (1 << numBits)) {\n            this._bits[this._index++] = 1;\n            value -= 1 << numBits;\n            numBits++;\n        }\n        this._bits[this._index++] = 0;\n        while (numBits > 0) {\n            numBits--;\n            this._bits[this._index++] = (value >>> numBits) & 1;\n        }\n    }\n    writePartDuration(value) {\n        this.writeLongTail(1, 3, value);\n    }\n    writePinCount(value) {\n        this.writeLongTail(1, 0, value);\n    }\n    writePitchInterval(value) {\n        if (value < 0) {\n            this.write(1, 1);\n            this.writeLongTail(1, 3, -value);\n        }\n        else {\n            this.write(1, 0);\n            this.writeLongTail(1, 3, value);\n        }\n    }\n    concat(other) {\n        for (let i = 0; i < other._index; i++) {\n            this._bits[this._index++] = other._bits[i];\n        }\n    }\n    encodeBase64(buffer) {\n        for (let i = 0; i < this._index; i += 6) {\n            const value = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\n            buffer.push(base64IntToCharCode[value]);\n        }\n        return buffer;\n    }\n    lengthBase64() {\n        return Math.ceil(this._index / 6);\n    }\n}\nexport function makeNotePin(interval, time, size) {\n    return { interval: interval, time: time, size: size };\n}\nexport class Note {\n    constructor(pitch, start, end, size, fadeout = false) {\n        this.pitches = [pitch];\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\n        this.start = start;\n        this.end = end;\n        this.continuesLastPattern = false;\n    }\n    pickMainInterval() {\n        let longestFlatIntervalDuration = 0;\n        let mainInterval = 0;\n        for (let pinIndex = 1; pinIndex < this.pins.length; pinIndex++) {\n            const pinA = this.pins[pinIndex - 1];\n            const pinB = this.pins[pinIndex];\n            if (pinA.interval == pinB.interval) {\n                const duration = pinB.time - pinA.time;\n                if (longestFlatIntervalDuration < duration) {\n                    longestFlatIntervalDuration = duration;\n                    mainInterval = pinA.interval;\n                }\n            }\n        }\n        if (longestFlatIntervalDuration == 0) {\n            let loudestSize = 0;\n            for (let pinIndex = 0; pinIndex < this.pins.length; pinIndex++) {\n                const pin = this.pins[pinIndex];\n                if (loudestSize < pin.size) {\n                    loudestSize = pin.size;\n                    mainInterval = pin.interval;\n                }\n            }\n        }\n        return mainInterval;\n    }\n    clone() {\n        const newNote = new Note(-1, this.start, this.end, 3);\n        newNote.pitches = this.pitches.concat();\n        newNote.pins = [];\n        for (const pin of this.pins) {\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n        }\n        newNote.continuesLastPattern = this.continuesLastPattern;\n        return newNote;\n    }\n    getEndPinIndex(part) {\n        let endPinIndex;\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\n            if (this.pins[endPinIndex].time + this.start > part)\n                break;\n        }\n        return endPinIndex;\n    }\n}\nexport class Pattern {\n    constructor() {\n        this.notes = [];\n        this.instruments = [0];\n    }\n    cloneNotes() {\n        const result = [];\n        for (const note of this.notes) {\n            result.push(note.clone());\n        }\n        return result;\n    }\n    reset() {\n        this.notes.length = 0;\n        this.instruments[0] = 0;\n        this.instruments.length = 1;\n    }\n    toJsonObject(song, channel, isModChannel) {\n        const noteArray = [];\n        for (const note of this.notes) {\n            let instrument = channel.instruments[this.instruments[0]];\n            let mod = Math.max(0, Config.modCount - note.pitches[0] - 1);\n            let volumeCap = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n            const pointArray = [];\n            for (const pin of note.pins) {\n                let useVol = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\n                pointArray.push({\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\n                    \"pitchBend\": pin.interval,\n                    \"volume\": useVol,\n                    \"forMod\": isModChannel,\n                });\n            }\n            const noteObject = {\n                \"pitches\": note.pitches,\n                \"points\": pointArray,\n            };\n            if (note.start == 0) {\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\n            }\n            noteArray.push(noteObject);\n        }\n        const patternObject = { \"notes\": noteArray };\n        if (song.patternInstruments) {\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\n        }\n        return patternObject;\n    }\n    fromJsonObject(patternObject, song, channel, importedPartsPerBeat, isNoiseChannel, isModChannel, jsonFormat = \"auto\") {\n        const format = jsonFormat.toLowerCase();\n        if (song.patternInstruments) {\n            if (Array.isArray(patternObject[\"instruments\"])) {\n                const instruments = patternObject[\"instruments\"];\n                const instrumentCount = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\n                for (let j = 0; j < instrumentCount; j++) {\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\n                }\n                this.instruments.length = instrumentCount;\n            }\n            else {\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\n                this.instruments.length = 1;\n            }\n        }\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\n            const maxNoteCount = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\n            for (let j = 0; j < patternObject[\"notes\"].length; j++) {\n                if (j >= maxNoteCount)\n                    break;\n                const noteObject = patternObject[\"notes\"][j];\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\n                    continue;\n                }\n                const note = new Note(0, 0, 0, 0);\n                note.pitches = [];\n                note.pins = [];\n                for (let k = 0; k < noteObject[\"pitches\"].length; k++) {\n                    const pitch = noteObject[\"pitches\"][k] | 0;\n                    if (note.pitches.indexOf(pitch) != -1)\n                        continue;\n                    note.pitches.push(pitch);\n                    if (note.pitches.length >= Config.maxChordSize)\n                        break;\n                }\n                if (note.pitches.length < 1)\n                    continue;\n                let startInterval = 0;\n                let instrument = channel.instruments[this.instruments[0]];\n                let mod = Math.max(0, Config.modCount - note.pitches[0] - 1);\n                for (let k = 0; k < noteObject[\"points\"].length; k++) {\n                    const pointObject = noteObject[\"points\"][k];\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined)\n                        continue;\n                    const interval = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\n                    const time = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\n                    let volumeCap = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n                    let size;\n                    if (pointObject[\"volume\"] == undefined) {\n                        size = volumeCap;\n                    }\n                    else if (pointObject[\"forMod\"] == undefined) {\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n                    else {\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n                    if (time > song.beatsPerBar * Config.partsPerBeat)\n                        continue;\n                    if (note.pins.length == 0) {\n                        note.start = time;\n                        startInterval = interval;\n                    }\n                    else {\n                    }\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\n                }\n                if (note.pins.length < 2)\n                    continue;\n                note.end = note.pins[note.pins.length - 1].time + note.start;\n                const maxPitch = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n                let lowestPitch = maxPitch;\n                let highestPitch = 0;\n                for (let k = 0; k < note.pitches.length; k++) {\n                    note.pitches[k] += startInterval;\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\n                        note.pitches.splice(k, 1);\n                        k--;\n                    }\n                    if (note.pitches[k] < lowestPitch)\n                        lowestPitch = note.pitches[k];\n                    if (note.pitches[k] > highestPitch)\n                        highestPitch = note.pitches[k];\n                }\n                if (note.pitches.length < 1)\n                    continue;\n                for (let k = 0; k < note.pins.length; k++) {\n                    const pin = note.pins[k];\n                    if (pin.interval + lowestPitch < 0)\n                        pin.interval = -lowestPitch;\n                    if (pin.interval + highestPitch > maxPitch)\n                        pin.interval = maxPitch - highestPitch;\n                    if (k >= 2) {\n                        if (pin.interval == note.pins[k - 1].interval &&\n                            pin.interval == note.pins[k - 2].interval &&\n                            pin.size == note.pins[k - 1].size &&\n                            pin.size == note.pins[k - 2].size) {\n                            note.pins.splice(k - 1, 1);\n                            k--;\n                        }\n                    }\n                }\n                if (note.start == 0) {\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\n                }\n                else {\n                    note.continuesLastPattern = false;\n                }\n                if ((format != \"ultrabox\" && format != \"slarmoosbox\") && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                    for (const pin of note.pins) {\n                        const oldMin = 30;\n                        const newMin = 1;\n                        const old = pin.size + oldMin;\n                        pin.size = old - newMin;\n                    }\n                }\n                this.notes.push(note);\n            }\n        }\n    }\n}\nexport class Operator {\n    constructor(index) {\n        this.frequency = 4;\n        this.amplitude = 0;\n        this.waveform = 0;\n        this.pulseWidth = 0.5;\n        this.reset(index);\n    }\n    reset(index) {\n        this.frequency = 4;\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\n        this.waveform = 0;\n        this.pulseWidth = 5;\n    }\n    copy(other) {\n        this.frequency = other.frequency;\n        this.amplitude = other.amplitude;\n        this.waveform = other.waveform;\n        this.pulseWidth = other.pulseWidth;\n    }\n}\nexport class CustomAlgorithm {\n    constructor() {\n        this.name = \"\";\n        this.carrierCount = 0;\n        this.modulatedBy = [[], [], [], [], [], []];\n        this.associatedCarrier = [];\n        this.fromPreset(1);\n    }\n    set(carriers, modulation) {\n        this.reset();\n        this.carrierCount = carriers;\n        for (let i = 0; i < this.modulatedBy.length; i++) {\n            this.modulatedBy[i] = modulation[i];\n            if (i < carriers) {\n                this.associatedCarrier[i] = i + 1;\n            }\n            this.name += (i + 1);\n            for (let j = 0; j < modulation[i].length; j++) {\n                this.name += modulation[i][j];\n                if (modulation[i][j] > carriers - 1) {\n                    this.associatedCarrier[modulation[i][j] - 1] = i + 1;\n                }\n                this.name += \",\";\n            }\n            if (i < carriers) {\n                this.name += \"|\";\n            }\n            else {\n                this.name += \".\";\n            }\n        }\n    }\n    reset() {\n        this.name = \"\";\n        this.carrierCount = 1;\n        this.modulatedBy = [[2, 3, 4, 5, 6], [], [], [], [], []];\n        this.associatedCarrier = [1, 1, 1, 1, 1, 1];\n    }\n    copy(other) {\n        this.name = other.name;\n        this.carrierCount = other.carrierCount;\n        this.modulatedBy = other.modulatedBy;\n        this.associatedCarrier = other.associatedCarrier;\n    }\n    fromPreset(other) {\n        this.reset();\n        let preset = Config.algorithms6Op[other];\n        this.name = preset.name;\n        this.carrierCount = preset.carrierCount;\n        for (var i = 0; i < preset.modulatedBy.length; i++) {\n            this.modulatedBy[i] = Array.from(preset.modulatedBy[i]);\n            this.associatedCarrier[i] = preset.associatedCarrier[i];\n        }\n    }\n}\nexport class CustomFeedBack {\n    constructor() {\n        this.name = \"\";\n        this.indices = [[], [], [], [], [], []];\n        this.fromPreset(1);\n    }\n    set(inIndices) {\n        this.reset();\n        for (let i = 0; i < this.indices.length; i++) {\n            this.indices[i] = inIndices[i];\n            for (let j = 0; j < inIndices[i].length; j++) {\n                this.name += inIndices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n    reset() {\n        this.reset;\n        this.name = \"\";\n        this.indices = [[1], [], [], [], [], []];\n    }\n    copy(other) {\n        this.name = other.name;\n        this.indices = other.indices;\n    }\n    fromPreset(other) {\n        this.reset();\n        let preset = Config.feedbacks6Op[other];\n        for (var i = 0; i < preset.indices.length; i++) {\n            this.indices[i] = Array.from(preset.indices[i]);\n            for (let j = 0; j < preset.indices[i].length; j++) {\n                this.name += preset.indices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n}\nexport class SpectrumWave {\n    constructor(isNoiseChannel) {\n        this.spectrum = [];\n        this.hash = -1;\n        this.reset(isNoiseChannel);\n    }\n    reset(isNoiseChannel) {\n        for (let i = 0; i < Config.spectrumControlPoints; i++) {\n            if (isNoiseChannel) {\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\n            }\n            else {\n                const isHarmonic = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\n            }\n        }\n        this.markCustomWaveDirty();\n    }\n    markCustomWaveDirty() {\n        const hashMult = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\n        let hash = 0;\n        for (const point of this.spectrum)\n            hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\nclass SpectrumWaveState {\n    constructor() {\n        this.wave = null;\n        this._hash = -1;\n    }\n    getCustomWave(settings, lowestOctave) {\n        if (this._hash == settings.hash)\n            return this.wave;\n        this._hash = settings.hash;\n        const waveLength = Config.spectrumNoiseLength;\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave = this.wave;\n        for (let i = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n        const highestOctave = 14;\n        const falloffRatio = 0.25;\n        const pitchTweak = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\n        function controlPointToOctave(point) {\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\n        }\n        let combinedAmplitude = 1;\n        for (let i = 0; i < Config.spectrumControlPoints + 1; i++) {\n            const value1 = (i <= 0) ? 0 : settings.spectrum[i - 1];\n            const value2 = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\n            const octave1 = controlPointToOctave(i - 1);\n            let octave2 = controlPointToOctave(i);\n            if (i >= Config.spectrumControlPoints)\n                octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\n            if (value1 == 0 && value2 == 0)\n                continue;\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\n        }\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\n        }\n        inverseRealFourierTransform(wave, waveLength);\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\n        wave[waveLength] = wave[0];\n        return wave;\n    }\n}\nexport class HarmonicsWave {\n    constructor() {\n        this.harmonics = [];\n        this.hash = -1;\n        this.reset();\n    }\n    reset() {\n        for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n            this.harmonics[i] = 0;\n        }\n        this.harmonics[0] = Config.harmonicsMax;\n        this.harmonics[3] = Config.harmonicsMax;\n        this.harmonics[6] = Config.harmonicsMax;\n        this.markCustomWaveDirty();\n    }\n    markCustomWaveDirty() {\n        const hashMult = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\n        let hash = 0;\n        for (const point of this.harmonics)\n            hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\nclass HarmonicsWaveState {\n    constructor() {\n        this.wave = null;\n        this._hash = -1;\n    }\n    getCustomWave(settings, instrumentType) {\n        if (this._hash == settings.hash && this._generatedForType == instrumentType)\n            return this.wave;\n        this._hash = settings.hash;\n        this._generatedForType = instrumentType;\n        const harmonicsRendered = (instrumentType == 7) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\n        const waveLength = Config.harmonicsWavelength;\n        const retroWave = getDrumWave(0, null, null);\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave = this.wave;\n        for (let i = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n        const overallSlope = -0.25;\n        let combinedControlPointAmplitude = 1;\n        for (let harmonicIndex = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\n            const harmonicFreq = harmonicIndex + 1;\n            let controlValue = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\n            }\n            const normalizedValue = controlValue / Config.harmonicsMax;\n            let amplitude = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\n            if (harmonicIndex < Config.harmonicsControlPoints) {\n                combinedControlPointAmplitude += amplitude;\n            }\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\n            amplitude *= retroWave[harmonicIndex + 589];\n            wave[waveLength - harmonicFreq] = amplitude;\n        }\n        inverseRealFourierTransform(wave, waveLength);\n        const mult = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\n        for (let i = 0; i < wave.length; i++)\n            wave[i] *= mult;\n        performIntegralOld(wave);\n        wave[waveLength] = wave[0];\n        return wave;\n    }\n}\nclass Grain {\n    constructor() {\n        this.delayLinePosition = 0;\n        this.ageInSamples = 0;\n        this.maxAgeInSamples = 0;\n        this.delay = 0;\n        this.parabolicEnvelopeAmplitude = 0;\n        this.parabolicEnvelopeSlope = 0;\n        this.parabolicEnvelopeCurve = 0;\n        this.rcbEnvelopeAmplitude = 0;\n        this.rcbEnvelopeAttackIndex = 0;\n        this.rcbEnvelopeReleaseIndex = 0;\n        this.rcbEnvelopeSustain = 0;\n    }\n    initializeParabolicEnvelope(durationInSamples, amplitude) {\n        this.parabolicEnvelopeAmplitude = 0;\n        const invDuration = 1.0 / durationInSamples;\n        const invDurationSquared = invDuration * invDuration;\n        this.parabolicEnvelopeSlope = 4.0 * amplitude * (invDuration - invDurationSquared);\n        this.parabolicEnvelopeCurve = -8.0 * amplitude * invDurationSquared;\n    }\n    updateParabolicEnvelope() {\n        this.parabolicEnvelopeAmplitude += this.parabolicEnvelopeSlope;\n        this.parabolicEnvelopeSlope += this.parabolicEnvelopeCurve;\n    }\n    initializeRCBEnvelope(durationInSamples, amplitude) {\n        this.rcbEnvelopeAttackIndex = Math.floor(durationInSamples / 6);\n        this.rcbEnvelopeSustain = amplitude;\n        this.rcbEnvelopeReleaseIndex = Math.floor(durationInSamples * 5 / 6);\n    }\n    updateRCBEnvelope() {\n        if (this.ageInSamples < this.rcbEnvelopeAttackIndex) {\n            this.rcbEnvelopeAmplitude = (1.0 + Math.cos(Math.PI + (Math.PI * (this.ageInSamples / this.rcbEnvelopeAttackIndex) * (this.rcbEnvelopeSustain / 2.0))));\n        }\n        else if (this.ageInSamples > this.rcbEnvelopeReleaseIndex) {\n            this.rcbEnvelopeAmplitude = (1.0 + Math.cos(Math.PI * ((this.ageInSamples - this.rcbEnvelopeReleaseIndex) / this.rcbEnvelopeAttackIndex)) * (this.rcbEnvelopeSustain / 2.0));\n        }\n    }\n    addDelay(delay) {\n        this.delay = delay;\n    }\n}\nexport class FilterControlPoint {\n    constructor() {\n        this.freq = 0;\n        this.gain = Config.filterGainCenter;\n        this.type = 2;\n    }\n    set(freqSetting, gainSetting) {\n        this.freq = freqSetting;\n        this.gain = gainSetting;\n    }\n    getHz() {\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\n    }\n    static getHzFromSettingValue(value) {\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\n    }\n    static getSettingValueFromHz(hz) {\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\n    }\n    static getRoundedSettingValueFromHz(hz) {\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\n    }\n    getLinearGain(peakMult = 1.0) {\n        const power = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        const neutral = (this.type == 2) ? 0.0 : -0.5;\n        const interpolatedPower = neutral + (power - neutral) * peakMult;\n        return Math.pow(2.0, interpolatedPower);\n    }\n    static getRoundedSettingValueFromLinearGain(linearGain) {\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\n    }\n    toCoefficients(filter, sampleRate, freqMult = 1.0, peakMult = 1.0) {\n        const cornerRadiansPerSample = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\n        const linearGain = this.getLinearGain(peakMult);\n        switch (this.type) {\n            case 0:\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case 1:\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case 2:\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\n                break;\n            default:\n                throw new Error();\n        }\n    }\n    getVolumeCompensationMult() {\n        const octave = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\n        const gainPow = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        switch (this.type) {\n            case 0:\n                const freqRelativeTo8khz = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\n                const warpedFreq = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\n                const warpedOctave = Math.log2(warpedFreq);\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\n            case 1:\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\n            case 2:\n                const distanceFromCenter = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\n                const freqLoudness = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\n            default:\n                throw new Error();\n        }\n    }\n}\nexport class FilterSettings {\n    constructor() {\n        this.controlPoints = [];\n        this.controlPointCount = 0;\n        this.reset();\n    }\n    reset() {\n        this.controlPointCount = 0;\n    }\n    addPoint(type, freqSetting, gainSetting) {\n        let controlPoint;\n        if (this.controlPoints.length <= this.controlPointCount) {\n            controlPoint = new FilterControlPoint();\n            this.controlPoints[this.controlPointCount] = controlPoint;\n        }\n        else {\n            controlPoint = this.controlPoints[this.controlPointCount];\n        }\n        this.controlPointCount++;\n        controlPoint.type = type;\n        controlPoint.set(freqSetting, gainSetting);\n    }\n    toJsonObject() {\n        const filterArray = [];\n        for (let i = 0; i < this.controlPointCount; i++) {\n            const point = this.controlPoints[i];\n            filterArray.push({\n                \"type\": Config.filterTypeNames[point.type],\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\n            });\n        }\n        return filterArray;\n    }\n    fromJsonObject(filterObject) {\n        this.controlPoints.length = 0;\n        if (filterObject) {\n            for (const pointObject of filterObject) {\n                const point = new FilterControlPoint();\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\n                if (point.type == -1)\n                    point.type = 2;\n                if (pointObject[\"cutoffHz\"] != undefined) {\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\n                }\n                else {\n                    point.freq = 0;\n                }\n                if (pointObject[\"linearGain\"] != undefined) {\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\n                }\n                else {\n                    point.gain = Config.filterGainCenter;\n                }\n                this.controlPoints.push(point);\n            }\n        }\n        this.controlPointCount = this.controlPoints.length;\n    }\n    static filtersCanMorph(filterA, filterB) {\n        if (filterA.controlPointCount != filterB.controlPointCount)\n            return false;\n        for (let i = 0; i < filterA.controlPointCount; i++) {\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\n                return false;\n        }\n        return true;\n    }\n    static lerpFilters(filterA, filterB, pos) {\n        let lerpedFilter = new FilterSettings();\n        if (filterA == null) {\n            return filterA;\n        }\n        if (filterB == null) {\n            return filterB;\n        }\n        pos = Math.max(0, Math.min(1, pos));\n        if (this.filtersCanMorph(filterA, filterB)) {\n            for (let i = 0; i < filterA.controlPointCount; i++) {\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\n            }\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\n            return lerpedFilter;\n        }\n        else {\n            return (pos >= 1) ? filterB : filterA;\n        }\n    }\n    convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyEnv) {\n        this.reset();\n        const legacyFilterCutoffMaxHz = 8000;\n        const legacyFilterMax = 0.95;\n        const legacyFilterMaxRadians = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance = 0.95;\n        const legacyFilterCutoffRange = 11;\n        const legacyFilterResonanceRange = 8;\n        const resonant = (legacyResonanceSetting > 1);\n        const firstOrder = (legacyResonanceSetting == 0);\n        const cutoffAtMax = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        const envDecays = (legacyEnv.type == 5 || legacyEnv.type == 6 || legacyEnv.type == 10 || legacyEnv.type == 1);\n        const standardSampleRate = 48000;\n        const legacyHz = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n        if (legacyEnv.type == 0 && !resonant && cutoffAtMax) {\n        }\n        else if (firstOrder) {\n            const extraOctaves = 3.5;\n            const targetRadians = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians = 2.0 * Math.PI * finalHz / standardSampleRate;\n            const legacyFilter = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians = response.magnitude();\n            let logGain = Math.log2(legacyFilterGainAtNewRadians);\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            if (envDecays)\n                logGain = Math.min(logGain, -1.0);\n            const convertedGain = Math.pow(2.0, logGain);\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n        else {\n            const intendedGain = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain = 0.5 / intendedGain;\n            const maxRadians = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio = legacyRadians / maxRadians;\n            const targetRadians = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz;\n            if (envDecays) {\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\n            }\n            else {\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            }\n            const freqSetting = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            let legacyFilterGain;\n            if (envDecays) {\n                legacyFilterGain = intendedGain;\n            }\n            else {\n                const legacyFilter = new FilterCoefficients();\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n                const response = new FrequencyResponse();\n                response.analyze(legacyFilter, curvedRadians);\n                legacyFilterGain = response.magnitude();\n            }\n            if (!resonant)\n                legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n        this.controlPoints.length = this.controlPointCount;\n    }\n    convertLegacySettingsForSynth(legacyCutoffSetting, legacyResonanceSetting, allowFirstOrder = false) {\n        this.reset();\n        const legacyFilterCutoffMaxHz = 8000;\n        const legacyFilterMax = 0.95;\n        const legacyFilterMaxRadians = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance = 0.95;\n        const legacyFilterCutoffRange = 11;\n        const legacyFilterResonanceRange = 8;\n        const firstOrder = (legacyResonanceSetting == 0 && allowFirstOrder);\n        const standardSampleRate = 48000;\n        const legacyHz = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n        if (firstOrder) {\n            const extraOctaves = 3.5;\n            const targetRadians = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians = 2.0 * Math.PI * finalHz / standardSampleRate;\n            const legacyFilter = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians = response.magnitude();\n            let logGain = Math.log2(legacyFilterGainAtNewRadians);\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            const convertedGain = Math.pow(2.0, logGain);\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n        else {\n            const intendedGain = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain = 0.5 / intendedGain;\n            const maxRadians = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio = legacyRadians / maxRadians;\n            const targetRadians = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz;\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting = FilterControlPoint.getSettingValueFromHz(curvedHz);\n            let legacyFilterGain;\n            const legacyFilter = new FilterCoefficients();\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n            const response = new FrequencyResponse();\n            response.analyze(legacyFilter, curvedRadians);\n            legacyFilterGain = response.magnitude();\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n    }\n}\nexport class EnvelopeSettings {\n    constructor(isNoiseEnvelope) {\n        this.isNoiseEnvelope = isNoiseEnvelope;\n        this.target = 0;\n        this.index = 0;\n        this.envelope = 0;\n        this.perEnvelopeSpeed = Config.envelopes[this.envelope].speed;\n        this.perEnvelopeLowerBound = 0;\n        this.perEnvelopeUpperBound = 1;\n        this.tempEnvelopeSpeed = null;\n        this.tempEnvelopeLowerBound = null;\n        this.tempEnvelopeUpperBound = null;\n        this.steps = 2;\n        this.seed = 2;\n        this.waveform = 0;\n        this.discrete = false;\n        this.reset();\n    }\n    reset() {\n        this.target = 0;\n        this.index = 0;\n        this.envelope = 0;\n        this.pitchEnvelopeStart = 0;\n        this.pitchEnvelopeEnd = this.isNoiseEnvelope ? Config.drumCount - 1 : Config.maxPitch;\n        this.inverse = false;\n        this.isNoiseEnvelope = false;\n        this.perEnvelopeSpeed = Config.envelopes[this.envelope].speed;\n        this.perEnvelopeLowerBound = 0;\n        this.perEnvelopeUpperBound = 1;\n        this.tempEnvelopeSpeed = null;\n        this.tempEnvelopeLowerBound = null;\n        this.tempEnvelopeUpperBound = null;\n        this.steps = 2;\n        this.seed = 2;\n        this.waveform = 0;\n        this.discrete = false;\n    }\n    toJsonObject() {\n        const envelopeObject = {\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\n            \"envelope\": Config.newEnvelopes[this.envelope].name,\n            \"inverse\": this.inverse,\n            \"perEnvelopeSpeed\": this.perEnvelopeSpeed,\n            \"perEnvelopeLowerBound\": this.perEnvelopeLowerBound,\n            \"perEnvelopeUpperBound\": this.perEnvelopeUpperBound,\n            \"discrete\": this.discrete,\n        };\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\n            envelopeObject[\"index\"] = this.index;\n        }\n        if (Config.newEnvelopes[this.envelope].name == \"pitch\") {\n            envelopeObject[\"pitchEnvelopeStart\"] = this.pitchEnvelopeStart;\n            envelopeObject[\"pitchEnvelopeEnd\"] = this.pitchEnvelopeEnd;\n        }\n        else if (Config.newEnvelopes[this.envelope].name == \"random\") {\n            envelopeObject[\"steps\"] = this.steps;\n            envelopeObject[\"seed\"] = this.seed;\n            envelopeObject[\"waveform\"] = this.waveform;\n        }\n        else if (Config.newEnvelopes[this.envelope].name == \"lfo\") {\n            envelopeObject[\"waveform\"] = this.waveform;\n            envelopeObject[\"steps\"] = this.steps;\n        }\n        return envelopeObject;\n    }\n    fromJsonObject(envelopeObject, format) {\n        this.reset();\n        let target = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\n        if (target == null)\n            target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n        this.target = target.index;\n        let envelope = Config.envelopes.dictionary[\"none\"];\n        let isTremolo2 = false;\n        if (format == \"slarmoosbox\") {\n            if (envelopeObject[\"envelope\"] == \"tremolo2\") {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = true;\n            }\n            else if (envelopeObject[\"envelope\"] == \"tremolo\") {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = false;\n            }\n            else {\n                envelope = Config.newEnvelopes.dictionary[envelopeObject[\"envelope\"]];\n            }\n        }\n        else {\n            if (Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type == 9) {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = true;\n            }\n            else if (Config.newEnvelopes[Math.max(Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1, 0)].index > 8) {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1];\n            }\n            else {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type];\n            }\n        }\n        if (envelope == undefined) {\n            if (Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type == 9) {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = true;\n            }\n            else if (Config.newEnvelopes[Math.max(Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1, 0)].index > 8) {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1];\n            }\n            else {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type];\n            }\n        }\n        if (envelope == null)\n            envelope = Config.envelopes.dictionary[\"none\"];\n        this.envelope = envelope.index;\n        if (envelopeObject[\"index\"] != undefined) {\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\n        }\n        else {\n            this.index = 0;\n        }\n        if (envelopeObject[\"pitchEnvelopeStart\"] != undefined) {\n            this.pitchEnvelopeStart = clamp(0, this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch + 1, envelopeObject[\"pitchEnvelopeStart\"]);\n        }\n        else {\n            this.pitchEnvelopeStart = 0;\n        }\n        if (envelopeObject[\"pitchEnvelopeEnd\"] != undefined) {\n            this.pitchEnvelopeEnd = clamp(0, this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch + 1, envelopeObject[\"pitchEnvelopeEnd\"]);\n        }\n        else {\n            this.pitchEnvelopeEnd = this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch;\n        }\n        this.inverse = Boolean(envelopeObject[\"inverse\"]);\n        if (envelopeObject[\"perEnvelopeSpeed\"] != undefined) {\n            this.perEnvelopeSpeed = envelopeObject[\"perEnvelopeSpeed\"];\n        }\n        else {\n            this.perEnvelopeSpeed = Config.envelopes.dictionary[envelopeObject[\"envelope\"]].speed;\n        }\n        if (envelopeObject[\"perEnvelopeLowerBound\"] != undefined) {\n            this.perEnvelopeLowerBound = clamp(Config.perEnvelopeBoundMin, Config.perEnvelopeBoundMax + 1, envelopeObject[\"perEnvelopeLowerBound\"]);\n        }\n        else {\n            this.perEnvelopeLowerBound = 0;\n        }\n        if (envelopeObject[\"perEnvelopeUpperBound\"] != undefined) {\n            this.perEnvelopeUpperBound = clamp(Config.perEnvelopeBoundMin, Config.perEnvelopeBoundMax + 1, envelopeObject[\"perEnvelopeUpperBound\"]);\n        }\n        else {\n            this.perEnvelopeUpperBound = 1;\n        }\n        if (isTremolo2) {\n            if (this.inverse) {\n                this.perEnvelopeUpperBound = Math.floor((this.perEnvelopeUpperBound / 2) * 10) / 10;\n                this.perEnvelopeLowerBound = Math.floor((this.perEnvelopeLowerBound / 2) * 10) / 10;\n            }\n            else {\n                this.perEnvelopeUpperBound = Math.floor((0.5 + (this.perEnvelopeUpperBound - this.perEnvelopeLowerBound) / 2) * 10) / 10;\n                this.perEnvelopeLowerBound = 0.5;\n            }\n        }\n        if (envelopeObject[\"steps\"] != undefined) {\n            this.steps = clamp(1, Config.randomEnvelopeStepsMax + 1, envelopeObject[\"steps\"]);\n        }\n        else {\n            this.steps = 2;\n        }\n        if (envelopeObject[\"seed\"] != undefined) {\n            this.seed = clamp(1, Config.randomEnvelopeSeedMax + 1, envelopeObject[\"seed\"]);\n        }\n        else {\n            this.seed = 2;\n        }\n        if (envelopeObject[\"waveform\"] != undefined) {\n            this.waveform = envelopeObject[\"waveform\"];\n        }\n        else {\n            this.waveform = 0;\n        }\n        if (envelopeObject[\"discrete\"] != undefined) {\n            this.discrete = envelopeObject[\"discrete\"];\n        }\n        else {\n            this.discrete = false;\n        }\n    }\n}\nexport class Instrument {\n    constructor(isNoiseChannel, isModChannel) {\n        this.type = 0;\n        this.preset = 0;\n        this.chipWave = 2;\n        this.isUsingAdvancedLoopControls = false;\n        this.chipWaveLoopStart = 0;\n        this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n        this.chipWaveLoopMode = 0;\n        this.chipWavePlayBackwards = false;\n        this.chipWaveStartOffset = 0;\n        this.chipNoise = 1;\n        this.eqFilter = new FilterSettings();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        this.noteFilter = new FilterSettings();\n        this.noteFilterType = false;\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.noteFilterSimplePeak = 0;\n        this.eqSubFilters = [];\n        this.noteSubFilters = [];\n        this.envelopes = [];\n        this.fadeIn = 0;\n        this.fadeOut = Config.fadeOutNeutral;\n        this.envelopeCount = 0;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        this.pitchShift = 0;\n        this.detune = 0;\n        this.vibrato = 0;\n        this.interval = 0;\n        this.vibratoDepth = 0;\n        this.vibratoSpeed = 10;\n        this.vibratoDelay = 0;\n        this.vibratoType = 0;\n        this.envelopeSpeed = 12;\n        this.unison = 0;\n        this.unisonVoices = 1;\n        this.unisonSpread = 0.0;\n        this.unisonOffset = 0.0;\n        this.unisonExpression = 1.4;\n        this.unisonSign = 1.0;\n        this.effects = 0;\n        this.chord = 1;\n        this.volume = 0;\n        this.pan = Config.panCenter;\n        this.panDelay = 0;\n        this.arpeggioSpeed = 12;\n        this.monoChordTone = 0;\n        this.fastTwoNoteArp = false;\n        this.legacyTieOver = false;\n        this.clicklessTransition = false;\n        this.aliases = false;\n        this.pulseWidth = Config.pulseWidthRange;\n        this.decimalOffset = 0;\n        this.supersawDynamism = Config.supersawDynamismMax;\n        this.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n        this.supersawShape = 0;\n        this.stringSustain = 10;\n        this.stringSustainType = 1;\n        this.distortion = 0;\n        this.bitcrusherFreq = 0;\n        this.bitcrusherQuantization = 0;\n        this.ringModulation = Config.ringModRange >> 1;\n        this.ringModulationHz = Config.ringModHzRange >> 1;\n        this.ringModWaveformIndex = 0;\n        this.ringModPulseWidth = Config.pwmOperatorWaves.length >> 1;\n        this.ringModHzOffset = 200;\n        this.granular = 4;\n        this.grainSize = (Config.grainSizeMax - Config.grainSizeMin) / Config.grainSizeStep;\n        this.grainAmounts = Config.grainAmountsMax;\n        this.grainRange = 40;\n        this.chorus = 0;\n        this.reverb = 0;\n        this.echoSustain = 0;\n        this.echoDelay = 0;\n        this.algorithm = 0;\n        this.feedbackType = 0;\n        this.algorithm6Op = 1;\n        this.feedbackType6Op = 1;\n        this.customAlgorithm = new CustomAlgorithm();\n        this.customFeedbackType = new CustomFeedBack();\n        this.feedbackAmplitude = 0;\n        this.customChipWave = new Float32Array(64);\n        this.customChipWaveIntegral = new Float32Array(65);\n        this.operators = [];\n        this.harmonicsWave = new HarmonicsWave();\n        this.drumsetEnvelopes = [];\n        this.drumsetSpectrumWaves = [];\n        this.modChannels = [];\n        this.modInstruments = [];\n        this.modulators = [];\n        this.modFilterTypes = [];\n        this.modEnvelopeNumbers = [];\n        this.invalidModulators = [];\n        this.isNoiseInstrument = false;\n        if (isModChannel) {\n            for (let mod = 0; mod < Config.modCount; mod++) {\n                this.modChannels.push(-2);\n                this.modInstruments.push(0);\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n            }\n        }\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\n        for (let i = 0; i < Config.operatorCount + 2; i++) {\n            this.operators[i] = new Operator(i);\n        }\n        for (let i = 0; i < Config.drumCount; i++) {\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n        }\n        for (let i = 0; i < 64; i++) {\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\n        }\n        let sum = 0.0;\n        for (let i = 0; i < this.customChipWave.length; i++) {\n            sum += this.customChipWave[i];\n        }\n        const average = sum / this.customChipWave.length;\n        let cumulative = 0;\n        let wavePrev = 0;\n        for (let i = 0; i < this.customChipWave.length; i++) {\n            cumulative += wavePrev;\n            wavePrev = this.customChipWave[i] - average;\n            this.customChipWaveIntegral[i] = cumulative;\n        }\n        this.customChipWaveIntegral[64] = 0.0;\n        this.isNoiseInstrument = isNoiseChannel;\n    }\n    setTypeAndReset(type, isNoiseChannel, isModChannel) {\n        if (isModChannel)\n            type = 10;\n        this.type = type;\n        this.preset = type;\n        this.volume = 0;\n        this.effects = (1 << 2);\n        this.chorus = Config.chorusRange - 1;\n        this.reverb = 0;\n        this.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\n        this.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\n        this.eqFilter.reset();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        for (let i = 0; i < Config.filterMorphCount; i++) {\n            this.eqSubFilters[i] = null;\n            this.noteSubFilters[i] = null;\n        }\n        this.noteFilter.reset();\n        this.noteFilterType = false;\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.noteFilterSimplePeak = 0;\n        this.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\n        this.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5);\n        this.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\n        this.ringModulation = Config.ringModRange >> 1;\n        this.ringModulationHz = Config.ringModHzRange >> 1;\n        this.ringModWaveformIndex = 0;\n        this.ringModPulseWidth = Config.pwmOperatorWaves.length >> 1;\n        this.ringModHzOffset = 200;\n        this.granular = 4;\n        this.grainSize = (Config.grainSizeMax - Config.grainSizeMin) / Config.grainSizeStep;\n        this.grainAmounts = Config.grainAmountsMax;\n        this.grainRange = 40;\n        this.pan = Config.panCenter;\n        this.panDelay = 0;\n        this.pitchShift = Config.pitchShiftCenter;\n        this.detune = Config.detuneCenter;\n        this.vibrato = 0;\n        this.unison = 0;\n        this.stringSustain = 10;\n        this.stringSustainType = Config.enableAcousticSustain ? 1 : 0;\n        this.clicklessTransition = false;\n        this.arpeggioSpeed = 12;\n        this.monoChordTone = 1;\n        this.envelopeSpeed = 12;\n        this.legacyTieOver = false;\n        this.aliases = false;\n        this.fadeIn = 0;\n        this.fadeOut = Config.fadeOutNeutral;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        this.envelopeCount = 0;\n        this.isNoiseInstrument = isNoiseChannel;\n        switch (type) {\n            case 0:\n                this.chipWave = 2;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.isUsingAdvancedLoopControls = false;\n                this.chipWaveLoopStart = 0;\n                this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                this.chipWaveLoopMode = 0;\n                this.chipWavePlayBackwards = false;\n                this.chipWaveStartOffset = 0;\n                break;\n            case 9:\n                this.chipWave = 2;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                for (let i = 0; i < 64; i++) {\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\n                }\n                let sum = 0.0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average = sum / this.customChipWave.length;\n                let cumulative = 0;\n                let wavePrev = 0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n                this.customChipWaveIntegral[64] = 0.0;\n                break;\n            case 1:\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.feedbackAmplitude = 0;\n                for (let i = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case 11:\n                this.transition = 1;\n                this.vibrato = 0;\n                this.effects = 1;\n                this.chord = 3;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.algorithm6Op = 1;\n                this.feedbackType6Op = 1;\n                this.customAlgorithm.fromPreset(1);\n                this.feedbackAmplitude = 0;\n                for (let i = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case 2:\n                this.chipNoise = 1;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                break;\n            case 3:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.spectrumWave.reset(isNoiseChannel);\n                break;\n            case 4:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                for (let i = 0; i < Config.drumCount; i++) {\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n                    }\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\n                }\n                break;\n            case 5:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case 6:\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.pulseWidth = Config.pulseWidthRange;\n                this.decimalOffset = 0;\n                break;\n            case 7:\n                this.chord = Config.chords.dictionary[\"strum\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case 10:\n                this.transition = 0;\n                this.vibrato = 0;\n                this.interval = 0;\n                this.effects = 0;\n                this.chord = 0;\n                this.modChannels = [];\n                this.modInstruments = [];\n                this.modulators = [];\n                for (let mod = 0; mod < Config.modCount; mod++) {\n                    this.modChannels.push(-2);\n                    this.modInstruments.push(0);\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n                    this.invalidModulators[mod] = false;\n                    this.modFilterTypes[mod] = 0;\n                    this.modEnvelopeNumbers[mod] = 0;\n                }\n                break;\n            case 8:\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.supersawDynamism = Config.supersawDynamismMax;\n                this.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n                this.supersawShape = 0;\n                this.pulseWidth = Config.pulseWidthRange - 1;\n                this.decimalOffset = 0;\n                break;\n            default:\n                throw new Error(\"Unrecognized instrument type: \" + type);\n        }\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n            this.effects = (this.effects | (1 << 11));\n        }\n    }\n    convertLegacySettings(legacySettings, forceSimpleFilter) {\n        let legacyCutoffSetting = legacySettings.filterCutoff;\n        let legacyResonanceSetting = legacySettings.filterResonance;\n        let legacyFilterEnv = legacySettings.filterEnvelope;\n        let legacyPulseEnv = legacySettings.pulseEnvelope;\n        let legacyOperatorEnvelopes = legacySettings.operatorEnvelopes;\n        let legacyFeedbackEnv = legacySettings.feedbackEnvelope;\n        if (legacyCutoffSetting == undefined)\n            legacyCutoffSetting = (this.type == 0) ? 6 : 10;\n        if (legacyResonanceSetting == undefined)\n            legacyResonanceSetting = 0;\n        if (legacyFilterEnv == undefined)\n            legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n        if (legacyPulseEnv == undefined)\n            legacyPulseEnv = Config.envelopes.dictionary[(this.type == 6) ? \"twang 2\" : \"none\"];\n        if (legacyOperatorEnvelopes == undefined)\n            legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == 1) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\n        if (legacyFeedbackEnv == undefined)\n            legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\n        const legacyFilterCutoffRange = 11;\n        const cutoffAtMax = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        if (cutoffAtMax && legacyFilterEnv.type == 4)\n            legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n        const carrierCount = Config.algorithms[this.algorithm].carrierCount;\n        let noCarriersControlledByNoteSize = true;\n        let allCarriersControlledByNoteSize = true;\n        let noteSizeControlsSomethingElse = (legacyFilterEnv.type == 1) || (legacyPulseEnv.type == 1);\n        if (this.type == 1 || this.type == 11) {\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == 1);\n            for (let i = 0; i < legacyOperatorEnvelopes.length; i++) {\n                if (i < carrierCount) {\n                    if (legacyOperatorEnvelopes[i].type != 1) {\n                        allCarriersControlledByNoteSize = false;\n                    }\n                    else {\n                        noCarriersControlledByNoteSize = false;\n                    }\n                }\n                else {\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == 1);\n                }\n            }\n        }\n        this.envelopeCount = 0;\n        if (this.type == 1 || this.type == 11) {\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index, false);\n            }\n            else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index, false);\n            }\n        }\n        if (legacyFilterEnv.type == 0) {\n            this.noteFilter.reset();\n            this.noteFilterType = false;\n            this.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects &= ~(1 << 5);\n            if (forceSimpleFilter || this.eqFilterType) {\n                this.eqFilterType = true;\n                this.eqFilterSimpleCut = legacyCutoffSetting;\n                this.eqFilterSimplePeak = legacyResonanceSetting;\n            }\n        }\n        else {\n            this.eqFilter.reset();\n            this.eqFilterType = false;\n            this.noteFilterType = false;\n            this.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects |= 1 << 5;\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index, false);\n            if (forceSimpleFilter || this.noteFilterType) {\n                this.noteFilterType = true;\n                this.noteFilterSimpleCut = legacyCutoffSetting;\n                this.noteFilterSimplePeak = legacyResonanceSetting;\n            }\n        }\n        if (legacyPulseEnv.type != 0) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index, false);\n        }\n        for (let i = 0; i < legacyOperatorEnvelopes.length; i++) {\n            if (i < carrierCount && allCarriersControlledByNoteSize)\n                continue;\n            if (legacyOperatorEnvelopes[i].type != 0) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index, false);\n            }\n        }\n        if (legacyFeedbackEnv.type != 0) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index, false);\n        }\n    }\n    toJsonObject() {\n        const instrumentObject = {\n            \"type\": Config.instrumentTypeNames[this.type],\n            \"volume\": this.volume,\n            \"eqFilter\": this.eqFilter.toJsonObject(),\n            \"eqFilterType\": this.eqFilterType,\n            \"eqSimpleCut\": this.eqFilterSimpleCut,\n            \"eqSimplePeak\": this.eqFilterSimplePeak,\n            \"envelopeSpeed\": this.envelopeSpeed\n        };\n        if (this.preset != this.type) {\n            instrumentObject[\"preset\"] = this.preset;\n        }\n        for (let i = 0; i < Config.filterMorphCount; i++) {\n            if (this.eqSubFilters[i] != null)\n                instrumentObject[\"eqSubFilters\" + i] = this.eqSubFilters[i].toJsonObject();\n        }\n        const effects = [];\n        for (const effect of Config.effectOrder) {\n            if (this.effects & (1 << effect)) {\n                effects.push(Config.effectNames[effect]);\n            }\n        }\n        instrumentObject[\"effects\"] = effects;\n        if (effectsIncludeTransition(this.effects)) {\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\n        }\n        if (effectsIncludeChord(this.effects)) {\n            instrumentObject[\"chord\"] = this.getChord().name;\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\n            instrumentObject[\"monoChordTone\"] = this.monoChordTone;\n        }\n        if (effectsIncludePitchShift(this.effects)) {\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\n        }\n        if (effectsIncludeDetune(this.effects)) {\n            instrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune);\n        }\n        if (effectsIncludeVibrato(this.effects)) {\n            if (this.vibrato == -1) {\n                this.vibrato = 5;\n            }\n            if (this.vibrato != 5) {\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\n            }\n            else {\n                instrumentObject[\"vibrato\"] = \"custom\";\n            }\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\n        }\n        if (effectsIncludeNoteFilter(this.effects)) {\n            instrumentObject[\"noteFilterType\"] = this.noteFilterType;\n            instrumentObject[\"noteSimpleCut\"] = this.noteFilterSimpleCut;\n            instrumentObject[\"noteSimplePeak\"] = this.noteFilterSimplePeak;\n            instrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null)\n                    instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i].toJsonObject();\n            }\n        }\n        if (effectsIncludeGranular(this.effects)) {\n            instrumentObject[\"granular\"] = this.granular;\n            instrumentObject[\"grainSize\"] = this.grainSize;\n            instrumentObject[\"grainAmounts\"] = this.grainAmounts;\n            instrumentObject[\"grainRange\"] = this.grainRange;\n        }\n        if (effectsIncludeRingModulation(this.effects)) {\n            instrumentObject[\"ringMod\"] = Math.round(100 * this.ringModulation / (Config.ringModRange - 1));\n            instrumentObject[\"ringModHz\"] = Math.round(100 * this.ringModulationHz / (Config.ringModHzRange - 1));\n            instrumentObject[\"ringModWaveformIndex\"] = this.ringModWaveformIndex;\n            instrumentObject[\"ringModPulseWidth\"] = Math.round(100 * this.ringModPulseWidth / (Config.pulseWidthRange - 1));\n            instrumentObject[\"ringModHzOffset\"] = Math.round(100 * this.ringModHzOffset / (Config.rmHzOffsetMax));\n        }\n        if (effectsIncludeDistortion(this.effects)) {\n            instrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\n            instrumentObject[\"aliases\"] = this.aliases;\n        }\n        if (effectsIncludeBitcrusher(this.effects)) {\n            instrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\n            instrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\n        }\n        if (effectsIncludePanning(this.effects)) {\n            instrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\n            instrumentObject[\"panDelay\"] = this.panDelay;\n        }\n        if (effectsIncludeChorus(this.effects)) {\n            instrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\n        }\n        if (effectsIncludeEcho(this.effects)) {\n            instrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\n            instrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\n        }\n        if (effectsIncludeReverb(this.effects)) {\n            instrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\n        }\n        if (this.type != 4) {\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\n            instrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\n        }\n        if (this.type == 5 || this.type == 7) {\n            instrumentObject[\"harmonics\"] = [];\n            for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\n            }\n        }\n        if (this.type == 2) {\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 3) {\n            instrumentObject[\"spectrum\"] = [];\n            for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\n            }\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 4) {\n            instrumentObject[\"drums\"] = [];\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            for (let j = 0; j < Config.drumCount; j++) {\n                const spectrum = [];\n                for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\n                }\n                instrumentObject[\"drums\"][j] = {\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\n                    \"spectrum\": spectrum,\n                };\n            }\n        }\n        else if (this.type == 0) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"isUsingAdvancedLoopControls\"] = this.isUsingAdvancedLoopControls;\n            instrumentObject[\"chipWaveLoopStart\"] = this.chipWaveLoopStart;\n            instrumentObject[\"chipWaveLoopEnd\"] = this.chipWaveLoopEnd;\n            instrumentObject[\"chipWaveLoopMode\"] = this.chipWaveLoopMode;\n            instrumentObject[\"chipWavePlayBackwards\"] = this.chipWavePlayBackwards;\n            instrumentObject[\"chipWaveStartOffset\"] = this.chipWaveStartOffset;\n        }\n        else if (this.type == 6) {\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 8) {\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n            instrumentObject[\"dynamism\"] = Math.round(100 * this.supersawDynamism / Config.supersawDynamismMax);\n            instrumentObject[\"spread\"] = Math.round(100 * this.supersawSpread / Config.supersawSpreadMax);\n            instrumentObject[\"shape\"] = Math.round(100 * this.supersawShape / Config.supersawShapeMax);\n        }\n        else if (this.type == 7) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\n            if (Config.enableAcousticSustain) {\n                instrumentObject[\"stringSustainType\"] = Config.sustainTypeNames[this.stringSustainType];\n            }\n        }\n        else if (this.type == 5) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 1 || this.type == 11) {\n            const operatorArray = [];\n            for (const operator of this.operators) {\n                operatorArray.push({\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\n                    \"amplitude\": operator.amplitude,\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\n                    \"pulseWidth\": operator.pulseWidth,\n                });\n            }\n            if (this.type == 1) {\n                instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                instrumentObject[\"operators\"] = operatorArray;\n            }\n            else {\n                instrumentObject[\"algorithm\"] = Config.algorithms6Op[this.algorithm6Op].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks6Op[this.feedbackType6Op].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                if (this.algorithm6Op == 0) {\n                    const customAlgorithm = {};\n                    customAlgorithm[\"mods\"] = this.customAlgorithm.modulatedBy;\n                    customAlgorithm[\"carrierCount\"] = this.customAlgorithm.carrierCount;\n                    instrumentObject[\"customAlgorithm\"] = customAlgorithm;\n                }\n                if (this.feedbackType6Op == 0) {\n                    const customFeedback = {};\n                    customFeedback[\"mods\"] = this.customFeedbackType.indices;\n                    instrumentObject[\"customFeedback\"] = customFeedback;\n                }\n                instrumentObject[\"operators\"] = operatorArray;\n            }\n        }\n        else if (this.type == 9) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\n            for (let i = 0; i < this.customChipWave.length; i++) {\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\n            }\n        }\n        else if (this.type == 10) {\n            instrumentObject[\"modChannels\"] = [];\n            instrumentObject[\"modInstruments\"] = [];\n            instrumentObject[\"modSettings\"] = [];\n            instrumentObject[\"modFilterTypes\"] = [];\n            instrumentObject[\"modEnvelopeNumbers\"] = [];\n            for (let mod = 0; mod < Config.modCount; mod++) {\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\n                instrumentObject[\"modFilterTypes\"][mod] = this.modFilterTypes[mod];\n                instrumentObject[\"modEnvelopeNumbers\"][mod] = this.modEnvelopeNumbers[mod];\n            }\n        }\n        else {\n            throw new Error(\"Unrecognized instrument type\");\n        }\n        const envelopes = [];\n        for (let i = 0; i < this.envelopeCount; i++) {\n            envelopes.push(this.envelopes[i].toJsonObject());\n        }\n        instrumentObject[\"envelopes\"] = envelopes;\n        return instrumentObject;\n    }\n    fromJsonObject(instrumentObject, isNoiseChannel, isModChannel, useSlowerRhythm, useFastTwoNoteArp, legacyGlobalReverb = 0, jsonFormat = Config.jsonFormat) {\n        if (instrumentObject == undefined)\n            instrumentObject = {};\n        const format = jsonFormat.toLowerCase();\n        let type = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\n        if ((format == \"synthbox\") && (instrumentObject[\"type\"] == \"FM\"))\n            type = Config.instrumentTypeNames.indexOf(\"FM6op\");\n        if (type == -1)\n            type = isModChannel ? 10 : (isNoiseChannel ? 2 : 0);\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\n        this.effects &= ~(1 << 2);\n        if (instrumentObject[\"preset\"] != undefined) {\n            this.preset = instrumentObject[\"preset\"] >>> 0;\n        }\n        if (instrumentObject[\"volume\"] != undefined) {\n            if (format == \"jummbox\" || format == \"midbox\" || format == \"synthbox\" || format == \"goldbox\" || format == \"paandorasbox\" || format == \"ultrabox\" || format == \"slarmoosbox\") {\n                this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\n            }\n            else {\n                this.volume = Math.round(-clamp(0, 8, Math.round(5 - (instrumentObject[\"volume\"] | 0) / 20)) * 25.0 / 7.0);\n            }\n        }\n        else {\n            this.volume = 0;\n        }\n        this.envelopeSpeed = instrumentObject[\"envelopeSpeed\"] != undefined ? clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, instrumentObject[\"envelopeSpeed\"] | 0) : 12;\n        if (Array.isArray(instrumentObject[\"effects\"])) {\n            let effects = 0;\n            for (let i = 0; i < instrumentObject[\"effects\"].length; i++) {\n                effects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\n            }\n            this.effects = (effects & ((1 << 15) - 1));\n        }\n        else {\n            const legacyEffectsNames = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\n            this.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\n            if (this.effects == -1)\n                this.effects = (this.type == 2) ? 0 : 1;\n        }\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        const transitionProperty = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"];\n        if (transitionProperty != undefined) {\n            let transition = Config.transitions.dictionary[transitionProperty];\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\n                const legacySettings = {\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                }[transitionProperty];\n                if (legacySettings != undefined) {\n                    transition = Config.transitions.dictionary[legacySettings.transition];\n                    this.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\n                    this.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\n                }\n            }\n            if (transition != undefined)\n                this.transition = transition.index;\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\n                this.effects = (this.effects | (1 << 10));\n            }\n        }\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\n            this.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\n        }\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\n            this.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\n        }\n        {\n            const chordProperty = instrumentObject[\"chord\"];\n            const legacyChordNames = { \"harmony\": \"simultaneous\" };\n            const chord = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\n            if (chord != undefined) {\n                this.chord = chord.index;\n            }\n            else {\n                if (this.type == 2) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                }\n                else if (this.type == 7) {\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\n                }\n                else if (this.type == 0) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                }\n                else if (this.type == 1 || this.type == 11) {\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                }\n                else {\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                }\n            }\n        }\n        this.unison = Config.unisons.dictionary[\"none\"].index;\n        const unisonProperty = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"];\n        if (unisonProperty != undefined) {\n            const legacyChorusNames = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\", \"error\": \"voiced\" };\n            const unison = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\n            if (unison != undefined)\n                this.unison = unison.index;\n            if (unisonProperty == \"custom\")\n                this.unison = Config.unisons.length;\n        }\n        this.unisonVoices = (instrumentObject[\"unisonVoices\"] == undefined) ? Config.unisons[this.unison].voices : instrumentObject[\"unisonVoices\"];\n        this.unisonSpread = (instrumentObject[\"unisonSpread\"] == undefined) ? Config.unisons[this.unison].spread : instrumentObject[\"unisonSpread\"];\n        this.unisonOffset = (instrumentObject[\"unisonOffset\"] == undefined) ? Config.unisons[this.unison].offset : instrumentObject[\"unisonOffset\"];\n        this.unisonExpression = (instrumentObject[\"unisonExpression\"] == undefined) ? Config.unisons[this.unison].expression : instrumentObject[\"unisonExpression\"];\n        this.unisonSign = (instrumentObject[\"unisonSign\"] == undefined) ? Config.unisons[this.unison].sign : instrumentObject[\"unisonSign\"];\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\n        }\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\n            this.effects = (this.effects | (1 << 11));\n        }\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\n        }\n        if (instrumentObject[\"octoff\"] != undefined) {\n            let potentialPitchShift = instrumentObject[\"octoff\"];\n            this.effects = (this.effects | (1 << 7));\n            if ((potentialPitchShift == \"+1 (octave)\") || (potentialPitchShift == \"+2 (2 octaves)\")) {\n                this.pitchShift = 24;\n            }\n            else if ((potentialPitchShift == \"+1/2 (fifth)\") || (potentialPitchShift == \"+1 1/2 (octave and fifth)\")) {\n                this.pitchShift = 18;\n            }\n            else if ((potentialPitchShift == \"-1 (octave)\") || (potentialPitchShift == \"-2 (2 octaves\")) {\n                this.pitchShift = 0;\n            }\n            else if ((potentialPitchShift == \"-1/2 (fifth)\") || (potentialPitchShift == \"-1 1/2 (octave and fifth)\")) {\n                this.pitchShift = 6;\n            }\n            else {\n                this.pitchShift = 12;\n            }\n        }\n        if (instrumentObject[\"detuneCents\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\n        }\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index;\n        const vibratoProperty = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"];\n        if (vibratoProperty != undefined) {\n            const legacyVibratoNames = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\n            const vibrato = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\n            if (vibrato != undefined)\n                this.vibrato = vibrato.index;\n            else if (vibratoProperty == \"custom\")\n                this.vibrato = Config.vibratos.length;\n            if (this.vibrato == Config.vibratos.length) {\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\n                this.vibratoType = instrumentObject[\"vibratoType\"];\n            }\n            else {\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\n                this.vibratoSpeed = 10;\n                this.vibratoType = Config.vibratos[this.vibrato].type;\n            }\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\n                this.effects = (this.effects | (1 << 9));\n            }\n        }\n        if (instrumentObject[\"pan\"] != undefined) {\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\n        }\n        else if (instrumentObject[\"ipan\"] != undefined) {\n            this.pan = clamp(0, Config.panMax + 1, Config.panCenter + (instrumentObject[\"ipan\"] * -50));\n        }\n        else {\n            this.pan = Config.panCenter;\n        }\n        if (this.pan != Config.panCenter) {\n            this.effects = (this.effects | (1 << 2));\n        }\n        if (instrumentObject[\"panDelay\"] != undefined) {\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\n        }\n        else {\n            this.panDelay = 0;\n        }\n        if (instrumentObject[\"detune\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\n        }\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\n            this.detune = Config.detuneCenter;\n        }\n        if (instrumentObject[\"ringMod\"] != undefined) {\n            this.ringModulation = clamp(0, Config.ringModRange, Math.round((Config.ringModRange - 1) * (instrumentObject[\"ringMod\"] | 0) / 100));\n        }\n        if (instrumentObject[\"ringModHz\"] != undefined) {\n            this.ringModulationHz = clamp(0, Config.ringModHzRange, Math.round((Config.ringModHzRange - 1) * (instrumentObject[\"ringModHz\"] | 0) / 100));\n        }\n        if (instrumentObject[\"ringModWaveformIndex\"] != undefined) {\n            this.ringModWaveformIndex = clamp(0, Config.operatorWaves.length, instrumentObject[\"ringModWaveformIndex\"]);\n        }\n        if (instrumentObject[\"ringModPulseWidth\"] != undefined) {\n            this.ringModPulseWidth = clamp(0, Config.pulseWidthRange, Math.round((Config.pulseWidthRange - 1) * (instrumentObject[\"ringModPulseWidth\"] | 0) / 100));\n        }\n        if (instrumentObject[\"ringModHzOffset\"] != undefined) {\n            this.ringModHzOffset = clamp(0, Config.rmHzOffsetMax, Math.round((Config.rmHzOffsetMax - 1) * (instrumentObject[\"ringModHzOffset\"] | 0) / 100));\n        }\n        if (instrumentObject[\"granular\"] != undefined) {\n            this.granular = instrumentObject[\"granular\"];\n        }\n        if (instrumentObject[\"grainSize\"] != undefined) {\n            this.grainSize = instrumentObject[\"grainSize\"];\n        }\n        if (instrumentObject[\"grainAmounts\"] != undefined) {\n            this.grainAmounts = instrumentObject[\"grainAmounts\"];\n        }\n        if (instrumentObject[\"grainRange\"] != undefined) {\n            this.grainRange = clamp(0, Config.grainRangeMax / Config.grainSizeStep + 1, instrumentObject[\"grainRange\"]);\n        }\n        if (instrumentObject[\"distortion\"] != undefined) {\n            this.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\n        }\n        if (instrumentObject[\"bitcrusherOctave\"] != undefined) {\n            this.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\n        }\n        if (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\n            this.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\n        }\n        if (instrumentObject[\"echoSustain\"] != undefined) {\n            this.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\n        }\n        if (instrumentObject[\"echoDelayBeats\"] != undefined) {\n            this.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\n        }\n        if (!isNaN(instrumentObject[\"chorus\"])) {\n            this.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\n        }\n        if (instrumentObject[\"reverb\"] != undefined) {\n            this.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\n        }\n        else {\n            this.reverb = legacyGlobalReverb;\n        }\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\n        }\n        else {\n            this.pulseWidth = Config.pulseWidthRange;\n        }\n        if (instrumentObject[\"decimalOffset\"] != undefined) {\n            this.decimalOffset = clamp(0, 99 + 1, Math.round(instrumentObject[\"decimalOffset\"]));\n        }\n        else {\n            this.decimalOffset = 0;\n        }\n        if (instrumentObject[\"dynamism\"] != undefined) {\n            this.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, Math.round(Config.supersawDynamismMax * (instrumentObject[\"dynamism\"] | 0) / 100));\n        }\n        else {\n            this.supersawDynamism = Config.supersawDynamismMax;\n        }\n        if (instrumentObject[\"spread\"] != undefined) {\n            this.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, Math.round(Config.supersawSpreadMax * (instrumentObject[\"spread\"] | 0) / 100));\n        }\n        else {\n            this.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n        }\n        if (instrumentObject[\"shape\"] != undefined) {\n            this.supersawShape = clamp(0, Config.supersawShapeMax + 1, Math.round(Config.supersawShapeMax * (instrumentObject[\"shape\"] | 0) / 100));\n        }\n        else {\n            this.supersawShape = 0;\n        }\n        if (instrumentObject[\"harmonics\"] != undefined) {\n            for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\n            }\n            this.harmonicsWave.markCustomWaveDirty();\n        }\n        else {\n            this.harmonicsWave.reset();\n        }\n        if (instrumentObject[\"spectrum\"] != undefined) {\n            for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\n                this.spectrumWave.markCustomWaveDirty();\n            }\n        }\n        else {\n            this.spectrumWave.reset(isNoiseChannel);\n        }\n        if (instrumentObject[\"stringSustain\"] != undefined) {\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\n        }\n        else {\n            this.stringSustain = 10;\n        }\n        this.stringSustainType = Config.enableAcousticSustain ? Config.sustainTypeNames.indexOf(instrumentObject[\"stringSustainType\"]) : 0;\n        if (this.stringSustainType == -1)\n            this.stringSustainType = 0;\n        if (this.type == 2) {\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            if (instrumentObject[\"wave\"] == \"pink noise\")\n                this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"pink\");\n            if (instrumentObject[\"wave\"] == \"brownian noise\")\n                this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"brownian\");\n            if (this.chipNoise == -1)\n                this.chipNoise = 1;\n        }\n        const legacyEnvelopeNames = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\n        const getEnvelope = (name) => {\n            if (legacyEnvelopeNames[name] != undefined)\n                return Config.envelopes.dictionary[legacyEnvelopeNames[name]];\n            else {\n                return Config.envelopes.dictionary[name];\n            }\n        };\n        if (this.type == 4) {\n            if (instrumentObject[\"drums\"] != undefined) {\n                for (let j = 0; j < Config.drumCount; j++) {\n                    const drum = instrumentObject[\"drums\"][j];\n                    if (drum == undefined)\n                        continue;\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index;\n                    if (drum[\"filterEnvelope\"] != undefined) {\n                        const envelope = getEnvelope(drum[\"filterEnvelope\"]);\n                        if (envelope != undefined)\n                            this.drumsetEnvelopes[j] = envelope.index;\n                    }\n                    if (drum[\"spectrum\"] != undefined) {\n                        for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\n                        }\n                    }\n                    this.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                }\n            }\n        }\n        if (this.type == 0) {\n            const legacyWaveNames = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\n            const modboxWaveNames = { \"10% pulse\": 22, \"sunsoft bass\": 23, \"loud pulse\": 24, \"sax\": 25, \"guitar\": 26, \"atari bass\": 28, \"atari pulse\": 29, \"1% pulse\": 30, \"curved sawtooth\": 31, \"viola\": 32, \"brass\": 33, \"acoustic bass\": 34, \"lyre\": 35, \"ramp pulse\": 36, \"piccolo\": 37, \"squaretooth\": 38, \"flatline\": 39, \"pnryshk a (u5)\": 40, \"pnryshk b (riff)\": 41 };\n            const sandboxWaveNames = { \"shrill lute\": 42, \"shrill bass\": 44, \"nes pulse\": 45, \"saw bass\": 46, \"euphonium\": 47, \"shrill pulse\": 48, \"r-sawtooth\": 49, \"recorder\": 50, \"narrow saw\": 51, \"deep square\": 52, \"ring pulse\": 53, \"double sine\": 54, \"contrabass\": 55, \"double bass\": 56 };\n            const zefboxWaveNames = { \"semi-square\": 63, \"deep square\": 64, \"squaretal\": 40, \"saw wide\": 65, \"saw narrow \": 66, \"deep sawtooth\": 67, \"sawtal\": 68, \"pulse\": 69, \"triple pulse\": 70, \"high pulse\": 71, \"deep pulse\": 72 };\n            const miscWaveNames = { \"test1\": 56, \"pokey 4bit lfsr\": 57, \"pokey 5step bass\": 58, \"isolated spiky\": 59, \"unnamed 1\": 60, \"unnamed 2\": 61, \"guitar string\": 75, \"intense\": 76, \"buzz wave\": 77, \"pokey square\": 57, \"pokey bass\": 58, \"banana wave\": 83, \"test 1\": 84, \"test 2\": 84, \"real snare\": 85, \"earthbound o. guitar\": 86 };\n            const paandorasboxWaveNames = { \"kick\": 87, \"snare\": 88, \"piano1\": 89, \"WOW\": 90, \"overdrive\": 91, \"trumpet\": 92, \"saxophone\": 93, \"orchestrahit\": 94, \"detached violin\": 95, \"synth\": 96, \"sonic3snare\": 97, \"come on\": 98, \"choir\": 99, \"overdriveguitar\": 100, \"flute\": 101, \"legato violin\": 102, \"tremolo violin\": 103, \"amen break\": 104, \"pizzicato violin\": 105, \"tim allen grunt\": 106, \"tuba\": 107, \"loopingcymbal\": 108, \"standardkick\": 109, \"standardsnare\": 110, \"closedhihat\": 111, \"foothihat\": 112, \"openhihat\": 113, \"crashcymbal\": 114, \"pianoC4\": 115, \"liver pad\": 116, \"marimba\": 117, \"susdotwav\": 118, \"wackyboxtts\": 119 };\n            this.chipWave = -1;\n            const rawName = instrumentObject[\"wave\"];\n            for (const table of [\n                legacyWaveNames,\n                modboxWaveNames,\n                sandboxWaveNames,\n                zefboxWaveNames,\n                miscWaveNames,\n                paandorasboxWaveNames\n            ]) {\n                if (this.chipWave == -1 && table[rawName] != undefined && Config.chipWaves[table[rawName]] != undefined) {\n                    this.chipWave = table[rawName];\n                    break;\n                }\n            }\n            if (this.chipWave == -1) {\n                const potentialChipWaveIndex = Config.chipWaves.findIndex(wave => wave.name == rawName);\n                if (potentialChipWaveIndex != -1)\n                    this.chipWave = potentialChipWaveIndex;\n            }\n            if (this.chipWave == -1)\n                this.chipWave = 1;\n        }\n        if (this.type == 1 || this.type == 11) {\n            if (this.type == 1) {\n                this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm == -1)\n                    this.algorithm = 0;\n                this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType == -1)\n                    this.feedbackType = 0;\n            }\n            else {\n                this.algorithm6Op = Config.algorithms6Op.findIndex(algorithm6Op => algorithm6Op.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm6Op == -1)\n                    this.algorithm6Op = 1;\n                if (this.algorithm6Op == 0) {\n                    this.customAlgorithm.set(instrumentObject[\"customAlgorithm\"][\"carrierCount\"], instrumentObject[\"customAlgorithm\"][\"mods\"]);\n                }\n                else {\n                    this.customAlgorithm.fromPreset(this.algorithm6Op);\n                }\n                this.feedbackType6Op = Config.feedbacks6Op.findIndex(feedback6Op => feedback6Op.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType6Op == -1) {\n                    let synthboxLegacyFeedbacks = toNameMap([\n                        { name: \"2⟲ 3⟲\", indices: [[], [2], [3], [], [], []] },\n                        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\n                        { name: \"4⟲ 5⟲\", indices: [[], [], [], [4], [5], []] },\n                        { name: \"5⟲ 6⟲\", indices: [[], [], [], [], [5], [6]] },\n                        { name: \"1⟲ 6⟲\", indices: [[1], [], [], [], [], [6]] },\n                        { name: \"1⟲ 3⟲\", indices: [[1], [], [3], [], [], []] },\n                        { name: \"1⟲ 4⟲\", indices: [[1], [], [], [4], [], []] },\n                        { name: \"1⟲ 5⟲\", indices: [[1], [], [], [], [5], []] },\n                        { name: \"4⟲ 6⟲\", indices: [[], [], [], [4], [], [6]] },\n                        { name: \"2⟲ 6⟲\", indices: [[], [2], [], [], [], [6]] },\n                        { name: \"3⟲ 6⟲\", indices: [[], [], [3], [], [], [6]] },\n                        { name: \"4⟲ 5⟲ 6⟲\", indices: [[], [], [], [4], [5], [6]] },\n                        { name: \"1⟲ 3⟲ 6⟲\", indices: [[1], [], [3], [], [], [6]] },\n                        { name: \"2→5\", indices: [[], [], [], [], [2], []] },\n                        { name: \"2→6\", indices: [[], [], [], [], [], [2]] },\n                        { name: \"3→5\", indices: [[], [], [], [], [3], []] },\n                        { name: \"3→6\", indices: [[], [], [], [], [], [3]] },\n                        { name: \"4→6\", indices: [[], [], [], [], [], [4]] },\n                        { name: \"5→6\", indices: [[], [], [], [], [], [5]] },\n                        { name: \"1→3→4\", indices: [[], [], [1], [], [3], []] },\n                        { name: \"2→5→6\", indices: [[], [], [], [], [2], [5]] },\n                        { name: \"2→4→6\", indices: [[], [], [], [2], [], [4]] },\n                        { name: \"4→5→6\", indices: [[], [], [], [], [4], [5]] },\n                        { name: \"3→4→5→6\", indices: [[], [], [], [3], [4], [5]] },\n                        { name: \"2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n                        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n                    ]);\n                    let synthboxFeedbackType = synthboxLegacyFeedbacks[synthboxLegacyFeedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"])].indices;\n                    if (synthboxFeedbackType != undefined) {\n                        this.feedbackType6Op = 0;\n                        this.customFeedbackType.set(synthboxFeedbackType);\n                    }\n                    else {\n                        this.feedbackType6Op = 1;\n                    }\n                }\n                if ((this.feedbackType6Op == 0) && (instrumentObject[\"customFeedback\"] != undefined)) {\n                    this.customFeedbackType.set(instrumentObject[\"customFeedback\"][\"mods\"]);\n                }\n                else {\n                    this.customFeedbackType.fromPreset(this.feedbackType6Op);\n                }\n            }\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\n            }\n            else {\n                this.feedbackAmplitude = 0;\n            }\n            for (let j = 0; j < Config.operatorCount + (this.type == 11 ? 2 : 0); j++) {\n                const operator = this.operators[j];\n                let operatorObject = undefined;\n                if (instrumentObject[\"operators\"] != undefined)\n                    operatorObject = instrumentObject[\"operators\"][j];\n                if (operatorObject == undefined)\n                    operatorObject = {};\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\n                if (operator.frequency == -1)\n                    operator.frequency = 0;\n                if (operatorObject[\"amplitude\"] != undefined) {\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\n                }\n                else {\n                    operator.amplitude = 0;\n                }\n                if (operatorObject[\"waveform\"] != undefined) {\n                    if (format == \"goldbox\" && j > 3) {\n                        operator.waveform = 0;\n                        continue;\n                    }\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\n                    if (operator.waveform == -1) {\n                        if (operatorObject[\"waveform\"] == \"square\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\n                            operator.pulseWidth = 5;\n                        }\n                        else if (operatorObject[\"waveform\"] == \"rounded\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"quasi-sine\"].index;\n                        }\n                        else {\n                            operator.waveform = 0;\n                        }\n                    }\n                }\n                else {\n                    operator.waveform = 0;\n                }\n                if (operatorObject[\"pulseWidth\"] != undefined) {\n                    operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\n                }\n                else {\n                    operator.pulseWidth = 5;\n                }\n            }\n        }\n        else if (this.type == 9) {\n            if (instrumentObject[\"customChipWave\"]) {\n                for (let i = 0; i < 64; i++) {\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\n                }\n                let sum = 0.0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average = sum / this.customChipWave.length;\n                let cumulative = 0;\n                let wavePrev = 0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n                this.customChipWaveIntegral[64] = 0.0;\n            }\n        }\n        else if (this.type == 10) {\n            if (instrumentObject[\"modChannels\"] != undefined) {\n                for (let mod = 0; mod < Config.modCount; mod++) {\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\n                    if (instrumentObject[\"modFilterTypes\"] != undefined)\n                        this.modFilterTypes[mod] = instrumentObject[\"modFilterTypes\"][mod];\n                    if (instrumentObject[\"modEnvelopeNumbers\"] != undefined)\n                        this.modEnvelopeNumbers[mod] = instrumentObject[\"modEnvelopeNumbers\"][mod];\n                }\n            }\n        }\n        if (this.type != 10) {\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\n            }\n            else {\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12;\n            }\n            if (this.chord == Config.chords.dictionary[\"monophonic\"].index && instrumentObject[\"monoChordTone\"] != undefined) {\n                this.monoChordTone = instrumentObject[\"monoChordTone\"];\n            }\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\n            }\n            else {\n                this.fastTwoNoteArp = useFastTwoNoteArp;\n            }\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\n            }\n            else {\n                this.clicklessTransition = false;\n            }\n            if (instrumentObject[\"aliases\"] != undefined) {\n                this.aliases = instrumentObject[\"aliases\"];\n            }\n            else {\n                if (format == \"modbox\") {\n                    this.effects = (this.effects | (1 << 3));\n                    this.aliases = true;\n                    this.distortion = 0;\n                }\n                else {\n                    this.aliases = false;\n                }\n            }\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\n            }\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\n            }\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\n            }\n            if (instrumentObject[\"noteFilter\"] != undefined) {\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\n            }\n            else {\n                this.noteFilter.reset();\n            }\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\n                    this.noteSubFilters[i] = new FilterSettings();\n                    this.noteSubFilters[i].fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\n                }\n            }\n            if (instrumentObject[\"eqFilterType\"] != undefined) {\n                this.eqFilterType = instrumentObject[\"eqFilterType\"];\n            }\n            if (instrumentObject[\"eqSimpleCut\"] != undefined) {\n                this.eqFilterSimpleCut = instrumentObject[\"eqSimpleCut\"];\n            }\n            if (instrumentObject[\"eqSimplePeak\"] != undefined) {\n                this.eqFilterSimplePeak = instrumentObject[\"eqSimplePeak\"];\n            }\n            if (Array.isArray(instrumentObject[\"eqFilter\"])) {\n                this.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\n            }\n            else {\n                this.eqFilter.reset();\n                const legacySettings = {};\n                const filterCutoffMaxHz = 8000;\n                const filterCutoffRange = 11;\n                const filterResonanceRange = 8;\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\n                }\n                else {\n                    legacySettings.filterCutoff = (this.type == 0) ? 6 : 10;\n                }\n                if (instrumentObject[\"filterResonance\"] != undefined) {\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\n                }\n                else {\n                    legacySettings.filterResonance = 0;\n                }\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\n                if (Array.isArray(instrumentObject[\"operators\"])) {\n                    legacySettings.operatorEnvelopes = [];\n                    for (let j = 0; j < Config.operatorCount + (this.type == 11 ? 2 : 0); j++) {\n                        let envelope;\n                        if (instrumentObject[\"operators\"][j] != undefined) {\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\n                        }\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\n                    }\n                }\n                if (instrumentObject[\"filter\"] != undefined) {\n                    const legacyToCutoff = [10, 6, 3, 0, 8, 5, 2];\n                    const legacyToEnvelope = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n                    const filterNames = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\n                    const oldFilterNames = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\n                    let legacyFilter = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\n                    if (legacyFilter == -1)\n                        legacyFilter = 0;\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\n                    legacySettings.filterResonance = 0;\n                }\n                this.convertLegacySettings(legacySettings, true);\n            }\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"eqSubFilters\" + i])) {\n                    this.eqSubFilters[i] = new FilterSettings();\n                    this.eqSubFilters[i].fromJsonObject(instrumentObject[\"eqSubFilters\" + i]);\n                }\n            }\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\n                const envelopeArray = instrumentObject[\"envelopes\"];\n                for (let i = 0; i < envelopeArray.length; i++) {\n                    if (this.envelopeCount >= Config.maxEnvelopeCount)\n                        break;\n                    const tempEnvelope = new EnvelopeSettings(this.isNoiseInstrument);\n                    tempEnvelope.fromJsonObject(envelopeArray[i], format);\n                    let pitchEnvelopeStart;\n                    if (instrumentObject[\"pitchEnvelopeStart\"] != undefined && instrumentObject[\"pitchEnvelopeStart\"] != null) {\n                        pitchEnvelopeStart = instrumentObject[\"pitchEnvelopeStart\"];\n                    }\n                    else if (instrumentObject[\"pitchEnvelopeStart\" + i] != undefined && instrumentObject[\"pitchEnvelopeStart\" + i] != undefined) {\n                        pitchEnvelopeStart = instrumentObject[\"pitchEnvelopeStart\" + i];\n                    }\n                    else {\n                        pitchEnvelopeStart = tempEnvelope.pitchEnvelopeStart;\n                    }\n                    let pitchEnvelopeEnd;\n                    if (instrumentObject[\"pitchEnvelopeEnd\"] != undefined && instrumentObject[\"pitchEnvelopeEnd\"] != null) {\n                        pitchEnvelopeEnd = instrumentObject[\"pitchEnvelopeEnd\"];\n                    }\n                    else if (instrumentObject[\"pitchEnvelopeEnd\" + i] != undefined && instrumentObject[\"pitchEnvelopeEnd\" + i] != null) {\n                        pitchEnvelopeEnd = instrumentObject[\"pitchEnvelopeEnd\" + i];\n                    }\n                    else {\n                        pitchEnvelopeEnd = tempEnvelope.pitchEnvelopeEnd;\n                    }\n                    let envelopeInverse;\n                    if (instrumentObject[\"envelopeInverse\" + i] != undefined && instrumentObject[\"envelopeInverse\" + i] != null) {\n                        envelopeInverse = instrumentObject[\"envelopeInverse\" + i];\n                    }\n                    else if (instrumentObject[\"pitchEnvelopeInverse\"] != undefined && instrumentObject[\"pitchEnvelopeInverse\"] != null && Config.envelopes[tempEnvelope.envelope].name == \"pitch\") {\n                        envelopeInverse = instrumentObject[\"pitchEnvelopeInverse\"];\n                    }\n                    else {\n                        envelopeInverse = tempEnvelope.inverse;\n                    }\n                    let discreteEnvelope;\n                    if (instrumentObject[\"discreteEnvelope\"] != undefined) {\n                        discreteEnvelope = instrumentObject[\"discreteEnvelope\"];\n                    }\n                    else {\n                        discreteEnvelope = tempEnvelope.discrete;\n                    }\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope, true, pitchEnvelopeStart, pitchEnvelopeEnd, envelopeInverse, tempEnvelope.perEnvelopeSpeed, tempEnvelope.perEnvelopeLowerBound, tempEnvelope.perEnvelopeUpperBound, tempEnvelope.steps, tempEnvelope.seed, tempEnvelope.waveform, discreteEnvelope);\n                }\n            }\n        }\n        if (type === 0) {\n            if (instrumentObject[\"isUsingAdvancedLoopControls\"] != undefined) {\n                this.isUsingAdvancedLoopControls = instrumentObject[\"isUsingAdvancedLoopControls\"];\n                this.chipWaveLoopStart = instrumentObject[\"chipWaveLoopStart\"];\n                this.chipWaveLoopEnd = instrumentObject[\"chipWaveLoopEnd\"];\n                this.chipWaveLoopMode = instrumentObject[\"chipWaveLoopMode\"];\n                this.chipWavePlayBackwards = instrumentObject[\"chipWavePlayBackwards\"];\n                this.chipWaveStartOffset = instrumentObject[\"chipWaveStartOffset\"];\n            }\n            else {\n                this.isUsingAdvancedLoopControls = false;\n                this.chipWaveLoopStart = 0;\n                this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                this.chipWaveLoopMode = 0;\n                this.chipWavePlayBackwards = false;\n                this.chipWaveStartOffset = 0;\n            }\n        }\n    }\n    getLargestControlPointCount(forNoteFilter) {\n        let largest;\n        if (forNoteFilter) {\n            largest = this.noteFilter.controlPointCount;\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null && this.noteSubFilters[i].controlPointCount > largest)\n                    largest = this.noteSubFilters[i].controlPointCount;\n            }\n        }\n        else {\n            largest = this.eqFilter.controlPointCount;\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (this.eqSubFilters[i] != null && this.eqSubFilters[i].controlPointCount > largest)\n                    largest = this.eqSubFilters[i].controlPointCount;\n            }\n        }\n        return largest;\n    }\n    static frequencyFromPitch(pitch) {\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\n    }\n    addEnvelope(target, index, envelope, newEnvelopes, start = 0, end = -1, inverse = false, perEnvelopeSpeed = -1, perEnvelopeLowerBound = 0, perEnvelopeUpperBound = 1, steps = 2, seed = 2, waveform = 0, discrete = false) {\n        end = end != -1 ? end : this.isNoiseInstrument ? Config.drumCount - 1 : Config.maxPitch;\n        perEnvelopeSpeed = perEnvelopeSpeed != -1 ? perEnvelopeSpeed : newEnvelopes ? 1 : Config.envelopes[envelope].speed;\n        let makeEmpty = false;\n        if (!this.supportsEnvelopeTarget(target, index))\n            makeEmpty = true;\n        if (this.envelopeCount >= Config.maxEnvelopeCount)\n            throw new Error();\n        while (this.envelopes.length <= this.envelopeCount)\n            this.envelopes[this.envelopes.length] = new EnvelopeSettings(this.isNoiseInstrument);\n        const envelopeSettings = this.envelopes[this.envelopeCount];\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\n        envelopeSettings.index = makeEmpty ? 0 : index;\n        if (!newEnvelopes) {\n            envelopeSettings.envelope = clamp(0, Config.newEnvelopes.length, Config.envelopes[envelope].type);\n        }\n        else {\n            envelopeSettings.envelope = envelope;\n        }\n        envelopeSettings.pitchEnvelopeStart = start;\n        envelopeSettings.pitchEnvelopeEnd = end;\n        envelopeSettings.inverse = inverse;\n        envelopeSettings.perEnvelopeSpeed = perEnvelopeSpeed;\n        envelopeSettings.perEnvelopeLowerBound = perEnvelopeLowerBound;\n        envelopeSettings.perEnvelopeUpperBound = perEnvelopeUpperBound;\n        envelopeSettings.steps = steps;\n        envelopeSettings.seed = seed;\n        envelopeSettings.waveform = waveform;\n        envelopeSettings.discrete = discrete;\n        this.envelopeCount++;\n    }\n    supportsEnvelopeTarget(target, index) {\n        const automationTarget = Config.instrumentAutomationTargets[target];\n        if (automationTarget.computeIndex == null && automationTarget.name != \"none\") {\n            return false;\n        }\n        if (index >= automationTarget.maxCount) {\n            return false;\n        }\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\n            return false;\n        }\n        if (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\n            return false;\n        }\n        if (automationTarget.name == \"arpeggioSpeed\") {\n            return effectsIncludeChord(this.effects) && this.chord == Config.chords.dictionary[\"arpeggio\"].index;\n        }\n        if (automationTarget.isFilter) {\n            let useControlPointCount = this.noteFilter.controlPointCount;\n            if (this.noteFilterType)\n                useControlPointCount = 1;\n            if (index >= useControlPointCount)\n                return false;\n        }\n        if ((automationTarget.name == \"operatorFrequency\") || (automationTarget.name == \"operatorAmplitude\")) {\n            if (index >= 4 + (this.type == 11 ? 2 : 0))\n                return false;\n        }\n        return true;\n    }\n    clearInvalidEnvelopeTargets() {\n        for (let envelopeIndex = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\n            const target = this.envelopes[envelopeIndex].target;\n            const index = this.envelopes[envelopeIndex].index;\n            if (!this.supportsEnvelopeTarget(target, index)) {\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                this.envelopes[envelopeIndex].index = 0;\n            }\n        }\n    }\n    getTransition() {\n        return effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] :\n            (this.type == 10 ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\n    }\n    getFadeInSeconds() {\n        return (this.type == 4) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\n    }\n    getFadeOutTicks() {\n        return (this.type == 4) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut);\n    }\n    getChord() {\n        return effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\n    }\n    getDrumsetEnvelope(pitch) {\n        if (this.type != 4)\n            throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\n    }\n}\nexport class Channel {\n    constructor() {\n        this.octave = 0;\n        this.instruments = [];\n        this.patterns = [];\n        this.bars = [];\n        this.muted = false;\n        this.name = \"\";\n    }\n}\nexport class Song {\n    constructor(string) {\n        this.scaleCustom = [];\n        this.channels = [];\n        this.limitDecay = 4.0;\n        this.limitRise = 4000.0;\n        this.compressionThreshold = 1.0;\n        this.limitThreshold = 1.0;\n        this.compressionRatio = 1.0;\n        this.limitRatio = 1.0;\n        this.masterGain = 1.0;\n        this.inVolumeCap = 0.0;\n        this.outVolumeCap = 0.0;\n        this.eqFilter = new FilterSettings();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        this.eqSubFilters = [];\n        this.getNewNoteVolume = (isMod, modChannel, modInstrument, modCount) => {\n            if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n                return Config.noteSizeMax;\n            else {\n                modCount = Config.modCount - modCount - 1;\n                const instrument = this.channels[modChannel].instruments[modInstrument];\n                let vol = Config.modulators[instrument.modulators[modCount]].newNoteVol;\n                let currentIndex = instrument.modulators[modCount];\n                let tempoIndex = Config.modulators.dictionary[\"tempo\"].index;\n                if (currentIndex == tempoIndex)\n                    vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\n                if (!Config.modulators[currentIndex].forSong && instrument.modInstruments[modCount] < this.channels[instrument.modChannels[modCount]].instruments.length) {\n                    let chorusIndex = Config.modulators.dictionary[\"chorus\"].index;\n                    let reverbIndex = Config.modulators.dictionary[\"reverb\"].index;\n                    let panningIndex = Config.modulators.dictionary[\"pan\"].index;\n                    let panDelayIndex = Config.modulators.dictionary[\"pan delay\"].index;\n                    let distortionIndex = Config.modulators.dictionary[\"distortion\"].index;\n                    let detuneIndex = Config.modulators.dictionary[\"detune\"].index;\n                    let vibratoDepthIndex = Config.modulators.dictionary[\"vibrato depth\"].index;\n                    let vibratoSpeedIndex = Config.modulators.dictionary[\"vibrato speed\"].index;\n                    let vibratoDelayIndex = Config.modulators.dictionary[\"vibrato delay\"].index;\n                    let arpSpeedIndex = Config.modulators.dictionary[\"arp speed\"].index;\n                    let bitCrushIndex = Config.modulators.dictionary[\"bit crush\"].index;\n                    let freqCrushIndex = Config.modulators.dictionary[\"freq crush\"].index;\n                    let echoIndex = Config.modulators.dictionary[\"echo\"].index;\n                    let echoDelayIndex = Config.modulators.dictionary[\"echo delay\"].index;\n                    let pitchShiftIndex = Config.modulators.dictionary[\"pitch shift\"].index;\n                    let ringModIndex = Config.modulators.dictionary[\"ring modulation\"].index;\n                    let ringModHertzIndex = Config.modulators.dictionary[\"ring mod hertz\"].index;\n                    let granularIndex = Config.modulators.dictionary[\"granular\"].index;\n                    let grainAmountIndex = Config.modulators.dictionary[\"grain freq\"].index;\n                    let grainSizeIndex = Config.modulators.dictionary[\"grain size\"].index;\n                    let grainRangeIndex = Config.modulators.dictionary[\"grain range\"].index;\n                    let envSpeedIndex = Config.modulators.dictionary[\"envelope speed\"].index;\n                    let perEnvSpeedIndex = Config.modulators.dictionary[\"individual envelope speed\"].index;\n                    let perEnvLowerIndex = Config.modulators.dictionary[\"individual envelope lower bound\"].index;\n                    let perEnvUpperIndex = Config.modulators.dictionary[\"individual envelope upper bound\"].index;\n                    let instrumentIndex = instrument.modInstruments[modCount];\n                    switch (currentIndex) {\n                        case chorusIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].chorus - Config.modulators[chorusIndex].convertRealFactor;\n                            break;\n                        case reverbIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].reverb - Config.modulators[reverbIndex].convertRealFactor;\n                            break;\n                        case panningIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].pan - Config.modulators[panningIndex].convertRealFactor;\n                            break;\n                        case panDelayIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].panDelay - Config.modulators[panDelayIndex].convertRealFactor;\n                            break;\n                        case distortionIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].distortion - Config.modulators[distortionIndex].convertRealFactor;\n                            break;\n                        case detuneIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].detune;\n                            break;\n                        case vibratoDepthIndex:\n                            vol = Math.round(this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].vibratoDepth * 25 - Config.modulators[vibratoDepthIndex].convertRealFactor);\n                            break;\n                        case vibratoSpeedIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].vibratoSpeed - Config.modulators[vibratoSpeedIndex].convertRealFactor;\n                            break;\n                        case vibratoDelayIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].vibratoDelay - Config.modulators[vibratoDelayIndex].convertRealFactor;\n                            break;\n                        case arpSpeedIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].arpeggioSpeed - Config.modulators[arpSpeedIndex].convertRealFactor;\n                            break;\n                        case bitCrushIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].bitcrusherQuantization - Config.modulators[bitCrushIndex].convertRealFactor;\n                            break;\n                        case freqCrushIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].bitcrusherFreq - Config.modulators[freqCrushIndex].convertRealFactor;\n                            break;\n                        case echoIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].echoSustain - Config.modulators[echoIndex].convertRealFactor;\n                            break;\n                        case echoDelayIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].echoDelay - Config.modulators[echoDelayIndex].convertRealFactor;\n                            break;\n                        case pitchShiftIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].pitchShift;\n                            break;\n                        case ringModIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].ringModulation - Config.modulators[ringModIndex].convertRealFactor;\n                            break;\n                        case ringModHertzIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].ringModulationHz - Config.modulators[ringModHertzIndex].convertRealFactor;\n                            break;\n                        case granularIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].granular - Config.modulators[granularIndex].convertRealFactor;\n                            break;\n                        case grainAmountIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].grainAmounts - Config.modulators[grainAmountIndex].convertRealFactor;\n                            break;\n                        case grainSizeIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].grainSize - Config.modulators[grainSizeIndex].convertRealFactor;\n                            break;\n                        case grainRangeIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].grainRange - Config.modulators[grainRangeIndex].convertRealFactor;\n                            break;\n                        case envSpeedIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].envelopeSpeed - Config.modulators[envSpeedIndex].convertRealFactor;\n                            break;\n                        case perEnvSpeedIndex:\n                            vol = Config.perEnvelopeSpeedToIndices[this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].envelopes[instrument.modEnvelopeNumbers[modCount]].perEnvelopeSpeed] - Config.modulators[perEnvSpeedIndex].convertRealFactor;\n                            break;\n                        case perEnvLowerIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].envelopes[instrument.modEnvelopeNumbers[modCount]].perEnvelopeLowerBound - Config.modulators[perEnvLowerIndex].convertRealFactor;\n                            break;\n                        case perEnvUpperIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].envelopes[instrument.modEnvelopeNumbers[modCount]].perEnvelopeUpperBound - Config.modulators[perEnvUpperIndex].convertRealFactor;\n                            break;\n                    }\n                }\n                if (vol != undefined)\n                    return vol;\n                else\n                    return Config.noteSizeMax;\n            }\n        };\n        this.getVolumeCap = (isMod, modChannel, modInstrument, modCount) => {\n            if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n                return Config.noteSizeMax;\n            else {\n                modCount = Config.modCount - modCount - 1;\n                let instrument = this.channels[modChannel].instruments[modInstrument];\n                let modulator = Config.modulators[instrument.modulators[modCount]];\n                let cap = modulator.maxRawVol;\n                if (cap != undefined) {\n                    if (modulator.name == \"eq filter\" || modulator.name == \"note filter\" || modulator.name == \"song eq\") {\n                        cap = Config.filterMorphCount - 1;\n                        if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\n                            cap = Config.filterFreqRange;\n                        }\n                        else if (instrument.modFilterTypes[modCount] > 0) {\n                            cap = Config.filterGainRange;\n                        }\n                    }\n                    return cap;\n                }\n                else\n                    return Config.noteSizeMax;\n            }\n        };\n        this.getVolumeCapForSetting = (isMod, modSetting, filterType) => {\n            if (!isMod)\n                return Config.noteSizeMax;\n            else {\n                let cap = Config.modulators[modSetting].maxRawVol;\n                if (cap != undefined) {\n                    if (filterType != undefined && (Config.modulators[modSetting].name == \"eq filter\" || Config.modulators[modSetting].name == \"note filter\" || Config.modulators[modSetting].name == \"song eq\")) {\n                        cap = Config.filterMorphCount - 1;\n                        if (filterType > 0 && filterType % 2) {\n                            cap = Config.filterFreqRange;\n                        }\n                        else if (filterType > 0) {\n                            cap = Config.filterGainRange;\n                        }\n                    }\n                    return cap;\n                }\n                else\n                    return Config.noteSizeMax;\n            }\n        };\n        if (string != undefined) {\n            this.fromBase64String(string);\n        }\n        else {\n            this.initToDefault(true);\n        }\n    }\n    getChannelCount() {\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\n    }\n    getMaxInstrumentsPerChannel() {\n        return Math.max(this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin, this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\n    }\n    getMaxInstrumentsPerPattern(channelIndex) {\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\n    }\n    getMaxInstrumentsPerPatternForChannel(channel) {\n        return this.layeredInstruments\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\n            : 1;\n    }\n    getChannelIsNoise(channelIndex) {\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\n    }\n    getChannelIsMod(channelIndex) {\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\n    }\n    initToDefault(andResetChannels = true) {\n        this.scale = 0;\n        this.scaleCustom = [true, false, true, true, false, false, false, true, true, false, true, true];\n        this.key = 0;\n        this.octave = 0;\n        this.loopStart = 0;\n        this.loopLength = 4;\n        this.tempo = 150;\n        this.reverb = 0;\n        this.beatsPerBar = 8;\n        this.barCount = 16;\n        this.patternsPerChannel = 8;\n        this.rhythm = 1;\n        this.layeredInstruments = false;\n        this.patternInstruments = false;\n        this.eqFilter.reset();\n        for (let i = 0; i < Config.filterMorphCount - 1; i++) {\n            this.eqSubFilters[i] = null;\n        }\n        this.title = \"Untitled\";\n        document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n        if (andResetChannels) {\n            this.pitchChannelCount = 3;\n            this.noiseChannelCount = 1;\n            this.modChannelCount = 1;\n            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                const isNoiseChannel = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                const isModChannel = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n                if (this.channels.length <= channelIndex) {\n                    this.channels[channelIndex] = new Channel();\n                }\n                const channel = this.channels[channelIndex];\n                channel.octave = Math.max(3 - channelIndex, 0);\n                for (let pattern = 0; pattern < this.patternsPerChannel; pattern++) {\n                    if (channel.patterns.length <= pattern) {\n                        channel.patterns[pattern] = new Pattern();\n                    }\n                    else {\n                        channel.patterns[pattern].reset();\n                    }\n                }\n                channel.patterns.length = this.patternsPerChannel;\n                for (let instrument = 0; instrument < Config.instrumentCountMin; instrument++) {\n                    if (channel.instruments.length <= instrument) {\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\n                    }\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? 10 : (isNoiseChannel ? 2 : 0), isNoiseChannel, isModChannel);\n                }\n                channel.instruments.length = Config.instrumentCountMin;\n                for (let bar = 0; bar < this.barCount; bar++) {\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n            this.channels.length = this.getChannelCount();\n        }\n    }\n    toBase64String() {\n        let bits;\n        let buffer = [];\n        buffer.push(Song._variant);\n        buffer.push(base64IntToCharCode[Song._latestSlarmoosBoxVersion]);\n        buffer.push(78);\n        var encodedSongTitle = encodeURIComponent(this.title);\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\n        for (let i = 0; i < encodedSongTitle.length; i++) {\n            buffer.push(encodedSongTitle.charCodeAt(i));\n        }\n        buffer.push(110, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\n        buffer.push(115, base64IntToCharCode[this.scale]);\n        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n            for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                buffer.push(base64IntToCharCode[this.scaleCustom[i] ? 1 : 0]);\n            }\n        }\n        buffer.push(107, base64IntToCharCode[this.key], base64IntToCharCode[this.octave - Config.octaveMin]);\n        buffer.push(108, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\n        buffer.push(101, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\n        buffer.push(116, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\n        buffer.push(97, base64IntToCharCode[this.beatsPerBar - 1]);\n        buffer.push(103, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\n        buffer.push(106, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\n        buffer.push(114, base64IntToCharCode[this.rhythm]);\n        buffer.push(79);\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]);\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]);\n            buffer.push(base64IntToCharCode[this.limitDecay]);\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]);\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]);\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]);\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]);\n        }\n        else {\n            buffer.push(base64IntToCharCode[0x3f]);\n        }\n        buffer.push(99);\n        if (this.eqFilter == null) {\n            buffer.push(base64IntToCharCode[0]);\n            console.log(\"Null EQ filter settings detected in toBase64String for song\");\n        }\n        else {\n            buffer.push(base64IntToCharCode[this.eqFilter.controlPointCount]);\n            for (let j = 0; j < this.eqFilter.controlPointCount; j++) {\n                const point = this.eqFilter.controlPoints[j];\n                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n            }\n        }\n        let usingSubFilterBitfield = 0;\n        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n            usingSubFilterBitfield |= (+(this.eqSubFilters[j + 1] != null) << j);\n        }\n        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n            if (usingSubFilterBitfield & (1 << j)) {\n                buffer.push(base64IntToCharCode[this.eqSubFilters[j + 1].controlPointCount]);\n                for (let k = 0; k < this.eqSubFilters[j + 1].controlPointCount; k++) {\n                    const point = this.eqSubFilters[j + 1].controlPoints[k];\n                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                }\n            }\n        }\n        buffer.push(85);\n        for (let channel = 0; channel < this.getChannelCount(); channel++) {\n            var encodedChannelName = encodeURIComponent(this.channels[channel].name);\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\n            for (let i = 0; i < encodedChannelName.length; i++) {\n                buffer.push(encodedChannelName.charCodeAt(i));\n            }\n        }\n        buffer.push(105, base64IntToCharCode[(this.layeredInstruments << 1) | this.patternInstruments]);\n        if (this.layeredInstruments || this.patternInstruments) {\n            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\n            }\n        }\n        buffer.push(111);\n        for (let channelIndex = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\n        }\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            for (let i = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                const instrument = this.channels[channelIndex].instruments[i];\n                buffer.push(84, base64IntToCharCode[instrument.type]);\n                buffer.push(118, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\n                buffer.push(117, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\n                buffer.push(102);\n                buffer.push(base64IntToCharCode[+instrument.eqFilterType]);\n                if (instrument.eqFilterType) {\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimpleCut]);\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimplePeak]);\n                }\n                else {\n                    if (instrument.eqFilter == null) {\n                        buffer.push(base64IntToCharCode[0]);\n                        console.log(\"Null EQ filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                    }\n                    else {\n                        buffer.push(base64IntToCharCode[instrument.eqFilter.controlPointCount]);\n                        for (let j = 0; j < instrument.eqFilter.controlPointCount; j++) {\n                            const point = instrument.eqFilter.controlPoints[j];\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                        }\n                    }\n                    let usingSubFilterBitfield = 0;\n                    for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                        usingSubFilterBitfield |= (+(instrument.eqSubFilters[j + 1] != null) << j);\n                    }\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                    for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                        if (usingSubFilterBitfield & (1 << j)) {\n                            buffer.push(base64IntToCharCode[instrument.eqSubFilters[j + 1].controlPointCount]);\n                            for (let k = 0; k < instrument.eqSubFilters[j + 1].controlPointCount; k++) {\n                                const point = instrument.eqSubFilters[j + 1].controlPoints[k];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n                    }\n                }\n                buffer.push(113, base64IntToCharCode[(instrument.effects >> 12) & 63], base64IntToCharCode[(instrument.effects >> 6) & 63], base64IntToCharCode[instrument.effects & 63]);\n                if (effectsIncludeNoteFilter(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\n                    if (instrument.noteFilterType) {\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\n                    }\n                    else {\n                        if (instrument.noteFilter == null) {\n                            buffer.push(base64IntToCharCode[0]);\n                            console.log(\"Null note filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                        }\n                        else {\n                            buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\n                            for (let j = 0; j < instrument.noteFilter.controlPointCount; j++) {\n                                const point = instrument.noteFilter.controlPoints[j];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n                        let usingSubFilterBitfield = 0;\n                        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                            usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\n                        }\n                        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                            if (usingSubFilterBitfield & (1 << j)) {\n                                buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1].controlPointCount]);\n                                for (let k = 0; k < instrument.noteSubFilters[j + 1].controlPointCount; k++) {\n                                    const point = instrument.noteSubFilters[j + 1].controlPoints[k];\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (effectsIncludeTransition(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.transition]);\n                }\n                if (effectsIncludeChord(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chord]);\n                    if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]);\n                    }\n                    if (instrument.chord == Config.chords.dictionary[\"monophonic\"].index) {\n                        buffer.push(base64IntToCharCode[instrument.monoChordTone]);\n                    }\n                }\n                if (effectsIncludePitchShift(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\n                }\n                if (effectsIncludeDetune(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\n                }\n                if (effectsIncludeVibrato(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\n                    if (instrument.vibrato == Config.vibratos.length) {\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\n                    }\n                }\n                if (effectsIncludeDistortion(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.distortion]);\n                    buffer.push(base64IntToCharCode[+instrument.aliases]);\n                }\n                if (effectsIncludeBitcrusher(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\n                }\n                if (effectsIncludePanning(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\n                    buffer.push(base64IntToCharCode[instrument.panDelay]);\n                }\n                if (effectsIncludeChorus(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chorus]);\n                }\n                if (effectsIncludeEcho(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\n                }\n                if (effectsIncludeReverb(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.reverb]);\n                }\n                if (effectsIncludeGranular(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.granular]);\n                    buffer.push(base64IntToCharCode[instrument.grainSize]);\n                    buffer.push(base64IntToCharCode[instrument.grainAmounts]);\n                    buffer.push(base64IntToCharCode[instrument.grainRange]);\n                }\n                if (effectsIncludeRingModulation(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.ringModulation]);\n                    buffer.push(base64IntToCharCode[instrument.ringModulationHz]);\n                    buffer.push(base64IntToCharCode[instrument.ringModWaveformIndex]);\n                    buffer.push(base64IntToCharCode[(instrument.ringModPulseWidth)]);\n                    buffer.push(base64IntToCharCode[(instrument.ringModHzOffset - Config.rmHzOffsetMin) >> 6], base64IntToCharCode[(instrument.ringModHzOffset - Config.rmHzOffsetMin) & 0x3F]);\n                }\n                if (instrument.type != 4) {\n                    buffer.push(100, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\n                }\n                if (instrument.type == 5 || instrument.type == 7) {\n                    buffer.push(72);\n                    const harmonicsBits = new BitFieldWriter();\n                    for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\n                    }\n                    harmonicsBits.encodeBase64(buffer);\n                }\n                if (instrument.type == 0) {\n                    if (instrument.chipWave > 186) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\n                        buffer.push(base64IntToCharCode[3]);\n                    }\n                    else if (instrument.chipWave > 124) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\n                        buffer.push(base64IntToCharCode[2]);\n                    }\n                    else if (instrument.chipWave > 62) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\n                        buffer.push(base64IntToCharCode[1]);\n                    }\n                    else {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave]);\n                        buffer.push(base64IntToCharCode[0]);\n                    }\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(121);\n                    const encodedLoopMode = ((clamp(0, 31 + 1, instrument.chipWaveLoopMode) << 1)\n                        | (instrument.isUsingAdvancedLoopControls ? 1 : 0));\n                    buffer.push(base64IntToCharCode[encodedLoopMode]);\n                    const encodedReleaseMode = ((clamp(0, 31 + 1, 0) << 1)\n                        | (instrument.chipWavePlayBackwards ? 1 : 0));\n                    buffer.push(base64IntToCharCode[encodedReleaseMode]);\n                    encode32BitNumber(buffer, instrument.chipWaveLoopStart);\n                    encode32BitNumber(buffer, instrument.chipWaveLoopEnd);\n                    encode32BitNumber(buffer, instrument.chipWaveStartOffset);\n                }\n                else if (instrument.type == 1 || instrument.type == 11) {\n                    if (instrument.type == 1) {\n                        buffer.push(65, base64IntToCharCode[instrument.algorithm]);\n                        buffer.push(70, base64IntToCharCode[instrument.feedbackType]);\n                    }\n                    else {\n                        buffer.push(65, base64IntToCharCode[instrument.algorithm6Op]);\n                        if (instrument.algorithm6Op == 0) {\n                            buffer.push(67, base64IntToCharCode[instrument.customAlgorithm.carrierCount]);\n                            buffer.push(113);\n                            for (let o = 0; o < instrument.customAlgorithm.modulatedBy.length; o++) {\n                                for (let j = 0; j < instrument.customAlgorithm.modulatedBy[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customAlgorithm.modulatedBy[o][j]]);\n                                }\n                                buffer.push(82);\n                            }\n                            buffer.push(113);\n                        }\n                        buffer.push(70, base64IntToCharCode[instrument.feedbackType6Op]);\n                        if (instrument.feedbackType6Op == 0) {\n                            buffer.push(113);\n                            for (let o = 0; o < instrument.customFeedbackType.indices.length; o++) {\n                                for (let j = 0; j < instrument.customFeedbackType.indices[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customFeedbackType.indices[o][j]]);\n                                }\n                                buffer.push(82);\n                            }\n                            buffer.push(113);\n                        }\n                    }\n                    buffer.push(66, base64IntToCharCode[instrument.feedbackAmplitude]);\n                    buffer.push(81);\n                    for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\n                    }\n                    buffer.push(80);\n                    for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\n                    }\n                    buffer.push(82);\n                    for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\n                        if (instrument.operators[o].waveform == 2) {\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\n                        }\n                    }\n                }\n                else if (instrument.type == 9) {\n                    if (instrument.chipWave > 186) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\n                        buffer.push(base64IntToCharCode[3]);\n                    }\n                    else if (instrument.chipWave > 124) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\n                        buffer.push(base64IntToCharCode[2]);\n                    }\n                    else if (instrument.chipWave > 62) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\n                        buffer.push(base64IntToCharCode[1]);\n                    }\n                    else {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave]);\n                        buffer.push(base64IntToCharCode[0]);\n                    }\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(77);\n                    for (let j = 0; j < 64; j++) {\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24)]);\n                    }\n                }\n                else if (instrument.type == 2) {\n                    buffer.push(119, base64IntToCharCode[instrument.chipNoise]);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 3) {\n                    buffer.push(83);\n                    const spectrumBits = new BitFieldWriter();\n                    for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 4) {\n                    buffer.push(122);\n                    for (let j = 0; j < Config.drumCount; j++) {\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\n                    }\n                    buffer.push(83);\n                    const spectrumBits = new BitFieldWriter();\n                    for (let j = 0; j < Config.drumCount; j++) {\n                        for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\n                        }\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 5) {\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 6) {\n                    buffer.push(87, base64IntToCharCode[instrument.pulseWidth]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 8) {\n                    buffer.push(120, base64IntToCharCode[instrument.supersawDynamism], base64IntToCharCode[instrument.supersawSpread], base64IntToCharCode[instrument.supersawShape]);\n                    buffer.push(87, base64IntToCharCode[instrument.pulseWidth]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]);\n                }\n                else if (instrument.type == 7) {\n                    if (Config.stringSustainRange > 0x20 || 2 > 2) {\n                        throw new Error(\"Not enough bits to represent sustain value and type in same base64 character.\");\n                    }\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(73, base64IntToCharCode[instrument.stringSustain | (instrument.stringSustainType << 5)]);\n                }\n                else if (instrument.type == 10) {\n                }\n                else {\n                    throw new Error(\"Unknown instrument type.\");\n                }\n                buffer.push(69, base64IntToCharCode[instrument.envelopeCount]);\n                buffer.push(base64IntToCharCode[instrument.envelopeSpeed]);\n                for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\n                    if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"pitch\") {\n                        if (!instrument.isNoiseInstrument) {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart >> 6], base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart & 0x3f]);\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd >> 6], base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd & 0x3f]);\n                        }\n                        else {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart]);\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd]);\n                        }\n                    }\n                    else if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"random\") {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].steps]);\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].seed]);\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].waveform]);\n                    }\n                    else if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"lfo\") {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].waveform]);\n                        if (instrument.envelopes[envelopeIndex].waveform == 5 || instrument.envelopes[envelopeIndex].waveform == 6) {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].steps]);\n                        }\n                    }\n                    let checkboxValues = +instrument.envelopes[envelopeIndex].discrete;\n                    checkboxValues = checkboxValues << 1;\n                    checkboxValues += +instrument.envelopes[envelopeIndex].inverse;\n                    buffer.push(base64IntToCharCode[checkboxValues] ? base64IntToCharCode[checkboxValues] : base64IntToCharCode[0]);\n                    if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"pitch\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"note size\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"punch\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"none\") {\n                        buffer.push(base64IntToCharCode[Config.perEnvelopeSpeedToIndices[instrument.envelopes[envelopeIndex].perEnvelopeSpeed]]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].perEnvelopeLowerBound * 10]);\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].perEnvelopeUpperBound * 10]);\n                }\n            }\n        }\n        buffer.push(98);\n        bits = new BitFieldWriter();\n        let neededBits = 0;\n        while ((1 << neededBits) < this.patternsPerChannel + 1)\n            neededBits++;\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++)\n            for (let i = 0; i < this.barCount; i++) {\n                bits.write(neededBits, this.channels[channelIndex].bars[i]);\n            }\n        bits.encodeBase64(buffer);\n        buffer.push(112);\n        bits = new BitFieldWriter();\n        const shapeBits = new BitFieldWriter();\n        const bitsPerNoteSize = Song.getNeededBits(Config.noteSizeMax);\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel = this.channels[channelIndex];\n            const maxInstrumentsPerPattern = this.getMaxInstrumentsPerPattern(channelIndex);\n            const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n            const isModChannel = this.getChannelIsMod(channelIndex);\n            const neededInstrumentCountBits = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n            const neededInstrumentIndexBits = Song.getNeededBits(channel.instruments.length - 1);\n            if (isModChannel) {\n                const neededModInstrumentIndexBits = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n                for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                    let instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                    for (let mod = 0; mod < Config.modCount; mod++) {\n                        const modChannel = instrument.modChannels[mod];\n                        const modInstrument = instrument.modInstruments[mod];\n                        const modSetting = instrument.modulators[mod];\n                        const modFilter = instrument.modFilterTypes[mod];\n                        const modEnvelope = instrument.modEnvelopeNumbers[mod];\n                        let status = Config.modulators[modSetting].forSong ? 2 : 0;\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\n                            status = 3;\n                        bits.write(2, status);\n                        if (status == 0 || status == 1) {\n                            bits.write(8, modChannel);\n                            bits.write(neededModInstrumentIndexBits, modInstrument);\n                        }\n                        if (status != 3) {\n                            bits.write(6, modSetting);\n                        }\n                        if (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\" || Config.modulators[instrument.modulators[mod]].name == \"song eq\") {\n                            bits.write(6, modFilter);\n                        }\n                        if (Config.modulators[instrument.modulators[mod]].name == \"individual envelope speed\" ||\n                            Config.modulators[instrument.modulators[mod]].name == \"reset envelope\" ||\n                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope lower bound\" ||\n                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope upper bound\") {\n                            bits.write(6, modEnvelope);\n                        }\n                    }\n                }\n            }\n            const octaveOffset = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\n            let lastPitch = (isNoiseChannel ? 4 : octaveOffset);\n            const recentPitches = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n            const recentShapes = [];\n            for (let i = 0; i < recentPitches.length; i++) {\n                recentPitches[i] += octaveOffset;\n            }\n            for (const pattern of channel.patterns) {\n                if (this.patternInstruments) {\n                    const instrumentCount = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\n                    for (let i = 0; i < instrumentCount; i++) {\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\n                    }\n                }\n                if (pattern.notes.length > 0) {\n                    bits.write(1, 1);\n                    let curPart = 0;\n                    for (const note of pattern.notes) {\n                        if (note.start < curPart && isModChannel) {\n                            bits.write(2, 0);\n                            bits.write(1, 1);\n                            bits.writePartDuration(curPart - note.start);\n                        }\n                        if (note.start > curPart) {\n                            bits.write(2, 0);\n                            if (isModChannel)\n                                bits.write(1, 0);\n                            bits.writePartDuration(note.start - curPart);\n                        }\n                        shapeBits.clear();\n                        if (note.pitches.length == 1) {\n                            shapeBits.write(1, 0);\n                        }\n                        else {\n                            shapeBits.write(1, 1);\n                            shapeBits.write(3, note.pitches.length - 2);\n                        }\n                        shapeBits.writePinCount(note.pins.length - 1);\n                        if (!isModChannel) {\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size);\n                        }\n                        else {\n                            shapeBits.write(9, note.pins[0].size);\n                        }\n                        let shapePart = 0;\n                        let startPitch = note.pitches[0];\n                        let currentPitch = startPitch;\n                        const pitchBends = [];\n                        for (let i = 1; i < note.pins.length; i++) {\n                            const pin = note.pins[i];\n                            const nextPitch = startPitch + pin.interval;\n                            if (currentPitch != nextPitch) {\n                                shapeBits.write(1, 1);\n                                pitchBends.push(nextPitch);\n                                currentPitch = nextPitch;\n                            }\n                            else {\n                                shapeBits.write(1, 0);\n                            }\n                            shapeBits.writePartDuration(pin.time - shapePart);\n                            shapePart = pin.time;\n                            if (!isModChannel) {\n                                shapeBits.write(bitsPerNoteSize, pin.size);\n                            }\n                            else {\n                                shapeBits.write(9, pin.size);\n                            }\n                        }\n                        const shapeString = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\n                        const shapeIndex = recentShapes.indexOf(shapeString);\n                        if (shapeIndex == -1) {\n                            bits.write(2, 1);\n                            bits.concat(shapeBits);\n                        }\n                        else {\n                            bits.write(1, 1);\n                            bits.writeLongTail(0, 0, shapeIndex);\n                            recentShapes.splice(shapeIndex, 1);\n                        }\n                        recentShapes.unshift(shapeString);\n                        if (recentShapes.length > 10)\n                            recentShapes.pop();\n                        const allPitches = note.pitches.concat(pitchBends);\n                        for (let i = 0; i < allPitches.length; i++) {\n                            const pitch = allPitches[i];\n                            const pitchIndex = recentPitches.indexOf(pitch);\n                            if (pitchIndex == -1) {\n                                let interval = 0;\n                                let pitchIter = lastPitch;\n                                if (pitchIter < pitch) {\n                                    while (pitchIter != pitch) {\n                                        pitchIter++;\n                                        if (recentPitches.indexOf(pitchIter) == -1)\n                                            interval++;\n                                    }\n                                }\n                                else {\n                                    while (pitchIter != pitch) {\n                                        pitchIter--;\n                                        if (recentPitches.indexOf(pitchIter) == -1)\n                                            interval--;\n                                    }\n                                }\n                                bits.write(1, 0);\n                                bits.writePitchInterval(interval);\n                            }\n                            else {\n                                bits.write(1, 1);\n                                bits.write(4, pitchIndex);\n                                recentPitches.splice(pitchIndex, 1);\n                            }\n                            recentPitches.unshift(pitch);\n                            if (recentPitches.length > 16)\n                                recentPitches.pop();\n                            if (i == note.pitches.length - 1) {\n                                lastPitch = note.pitches[0];\n                            }\n                            else {\n                                lastPitch = pitch;\n                            }\n                        }\n                        if (note.start == 0) {\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\n                        }\n                        curPart = note.end;\n                    }\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n                        bits.write(2, 0);\n                        if (isModChannel)\n                            bits.write(1, 0);\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\n                    }\n                }\n                else {\n                    bits.write(1, 0);\n                }\n            }\n        }\n        let stringLength = bits.lengthBase64();\n        let digits = [];\n        while (stringLength > 0) {\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\n            stringLength = stringLength >> 6;\n        }\n        buffer.push(base64IntToCharCode[digits.length]);\n        Array.prototype.push.apply(buffer, digits);\n        bits.encodeBase64(buffer);\n        const maxApplyArgs = 64000;\n        let customSamplesStr = \"\";\n        if (EditorConfig.customSamples != undefined && EditorConfig.customSamples.length > 0) {\n            customSamplesStr = \"|\" + EditorConfig.customSamples.join(\"|\");\n        }\n        if (buffer.length < maxApplyArgs) {\n            return String.fromCharCode.apply(null, buffer) + customSamplesStr;\n        }\n        else {\n            let result = \"\";\n            for (let i = 0; i < buffer.length; i += maxApplyArgs) {\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\n            }\n            return result + customSamplesStr;\n        }\n    }\n    static _envelopeFromLegacyIndex(legacyIndex) {\n        if (legacyIndex == 0)\n            legacyIndex = 1;\n        else if (legacyIndex == 1)\n            legacyIndex = 0;\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\n    }\n    fromBase64String(compressed, jsonFormat = \"auto\") {\n        if (compressed == null || compressed == \"\") {\n            Song._clearSamples();\n            this.initToDefault(true);\n            return;\n        }\n        let charIndex = 0;\n        while (compressed.charCodeAt(charIndex) <= 32)\n            charIndex++;\n        if (compressed.charCodeAt(charIndex) == 35)\n            charIndex++;\n        if (compressed.charCodeAt(charIndex) == 123) {\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)), jsonFormat);\n            return;\n        }\n        const variantTest = compressed.charCodeAt(charIndex);\n        let fromBeepBox = false;\n        let fromJummBox = false;\n        let fromGoldBox = false;\n        let fromUltraBox = false;\n        let fromSlarmoosBox = false;\n        if (variantTest == 0x6A) {\n            fromJummBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x67) {\n            fromGoldBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x75) {\n            fromUltraBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x64) {\n            fromJummBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x61) {\n            fromUltraBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x73) {\n            fromSlarmoosBox = true;\n            charIndex++;\n        }\n        else {\n            fromBeepBox = true;\n        }\n        const version = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion))\n            return;\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion))\n            return;\n        if (fromGoldBox && (version == -1 || version > Song._latestGoldBoxVersion || version < Song._oldestGoldBoxVersion))\n            return;\n        if (fromUltraBox && (version == -1 || version > Song._latestUltraBoxVersion || version < Song._oldestUltraBoxVersion))\n            return;\n        if (fromSlarmoosBox && (version == -1 || version > Song._latestSlarmoosBoxVersion || version < Song._oldestSlarmoosBoxVersion))\n            return;\n        const beforeTwo = version < 2;\n        const beforeThree = version < 3;\n        const beforeFour = version < 4;\n        const beforeFive = version < 5;\n        const beforeSix = version < 6;\n        const beforeSeven = version < 7;\n        const beforeEight = version < 8;\n        const beforeNine = version < 9;\n        this.initToDefault((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)));\n        const forceSimpleFilter = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\n        let willLoadLegacySamplesForOldSongs = false;\n        if (fromSlarmoosBox || fromUltraBox || fromGoldBox) {\n            compressed = compressed.replaceAll(\"%7C\", \"|\");\n            var compressed_array = compressed.split(\"|\");\n            compressed = compressed_array.shift();\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != compressed_array.join(\", \")) {\n                Song._restoreChipWaveListToDefault();\n                let willLoadLegacySamples = false;\n                let willLoadNintariboxSamples = false;\n                let willLoadMarioPaintboxSamples = false;\n                const customSampleUrls = [];\n                const customSamplePresets = [];\n                sampleLoadingState.statusTable = {};\n                sampleLoadingState.urlTable = {};\n                sampleLoadingState.totalSamples = 0;\n                sampleLoadingState.samplesLoaded = 0;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                for (const url of compressed_array) {\n                    if (url.toLowerCase() === \"legacysamples\") {\n                        if (!willLoadLegacySamples) {\n                            willLoadLegacySamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(0);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\n                        if (!willLoadNintariboxSamples) {\n                            willLoadNintariboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(1);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                        if (!willLoadMarioPaintboxSamples) {\n                            willLoadMarioPaintboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(2);\n                        }\n                    }\n                    else {\n                        const parseOldSyntax = beforeThree;\n                        const ok = Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                        if (!ok) {\n                            continue;\n                        }\n                    }\n                }\n                if (customSampleUrls.length > 0) {\n                    EditorConfig.customSamples = customSampleUrls;\n                }\n                if (customSamplePresets.length > 0) {\n                    const customSamplePresetsMap = toNameMap(customSamplePresets);\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                        name: \"Custom Sample Presets\",\n                        presets: customSamplePresetsMap,\n                        index: EditorConfig.presetCategories.length,\n                    };\n                }\n            }\n        }\n        if (beforeThree && fromBeepBox) {\n            for (const channel of this.channels) {\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\n                channel.instruments[0].effects |= 1 << 10;\n            }\n            this.channels[3].instruments[0].chipNoise = 0;\n        }\n        let legacySettingsCache = null;\n        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n            legacySettingsCache = [];\n            for (let i = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n                legacySettingsCache[i] = [];\n                for (let j = 0; j < Config.instrumentCountMin; j++)\n                    legacySettingsCache[i][j] = {};\n            }\n        }\n        let legacyGlobalReverb = 0;\n        let instrumentChannelIterator = 0;\n        let instrumentIndexIterator = -1;\n        let command;\n        let useSlowerArpSpeed = false;\n        let useFastTwoNoteArp = false;\n        while (charIndex < compressed.length)\n            switch (command = compressed.charCodeAt(charIndex++)) {\n                case 78:\n                    {\n                        var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\n                        document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n                        charIndex += songNameLength;\n                    }\n                    break;\n                case 110:\n                    {\n                        this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if (fromBeepBox || (fromJummBox && beforeTwo)) {\n                            this.modChannelCount = 0;\n                        }\n                        else {\n                            this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\n                        this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\n                        this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\n                        for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\n                            this.channels[channelIndex] = new Channel();\n                        }\n                        this.channels.length = this.getChannelCount();\n                        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            for (let i = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n                                legacySettingsCache[i] = [];\n                                for (let j = 0; j < Config.instrumentCountMin; j++)\n                                    legacySettingsCache[i][j] = {};\n                            }\n                        }\n                    }\n                    break;\n                case 115:\n                    {\n                        this.scale = clamp(0, Config.scales.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                            for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                                this.scaleCustom[i] = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1;\n                            }\n                        }\n                        if (fromBeepBox)\n                            this.scale = 0;\n                    }\n                    break;\n                case 107:\n                    {\n                        if (beforeSeven && fromBeepBox) {\n                            this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.octave = 0;\n                        }\n                        else if (fromBeepBox || fromJummBox) {\n                            this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.octave = 0;\n                        }\n                        else if (fromGoldBox || (beforeThree && fromUltraBox)) {\n                            const rawKeyIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const [key, octave] = convertLegacyKeyToKeyAndOctave(rawKeyIndex);\n                            this.key = key;\n                            this.octave = octave;\n                        }\n                        else {\n                            this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.octaveMin);\n                        }\n                    }\n                    break;\n                case 108:\n                    {\n                        if (beforeFive && fromBeepBox) {\n                            this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        else {\n                            this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                    }\n                    break;\n                case 101:\n                    {\n                        if (beforeFive && fromBeepBox) {\n                            this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        else {\n                            this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                    }\n                    break;\n                case 116:\n                    {\n                        if (beforeFour && fromBeepBox) {\n                            this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                        }\n                        else {\n                            this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\n                    }\n                    break;\n                case 109:\n                    {\n                        if (beforeNine && fromBeepBox) {\n                            legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\n                            legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                        }\n                        else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 97:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                        }\n                        else {\n                            this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                        this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\n                    }\n                    break;\n                case 103:\n                    {\n                        const barCount = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\n                        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                            for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\n                                this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\n                            }\n                            this.channels[channelIndex].bars.length = this.barCount;\n                        }\n                    }\n                    break;\n                case 106:\n                    {\n                        let patternsPerChannel;\n                        if (beforeEight && fromBeepBox) {\n                            patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                        else {\n                            patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                        this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\n                        const channelCount = this.getChannelCount();\n                        for (let channelIndex = 0; channelIndex < channelCount; channelIndex++) {\n                            const patterns = this.channels[channelIndex].patterns;\n                            for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\n                                patterns[pattern] = new Pattern();\n                            }\n                            patterns.length = this.patternsPerChannel;\n                        }\n                    }\n                    break;\n                case 105:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const instrumentsPerChannel = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                            this.layeredInstruments = false;\n                            this.patternInstruments = (instrumentsPerChannel > 1);\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                const isNoiseChannel = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                                const isModChannel = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n                                for (let instrumentIndex = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                                    this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\n                                }\n                                this.channels[channelIndex].instruments.length = instrumentsPerChannel;\n                                if (beforeSix && fromBeepBox) {\n                                    for (let instrumentIndex = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                                        this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? 2 : 0, isNoiseChannel, isModChannel);\n                                    }\n                                }\n                                for (let j = legacySettingsCache[channelIndex].length; j < instrumentsPerChannel; j++) {\n                                    legacySettingsCache[channelIndex][j] = {};\n                                }\n                            }\n                        }\n                        else {\n                            const instrumentsFlagBits = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\n                            this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                let instrumentCount = 1;\n                                if (this.layeredInstruments || this.patternInstruments) {\n                                    instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                                }\n                                const channel = this.channels[channelIndex];\n                                const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n                                const isModChannel = this.getChannelIsMod(channelIndex);\n                                for (let i = channel.instruments.length; i < instrumentCount; i++) {\n                                    channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\n                                }\n                                channel.instruments.length = instrumentCount;\n                            }\n                        }\n                    }\n                    break;\n                case 114:\n                    {\n                        if (!fromUltraBox && !fromSlarmoosBox) {\n                            let newRhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.rhythm = clamp(0, Config.rhythms.length, newRhythm);\n                            if (fromJummBox && beforeThree || fromBeepBox) {\n                                if (this.rhythm == Config.rhythms.dictionary[\"÷3 (triplets)\"].index || this.rhythm == Config.rhythms.dictionary[\"÷6\"].index) {\n                                    useSlowerArpSpeed = true;\n                                }\n                                if (this.rhythm >= Config.rhythms.dictionary[\"÷6\"].index) {\n                                    useFastTwoNoteArp = true;\n                                }\n                            }\n                        }\n                        else if ((fromSlarmoosBox && beforeFour) || (fromUltraBox && beforeFive)) {\n                            const rhythmMap = [1, 1, 0, 1, 2, 3, 4, 5];\n                            this.rhythm = clamp(0, Config.rhythms.length, rhythmMap[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]]);\n                        }\n                        else {\n                            this.rhythm = clamp(0, Config.rhythms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 111:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                            if (channelIndex >= this.pitchChannelCount)\n                                this.channels[channelIndex].octave = 0;\n                        }\n                        else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                                if (channelIndex >= this.pitchChannelCount)\n                                    this.channels[channelIndex].octave = 0;\n                            }\n                        }\n                        else {\n                            for (let channelIndex = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n                                this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            for (let channelIndex = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\n                                this.channels[channelIndex].octave = 0;\n                            }\n                        }\n                    }\n                    break;\n                case 84:\n                    {\n                        instrumentIndexIterator++;\n                        if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\n                            instrumentChannelIterator++;\n                            instrumentIndexIterator = 0;\n                        }\n                        validateRange(0, this.channels.length - 1, instrumentChannelIterator);\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        let instrumentType = validateRange(0, 12 - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            if (instrumentType == 7 || instrumentType == 8) {\n                                instrumentType += 2;\n                            }\n                        }\n                        else if ((fromJummBox && beforeSix) || (fromGoldBox && !beforeFour) || (fromUltraBox && beforeFive)) {\n                            if (instrumentType == 8 || instrumentType == 9 || instrumentType == 10) {\n                                instrumentType += 1;\n                            }\n                        }\n                        instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\n                        if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == 0 || instrumentType == 9 || instrumentType == 6)) {\n                            instrument.aliases = true;\n                            instrument.distortion = 0;\n                            instrument.effects |= 1 << 3;\n                        }\n                        if (useSlowerArpSpeed) {\n                            instrument.arpeggioSpeed = 9;\n                        }\n                        if (useFastTwoNoteArp) {\n                            instrument.fastTwoNoteArp = true;\n                        }\n                        if (beforeSeven && fromBeepBox) {\n                            if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                                instrument.effects |= 1 << 11;\n                            }\n                        }\n                    }\n                    break;\n                case 117:\n                    {\n                        const presetValue = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == 7) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = 9;\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = 9;\n                            }\n                        }\n                        else if ((fromJummBox && beforeSix) || (fromUltraBox && beforeFive)) {\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == 8) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = 9;\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = 9;\n                            }\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == 10) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = 11;\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = 11;\n                            }\n                        }\n                        if (fromBeepBox && presetValue == EditorConfig.nameToPresetValue(\"grand piano 1\")) {\n                            this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = EditorConfig.nameToPresetValue(\"grand piano 3\");\n                        }\n                    }\n                    break;\n                case 119:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const legacyWaves = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument = this.channels[channelIndex].instruments[0];\n                            instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                            instrument.convertLegacySettings(legacySettingsCache[channelIndex][0], forceSimpleFilter);\n                        }\n                        else if (beforeSix && fromBeepBox) {\n                            const legacyWaves = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (const instrument of this.channels[channelIndex].instruments) {\n                                    if (channelIndex >= this.pitchChannelCount) {\n                                        instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    else {\n                                        instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                                    }\n                                }\n                            }\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            const legacyWaves = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                            if (instrumentChannelIterator >= this.pitchChannelCount) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            else {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                            }\n                        }\n                        else {\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type == 2) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            else {\n                                if (fromSlarmoosBox || fromUltraBox) {\n                                    const chipWaveReal = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const chipWaveCounter = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if (chipWaveCounter == 3) {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 186);\n                                    }\n                                    else if (chipWaveCounter == 2) {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 124);\n                                    }\n                                    else if (chipWaveCounter == 1) {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 62);\n                                    }\n                                    else {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal);\n                                    }\n                                }\n                                else {\n                                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 102:\n                    {\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            if (beforeSeven && fromBeepBox) {\n                                const legacyToCutoff = [10, 6, 3, 0, 8, 5, 2];\n                                const legacyToEnvelope = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n                                if (beforeThree && fromBeepBox) {\n                                    const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const instrument = this.channels[channelIndex].instruments[0];\n                                    const legacySettings = legacySettingsCache[channelIndex][0];\n                                    const legacyFilter = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                    legacySettings.filterResonance = 0;\n                                    legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                }\n                                else if (beforeSix && fromBeepBox) {\n                                    for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                        for (let i = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                            const instrument = this.channels[channelIndex].instruments[i];\n                                            const legacySettings = legacySettingsCache[channelIndex][i];\n                                            const legacyFilter = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                                            if (channelIndex < this.pitchChannelCount) {\n                                                legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                                legacySettings.filterResonance = 0;\n                                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                            }\n                                            else {\n                                                legacySettings.filterCutoff = 10;\n                                                legacySettings.filterResonance = 0;\n                                                legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\n                                            }\n                                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const legacyFilter = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                    const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                    legacySettings.filterResonance = 0;\n                                    legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                }\n                            }\n                            else {\n                                const filterCutoffRange = 11;\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            let typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if (fromBeepBox || typeCheck == 0) {\n                                instrument.eqFilterType = false;\n                                if (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                    typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const originalControlPointCount = typeCheck;\n                                instrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                                for (let i = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\n                                    instrument.eqFilter.controlPoints[i] = new FilterControlPoint();\n                                }\n                                for (let i = 0; i < instrument.eqFilter.controlPointCount; i++) {\n                                    const point = instrument.eqFilter.controlPoints[i];\n                                    point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                for (let i = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n                                    charIndex += 3;\n                                }\n                                instrument.eqSubFilters[0] = instrument.eqFilter;\n                                if ((fromJummBox && !beforeFive) || (fromGoldBox && !beforeFour) || fromUltraBox || fromSlarmoosBox) {\n                                    let usingSubFilterBitfield = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                        if (usingSubFilterBitfield & (1 << j)) {\n                                            const originalSubfilterControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                            if (instrument.eqSubFilters[j + 1] == null)\n                                                instrument.eqSubFilters[j + 1] = new FilterSettings();\n                                            instrument.eqSubFilters[j + 1].controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                            for (let i = instrument.eqSubFilters[j + 1].controlPoints.length; i < instrument.eqSubFilters[j + 1].controlPointCount; i++) {\n                                                instrument.eqSubFilters[j + 1].controlPoints[i] = new FilterControlPoint();\n                                            }\n                                            for (let i = 0; i < instrument.eqSubFilters[j + 1].controlPointCount; i++) {\n                                                const point = instrument.eqSubFilters[j + 1].controlPoints[i];\n                                                point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            }\n                                            for (let i = instrument.eqSubFilters[j + 1].controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                                charIndex += 3;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                instrument.eqFilterType = true;\n                                instrument.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                        }\n                    }\n                    break;\n                case 121:\n                    {\n                        if (fromSlarmoosBox || fromUltraBox) {\n                            if (beforeThree && fromUltraBox) {\n                                const sampleLoopInfoEncodedLength = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const sampleLoopInfoEncoded = compressed.slice(charIndex, charIndex + sampleLoopInfoEncodedLength);\n                                charIndex += sampleLoopInfoEncodedLength;\n                                const sampleLoopInfo = JSON.parse(atob(sampleLoopInfoEncoded));\n                                for (const entry of sampleLoopInfo) {\n                                    const channelIndex = entry[\"channel\"];\n                                    const instrumentIndex = entry[\"instrument\"];\n                                    const info = entry[\"info\"];\n                                    const instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                                    instrument.isUsingAdvancedLoopControls = info[\"isUsingAdvancedLoopControls\"];\n                                    instrument.chipWaveLoopStart = info[\"chipWaveLoopStart\"];\n                                    instrument.chipWaveLoopEnd = info[\"chipWaveLoopEnd\"];\n                                    instrument.chipWaveLoopMode = info[\"chipWaveLoopMode\"];\n                                    instrument.chipWavePlayBackwards = info[\"chipWavePlayBackwards\"];\n                                    instrument.chipWaveStartOffset = info[\"chipWaveStartOffset\"];\n                                }\n                            }\n                            else {\n                                const encodedLoopMode = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const isUsingAdvancedLoopControls = Boolean(encodedLoopMode & 1);\n                                const chipWaveLoopMode = encodedLoopMode >> 1;\n                                const encodedReleaseMode = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const chipWavePlayBackwards = Boolean(encodedReleaseMode & 1);\n                                const chipWaveLoopStart = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const chipWaveLoopEnd = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const chipWaveStartOffset = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.isUsingAdvancedLoopControls = isUsingAdvancedLoopControls;\n                                instrument.chipWaveLoopStart = chipWaveLoopStart;\n                                instrument.chipWaveLoopEnd = chipWaveLoopEnd;\n                                instrument.chipWaveLoopMode = chipWaveLoopMode;\n                                instrument.chipWavePlayBackwards = chipWavePlayBackwards;\n                                instrument.chipWaveStartOffset = chipWaveStartOffset;\n                            }\n                        }\n                        else if (fromGoldBox && !beforeFour && beforeSix) {\n                            if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                                if (!willLoadLegacySamplesForOldSongs) {\n                                    willLoadLegacySamplesForOldSongs = true;\n                                    Config.willReloadForCustomSamples = true;\n                                    EditorConfig.customSamples = [\"legacySamples\"];\n                                    loadBuiltInSamples(0);\n                                }\n                            }\n                            this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 125);\n                        }\n                        else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const filterResonanceRange = 8;\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                    }\n                    break;\n                case 122:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox)) {\n                            }\n                            if (instrument.type == 4) {\n                                for (let i = 0; i < Config.drumCount; i++) {\n                                    let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                        aa = pregoldToEnvelope[aa];\n                                    instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(aa).index;\n                                }\n                            }\n                            else {\n                                const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                    aa = pregoldToEnvelope[aa];\n                                legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(aa);\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < Config.drumCount; i++) {\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                    aa = pregoldToEnvelope[aa];\n                                if (!fromSlarmoosBox && aa >= 2)\n                                    aa++;\n                                instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, aa);\n                            }\n                        }\n                    }\n                    break;\n                case 87:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.pulseWidth = clamp(0, Config.pulseWidthRange + (+(fromJummBox)) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if (fromBeepBox) {\n                            instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\n                        }\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                aa = pregoldToEnvelope[aa];\n                            legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(aa);\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        if ((fromUltraBox && !beforeFour) || fromSlarmoosBox) {\n                            instrument.decimalOffset = clamp(0, 99 + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 73:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const sustainValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        instrument.stringSustain = clamp(0, Config.stringSustainRange, sustainValue & 0x1F);\n                        instrument.stringSustainType = Config.enableAcousticSustain ? clamp(0, 2, sustainValue >> 5) : 0;\n                    }\n                    break;\n                case 100:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const legacySettings = [\n                                { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                                { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                                { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                                { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                                { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                                { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                                { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                                { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                                { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                            ];\n                            if (beforeThree && fromBeepBox) {\n                                const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                const instrument = this.channels[channelIndex].instruments[0];\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                    instrument.effects |= 1 << 10;\n                                }\n                            }\n                            else if (beforeSix && fromBeepBox) {\n                                for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                    for (const instrument of this.channels[channelIndex].instruments) {\n                                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                            instrument.effects |= 1 << 10;\n                                        }\n                                    }\n                                }\n                            }\n                            else if ((beforeFour && !fromGoldBox && !fromUltraBox && !fromSlarmoosBox) || fromBeepBox) {\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                    instrument.effects |= 1 << 10;\n                                }\n                            }\n                            else {\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\n                                    instrument.legacyTieOver = true;\n                                }\n                                instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\n                                    instrument.effects |= 1 << 10;\n                                }\n                            }\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            if (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                        }\n                    }\n                    break;\n                case 99:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            if (beforeSeven && fromBeepBox) {\n                                if (beforeThree && fromBeepBox) {\n                                    const legacyEffects = [0, 3, 2, 0];\n                                    const legacyEnvelopes = [\"none\", \"none\", \"none\", \"tremolo2\"];\n                                    const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const effect = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument = this.channels[channelIndex].instruments[0];\n                                    const legacySettings = legacySettingsCache[channelIndex][0];\n                                    instrument.vibrato = legacyEffects[effect];\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == 0) {\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                    }\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                        instrument.effects |= 1 << 9;\n                                    }\n                                }\n                                else if (beforeSix && fromBeepBox) {\n                                    const legacyEffects = [0, 1, 2, 3, 0, 0];\n                                    const legacyEnvelopes = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                                    for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                        for (let i = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                            const effect = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            const instrument = this.channels[channelIndex].instruments[i];\n                                            const legacySettings = legacySettingsCache[channelIndex][i];\n                                            instrument.vibrato = legacyEffects[effect];\n                                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == 0) {\n                                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                            }\n                                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                                instrument.effects |= 1 << 9;\n                                            }\n                                            if ((legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) && !this.getChannelIsNoise(channelIndex)) {\n                                                instrument.effects |= 1 << 0;\n                                                instrument.reverb = legacyGlobalReverb;\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    const legacyEffects = [0, 1, 2, 3, 0, 0];\n                                    const legacyEnvelopes = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                                    const effect = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                    const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                    instrument.vibrato = legacyEffects[effect];\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == 0) {\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                    }\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                        instrument.effects |= 1 << 9;\n                                    }\n                                    if (legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                                        instrument.effects |= 1 << 0;\n                                        instrument.reverb = legacyGlobalReverb;\n                                    }\n                                }\n                            }\n                            else {\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                const vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.vibrato = vibrato;\n                                if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                    instrument.effects |= 1 << 9;\n                                }\n                                if (vibrato == Config.vibratos.length) {\n                                    instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\n                                    instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\n                                    instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.effects |= 1 << 9;\n                                }\n                                else {\n                                    instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                                    instrument.vibratoSpeed = 10;\n                                    instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                                    instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                                }\n                            }\n                        }\n                        else {\n                            if (fromSlarmoosBox && !beforeFour) {\n                                const originalControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                this.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                                for (let i = this.eqFilter.controlPoints.length; i < this.eqFilter.controlPointCount; i++) {\n                                    this.eqFilter.controlPoints[i] = new FilterControlPoint();\n                                }\n                                for (let i = 0; i < this.eqFilter.controlPointCount; i++) {\n                                    const point = this.eqFilter.controlPoints[i];\n                                    point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                for (let i = this.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n                                    charIndex += 3;\n                                }\n                                this.eqSubFilters[0] = this.eqFilter;\n                                let usingSubFilterBitfield = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                    if (usingSubFilterBitfield & (1 << j)) {\n                                        const originalSubfilterControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        if (this.eqSubFilters[j + 1] == null)\n                                            this.eqSubFilters[j + 1] = new FilterSettings();\n                                        this.eqSubFilters[j + 1].controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                        for (let i = this.eqSubFilters[j + 1].controlPoints.length; i < this.eqSubFilters[j + 1].controlPointCount; i++) {\n                                            this.eqSubFilters[j + 1].controlPoints[i] = new FilterControlPoint();\n                                        }\n                                        for (let i = 0; i < this.eqSubFilters[j + 1].controlPointCount; i++) {\n                                            const point = this.eqSubFilters[j + 1].controlPoints[i];\n                                            point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        for (let i = this.eqSubFilters[j + 1].controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                            charIndex += 3;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 71:\n                    {\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 104:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument = this.channels[channelIndex].instruments[0];\n                            instrument.unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                            instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                            instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                            instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                            instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                        }\n                        else if (beforeSix && fromBeepBox) {\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (const instrument of this.channels[channelIndex].instruments) {\n                                    const originalValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    let unison = clamp(0, Config.unisons.length, originalValue);\n                                    if (originalValue == 8) {\n                                        unison = 2;\n                                        instrument.chord = 3;\n                                    }\n                                    instrument.unison = unison;\n                                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                                }\n                            }\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            const originalValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            let unison = clamp(0, Config.unisons.length, originalValue);\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            if (originalValue == 8) {\n                                unison = 2;\n                                instrument.chord = 3;\n                            }\n                            instrument.unison = unison;\n                            instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                            instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                            instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                            instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                            instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.unison = clamp(0, Config.unisons.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const unisonLength = (beforeFive || !fromSlarmoosBox) ? 27 : Config.unisons.length;\n                            if (((fromUltraBox && !beforeFive) || fromSlarmoosBox) && (instrument.unison == unisonLength)) {\n                                instrument.unison = Config.unisons.length;\n                                instrument.unisonVoices = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonSpreadNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonSpread = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n                                const unisonOffsetNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonOffset = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n                                const unisonExpressionNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonExpression = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n                                const unisonSignNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonSign = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n                                instrument.unisonSpread = unisonSpread / 1000;\n                                if (unisonSpreadNegative == 0)\n                                    instrument.unisonSpread *= -1;\n                                instrument.unisonOffset = unisonOffset / 1000;\n                                if (unisonOffsetNegative == 0)\n                                    instrument.unisonOffset *= -1;\n                                instrument.unisonExpression = unisonExpression / 1000;\n                                if (unisonExpressionNegative == 0)\n                                    instrument.unisonExpression *= -1;\n                                instrument.unisonSign = unisonSign / 1000;\n                                if (unisonSignNegative == 0)\n                                    instrument.unisonSign *= -1;\n                            }\n                            else {\n                                instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                                instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                                instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                                instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                                instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                            }\n                        }\n                    }\n                    break;\n                case 67:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                                instrument.effects |= 1 << 11;\n                            }\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 113:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << 15) - 1));\n                            if (legacyGlobalReverb == 0 && !((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                                instrument.effects &= ~(1 << 0);\n                            }\n                            else if (effectsIncludeReverb(instrument.effects)) {\n                                instrument.reverb = legacyGlobalReverb;\n                            }\n                            instrument.effects |= 1 << 2;\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                instrument.effects |= 1 << 9;\n                            }\n                            if (instrument.detune != Config.detuneCenter) {\n                                instrument.effects |= 1 << 8;\n                            }\n                            if (instrument.aliases)\n                                instrument.effects |= 1 << 3;\n                            else\n                                instrument.effects &= ~(1 << 3);\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        else {\n                            if (15 > 15)\n                                throw new Error();\n                            if (fromSlarmoosBox && !beforeFive) {\n                                instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 12) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            else {\n                                instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludeNoteFilter(instrument.effects)) {\n                                let typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if (fromBeepBox || typeCheck == 0) {\n                                    instrument.noteFilterType = false;\n                                    if (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                        typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\n                                    for (let i = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\n                                        instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\n                                    }\n                                    for (let i = 0; i < instrument.noteFilter.controlPointCount; i++) {\n                                        const point = instrument.noteFilter.controlPoints[i];\n                                        point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    for (let i = instrument.noteFilter.controlPointCount; i < typeCheck; i++) {\n                                        charIndex += 3;\n                                    }\n                                    instrument.noteSubFilters[0] = instrument.noteFilter;\n                                    if ((fromJummBox && !beforeFive) || (fromGoldBox) || (fromUltraBox) || (fromSlarmoosBox)) {\n                                        let usingSubFilterBitfield = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                            if (usingSubFilterBitfield & (1 << j)) {\n                                                const originalSubfilterControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                                if (instrument.noteSubFilters[j + 1] == null)\n                                                    instrument.noteSubFilters[j + 1] = new FilterSettings();\n                                                instrument.noteSubFilters[j + 1].controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                                for (let i = instrument.noteSubFilters[j + 1].controlPoints.length; i < instrument.noteSubFilters[j + 1].controlPointCount; i++) {\n                                                    instrument.noteSubFilters[j + 1].controlPoints[i] = new FilterControlPoint();\n                                                }\n                                                for (let i = 0; i < instrument.noteSubFilters[j + 1].controlPointCount; i++) {\n                                                    const point = instrument.noteSubFilters[j + 1].controlPoints[i];\n                                                    point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                    point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                    point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                }\n                                                for (let i = instrument.noteSubFilters[j + 1].controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                                    charIndex += 3;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    instrument.noteFilterType = true;\n                                    instrument.noteFilter.reset();\n                                    instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                            if (effectsIncludeTransition(instrument.effects)) {\n                                instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludeChord(instrument.effects)) {\n                                instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)) {\n                                    instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                                }\n                                if (instrument.chord == Config.chords.dictionary[\"monophonic\"].index && fromSlarmoosBox && !beforeFive) {\n                                    instrument.monoChordTone = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                }\n                            }\n                            if (effectsIncludePitchShift(instrument.effects)) {\n                                instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludeDetune(instrument.effects)) {\n                                if (fromBeepBox) {\n                                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\n                                }\n                                else {\n                                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                            if (effectsIncludeVibrato(instrument.effects)) {\n                                instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (instrument.vibrato == Config.vibratos.length && (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)) {\n                                    instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\n                                    instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                else {\n                                    instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                                    instrument.vibratoSpeed = 10;\n                                    instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                                    instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                                }\n                            }\n                            if (effectsIncludeDistortion(instrument.effects)) {\n                                instrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if ((fromJummBox && !beforeFive) || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                    instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                            }\n                            if (effectsIncludeBitcrusher(instrument.effects)) {\n                                instrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludePanning(instrument.effects)) {\n                                if (fromBeepBox) {\n                                    instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\n                                }\n                                else {\n                                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                if ((fromJummBox && !beforeTwo) || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                    instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            }\n                            if (effectsIncludeChorus(instrument.effects)) {\n                                if (fromBeepBox) {\n                                    instrument.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\n                                }\n                                else {\n                                    instrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                            if (effectsIncludeEcho(instrument.effects)) {\n                                instrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludeReverb(instrument.effects)) {\n                                if (fromBeepBox) {\n                                    instrument.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\n                                }\n                                else {\n                                    instrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                            if (effectsIncludeGranular(instrument.effects)) {\n                                instrument.granular = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrument.grainSize = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrument.grainAmounts = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrument.grainRange = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            }\n                            if (effectsIncludeRingModulation(instrument.effects)) {\n                                instrument.ringModulation = clamp(0, Config.ringModRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.ringModulationHz = clamp(0, Config.ringModHzRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.ringModWaveformIndex = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.ringModPulseWidth = clamp(0, Config.pulseWidthRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.ringModHzOffset = clamp(Config.rmHzOffsetMin, Config.rmHzOffsetMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                        }\n                        instrument.effects &= (1 << 15) - 1;\n                    }\n                    break;\n                case 118:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument = this.channels[channelIndex].instruments[0];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                        }\n                        else if (beforeSix && fromBeepBox) {\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (const instrument of this.channels[channelIndex].instruments) {\n                                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                                }\n                            }\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                        }\n                        else if (fromBeepBox) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\n                        }\n                    }\n                    break;\n                case 76:\n                    {\n                        if (beforeNine && fromBeepBox) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0));\n                        }\n                        else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            if (fromJummBox && !beforeThree || fromGoldBox || fromUltraBox || fromSlarmoosBox) {\n                                instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            }\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 68:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\n                            instrument.effects |= 1 << 8;\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 77:\n                    {\n                        let instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        for (let j = 0; j < 64; j++) {\n                            instrument.customChipWave[j]\n                                = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\n                        }\n                        let sum = 0.0;\n                        for (let i = 0; i < instrument.customChipWave.length; i++) {\n                            sum += instrument.customChipWave[i];\n                        }\n                        const average = sum / instrument.customChipWave.length;\n                        let cumulative = 0;\n                        let wavePrev = 0;\n                        for (let i = 0; i < instrument.customChipWave.length; i++) {\n                            cumulative += wavePrev;\n                            wavePrev = instrument.customChipWave[i] - average;\n                            instrument.customChipWaveIntegral[i] = cumulative;\n                        }\n                        instrument.customChipWaveIntegral[64] = 0.0;\n                    }\n                    break;\n                case 79:\n                    {\n                        let nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if (nextValue == 0x3f) {\n                            this.restoreLimiterDefaults();\n                        }\n                        else {\n                            this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\n                            nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\n                            this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\n                            this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                            this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                            this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\n                        }\n                    }\n                    break;\n                case 85:\n                    {\n                        for (let channel = 0; channel < this.getChannelCount(); channel++) {\n                            var channelNameLength;\n                            if (beforeFour && !fromGoldBox && !fromUltraBox && !fromSlarmoosBox)\n                                channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            else\n                                channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\n                            charIndex += channelNameLength;\n                        }\n                    }\n                    break;\n                case 65:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (instrument.type == 1) {\n                            instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        else {\n                            instrument.algorithm6Op = clamp(0, Config.algorithms6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\n                            if (compressed.charCodeAt(charIndex) == 67) {\n                                let carrierCountTemp = clamp(1, Config.operatorCount + 2 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex + 1)]);\n                                charIndex++;\n                                let tempModArray = [];\n                                if (compressed.charCodeAt(charIndex + 1) == 113) {\n                                    charIndex++;\n                                    let j = 0;\n                                    charIndex++;\n                                    while (compressed.charCodeAt(charIndex) != 113) {\n                                        tempModArray[j] = [];\n                                        let o = 0;\n                                        while (compressed.charCodeAt(charIndex) != 82) {\n                                            tempModArray[j][o] = clamp(1, Config.operatorCount + 3, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                            o++;\n                                            charIndex++;\n                                        }\n                                        j++;\n                                        charIndex++;\n                                    }\n                                    instrument.customAlgorithm.set(carrierCountTemp, tempModArray);\n                                    charIndex++;\n                                }\n                            }\n                        }\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                    }\n                    break;\n                case 120:\n                    {\n                        if (fromGoldBox && !beforeFour && beforeSix) {\n                            const chipWaveForCompat = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if ((chipWaveForCompat + 62) > 85) {\n                                if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                                    if (!willLoadLegacySamplesForOldSongs) {\n                                        willLoadLegacySamplesForOldSongs = true;\n                                        Config.willReloadForCustomSamples = true;\n                                        EditorConfig.customSamples = [\"legacySamples\"];\n                                        loadBuiltInSamples(0);\n                                    }\n                                }\n                            }\n                            if ((chipWaveForCompat + 62) > 78) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 63);\n                            }\n                            else if ((chipWaveForCompat + 62) > 67) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 61);\n                            }\n                            else if ((chipWaveForCompat + 62) == 67) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = 40;\n                            }\n                            else {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 62);\n                            }\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.supersawShape = clamp(0, Config.supersawShapeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 70:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (instrument.type == 1) {\n                            instrument.feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        else {\n                            instrument.feedbackType6Op = clamp(0, Config.feedbacks6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\n                            let tempModArray = [];\n                            if (compressed.charCodeAt(charIndex) == 113) {\n                                let j = 0;\n                                charIndex++;\n                                while (compressed.charCodeAt(charIndex) != 113) {\n                                    tempModArray[j] = [];\n                                    let o = 0;\n                                    while (compressed.charCodeAt(charIndex) != 82) {\n                                        tempModArray[j][o] = clamp(1, Config.operatorCount + 2, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                        o++;\n                                        charIndex++;\n                                    }\n                                    j++;\n                                    charIndex++;\n                                }\n                                instrument.customFeedbackType.set(tempModArray);\n                                charIndex++;\n                            }\n                        }\n                    }\n                    break;\n                case 66:\n                    {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    break;\n                case 86:\n                    {\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                aa = pregoldToEnvelope[aa];\n                            legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[aa]);\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 81:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (beforeThree && fromGoldBox) {\n                            const freqToGold3 = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                instrument.operators[o].frequency = freqToGold3[clamp(0, freqToGold3.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                            }\n                        }\n                        else if (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox) {\n                            const freqToUltraBox = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 23, 27, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                instrument.operators[o].frequency = freqToUltraBox[clamp(0, freqToUltraBox.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                            }\n                        }\n                        else {\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                instrument.operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                        }\n                    }\n                    break;\n                case 80:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                            instrument.operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 69:\n                    {\n                        const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                        const jummToUltraEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 58, 59, 60];\n                        const slarURL3toURL4Envelope = [0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 11, 12, 13, 14];\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            legacySettings.operatorEnvelopes = [];\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (fromBeepBox))\n                                    aa = pregoldToEnvelope[aa];\n                                if (fromJummBox)\n                                    aa = jummToUltraEnvelope[aa];\n                                legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(aa);\n                            }\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        else {\n                            const envelopeCount = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            let envelopeDiscrete = false;\n                            if ((fromJummBox && !beforeSix) || (fromUltraBox && !beforeFive) || (fromSlarmoosBox)) {\n                                instrument.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (!fromSlarmoosBox || beforeFive) {\n                                    envelopeDiscrete = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                                }\n                            }\n                            for (let i = 0; i < envelopeCount; i++) {\n                                const target = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                let index = 0;\n                                const maxCount = Config.instrumentAutomationTargets[target].maxCount;\n                                if (maxCount > 1) {\n                                    index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (fromBeepBox))\n                                    aa = pregoldToEnvelope[aa];\n                                if (fromJummBox)\n                                    aa = jummToUltraEnvelope[aa];\n                                if (!fromSlarmoosBox && aa >= 2)\n                                    aa++;\n                                let updatedEnvelopes = false;\n                                let perEnvelopeSpeed = 1;\n                                if (!fromSlarmoosBox || beforeThree) {\n                                    updatedEnvelopes = true;\n                                    perEnvelopeSpeed = Config.envelopes[aa].speed;\n                                    aa = Config.envelopes[aa].type;\n                                }\n                                else if (beforeFour && aa >= 3)\n                                    aa++;\n                                let isTremolo2 = false;\n                                if ((fromSlarmoosBox && !beforeThree && beforeFour) || updatedEnvelopes) {\n                                    if (aa == 9)\n                                        isTremolo2 = true;\n                                    aa = slarURL3toURL4Envelope[aa];\n                                }\n                                const envelope = clamp(0, ((fromSlarmoosBox && !beforeThree || updatedEnvelopes) ? Config.newEnvelopes.length : Config.envelopes.length), aa);\n                                let pitchEnvelopeStart = 0;\n                                let pitchEnvelopeEnd = Config.maxPitch;\n                                let envelopeInverse = false;\n                                perEnvelopeSpeed = (fromSlarmoosBox && !beforeThree) ? Config.newEnvelopes[envelope].speed : perEnvelopeSpeed;\n                                let perEnvelopeLowerBound = 0;\n                                let perEnvelopeUpperBound = 1;\n                                let steps = 2;\n                                let seed = 2;\n                                let waveform = 0;\n                                if (fromSlarmoosBox && !beforeFour) {\n                                    if (Config.newEnvelopes[envelope].name == \"lfo\") {\n                                        waveform = clamp(0, 7, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        if (waveform == 5 || waveform == 6) {\n                                            steps = clamp(1, Config.randomEnvelopeStepsMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                    }\n                                    else if (Config.newEnvelopes[envelope].name == \"random\") {\n                                        steps = clamp(1, Config.randomEnvelopeStepsMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        seed = clamp(1, Config.randomEnvelopeSeedMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        waveform = clamp(0, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                }\n                                if (fromSlarmoosBox && !beforeThree) {\n                                    if (Config.newEnvelopes[envelope].name == \"pitch\") {\n                                        if (!instrument.isNoiseInstrument) {\n                                            let pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                            pitchEnvelopeStart = clamp(0, Config.maxPitch + 1, pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                            pitchEnvelopeEnd = clamp(0, Config.maxPitch + 1, pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        else {\n                                            pitchEnvelopeStart = clamp(0, Config.drumCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            pitchEnvelopeEnd = clamp(0, Config.drumCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                    }\n                                    let checkboxValues = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if (fromSlarmoosBox && !beforeFive) {\n                                        envelopeDiscrete = (checkboxValues >> 1) == 1 ? true : false;\n                                    }\n                                    envelopeInverse = (checkboxValues & 1) == 1 ? true : false;\n                                    if (Config.newEnvelopes[envelope].name != \"pitch\" && Config.newEnvelopes[envelope].name != \"note size\" && Config.newEnvelopes[envelope].name != \"punch\" && Config.newEnvelopes[envelope].name != \"none\") {\n                                        perEnvelopeSpeed = Config.perEnvelopeSpeedIndices[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                                    }\n                                    perEnvelopeLowerBound = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 10;\n                                    perEnvelopeUpperBound = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 10;\n                                }\n                                if (!fromSlarmoosBox || beforeFour) {\n                                    if (isTremolo2) {\n                                        waveform = 0;\n                                        if (envelopeInverse) {\n                                            perEnvelopeUpperBound = Math.floor((perEnvelopeUpperBound / 2) * 10) / 10;\n                                            perEnvelopeLowerBound = Math.floor((perEnvelopeLowerBound / 2) * 10) / 10;\n                                        }\n                                        else {\n                                            perEnvelopeUpperBound = Math.floor((0.5 + (perEnvelopeUpperBound - perEnvelopeLowerBound) / 2) * 10) / 10;\n                                            perEnvelopeLowerBound = 0.5;\n                                        }\n                                    }\n                                }\n                                instrument.addEnvelope(target, index, envelope, true, pitchEnvelopeStart, pitchEnvelopeEnd, envelopeInverse, perEnvelopeSpeed, perEnvelopeLowerBound, perEnvelopeUpperBound, steps, seed, waveform, envelopeDiscrete);\n                                if (fromSlarmoosBox && beforeThree && !beforeTwo) {\n                                    let pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.envelopes[i].pitchEnvelopeStart = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.envelopes[i].pitchEnvelopeEnd = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.envelopes[i].inverse = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1 ? true : false;\n                                }\n                            }\n                            let instrumentPitchEnvelopeStart = 0;\n                            let instrumentPitchEnvelopeEnd = Config.maxPitch;\n                            let instrumentEnvelopeInverse = false;\n                            if (fromSlarmoosBox && beforeTwo) {\n                                let pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrumentPitchEnvelopeStart = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrumentPitchEnvelopeEnd = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrumentEnvelopeInverse = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] === 1 ? true : false;\n                                for (let i = 0; i < envelopeCount; i++) {\n                                    instrument.envelopes[i].pitchEnvelopeStart = instrumentPitchEnvelopeStart;\n                                    instrument.envelopes[i].pitchEnvelopeEnd = instrumentPitchEnvelopeEnd;\n                                    instrument.envelopes[i].inverse = Config.envelopes[instrument.envelopes[i].envelope].name == \"pitch\" ? instrumentEnvelopeInverse : false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 82:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (beforeThree && fromGoldBox) {\n                            for (let o = 0; o < Config.operatorCount; o++) {\n                                const pre3To3g = [0, 1, 3, 2, 2, 2, 4, 5];\n                                const old = clamp(0, pre3To3g.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (old == 3) {\n                                    instrument.operators[o].pulseWidth = 5;\n                                }\n                                else if (old == 4) {\n                                    instrument.operators[o].pulseWidth = 4;\n                                }\n                                else if (old == 5) {\n                                    instrument.operators[o].pulseWidth = 6;\n                                }\n                                instrument.operators[o].waveform = pre3To3g[old];\n                            }\n                        }\n                        else {\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                if (fromJummBox) {\n                                    const jummToG = [0, 1, 3, 2, 4, 5];\n                                    instrument.operators[o].waveform = jummToG[clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                }\n                                else {\n                                    instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                if (instrument.operators[o].waveform == 2) {\n                                    instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 83:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (instrument.type == 3) {\n                            const byteCount = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                            for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                                instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                            }\n                            instrument.spectrumWave.markCustomWaveDirty();\n                            charIndex += byteCount;\n                        }\n                        else if (instrument.type == 4) {\n                            const byteCount = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                            for (let j = 0; j < Config.drumCount; j++) {\n                                for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                                    instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                                }\n                                instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                            }\n                            charIndex += byteCount;\n                        }\n                        else {\n                            throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\n                        }\n                    }\n                    break;\n                case 72:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const byteCount = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6);\n                        const bits = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                        for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                            instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\n                        }\n                        instrument.harmonicsWave.markCustomWaveDirty();\n                        charIndex += byteCount;\n                    }\n                    break;\n                case 88:\n                    {\n                        if ((fromJummBox && beforeFive) || (fromGoldBox && beforeFour)) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                            if (instrument.aliases) {\n                                instrument.distortion = 0;\n                                instrument.effects |= 1 << 3;\n                            }\n                        }\n                        else {\n                            if (fromUltraBox || fromSlarmoosBox) {\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.decimalOffset = clamp(0, 50 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                        }\n                    }\n                    break;\n                case 98:\n                    {\n                        let subStringLength;\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const barCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            subStringLength = Math.ceil(barCount * 0.5);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                            for (let i = 0; i < barCount; i++) {\n                                this.channels[channelIndex].bars[i] = bits.read(3) + 1;\n                            }\n                        }\n                        else if (beforeFive && fromBeepBox) {\n                            let neededBits = 0;\n                            while ((1 << neededBits) < this.patternsPerChannel)\n                                neededBits++;\n                            subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i = 0; i < this.barCount; i++) {\n                                    this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\n                                }\n                            }\n                        }\n                        else {\n                            let neededBits = 0;\n                            while ((1 << neededBits) < this.patternsPerChannel + 1)\n                                neededBits++;\n                            subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i = 0; i < this.barCount; i++) {\n                                    this.channels[channelIndex].bars[i] = bits.read(neededBits);\n                                }\n                            }\n                        }\n                        charIndex += subStringLength;\n                    }\n                    break;\n                case 112:\n                    {\n                        let bitStringLength = 0;\n                        let channelIndex;\n                        let largerChords = !((beforeFour && fromJummBox) || fromBeepBox);\n                        let recentPitchBitLength = (largerChords ? 4 : 3);\n                        let recentPitchLength = (largerChords ? 16 : 8);\n                        if (beforeThree && fromBeepBox) {\n                            channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            charIndex++;\n                            bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            bitStringLength = bitStringLength << 6;\n                            bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        else {\n                            channelIndex = 0;\n                            let bitStringLengthLength = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            while (bitStringLengthLength > 0) {\n                                bitStringLength = bitStringLength << 6;\n                                bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                bitStringLengthLength--;\n                            }\n                        }\n                        const bits = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\n                        charIndex += bitStringLength;\n                        const bitsPerNoteSize = Song.getNeededBits(Config.noteSizeMax);\n                        let songReverbChannel = -1;\n                        let songReverbInstrument = -1;\n                        let songReverbIndex = -1;\n                        const shouldCorrectTempoMods = fromJummBox;\n                        const jummboxTempoMin = 30;\n                        while (true) {\n                            const channel = this.channels[channelIndex];\n                            const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n                            const isModChannel = this.getChannelIsMod(channelIndex);\n                            const maxInstrumentsPerPattern = this.getMaxInstrumentsPerPattern(channelIndex);\n                            const neededInstrumentCountBits = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n                            const neededInstrumentIndexBits = Song.getNeededBits(channel.instruments.length - 1);\n                            if (isModChannel) {\n                                let jumfive = (beforeFive && fromJummBox) || (beforeFour && fromGoldBox);\n                                const neededModInstrumentIndexBits = (jumfive) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n                                for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                                    let instrument = channel.instruments[instrumentIndex];\n                                    for (let mod = 0; mod < Config.modCount; mod++) {\n                                        let status = bits.read(2);\n                                        switch (status) {\n                                            case 0:\n                                                instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\n                                                instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\n                                                break;\n                                            case 1:\n                                                instrument.modChannels[mod] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\n                                                instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\n                                                break;\n                                            case 2:\n                                                instrument.modChannels[mod] = -1;\n                                                break;\n                                            case 3:\n                                                instrument.modChannels[mod] = -2;\n                                                break;\n                                        }\n                                        if (status != 3) {\n                                            instrument.modulators[mod] = bits.read(6);\n                                        }\n                                        if (!jumfive && (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\" || Config.modulators[instrument.modulators[mod]].name == \"song eq\")) {\n                                            instrument.modFilterTypes[mod] = bits.read(6);\n                                        }\n                                        if (Config.modulators[instrument.modulators[mod]].name == \"individual envelope speed\" ||\n                                            Config.modulators[instrument.modulators[mod]].name == \"reset envelope\" ||\n                                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope lower bound\" ||\n                                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope upper bound\") {\n                                            instrument.modEnvelopeNumbers[mod] = bits.read(6);\n                                        }\n                                        if (jumfive && instrument.modChannels[mod] >= 0) {\n                                            let forNoteFilter = effectsIncludeNoteFilter(this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects);\n                                            if (instrument.modulators[mod] == 7) {\n                                                if (forNoteFilter) {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\n                                                }\n                                                else {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\n                                                }\n                                                instrument.modFilterTypes[mod] = 1;\n                                            }\n                                            else if (instrument.modulators[mod] == 8) {\n                                                if (forNoteFilter) {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\n                                                }\n                                                else {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\n                                                }\n                                                instrument.modFilterTypes[mod] = 2;\n                                            }\n                                        }\n                                        else if (jumfive) {\n                                            if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\n                                                songReverbChannel = channelIndex;\n                                                songReverbInstrument = instrumentIndex;\n                                                songReverbIndex = mod;\n                                            }\n                                        }\n                                        if (jumfive && Config.modulators[instrument.modulators[mod]].associatedEffect != 15) {\n                                            this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects |= 1 << Config.modulators[instrument.modulators[mod]].associatedEffect;\n                                        }\n                                    }\n                                }\n                            }\n                            const detuneScaleNotes = [];\n                            for (let j = 0; j < channel.instruments.length; j++) {\n                                detuneScaleNotes[j] = [];\n                                for (let i = 0; i < Config.modCount; i++) {\n                                    detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(((beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\n                                }\n                            }\n                            const octaveOffset = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\n                            let lastPitch = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\n                            const recentPitches = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n                            const recentShapes = [];\n                            for (let i = 0; i < recentPitches.length; i++) {\n                                recentPitches[i] += octaveOffset;\n                            }\n                            for (let i = 0; i < this.patternsPerChannel; i++) {\n                                const newPattern = channel.patterns[i];\n                                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                                    newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\n                                    newPattern.instruments.length = 1;\n                                }\n                                else {\n                                    if (this.patternInstruments) {\n                                        const instrumentCount = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\n                                        for (let j = 0; j < instrumentCount; j++) {\n                                            newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\n                                        }\n                                        newPattern.instruments.length = instrumentCount;\n                                    }\n                                    else {\n                                        newPattern.instruments[0] = 0;\n                                        newPattern.instruments.length = Config.instrumentCountMin;\n                                    }\n                                }\n                                if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\n                                    newPattern.notes.length = 0;\n                                    continue;\n                                }\n                                let curPart = 0;\n                                const newNotes = newPattern.notes;\n                                let noteCount = 0;\n                                while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n                                    const useOldShape = bits.read(1) == 1;\n                                    let newNote = false;\n                                    let shapeIndex = 0;\n                                    if (useOldShape) {\n                                        shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\n                                    }\n                                    else {\n                                        newNote = bits.read(1) == 1;\n                                    }\n                                    if (!useOldShape && !newNote) {\n                                        if (isModChannel) {\n                                            const isBackwards = bits.read(1) == 1;\n                                            const restLength = bits.readPartDuration();\n                                            if (isBackwards) {\n                                                curPart -= restLength;\n                                            }\n                                            else {\n                                                curPart += restLength;\n                                            }\n                                        }\n                                        else {\n                                            const restLength = (beforeSeven && fromBeepBox)\n                                                ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                                : bits.readPartDuration();\n                                            curPart += restLength;\n                                        }\n                                    }\n                                    else {\n                                        let shape;\n                                        if (useOldShape) {\n                                            shape = recentShapes[shapeIndex];\n                                            recentShapes.splice(shapeIndex, 1);\n                                        }\n                                        else {\n                                            shape = {};\n                                            if (!largerChords) {\n                                                shape.pitchCount = 1;\n                                                while (shape.pitchCount < 4 && bits.read(1) == 1)\n                                                    shape.pitchCount++;\n                                            }\n                                            else {\n                                                if (bits.read(1) == 1) {\n                                                    shape.pitchCount = bits.read(3) + 2;\n                                                }\n                                                else {\n                                                    shape.pitchCount = 1;\n                                                }\n                                            }\n                                            shape.pinCount = bits.readPinCount();\n                                            if (fromBeepBox) {\n                                                shape.initialSize = bits.read(2) * 2;\n                                            }\n                                            else if (!isModChannel) {\n                                                shape.initialSize = bits.read(bitsPerNoteSize);\n                                            }\n                                            else {\n                                                shape.initialSize = bits.read(9);\n                                            }\n                                            shape.pins = [];\n                                            shape.length = 0;\n                                            shape.bendCount = 0;\n                                            for (let j = 0; j < shape.pinCount; j++) {\n                                                let pinObj = {};\n                                                pinObj.pitchBend = bits.read(1) == 1;\n                                                if (pinObj.pitchBend)\n                                                    shape.bendCount++;\n                                                shape.length += (beforeSeven && fromBeepBox)\n                                                    ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                                    : bits.readPartDuration();\n                                                pinObj.time = shape.length;\n                                                if (fromBeepBox) {\n                                                    pinObj.size = bits.read(2) * 2;\n                                                }\n                                                else if (!isModChannel) {\n                                                    pinObj.size = bits.read(bitsPerNoteSize);\n                                                }\n                                                else {\n                                                    pinObj.size = bits.read(9);\n                                                }\n                                                shape.pins.push(pinObj);\n                                            }\n                                        }\n                                        recentShapes.unshift(shape);\n                                        if (recentShapes.length > 10)\n                                            recentShapes.pop();\n                                        let note;\n                                        if (newNotes.length <= noteCount) {\n                                            note = new Note(0, curPart, curPart + shape.length, shape.initialSize);\n                                            newNotes[noteCount++] = note;\n                                        }\n                                        else {\n                                            note = newNotes[noteCount++];\n                                            note.start = curPart;\n                                            note.end = curPart + shape.length;\n                                            note.pins[0].size = shape.initialSize;\n                                        }\n                                        let pitch;\n                                        let pitchCount = 0;\n                                        const pitchBends = [];\n                                        for (let j = 0; j < shape.pitchCount + shape.bendCount; j++) {\n                                            const useOldPitch = bits.read(1) == 1;\n                                            if (!useOldPitch) {\n                                                const interval = bits.readPitchInterval();\n                                                pitch = lastPitch;\n                                                let intervalIter = interval;\n                                                while (intervalIter > 0) {\n                                                    pitch++;\n                                                    while (recentPitches.indexOf(pitch) != -1)\n                                                        pitch++;\n                                                    intervalIter--;\n                                                }\n                                                while (intervalIter < 0) {\n                                                    pitch--;\n                                                    while (recentPitches.indexOf(pitch) != -1)\n                                                        pitch--;\n                                                    intervalIter++;\n                                                }\n                                            }\n                                            else {\n                                                const pitchIndex = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\n                                                pitch = recentPitches[pitchIndex];\n                                                recentPitches.splice(pitchIndex, 1);\n                                            }\n                                            recentPitches.unshift(pitch);\n                                            if (recentPitches.length > recentPitchLength)\n                                                recentPitches.pop();\n                                            if (j < shape.pitchCount) {\n                                                note.pitches[pitchCount++] = pitch;\n                                            }\n                                            else {\n                                                pitchBends.push(pitch);\n                                            }\n                                            if (j == shape.pitchCount - 1) {\n                                                lastPitch = note.pitches[0];\n                                            }\n                                            else {\n                                                lastPitch = pitch;\n                                            }\n                                        }\n                                        note.pitches.length = pitchCount;\n                                        pitchBends.unshift(note.pitches[0]);\n                                        const noteIsForTempoMod = isModChannel && channel.instruments[newPattern.instruments[0]].modulators[Config.modCount - 1 - note.pitches[0]] === Config.modulators.dictionary[\"tempo\"].index;\n                                        let tempoOffset = 0;\n                                        if (shouldCorrectTempoMods && noteIsForTempoMod) {\n                                            tempoOffset = jummboxTempoMin - Config.tempoMin;\n                                        }\n                                        if (isModChannel) {\n                                            note.pins[0].size += tempoOffset;\n                                            note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\n                                        }\n                                        let pinCount = 1;\n                                        for (const pinObj of shape.pins) {\n                                            if (pinObj.pitchBend)\n                                                pitchBends.shift();\n                                            const interval = pitchBends[0] - note.pitches[0];\n                                            if (note.pins.length <= pinCount) {\n                                                if (isModChannel) {\n                                                    note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]] + tempoOffset);\n                                                }\n                                                else {\n                                                    note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\n                                                }\n                                            }\n                                            else {\n                                                const pin = note.pins[pinCount++];\n                                                pin.interval = interval;\n                                                pin.time = pinObj.time;\n                                                if (isModChannel) {\n                                                    pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]] + tempoOffset;\n                                                }\n                                                else {\n                                                    pin.size = pinObj.size;\n                                                }\n                                            }\n                                        }\n                                        note.pins.length = pinCount;\n                                        if (note.start == 0) {\n                                            if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox))) {\n                                                note.continuesLastPattern = (bits.read(1) == 1);\n                                            }\n                                            else {\n                                                if ((beforeFour && !fromUltraBox && !fromSlarmoosBox) || fromBeepBox) {\n                                                    note.continuesLastPattern = false;\n                                                }\n                                                else {\n                                                    note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\n                                                }\n                                            }\n                                        }\n                                        curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\n                                    }\n                                }\n                                newNotes.length = noteCount;\n                            }\n                            if (beforeThree && fromBeepBox) {\n                                break;\n                            }\n                            else {\n                                channelIndex++;\n                                if (channelIndex >= this.getChannelCount())\n                                    break;\n                            }\n                        }\n                        if (((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) && songReverbIndex >= 0) {\n                            for (let channelIndex = 0; channelIndex < this.channels.length; channelIndex++) {\n                                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                                    const instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                                    if (effectsIncludeReverb(instrument.effects)) {\n                                        instrument.reverb = Config.reverbRange - 1;\n                                    }\n                                    if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\n                                        const patternIndex = this.channels[channelIndex].bars[0];\n                                        if (patternIndex > 0) {\n                                            const pattern = this.channels[channelIndex].patterns[patternIndex - 1];\n                                            let lowestPart = 6;\n                                            for (const note of pattern.notes) {\n                                                if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\n                                                    lowestPart = Math.min(lowestPart, note.start);\n                                                }\n                                            }\n                                            if (lowestPart > 0) {\n                                                pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\n                                            }\n                                        }\n                                        else {\n                                            if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\n                                                const pattern = new Pattern();\n                                                this.channels[channelIndex].patterns.push(pattern);\n                                                this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\n                                                if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\n                                                    for (let chn = 0; chn < this.channels.length; chn++) {\n                                                        if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\n                                                            this.channels[chn].patterns.push(new Pattern());\n                                                        }\n                                                    }\n                                                    this.patternsPerChannel++;\n                                                }\n                                                pattern.instruments.length = 1;\n                                                pattern.instruments[0] = songReverbInstrument;\n                                                pattern.notes.length = 0;\n                                                pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    {\n                        throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1) + \" \" + compressed.substring(0, charIndex));\n                    }\n                    break;\n            }\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n    static _isProperUrl(string) {\n        try {\n            if (OFFLINE) {\n                return Boolean(string);\n            }\n            else {\n                return Boolean(new URL(string));\n            }\n        }\n        catch (x) {\n            return false;\n        }\n    }\n    static _parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax) {\n        const defaultIndex = 0;\n        const defaultIntegratedSamples = Config.chipWaves[defaultIndex].samples;\n        const defaultSamples = Config.rawRawChipWaves[defaultIndex].samples;\n        const customSampleUrlIndex = customSampleUrls.length;\n        customSampleUrls.push(url);\n        const chipWaveIndex = Config.chipWaves.length;\n        let urlSliced = url;\n        let customSampleRate = 44100;\n        let isCustomPercussive = false;\n        let customRootKey = 60;\n        let presetIsUsingAdvancedLoopControls = false;\n        let presetChipWaveLoopStart = null;\n        let presetChipWaveLoopEnd = null;\n        let presetChipWaveStartOffset = null;\n        let presetChipWaveLoopMode = null;\n        let presetChipWavePlayBackwards = false;\n        let parsedSampleOptions = false;\n        let optionsStartIndex = url.indexOf(\"!\");\n        let optionsEndIndex = -1;\n        if (optionsStartIndex === 0) {\n            optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\n            if (optionsEndIndex !== -1) {\n                const rawOptions = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\n                for (const rawOption of rawOptions) {\n                    const optionCode = rawOption.charAt(0);\n                    const optionData = rawOption.slice(1, rawOption.length);\n                    if (optionCode === \"s\") {\n                        customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(optionData, 44100));\n                    }\n                    else if (optionCode === \"r\") {\n                        customRootKey = parseFloatWithDefault(optionData, 60);\n                    }\n                    else if (optionCode === \"p\") {\n                        isCustomPercussive = true;\n                    }\n                    else if (optionCode === \"a\") {\n                        presetChipWaveLoopStart = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopStart != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"b\") {\n                        presetChipWaveLoopEnd = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopEnd != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"c\") {\n                        presetChipWaveStartOffset = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveStartOffset != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"d\") {\n                        presetChipWaveLoopMode = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopMode != null) {\n                            presetChipWaveLoopMode = clamp(0, 3 + 1, presetChipWaveLoopMode);\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"e\") {\n                        presetChipWavePlayBackwards = true;\n                        presetIsUsingAdvancedLoopControls = true;\n                    }\n                }\n                urlSliced = url.slice(optionsEndIndex + 1, url.length);\n                parsedSampleOptions = true;\n            }\n        }\n        let parsedUrl = null;\n        if (Song._isProperUrl(urlSliced)) {\n            if (OFFLINE) {\n                parsedUrl = urlSliced;\n            }\n            else {\n                parsedUrl = new URL(urlSliced);\n            }\n        }\n        else {\n            alert(url + \" is not a valid url\");\n            return false;\n        }\n        if (parseOldSyntax) {\n            if (!parsedSampleOptions && parsedUrl != null) {\n                if (url.indexOf(\"@\") != -1) {\n                    urlSliced = url.replaceAll(\"@\", \"\");\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    }\n                    else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    isCustomPercussive = true;\n                }\n                function sliceForSampleRate() {\n                    urlSliced = url.slice(0, url.indexOf(\",\"));\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    }\n                    else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(url.slice(url.indexOf(\",\") + 1), 44100));\n                }\n                function sliceForRootKey() {\n                    urlSliced = url.slice(0, url.indexOf(\"!\"));\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    }\n                    else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    customRootKey = parseFloatWithDefault(url.slice(url.indexOf(\"!\") + 1), 60);\n                }\n                if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\n                    if (url.indexOf(\",\") < url.indexOf(\"!\")) {\n                        sliceForRootKey();\n                        sliceForSampleRate();\n                    }\n                    else {\n                        sliceForSampleRate();\n                        sliceForRootKey();\n                    }\n                }\n                else {\n                    if (url.indexOf(\",\") != -1) {\n                        sliceForSampleRate();\n                    }\n                    if (url.indexOf(\"!\") != -1) {\n                        sliceForRootKey();\n                    }\n                }\n            }\n        }\n        if (parsedUrl != null) {\n            let urlWithNamedOptions = urlSliced;\n            const namedOptions = [];\n            if (customSampleRate !== 44100)\n                namedOptions.push(\"s\" + customSampleRate);\n            if (customRootKey !== 60)\n                namedOptions.push(\"r\" + customRootKey);\n            if (isCustomPercussive)\n                namedOptions.push(\"p\");\n            if (presetIsUsingAdvancedLoopControls) {\n                if (presetChipWaveLoopStart != null)\n                    namedOptions.push(\"a\" + presetChipWaveLoopStart);\n                if (presetChipWaveLoopEnd != null)\n                    namedOptions.push(\"b\" + presetChipWaveLoopEnd);\n                if (presetChipWaveStartOffset != null)\n                    namedOptions.push(\"c\" + presetChipWaveStartOffset);\n                if (presetChipWaveLoopMode != null)\n                    namedOptions.push(\"d\" + presetChipWaveLoopMode);\n                if (presetChipWavePlayBackwards)\n                    namedOptions.push(\"e\");\n            }\n            if (namedOptions.length > 0) {\n                urlWithNamedOptions = \"!\" + namedOptions.join(\",\") + \"!\" + urlSliced;\n            }\n            customSampleUrls[customSampleUrlIndex] = urlWithNamedOptions;\n            let name;\n            if (OFFLINE) {\n                name = decodeURIComponent(parsedUrl.replace(/^([^\\/]*\\/)+/, \"\"));\n            }\n            else {\n                name = decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\n            }\n            const expression = 1.0;\n            Config.chipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultIntegratedSamples,\n                index: chipWaveIndex,\n            };\n            Config.rawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamples,\n                index: chipWaveIndex,\n            };\n            Config.rawRawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamples,\n                index: chipWaveIndex,\n            };\n            const customSamplePresetSettings = {\n                \"type\": \"chip\",\n                \"eqFilter\": [],\n                \"effects\": [],\n                \"transition\": \"normal\",\n                \"fadeInSeconds\": 0,\n                \"fadeOutTicks\": -3,\n                \"chord\": \"harmony\",\n                \"wave\": name,\n                \"unison\": \"none\",\n                \"envelopes\": [],\n            };\n            if (presetIsUsingAdvancedLoopControls) {\n                customSamplePresetSettings[\"isUsingAdvancedLoopControls\"] = true;\n                customSamplePresetSettings[\"chipWaveLoopStart\"] = presetChipWaveLoopStart != null ? presetChipWaveLoopStart : 0;\n                customSamplePresetSettings[\"chipWaveLoopEnd\"] = presetChipWaveLoopEnd != null ? presetChipWaveLoopEnd : 2;\n                customSamplePresetSettings[\"chipWaveLoopMode\"] = presetChipWaveLoopMode != null ? presetChipWaveLoopMode : 0;\n                customSamplePresetSettings[\"chipWavePlayBackwards\"] = presetChipWavePlayBackwards;\n                customSamplePresetSettings[\"chipWaveStartOffset\"] = presetChipWaveStartOffset != null ? presetChipWaveStartOffset : 0;\n            }\n            const customSamplePreset = {\n                index: 0,\n                name: name,\n                midiProgram: 80,\n                settings: customSamplePresetSettings,\n            };\n            customSamplePresets.push(customSamplePreset);\n            if (!Config.willReloadForCustomSamples) {\n                const rawLoopOptions = {\n                    \"isUsingAdvancedLoopControls\": presetIsUsingAdvancedLoopControls,\n                    \"chipWaveLoopStart\": presetChipWaveLoopStart,\n                    \"chipWaveLoopEnd\": presetChipWaveLoopEnd,\n                    \"chipWaveLoopMode\": presetChipWaveLoopMode,\n                    \"chipWavePlayBackwards\": presetChipWavePlayBackwards,\n                    \"chipWaveStartOffset\": presetChipWaveStartOffset,\n                };\n                startLoadingSample(urlSliced, chipWaveIndex, customSamplePresetSettings, rawLoopOptions, customSampleRate);\n            }\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = urlSliced;\n            sampleLoadingState.totalSamples++;\n        }\n        return true;\n    }\n    static _restoreChipWaveListToDefault() {\n        Config.chipWaves = toNameMap(Config.chipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawChipWaves = toNameMap(Config.rawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawRawChipWaves = toNameMap(Config.rawRawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n    }\n    static _clearSamples() {\n        EditorConfig.customSamples = null;\n        Song._restoreChipWaveListToDefault();\n        sampleLoadingState.statusTable = {};\n        sampleLoadingState.urlTable = {};\n        sampleLoadingState.totalSamples = 0;\n        sampleLoadingState.samplesLoaded = 0;\n        sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n    }\n    toJsonObject(enableIntro = true, loopCount = 1, enableOutro = true) {\n        const channelArray = [];\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel = this.channels[channelIndex];\n            const instrumentArray = [];\n            const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n            const isModChannel = this.getChannelIsMod(channelIndex);\n            for (const instrument of channel.instruments) {\n                instrumentArray.push(instrument.toJsonObject());\n            }\n            const patternArray = [];\n            for (const pattern of channel.patterns) {\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\n            }\n            const sequenceArray = [];\n            if (enableIntro)\n                for (let i = 0; i < this.loopStart; i++) {\n                    sequenceArray.push(channel.bars[i]);\n                }\n            for (let l = 0; l < loopCount; l++)\n                for (let i = this.loopStart; i < this.loopStart + this.loopLength; i++) {\n                    sequenceArray.push(channel.bars[i]);\n                }\n            if (enableOutro)\n                for (let i = this.loopStart + this.loopLength; i < this.barCount; i++) {\n                    sequenceArray.push(channel.bars[i]);\n                }\n            const channelObject = {\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\n                \"name\": channel.name,\n                \"instruments\": instrumentArray,\n                \"patterns\": patternArray,\n                \"sequence\": sequenceArray,\n            };\n            if (!isNoiseChannel) {\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\n            }\n            channelArray.push(channelObject);\n        }\n        const result = {\n            \"name\": this.title,\n            \"format\": Song._format,\n            \"version\": Song._latestSlarmoosBoxVersion,\n            \"scale\": Config.scales[this.scale].name,\n            \"customScale\": this.scaleCustom,\n            \"key\": Config.keys[this.key].name,\n            \"keyOctave\": this.octave,\n            \"introBars\": this.loopStart,\n            \"loopBars\": this.loopLength,\n            \"beatsPerBar\": this.beatsPerBar,\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\n            \"beatsPerMinute\": this.tempo,\n            \"reverb\": this.reverb,\n            \"masterGain\": this.masterGain,\n            \"compressionThreshold\": this.compressionThreshold,\n            \"limitThreshold\": this.limitThreshold,\n            \"limitDecay\": this.limitDecay,\n            \"limitRise\": this.limitRise,\n            \"limitRatio\": this.limitRatio,\n            \"compressionRatio\": this.compressionRatio,\n            \"songEq\": this.eqFilter.toJsonObject(),\n            \"layeredInstruments\": this.layeredInstruments,\n            \"patternInstruments\": this.patternInstruments,\n            \"channels\": channelArray,\n        };\n        for (let i = 0; i < Config.filterMorphCount - 1; i++) {\n            result[\"songEq\" + i] = this.eqSubFilters[i];\n        }\n        if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n            result[\"customSamples\"] = EditorConfig.customSamples;\n        }\n        return result;\n    }\n    fromJsonObject(jsonObject, jsonFormat = \"auto\") {\n        this.initToDefault(true);\n        if (!jsonObject)\n            return;\n        if (jsonFormat == \"auto\") {\n            if (jsonObject[\"format\"] == \"BeepBox\") {\n                if (jsonObject[\"riff\"] != undefined) {\n                    jsonFormat = \"modbox\";\n                }\n                if (jsonObject[\"masterGain\"] != undefined) {\n                    jsonFormat = \"jummbox\";\n                }\n            }\n        }\n        const format = (jsonFormat == \"auto\" ? jsonObject[\"format\"] : jsonFormat).toLowerCase();\n        if (jsonObject[\"name\"] != undefined) {\n            this.title = jsonObject[\"name\"];\n        }\n        if (jsonObject[\"customSamples\"] != undefined) {\n            const customSamples = jsonObject[\"customSamples\"];\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != customSamples.join(\", \")) {\n                Config.willReloadForCustomSamples = true;\n                Song._restoreChipWaveListToDefault();\n                let willLoadLegacySamples = false;\n                let willLoadNintariboxSamples = false;\n                let willLoadMarioPaintboxSamples = false;\n                const customSampleUrls = [];\n                const customSamplePresets = [];\n                for (const url of customSamples) {\n                    if (url.toLowerCase() === \"legacysamples\") {\n                        if (!willLoadLegacySamples) {\n                            willLoadLegacySamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(0);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\n                        if (!willLoadNintariboxSamples) {\n                            willLoadNintariboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(1);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                        if (!willLoadMarioPaintboxSamples) {\n                            willLoadMarioPaintboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(2);\n                        }\n                    }\n                    else {\n                        const parseOldSyntax = false;\n                        Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                    }\n                }\n                if (customSampleUrls.length > 0) {\n                    EditorConfig.customSamples = customSampleUrls;\n                }\n                if (customSamplePresets.length > 0) {\n                    const customSamplePresetsMap = toNameMap(customSamplePresets);\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                        name: \"Custom Sample Presets\",\n                        presets: customSamplePresetsMap,\n                        index: EditorConfig.presetCategories.length,\n                    };\n                }\n            }\n        }\n        else {\n            let shouldLoadLegacySamples = false;\n            if (jsonObject[\"channels\"] != undefined) {\n                for (let channelIndex = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                    const channelObject = jsonObject[\"channels\"][channelIndex];\n                    if (channelObject[\"type\"] !== \"pitch\") {\n                        continue;\n                    }\n                    if (Array.isArray(channelObject[\"instruments\"])) {\n                        const instrumentObjects = channelObject[\"instruments\"];\n                        for (let i = 0; i < instrumentObjects.length; i++) {\n                            const instrumentObject = instrumentObjects[i];\n                            if (instrumentObject[\"type\"] !== \"chip\") {\n                                continue;\n                            }\n                            if (instrumentObject[\"wave\"] == null) {\n                                continue;\n                            }\n                            const waveName = instrumentObject[\"wave\"];\n                            const names = [\n                                \"paandorasbox kick\",\n                                \"paandorasbox snare\",\n                                \"paandorasbox piano1\",\n                                \"paandorasbox WOW\",\n                                \"paandorasbox overdrive\",\n                                \"paandorasbox trumpet\",\n                                \"paandorasbox saxophone\",\n                                \"paandorasbox orchestrahit\",\n                                \"paandorasbox detatched violin\",\n                                \"paandorasbox synth\",\n                                \"paandorasbox sonic3snare\",\n                                \"paandorasbox come on\",\n                                \"paandorasbox choir\",\n                                \"paandorasbox overdriveguitar\",\n                                \"paandorasbox flute\",\n                                \"paandorasbox legato violin\",\n                                \"paandorasbox tremolo violin\",\n                                \"paandorasbox amen break\",\n                                \"paandorasbox pizzicato violin\",\n                                \"paandorasbox tim allen grunt\",\n                                \"paandorasbox tuba\",\n                                \"paandorasbox loopingcymbal\",\n                                \"paandorasbox standardkick\",\n                                \"paandorasbox standardsnare\",\n                                \"paandorasbox closedhihat\",\n                                \"paandorasbox foothihat\",\n                                \"paandorasbox openhihat\",\n                                \"paandorasbox crashcymbal\",\n                                \"paandorasbox pianoC4\",\n                                \"paandorasbox liver pad\",\n                                \"paandorasbox marimba\",\n                                \"paandorasbox susdotwav\",\n                                \"paandorasbox wackyboxtts\",\n                                \"paandorasbox peppersteak_1\",\n                                \"paandorasbox peppersteak_2\",\n                                \"paandorasbox vinyl_noise\",\n                                \"paandorasbeta slap bass\",\n                                \"paandorasbeta HD EB overdrive guitar\",\n                                \"paandorasbeta sunsoft bass\",\n                                \"paandorasbeta masculine choir\",\n                                \"paandorasbeta feminine choir\",\n                                \"paandorasbeta tololoche\",\n                                \"paandorasbeta harp\",\n                                \"paandorasbeta pan flute\",\n                                \"paandorasbeta krumhorn\",\n                                \"paandorasbeta timpani\",\n                                \"paandorasbeta crowd hey\",\n                                \"paandorasbeta wario land 4 brass\",\n                                \"paandorasbeta wario land 4 rock organ\",\n                                \"paandorasbeta wario land 4 DAOW\",\n                                \"paandorasbeta wario land 4 hour chime\",\n                                \"paandorasbeta wario land 4 tick\",\n                                \"paandorasbeta kirby kick\",\n                                \"paandorasbeta kirby snare\",\n                                \"paandorasbeta kirby bongo\",\n                                \"paandorasbeta kirby click\",\n                                \"paandorasbeta sonor kick\",\n                                \"paandorasbeta sonor snare\",\n                                \"paandorasbeta sonor snare (left hand)\",\n                                \"paandorasbeta sonor snare (right hand)\",\n                                \"paandorasbeta sonor high tom\",\n                                \"paandorasbeta sonor low tom\",\n                                \"paandorasbeta sonor hihat (closed)\",\n                                \"paandorasbeta sonor hihat (half opened)\",\n                                \"paandorasbeta sonor hihat (open)\",\n                                \"paandorasbeta sonor hihat (open tip)\",\n                                \"paandorasbeta sonor hihat (pedal)\",\n                                \"paandorasbeta sonor crash\",\n                                \"paandorasbeta sonor crash (tip)\",\n                                \"paandorasbeta sonor ride\"\n                            ];\n                            const oldNames = [\n                                \"pandoraasbox kick\",\n                                \"pandoraasbox snare\",\n                                \"pandoraasbox piano1\",\n                                \"pandoraasbox WOW\",\n                                \"pandoraasbox overdrive\",\n                                \"pandoraasbox trumpet\",\n                                \"pandoraasbox saxophone\",\n                                \"pandoraasbox orchestrahit\",\n                                \"pandoraasbox detatched violin\",\n                                \"pandoraasbox synth\",\n                                \"pandoraasbox sonic3snare\",\n                                \"pandoraasbox come on\",\n                                \"pandoraasbox choir\",\n                                \"pandoraasbox overdriveguitar\",\n                                \"pandoraasbox flute\",\n                                \"pandoraasbox legato violin\",\n                                \"pandoraasbox tremolo violin\",\n                                \"pandoraasbox amen break\",\n                                \"pandoraasbox pizzicato violin\",\n                                \"pandoraasbox tim allen grunt\",\n                                \"pandoraasbox tuba\",\n                                \"pandoraasbox loopingcymbal\",\n                                \"pandoraasbox standardkick\",\n                                \"pandoraasbox standardsnare\",\n                                \"pandoraasbox closedhihat\",\n                                \"pandoraasbox foothihat\",\n                                \"pandoraasbox openhihat\",\n                                \"pandoraasbox crashcymbal\",\n                                \"pandoraasbox pianoC4\",\n                                \"pandoraasbox liver pad\",\n                                \"pandoraasbox marimba\",\n                                \"pandoraasbox susdotwav\",\n                                \"pandoraasbox wackyboxtts\",\n                                \"pandoraasbox peppersteak_1\",\n                                \"pandoraasbox peppersteak_2\",\n                                \"pandoraasbox vinyl_noise\",\n                                \"pandoraasbeta slap bass\",\n                                \"pandoraasbeta HD EB overdrive guitar\",\n                                \"pandoraasbeta sunsoft bass\",\n                                \"pandoraasbeta masculine choir\",\n                                \"pandoraasbeta feminine choir\",\n                                \"pandoraasbeta tololoche\",\n                                \"pandoraasbeta harp\",\n                                \"pandoraasbeta pan flute\",\n                                \"pandoraasbeta krumhorn\",\n                                \"pandoraasbeta timpani\",\n                                \"pandoraasbeta crowd hey\",\n                                \"pandoraasbeta wario land 4 brass\",\n                                \"pandoraasbeta wario land 4 rock organ\",\n                                \"pandoraasbeta wario land 4 DAOW\",\n                                \"pandoraasbeta wario land 4 hour chime\",\n                                \"pandoraasbeta wario land 4 tick\",\n                                \"pandoraasbeta kirby kick\",\n                                \"pandoraasbeta kirby snare\",\n                                \"pandoraasbeta kirby bongo\",\n                                \"pandoraasbeta kirby click\",\n                                \"pandoraasbeta sonor kick\",\n                                \"pandoraasbeta sonor snare\",\n                                \"pandoraasbeta sonor snare (left hand)\",\n                                \"pandoraasbeta sonor snare (right hand)\",\n                                \"pandoraasbeta sonor high tom\",\n                                \"pandoraasbeta sonor low tom\",\n                                \"pandoraasbeta sonor hihat (closed)\",\n                                \"pandoraasbeta sonor hihat (half opened)\",\n                                \"pandoraasbeta sonor hihat (open)\",\n                                \"pandoraasbeta sonor hihat (open tip)\",\n                                \"pandoraasbeta sonor hihat (pedal)\",\n                                \"pandoraasbeta sonor crash\",\n                                \"pandoraasbeta sonor crash (tip)\",\n                                \"pandoraasbeta sonor ride\"\n                            ];\n                            const veryOldNames = [\n                                \"kick\",\n                                \"snare\",\n                                \"piano1\",\n                                \"WOW\",\n                                \"overdrive\",\n                                \"trumpet\",\n                                \"saxophone\",\n                                \"orchestrahit\",\n                                \"detatched violin\",\n                                \"synth\",\n                                \"sonic3snare\",\n                                \"come on\",\n                                \"choir\",\n                                \"overdriveguitar\",\n                                \"flute\",\n                                \"legato violin\",\n                                \"tremolo violin\",\n                                \"amen break\",\n                                \"pizzicato violin\",\n                                \"tim allen grunt\",\n                                \"tuba\",\n                                \"loopingcymbal\",\n                                \"standardkick\",\n                                \"standardsnare\",\n                                \"closedhihat\",\n                                \"foothihat\",\n                                \"openhihat\",\n                                \"crashcymbal\",\n                                \"pianoC4\",\n                                \"liver pad\",\n                                \"marimba\",\n                                \"susdotwav\",\n                                \"wackyboxtts\"\n                            ];\n                            if (names.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                            }\n                            else if (oldNames.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                                instrumentObject[\"wave\"] = names[oldNames.findIndex(x => x === waveName)];\n                            }\n                            else if (veryOldNames.includes(waveName)) {\n                                if ((waveName === \"trumpet\" || waveName === \"flute\") && (format != \"paandorasbox\")) {\n                                }\n                                else {\n                                    shouldLoadLegacySamples = true;\n                                    instrumentObject[\"wave\"] = names[veryOldNames.findIndex(x => x === waveName)];\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (shouldLoadLegacySamples) {\n                Config.willReloadForCustomSamples = true;\n                Song._restoreChipWaveListToDefault();\n                loadBuiltInSamples(0);\n                EditorConfig.customSamples = [\"legacySamples\"];\n            }\n            else {\n                if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n                    Config.willReloadForCustomSamples = true;\n                    Song._clearSamples();\n                }\n            }\n        }\n        this.scale = 0;\n        if (jsonObject[\"scale\"] != undefined) {\n            const oldScaleNames = {\n                \"romani :)\": \"double harmonic :)\",\n                \"romani :(\": \"double harmonic :(\",\n                \"dbl harmonic :)\": \"double harmonic :)\",\n                \"dbl harmonic :(\": \"double harmonic :(\",\n                \"enigma\": \"strange\",\n            };\n            const scaleName = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\n            const scale = Config.scales.findIndex(scale => scale.name == scaleName);\n            if (scale != -1)\n                this.scale = scale;\n            if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                if (jsonObject[\"customScale\"] != undefined) {\n                    for (var i of jsonObject[\"customScale\"].keys()) {\n                        this.scaleCustom[i] = jsonObject[\"customScale\"][i];\n                    }\n                }\n            }\n        }\n        if (jsonObject[\"key\"] != undefined) {\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\n            }\n            else if (typeof (jsonObject[\"key\"]) == \"string\") {\n                const key = jsonObject[\"key\"];\n                if (key === \"C+\") {\n                    this.key = 0;\n                    this.octave = 1;\n                }\n                else if (key === \"G- (actually F#-)\") {\n                    this.key = 6;\n                    this.octave = -1;\n                }\n                else if (key === \"C-\") {\n                    this.key = 0;\n                    this.octave = -1;\n                }\n                else if (key === \"oh no (F-)\") {\n                    this.key = 5;\n                    this.octave = -1;\n                }\n                else {\n                    const letter = key.charAt(0).toUpperCase();\n                    const symbol = key.charAt(1).toLowerCase();\n                    const letterMap = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\n                    const accidentalMap = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\n                    let index = letterMap[letter];\n                    const offset = accidentalMap[symbol];\n                    if (index != undefined) {\n                        if (offset != undefined)\n                            index += offset;\n                        if (index < 0)\n                            index += 12;\n                        index = index % 12;\n                        this.key = index;\n                    }\n                }\n            }\n        }\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\n        }\n        if (jsonObject[\"keyOctave\"] != undefined) {\n            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, jsonObject[\"keyOctave\"] | 0);\n        }\n        let legacyGlobalReverb = 0;\n        if (jsonObject[\"reverb\"] != undefined) {\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\n        }\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\n        }\n        let importedPartsPerBeat = 4;\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\n            if (this.rhythm == -1) {\n                this.rhythm = 1;\n            }\n        }\n        if (jsonObject[\"masterGain\"] != undefined) {\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\n        }\n        else {\n            this.masterGain = 1.0;\n        }\n        if (jsonObject[\"limitThreshold\"] != undefined) {\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\n        }\n        else {\n            this.limitThreshold = 1.0;\n        }\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\n        }\n        else {\n            this.compressionThreshold = 1.0;\n        }\n        if (jsonObject[\"limitRise\"] != undefined) {\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\n        }\n        else {\n            this.limitRise = 4000.0;\n        }\n        if (jsonObject[\"limitDecay\"] != undefined) {\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\n        }\n        else {\n            this.limitDecay = 4.0;\n        }\n        if (jsonObject[\"limitRatio\"] != undefined) {\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\n        }\n        else {\n            this.limitRatio = 1.0;\n        }\n        if (jsonObject[\"compressionRatio\"] != undefined) {\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\n        }\n        else {\n            this.compressionRatio = 1.0;\n        }\n        if (jsonObject[\"songEq\"] != undefined) {\n            this.eqFilter.fromJsonObject(jsonObject[\"songEq\"]);\n        }\n        else {\n            this.eqFilter.reset();\n        }\n        for (let i = 0; i < Config.filterMorphCount - 1; i++) {\n            if (jsonObject[\"songEq\" + i]) {\n                this.eqSubFilters[i] = jsonObject[\"songEq\" + i];\n            }\n            else {\n                this.eqSubFilters[i] = null;\n            }\n        }\n        let maxInstruments = 1;\n        let maxPatterns = 1;\n        let maxBars = 1;\n        if (jsonObject[\"channels\"] != undefined) {\n            for (const channelObject of jsonObject[\"channels\"]) {\n                if (channelObject[\"instruments\"])\n                    maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\n                if (channelObject[\"patterns\"])\n                    maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\n                if (channelObject[\"sequence\"])\n                    maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\n            }\n        }\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\n        }\n        else {\n            this.layeredInstruments = false;\n        }\n        if (jsonObject[\"patternInstruments\"] != undefined) {\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\n        }\n        else {\n            this.patternInstruments = (maxInstruments > 1);\n        }\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\n        this.barCount = Math.min(maxBars, Config.barCountMax);\n        if (jsonObject[\"introBars\"] != undefined) {\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\n        }\n        if (jsonObject[\"loopBars\"] != undefined) {\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\n        }\n        const newPitchChannels = [];\n        const newNoiseChannels = [];\n        const newModChannels = [];\n        if (jsonObject[\"channels\"] != undefined) {\n            for (let channelIndex = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                let channelObject = jsonObject[\"channels\"][channelIndex];\n                const channel = new Channel();\n                let isNoiseChannel = false;\n                let isModChannel = false;\n                if (channelObject[\"type\"] != undefined) {\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\n                }\n                else {\n                    isNoiseChannel = (channelIndex >= 3);\n                }\n                if (isNoiseChannel) {\n                    newNoiseChannels.push(channel);\n                }\n                else if (isModChannel) {\n                    newModChannels.push(channel);\n                }\n                else {\n                    newPitchChannels.push(channel);\n                }\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\n                    if (isNoiseChannel)\n                        channel.octave = 0;\n                }\n                if (channelObject[\"name\"] != undefined) {\n                    channel.name = channelObject[\"name\"];\n                }\n                else {\n                    channel.name = \"\";\n                }\n                if (Array.isArray(channelObject[\"instruments\"])) {\n                    const instrumentObjects = channelObject[\"instruments\"];\n                    for (let i = 0; i < instrumentObjects.length; i++) {\n                        if (i >= this.getMaxInstrumentsPerChannel())\n                            break;\n                        const instrument = new Instrument(isNoiseChannel, isModChannel);\n                        channel.instruments[i] = instrument;\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb, format);\n                    }\n                }\n                for (let i = 0; i < this.patternsPerChannel; i++) {\n                    const pattern = new Pattern();\n                    channel.patterns[i] = pattern;\n                    let patternObject = undefined;\n                    if (channelObject[\"patterns\"])\n                        patternObject = channelObject[\"patterns\"][i];\n                    if (patternObject == undefined)\n                        continue;\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel, format);\n                }\n                channel.patterns.length = this.patternsPerChannel;\n                for (let i = 0; i < this.barCount; i++) {\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n        }\n        if (newPitchChannels.length > Config.pitchChannelCountMax)\n            newPitchChannels.length = Config.pitchChannelCountMax;\n        if (newNoiseChannels.length > Config.noiseChannelCountMax)\n            newNoiseChannels.length = Config.noiseChannelCountMax;\n        if (newModChannels.length > Config.modChannelCountMax)\n            newModChannels.length = Config.modChannelCountMax;\n        this.pitchChannelCount = newPitchChannels.length;\n        this.noiseChannelCount = newNoiseChannels.length;\n        this.modChannelCount = newModChannels.length;\n        this.channels.length = 0;\n        Array.prototype.push.apply(this.channels, newPitchChannels);\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\n        Array.prototype.push.apply(this.channels, newModChannels);\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n    getPattern(channelIndex, bar) {\n        if (bar < 0 || bar >= this.barCount)\n            return null;\n        const patternIndex = this.channels[channelIndex].bars[bar];\n        if (patternIndex == 0)\n            return null;\n        return this.channels[channelIndex].patterns[patternIndex - 1];\n    }\n    getBeatsPerMinute() {\n        return this.tempo;\n    }\n    static getNeededBits(maxValue) {\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\n    }\n    restoreLimiterDefaults() {\n        this.compressionRatio = 1.0;\n        this.limitRatio = 1.0;\n        this.limitRise = 4000.0;\n        this.limitDecay = 4.0;\n        this.limitThreshold = 1.0;\n        this.compressionThreshold = 1.0;\n        this.masterGain = 1.0;\n    }\n}\nSong._format = Config.jsonFormat;\nSong._oldestBeepboxVersion = 2;\nSong._latestBeepboxVersion = 9;\nSong._oldestJummBoxVersion = 1;\nSong._latestJummBoxVersion = 6;\nSong._oldestGoldBoxVersion = 1;\nSong._latestGoldBoxVersion = 4;\nSong._oldestUltraBoxVersion = 1;\nSong._latestUltraBoxVersion = 5;\nSong._oldestSlarmoosBoxVersion = 1;\nSong._latestSlarmoosBoxVersion = 5;\nSong._variant = 0x73;\nclass PickedString {\n    constructor() {\n        this.delayLine = null;\n        this.allPassG = 0.0;\n        this.allPassGDelta = 0.0;\n        this.sustainFilterA1 = 0.0;\n        this.sustainFilterA1Delta = 0.0;\n        this.sustainFilterA2 = 0.0;\n        this.sustainFilterA2Delta = 0.0;\n        this.sustainFilterB0 = 0.0;\n        this.sustainFilterB0Delta = 0.0;\n        this.sustainFilterB1 = 0.0;\n        this.sustainFilterB1Delta = 0.0;\n        this.sustainFilterB2 = 0.0;\n        this.sustainFilterB2Delta = 0.0;\n        this.reset();\n    }\n    reset() {\n        this.delayIndex = -1;\n        this.allPassSample = 0.0;\n        this.allPassPrevInput = 0.0;\n        this.sustainFilterSample = 0.0;\n        this.sustainFilterPrevOutput2 = 0.0;\n        this.sustainFilterPrevInput1 = 0.0;\n        this.sustainFilterPrevInput2 = 0.0;\n        this.fractionalDelaySample = 0.0;\n        this.prevDelayLength = -1.0;\n        this.delayResetOffset = 0;\n    }\n    update(synth, instrumentState, tone, stringIndex, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, sustainType) {\n        const allPassCenter = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\n        const prevDelayLength = this.prevDelayLength;\n        const phaseDeltaStart = tone.phaseDeltas[stringIndex];\n        const phaseDeltaScale = tone.phaseDeltaScales[stringIndex];\n        const phaseDeltaEnd = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\n        const radiansPerSampleStart = Math.PI * 2.0 * phaseDeltaStart;\n        const radiansPerSampleEnd = Math.PI * 2.0 * phaseDeltaEnd;\n        const centerHarmonicStart = radiansPerSampleStart * 2.0;\n        const centerHarmonicEnd = radiansPerSampleEnd * 2.0;\n        const allPassRadiansStart = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\n        const allPassRadiansEnd = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\n        const shelfRadians = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\n        const decayCurveStart = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\n        const decayCurveEnd = (Math.pow(100.0, stringDecayEnd) - 1.0) / 99.0;\n        const register = sustainType == 1 ? 0.25 : 0.0;\n        const registerShelfCenter = 15.6;\n        const registerLowpassCenter = 3.0 * synth.samplesPerSecond / 48000;\n        const decayRateStart = Math.pow(0.5, decayCurveStart * Math.pow(shelfRadians / (radiansPerSampleStart * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n        const decayRateEnd = Math.pow(0.5, decayCurveEnd * Math.pow(shelfRadians / (radiansPerSampleEnd * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n        const expressionDecayStart = Math.pow(decayRateStart, 0.002);\n        const expressionDecayEnd = Math.pow(decayRateEnd, 0.002);\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const allPassGStart = Synth.tempFilterStartCoefficients.b[0];\n        const allPassPhaseDelayStart = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const allPassGEnd = Synth.tempFilterEndCoefficients.b[0];\n        const allPassPhaseDelayEnd = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n        const brightnessType = sustainType == 0 ? 0 : 1;\n        if (brightnessType == 0) {\n            const shelfGainStart = Math.pow(decayRateStart, Config.stringDecayRate);\n            const shelfGainEnd = Math.pow(decayRateEnd, Config.stringDecayRate);\n            Synth.tempFilterStartCoefficients.highShelf2ndOrder(shelfRadians, shelfGainStart, 0.5);\n            Synth.tempFilterEndCoefficients.highShelf2ndOrder(shelfRadians, shelfGainEnd, 0.5);\n        }\n        else {\n            const cornerHardness = Math.pow(brightnessType == 1 ? 0.0 : 1.0, 0.25);\n            const lowpass1stOrderCutoffRadiansStart = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleStart * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveStart, .5);\n            const lowpass1stOrderCutoffRadiansEnd = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleEnd * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveEnd, .5);\n            const lowpass2ndOrderCutoffRadiansStart = lowpass1stOrderCutoffRadiansStart * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n            const lowpass2ndOrderCutoffRadiansEnd = lowpass1stOrderCutoffRadiansEnd * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n            const lowpass2ndOrderGainStart = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n            const lowpass2ndOrderGainEnd = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n            Synth.tempFilterStartCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansStart), lowpass2ndOrderGainStart);\n            Synth.tempFilterEndCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansEnd), lowpass2ndOrderGainEnd);\n        }\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const sustainFilterA1Start = Synth.tempFilterStartCoefficients.a[1];\n        const sustainFilterA2Start = Synth.tempFilterStartCoefficients.a[2];\n        const sustainFilterB0Start = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\n        const sustainFilterB1Start = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\n        const sustainFilterB2Start = Synth.tempFilterStartCoefficients.b[2] * expressionDecayStart;\n        const sustainFilterPhaseDelayStart = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const sustainFilterA1End = Synth.tempFilterEndCoefficients.a[1];\n        const sustainFilterA2End = Synth.tempFilterEndCoefficients.a[2];\n        const sustainFilterB0End = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\n        const sustainFilterB1End = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\n        const sustainFilterB2End = Synth.tempFilterEndCoefficients.b[2] * expressionDecayEnd;\n        const sustainFilterPhaseDelayEnd = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n        const periodLengthStart = 1.0 / phaseDeltaStart;\n        const periodLengthEnd = 1.0 / phaseDeltaEnd;\n        const minBufferLength = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\n        const delayLength = periodLengthStart - allPassPhaseDelayStart - sustainFilterPhaseDelayStart;\n        const delayLengthEnd = periodLengthEnd - allPassPhaseDelayEnd - sustainFilterPhaseDelayEnd;\n        this.prevDelayLength = delayLength;\n        this.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\n        this.allPassG = allPassGStart;\n        this.sustainFilterA1 = sustainFilterA1Start;\n        this.sustainFilterA2 = sustainFilterA2Start;\n        this.sustainFilterB0 = sustainFilterB0Start;\n        this.sustainFilterB1 = sustainFilterB1Start;\n        this.sustainFilterB2 = sustainFilterB2Start;\n        this.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\n        this.sustainFilterA1Delta = (sustainFilterA1End - sustainFilterA1Start) / roundedSamplesPerTick;\n        this.sustainFilterA2Delta = (sustainFilterA2End - sustainFilterA2Start) / roundedSamplesPerTick;\n        this.sustainFilterB0Delta = (sustainFilterB0End - sustainFilterB0Start) / roundedSamplesPerTick;\n        this.sustainFilterB1Delta = (sustainFilterB1End - sustainFilterB1Start) / roundedSamplesPerTick;\n        this.sustainFilterB2Delta = (sustainFilterB2End - sustainFilterB2Start) / roundedSamplesPerTick;\n        const pitchChanged = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\n        const reinitializeImpulse = (this.delayIndex == -1 || pitchChanged);\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\n            const likelyMaximumLength = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\n            const newDelayLine = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n            if (!reinitializeImpulse && this.delayLine != null) {\n                const oldDelayBufferMask = (this.delayLine.length - 1) >> 0;\n                const startCopyingFromIndex = this.delayIndex + this.delayResetOffset;\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\n                for (let i = 0; i < this.delayLine.length; i++) {\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n                }\n            }\n            this.delayLine = newDelayLine;\n        }\n        const delayLine = this.delayLine;\n        const delayBufferMask = (delayLine.length - 1) >> 0;\n        if (reinitializeImpulse) {\n            this.delayIndex = 0;\n            this.allPassSample = 0.0;\n            this.allPassPrevInput = 0.0;\n            this.sustainFilterSample = 0.0;\n            this.sustainFilterPrevOutput2 = 0.0;\n            this.sustainFilterPrevInput1 = 0.0;\n            this.sustainFilterPrevInput2 = 0.0;\n            this.fractionalDelaySample = 0.0;\n            const startImpulseFrom = -delayLength;\n            const startZerosFrom = Math.floor(startImpulseFrom - periodLengthStart / 2);\n            const stopZerosAt = Math.ceil(startZerosFrom + periodLengthStart * 2);\n            this.delayResetOffset = stopZerosAt;\n            for (let i = startZerosFrom; i <= stopZerosAt; i++) {\n                delayLine[i & delayBufferMask] = 0.0;\n            }\n            const impulseWave = instrumentState.wave;\n            const impulseWaveLength = impulseWave.length - 1;\n            const impulsePhaseDelta = impulseWaveLength / periodLengthStart;\n            const fadeDuration = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\n            const startImpulseFromSample = Math.ceil(startImpulseFrom);\n            const stopImpulseAt = startImpulseFrom + periodLengthStart + fadeDuration;\n            const stopImpulseAtSample = stopImpulseAt;\n            let impulsePhase = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\n            let prevWaveIntegral = 0.0;\n            for (let i = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\n                const impulsePhaseInt = impulsePhase | 0;\n                const index = impulsePhaseInt % impulseWaveLength;\n                let nextWaveIntegral = impulseWave[index];\n                const phaseRatio = impulsePhase - impulsePhaseInt;\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\n                const sample = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\n                const fadeIn = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\n                const fadeOut = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\n                const combinedFade = fadeIn * fadeOut;\n                const curvedFade = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade);\n                delayLine[i & delayBufferMask] += sample * curvedFade;\n                prevWaveIntegral = nextWaveIntegral;\n                impulsePhase += impulsePhaseDelta;\n            }\n        }\n    }\n}\nclass EnvelopeComputer {\n    constructor() {\n        this.noteSecondsStart = [];\n        this.noteSecondsStartUnscaled = 0.0;\n        this.noteSecondsEnd = [];\n        this.noteSecondsEndUnscaled = 0.0;\n        this.noteTicksStart = 0.0;\n        this.noteTicksEnd = 0.0;\n        this.noteSizeStart = Config.noteSizeMax;\n        this.noteSizeEnd = Config.noteSizeMax;\n        this.prevNoteSize = Config.noteSizeMax;\n        this.nextNoteSize = Config.noteSizeMax;\n        this._noteSizeFinal = Config.noteSizeMax;\n        this.prevNoteSecondsStart = [];\n        this.prevNoteSecondsStartUnscaled = 0.0;\n        this.prevNoteSecondsEnd = [];\n        this.prevNoteSecondsEndUnscaled = 0.0;\n        this.prevNoteTicksStart = 0.0;\n        this.prevNoteTicksEnd = 0.0;\n        this._prevNoteSizeFinal = Config.noteSizeMax;\n        this.tickTimeEnd = [];\n        this.drumsetFilterEnvelopeStart = 0.0;\n        this.drumsetFilterEnvelopeEnd = 0.0;\n        this.prevSlideStart = false;\n        this.prevSlideEnd = false;\n        this.nextSlideStart = false;\n        this.nextSlideEnd = false;\n        this.prevSlideRatioStart = 0.0;\n        this.prevSlideRatioEnd = 0.0;\n        this.nextSlideRatioStart = 0.0;\n        this.nextSlideRatioEnd = 0.0;\n        this.startPinTickAbsolute = null;\n        this.startPinTickDefaultPitch = null;\n        this.startPinTickPitch = null;\n        this.envelopeStarts = [];\n        this.envelopeEnds = [];\n        this._modifiedEnvelopeIndices = [];\n        this._modifiedEnvelopeCount = 0;\n        this.lowpassCutoffDecayVolumeCompensation = 1.0;\n        const length = 56;\n        for (let i = 0; i < length; i++) {\n            this.envelopeStarts[i] = 1.0;\n            this.envelopeEnds[i] = 1.0;\n        }\n        this.reset();\n    }\n    reset() {\n        for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n            this.noteSecondsEnd[envelopeIndex] = 0.0;\n            this.prevNoteSecondsEnd[envelopeIndex] = 0.0;\n        }\n        this.noteSecondsEndUnscaled = 0.0;\n        this.noteTicksEnd = 0.0;\n        this._noteSizeFinal = Config.noteSizeMax;\n        this.prevNoteSecondsEndUnscaled = 0.0;\n        this.prevNoteTicksEnd = 0.0;\n        this._prevNoteSizeFinal = Config.noteSizeMax;\n        this._modifiedEnvelopeCount = 0;\n        this.drumsetFilterEnvelopeStart = 0.0;\n        this.drumsetFilterEnvelopeEnd = 0.0;\n        this.startPinTickAbsolute = null;\n        this.startPinTickDefaultPitch = null;\n        this.startPinTickPitch = null;\n    }\n    computeEnvelopes(instrument, currentPart, tickTimeStart, tickTimeStartReal, secondsPerTick, tone, timeScale, instrumentState, synth, channelIndex, instrumentIndex) {\n        const secondsPerTickUnscaled = secondsPerTick;\n        const transition = instrument.getTransition();\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n            this.prevNoteSecondsEndUnscaled = this.noteSecondsEndUnscaled;\n            this.prevNoteTicksEnd = this.noteTicksEnd;\n            this._prevNoteSizeFinal = this._noteSizeFinal;\n            this.noteSecondsEndUnscaled = 0.0;\n            this.noteTicksEnd = 0.0;\n            for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n                this.prevNoteSecondsEnd[envelopeIndex] = this.noteSecondsEnd[envelopeIndex];\n                this.noteSecondsEnd[envelopeIndex] = 0.0;\n            }\n        }\n        if (tone != null) {\n            if (tone.note != null) {\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\n            }\n            else {\n                this._noteSizeFinal = Config.noteSizeMax;\n            }\n        }\n        const tickTimeEnd = [];\n        const tickTimeEndReal = tickTimeStartReal + 1.0;\n        const noteSecondsStart = [];\n        const noteSecondsStartUnscaled = this.noteSecondsEndUnscaled;\n        const noteSecondsEnd = [];\n        const noteSecondsEndUnscaled = noteSecondsStartUnscaled + secondsPerTickUnscaled;\n        const noteTicksStart = this.noteTicksEnd;\n        const noteTicksEnd = noteTicksStart + 1.0;\n        const prevNoteSecondsStart = [];\n        const prevNoteSecondsEnd = [];\n        const prevNoteSecondsStartUnscaled = this.prevNoteSecondsEndUnscaled;\n        const prevNoteSecondsEndUnscaled = prevNoteSecondsStartUnscaled + secondsPerTickUnscaled;\n        const prevNoteTicksStart = this.prevNoteTicksEnd;\n        const prevNoteTicksEnd = prevNoteTicksStart + 1.0;\n        const beatsPerTick = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\n        const beatTimeStart = [];\n        const beatTimeEnd = [];\n        let noteSizeStart = this._noteSizeFinal;\n        let noteSizeEnd = this._noteSizeFinal;\n        let prevNoteSize = this._prevNoteSizeFinal;\n        let nextNoteSize = 0;\n        let prevSlideStart = false;\n        let prevSlideEnd = false;\n        let nextSlideStart = false;\n        let nextSlideEnd = false;\n        let prevSlideRatioStart = 0.0;\n        let prevSlideRatioEnd = 0.0;\n        let nextSlideRatioStart = 0.0;\n        let nextSlideRatioEnd = 0.0;\n        if (tone == null) {\n            this.startPinTickAbsolute = null;\n            this.startPinTickDefaultPitch = null;\n        }\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\n            const endPinIndex = tone.note.getEndPinIndex(currentPart);\n            const startPin = tone.note.pins[endPinIndex - 1];\n            const endPin = tone.note.pins[endPinIndex];\n            const startPinTick = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            if (this.startPinTickAbsolute == null || (!(transition.continues || transition.slides)) && tone.passedEndOfNote)\n                this.startPinTickAbsolute = startPinTick + synth.computeTicksSinceStart(true);\n            if (this.startPinTickDefaultPitch == null || tone.passedEndOfNote)\n                this.startPinTickDefaultPitch = this.getPitchValue(instrument, tone, instrumentState, false);\n            if (!tone.passedEndOfNote)\n                this.startPinTickPitch = this.getPitchValue(instrument, tone, instrumentState, true);\n            const endPinTick = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart = (tickTimeStartReal - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd = (tickTimeEndReal - startPinTick) / (endPinTick - startPinTick);\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\n            if (transition.slides) {\n                const noteStartTick = tone.noteStartPart * Config.ticksPerPart;\n                const noteEndTick = tone.noteEndPart * Config.ticksPerPart;\n                const noteLengthTicks = noteEndTick - noteStartTick;\n                const maximumSlideTicks = noteLengthTicks * 0.5;\n                const slideTicks = Math.min(maximumSlideTicks, transition.slideTicks);\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\n                    if (tickTimeStartReal - noteStartTick < slideTicks) {\n                        prevSlideStart = true;\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStartReal - noteStartTick) / slideTicks);\n                    }\n                    if (tickTimeEndReal - noteStartTick < slideTicks) {\n                        prevSlideEnd = true;\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEndReal - noteStartTick) / slideTicks);\n                    }\n                }\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\n                    nextNoteSize = tone.nextNote.pins[0].size;\n                    if (noteEndTick - tickTimeStartReal < slideTicks) {\n                        nextSlideStart = true;\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStartReal) / slideTicks);\n                    }\n                    if (noteEndTick - tickTimeEndReal < slideTicks) {\n                        nextSlideEnd = true;\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEndReal) / slideTicks);\n                    }\n                }\n            }\n        }\n        let lowpassCutoffDecayVolumeCompensation = 1.0;\n        let usedNoteSize = false;\n        for (let envelopeIndex = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\n            let automationTarget;\n            let targetIndex;\n            let envelope;\n            let inverse = false;\n            let isDiscrete = false;\n            let perEnvelopeSpeed = 1;\n            let globalEnvelopeSpeed = 1;\n            let envelopeSpeed = perEnvelopeSpeed * globalEnvelopeSpeed;\n            let perEnvelopeLowerBound = 0;\n            let perEnvelopeUpperBound = 1;\n            let timeSinceStart = 0;\n            let steps = 2;\n            let seed = 2;\n            let waveform = 0;\n            let startPinTickAbsolute = this.startPinTickAbsolute || 0.0;\n            let defaultPitch = this.startPinTickDefaultPitch || 0.0;\n            if (envelopeIndex == instrument.envelopeCount) {\n                if (usedNoteSize)\n                    break;\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n                targetIndex = 0;\n                envelope = Config.newEnvelopes.dictionary[\"note size\"];\n            }\n            else {\n                let envelopeSettings = instrument.envelopes[envelopeIndex];\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\n                targetIndex = envelopeSettings.index;\n                envelope = Config.newEnvelopes[envelopeSettings.envelope];\n                inverse = instrument.envelopes[envelopeIndex].inverse;\n                isDiscrete = instrument.envelopes[envelopeIndex].discrete;\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n                globalEnvelopeSpeed = Math.pow(instrument.envelopeSpeed, 2) / 144;\n                envelopeSpeed = perEnvelopeSpeed * globalEnvelopeSpeed;\n                perEnvelopeLowerBound = instrument.envelopes[envelopeIndex].perEnvelopeLowerBound;\n                perEnvelopeUpperBound = instrument.envelopes[envelopeIndex].perEnvelopeUpperBound;\n                if (synth.isModActive(Config.modulators.dictionary[\"individual envelope lower bound\"].index, channelIndex, instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeLowerBound != null) {\n                    perEnvelopeLowerBound = instrument.envelopes[envelopeIndex].tempEnvelopeLowerBound;\n                }\n                if (synth.isModActive(Config.modulators.dictionary[\"individual envelope upper bound\"].index, channelIndex, instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeUpperBound != null) {\n                    perEnvelopeUpperBound = instrument.envelopes[envelopeIndex].tempEnvelopeUpperBound;\n                }\n                if (!(perEnvelopeLowerBound <= perEnvelopeUpperBound)) {\n                    perEnvelopeLowerBound = 0;\n                    perEnvelopeUpperBound = 1;\n                }\n                timeSinceStart = synth.computeTicksSinceStart();\n                steps = instrument.envelopes[envelopeIndex].steps;\n                seed = instrument.envelopes[envelopeIndex].seed;\n                if (instrument.envelopes[envelopeIndex].waveform >= (envelope.name == \"lfo\" ? 7 : 4)) {\n                    instrument.envelopes[envelopeIndex].waveform = 0;\n                }\n                waveform = instrument.envelopes[envelopeIndex].waveform;\n                if (!timeScale[envelopeIndex])\n                    timeScale[envelopeIndex] = 0;\n                const secondsPerTickScaled = secondsPerTick * timeScale[envelopeIndex];\n                if (!tickTimeStart[envelopeIndex])\n                    tickTimeStart[envelopeIndex] = 0;\n                tickTimeEnd[envelopeIndex] = tickTimeStart[envelopeIndex] ? tickTimeStart[envelopeIndex] + timeScale[envelopeIndex] : timeScale[envelopeIndex];\n                noteSecondsStart[envelopeIndex] = this.noteSecondsEnd[envelopeIndex] ? this.noteSecondsEnd[envelopeIndex] : 0;\n                prevNoteSecondsStart[envelopeIndex] = this.prevNoteSecondsEnd[envelopeIndex] ? this.prevNoteSecondsEnd[envelopeIndex] : 0;\n                noteSecondsEnd[envelopeIndex] = noteSecondsStart[envelopeIndex] ? noteSecondsStart[envelopeIndex] + secondsPerTickScaled : secondsPerTickScaled;\n                prevNoteSecondsEnd[envelopeIndex] = prevNoteSecondsStart[envelopeIndex] ? prevNoteSecondsStart[envelopeIndex] + secondsPerTickScaled : secondsPerTickScaled;\n                beatTimeStart[envelopeIndex] = tickTimeStart[envelopeIndex] ? beatsPerTick * tickTimeStart[envelopeIndex] : beatsPerTick;\n                beatTimeEnd[envelopeIndex] = tickTimeEnd[envelopeIndex] ? beatsPerTick * tickTimeEnd[envelopeIndex] : beatsPerTick;\n                if (envelope.type == 1)\n                    usedNoteSize = true;\n            }\n            const pitch = (envelope.type == 2) ? this.computePitchEnvelope(instrument, envelopeIndex, (this.startPinTickPitch || this.getPitchValue(instrument, tone, instrumentState, true))) : 0;\n            if (automationTarget.computeIndex != null) {\n                const computeIndex = automationTarget.computeIndex + targetIndex;\n                let envelopeStart = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, noteSecondsStartUnscaled, noteSecondsStart[envelopeIndex], beatTimeStart[envelopeIndex], timeSinceStart, noteSizeStart, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                if (prevSlideStart) {\n                    const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, prevNoteSecondsStartUnscaled, prevNoteSecondsStart[envelopeIndex], beatTimeStart[envelopeIndex], timeSinceStart, prevNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\n                }\n                if (nextSlideStart) {\n                    const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, 0.0, 0.0, beatTimeStart[envelopeIndex], timeSinceStart, nextNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\n                }\n                let envelopeEnd = envelopeStart;\n                if (isDiscrete == false) {\n                    envelopeEnd = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, noteSecondsEndUnscaled, noteSecondsEnd[envelopeIndex], beatTimeEnd[envelopeIndex], timeSinceStart, noteSizeEnd, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    if (prevSlideEnd) {\n                        const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, prevNoteSecondsEndUnscaled, prevNoteSecondsEnd[envelopeIndex], beatTimeEnd[envelopeIndex], timeSinceStart, prevNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                        envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\n                    }\n                    if (nextSlideEnd) {\n                        const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, 0.0, 0.0, beatTimeEnd[envelopeIndex], timeSinceStart, nextNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                        envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\n                    }\n                }\n                this.envelopeStarts[computeIndex] *= envelopeStart;\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\n                if (automationTarget.isFilter) {\n                    const filterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == 0) {\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope, perEnvelopeSpeed));\n                    }\n                }\n            }\n        }\n        this.noteSecondsStartUnscaled = noteSecondsStartUnscaled;\n        this.noteSecondsEndUnscaled = noteSecondsEndUnscaled;\n        this.noteTicksStart = noteTicksStart;\n        this.noteTicksEnd = noteTicksEnd;\n        this.prevNoteSecondsStartUnscaled = prevNoteSecondsStartUnscaled;\n        this.prevNoteSecondsEndUnscaled = prevNoteSecondsEndUnscaled;\n        this.prevNoteTicksStart = prevNoteTicksStart;\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\n        for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n            this.noteSecondsStart[envelopeIndex] = noteSecondsStart[envelopeIndex];\n            this.noteSecondsEnd[envelopeIndex] = noteSecondsEnd[envelopeIndex];\n            this.prevNoteSecondsStart[envelopeIndex] = prevNoteSecondsStart[envelopeIndex];\n            this.prevNoteSecondsEnd[envelopeIndex] = prevNoteSecondsEnd[envelopeIndex];\n        }\n        this.prevNoteSize = prevNoteSize;\n        this.nextNoteSize = nextNoteSize;\n        this.noteSizeStart = noteSizeStart;\n        this.noteSizeEnd = noteSizeEnd;\n        this.prevSlideStart = prevSlideStart;\n        this.prevSlideEnd = prevSlideEnd;\n        this.nextSlideStart = nextSlideStart;\n        this.nextSlideEnd = nextSlideEnd;\n        this.prevSlideRatioStart = prevSlideRatioStart;\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\n        this.nextSlideRatioStart = nextSlideRatioStart;\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\n    }\n    clearEnvelopes() {\n        for (let envelopeIndex = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\n            const computeIndex = this._modifiedEnvelopeIndices[envelopeIndex];\n            this.envelopeStarts[computeIndex] = 1.0;\n            this.envelopeEnds[computeIndex] = 1.0;\n        }\n        this._modifiedEnvelopeCount = 0;\n    }\n    static computeEnvelope(envelope, perEnvelopeSpeed, globalEnvelopeSpeed, unspedTime, time, beats, timeSinceStart, noteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, isDrumset = false, steps, seed, waveform, defaultPitch, notePinStart) {\n        const envelopeSpeed = isDrumset ? envelope.speed : 1;\n        const boundAdjust = (perEnvelopeUpperBound - perEnvelopeLowerBound);\n        switch (envelope.type) {\n            case 0: return perEnvelopeUpperBound;\n            case 1:\n                if (!inverse) {\n                    return Synth.noteSizeToVolumeMult(noteSize) * (boundAdjust) + perEnvelopeLowerBound;\n                }\n                else {\n                    return perEnvelopeUpperBound - Synth.noteSizeToVolumeMult(noteSize) * (boundAdjust);\n                }\n            case 2:\n                return pitch;\n            case 3:\n                const hashMax = 0xffffffff;\n                const step = steps;\n                switch (waveform) {\n                    case 0:\n                        if (step <= 1)\n                            return 1;\n                        const timeHash = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed) / (256))) + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * (step / (step - 1)) * Math.floor(timeHash * step / (hashMax + 1)) / step;\n                        }\n                        else {\n                            return boundAdjust * (step / (step - 1)) * Math.floor(timeHash * (step) / (hashMax + 1)) / step + perEnvelopeLowerBound;\n                        }\n                    case 1:\n                        const pitchHash = xxHash32(defaultPitch + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * pitchHash / (hashMax + 1);\n                        }\n                        else {\n                            return boundAdjust * pitchHash / (hashMax + 1) + perEnvelopeLowerBound;\n                        }\n                    case 2:\n                        if (step <= 1)\n                            return 1;\n                        const noteHash = xxHash32(notePinStart + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * (step / (step - 1)) * Math.floor(noteHash * step / (hashMax + 1)) / step;\n                        }\n                        else {\n                            return boundAdjust * (step / (step - 1)) * Math.floor(noteHash * (step) / (hashMax + 1)) / step + perEnvelopeLowerBound;\n                        }\n                    case 3:\n                        const timeHashA = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed) / (256))) + \"\", seed);\n                        const timeHashB = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed + 256) / (256))) + \"\", seed);\n                        const weightedAverage = timeHashA * (1 - ((timeSinceStart * perEnvelopeSpeed) / (256)) % 1) + timeHashB * (((timeSinceStart * perEnvelopeSpeed) / (256)) % 1);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * weightedAverage / (hashMax + 1);\n                        }\n                        else {\n                            return boundAdjust * weightedAverage / (hashMax + 1) + perEnvelopeLowerBound;\n                        }\n                    default: throw new Error(\"Unrecognized operator envelope waveform type: \" + waveform);\n                }\n            case 6:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * (1.0 / (1.0 + time * envelopeSpeed));\n                }\n                else {\n                    return boundAdjust / (1.0 + time * envelopeSpeed) + perEnvelopeLowerBound;\n                }\n            case 7:\n                if (inverse) {\n                    return boundAdjust / (1.0 + time * envelopeSpeed) + perEnvelopeLowerBound;\n                }\n                else {\n                    return perEnvelopeUpperBound - boundAdjust / (1.0 + time * envelopeSpeed);\n                }\n            case 8:\n                switch (waveform) {\n                    case 0:\n                        if (inverse) {\n                            return (perEnvelopeUpperBound / 2) + boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.5 + (perEnvelopeLowerBound / 2);\n                        }\n                        else {\n                            return (perEnvelopeUpperBound / 2) - boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.5 + (perEnvelopeLowerBound / 2);\n                        }\n                    case 1:\n                        if (inverse) {\n                            return (Math.cos(beats * 2.0 * Math.PI * envelopeSpeed + 3 * Math.PI / 2) < 0) ? perEnvelopeUpperBound : perEnvelopeLowerBound;\n                        }\n                        else {\n                            return (Math.cos(beats * 2.0 * Math.PI * envelopeSpeed + 3 * Math.PI / 2) < 0) ? perEnvelopeLowerBound : perEnvelopeUpperBound;\n                        }\n                    case 2:\n                        if (inverse) {\n                            return (perEnvelopeUpperBound / 2) - (boundAdjust / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                        else {\n                            return (perEnvelopeUpperBound / 2) + (boundAdjust / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                    case 3:\n                        if (inverse) {\n                            return perEnvelopeUpperBound - (beats * envelopeSpeed) % 1 * boundAdjust;\n                        }\n                        else {\n                            return (beats * envelopeSpeed) % 1 * boundAdjust + perEnvelopeLowerBound;\n                        }\n                    case 4:\n                        let trap = 0;\n                        if (inverse) {\n                            trap = (perEnvelopeUpperBound / 2) - (boundAdjust * 2 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                        else {\n                            trap = (perEnvelopeUpperBound / 2) + (boundAdjust * 2 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                        return Math.max(perEnvelopeLowerBound, Math.min(perEnvelopeUpperBound, trap));\n                    case 5:\n                        if (steps <= 1)\n                            return 1;\n                        let saw = (beats * envelopeSpeed) % 1;\n                        if (inverse) {\n                            return perEnvelopeUpperBound - Math.floor(saw * steps) * boundAdjust / (steps - 1);\n                        }\n                        else {\n                            return Math.floor(saw * steps) * boundAdjust / (steps - 1) + perEnvelopeLowerBound;\n                        }\n                    case 6:\n                        if (steps <= 1)\n                            return 1;\n                        let tri = 0.5 + (inverse ? -1 : 1) * (1 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed));\n                        return Math.round(tri * (steps - 1)) * boundAdjust / (steps - 1) + perEnvelopeLowerBound;\n                    default: throw new Error(\"Unrecognized operator envelope waveform type: \" + waveform);\n                }\n            case 9:\n                if (inverse) {\n                    return (perEnvelopeUpperBound / 4) + boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.25 + (perEnvelopeLowerBound / 4);\n                }\n                else {\n                    return 0.5 + (perEnvelopeUpperBound / 4) - boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.25 - (perEnvelopeLowerBound / 4);\n                }\n            case 4:\n                if (inverse) {\n                    return Math.max(0, perEnvelopeUpperBound + 1.0 - Math.max(1.0 - perEnvelopeLowerBound, 1.0 - perEnvelopeUpperBound - unspedTime * globalEnvelopeSpeed * 10.0));\n                }\n                else {\n                    return Math.max(1.0 + perEnvelopeLowerBound, 1.0 + perEnvelopeUpperBound - unspedTime * globalEnvelopeSpeed * 10.0);\n                }\n            case 5:\n                const attack = 0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed);\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * (unspedTime < attack ? unspedTime / attack : 1.0 / (1.0 + (unspedTime - attack) * envelopeSpeed * perEnvelopeSpeed));\n                }\n                else {\n                    return boundAdjust * (unspedTime < attack ? unspedTime / attack : 1.0 / (1.0 + (unspedTime - attack) * envelopeSpeed * perEnvelopeSpeed)) + perEnvelopeLowerBound;\n                }\n            case 10:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * Math.pow(2, -envelopeSpeed * time);\n                }\n                else {\n                    return boundAdjust * Math.pow(2, -envelopeSpeed * time) + perEnvelopeLowerBound;\n                }\n            case 14:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * +(unspedTime < (0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed)));\n                }\n                else {\n                    return boundAdjust * +(unspedTime < (0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed))) + perEnvelopeLowerBound;\n                }\n            case 11:\n                let temp = 0.5 - Math.cos(beats * envelopeSpeed) * 0.5;\n                temp = 1.0 / (1.0 + time * (envelopeSpeed - (temp / (1.5 / envelopeSpeed))));\n                temp = temp > 0.0 ? temp : 0.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * temp;\n                }\n                else {\n                    return boundAdjust * temp + perEnvelopeLowerBound;\n                }\n            case 12: {\n                let lin = (1.0 - (time / (16 / envelopeSpeed)));\n                lin = lin > 0.0 ? lin : 0.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * lin;\n                }\n                else {\n                    return boundAdjust * lin + perEnvelopeLowerBound;\n                }\n            }\n            case 13: {\n                let lin = (time / (16 / envelopeSpeed));\n                lin = lin < 1.0 ? lin : 1.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * lin;\n                }\n                else {\n                    return boundAdjust * lin + perEnvelopeLowerBound;\n                }\n            }\n            case 15: {\n                if (inverse) {\n                    return Math.min(Math.max(perEnvelopeLowerBound, perEnvelopeUpperBound - boundAdjust * Math.sqrt(Math.max(1.0 - envelopeSpeed * time / 2, 0))), perEnvelopeUpperBound);\n                }\n                else {\n                    return Math.max(perEnvelopeLowerBound, boundAdjust * Math.sqrt(Math.max(1.0 - envelopeSpeed * time / 2, 0)) + perEnvelopeLowerBound);\n                }\n            }\n            default: throw new Error(\"Unrecognized operator envelope type.\");\n        }\n    }\n    getPitchValue(instrument, tone, instrumentState, calculateBends = true) {\n        if (tone && tone.pitchCount >= 1) {\n            const chord = instrument.getChord();\n            const arpeggiates = chord.arpeggiates;\n            const monophonic = chord.name == \"monophonic\";\n            const arpeggio = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n            const tonePitch = tone.pitches[arpeggiates ? getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio) : monophonic ? instrument.monoChordTone : 0];\n            if (calculateBends) {\n                return tone.lastInterval != tonePitch ? tonePitch + tone.lastInterval : tonePitch;\n            }\n            else {\n                return tonePitch;\n            }\n        }\n        return 0;\n    }\n    computePitchEnvelope(instrument, index, pitch = 0) {\n        let startNote = 0;\n        let endNote = Config.maxPitch;\n        let inverse = false;\n        let envelopeLowerBound = 0;\n        let envelopeUpperBound = 1;\n        if (instrument.isNoiseInstrument) {\n            endNote = Config.drumCount - 1;\n        }\n        if (index < instrument.envelopeCount && index !== -2) {\n            startNote = instrument.envelopes[index].pitchEnvelopeStart;\n            endNote = instrument.envelopes[index].pitchEnvelopeEnd;\n            inverse = instrument.envelopes[index].inverse;\n            envelopeLowerBound = instrument.envelopes[index].perEnvelopeLowerBound;\n            envelopeUpperBound = instrument.envelopes[index].perEnvelopeUpperBound;\n        }\n        if (startNote > endNote) {\n            startNote = 0;\n            endNote = instrument.isNoiseInstrument ? Config.drumCount - 1 : Config.maxPitch;\n        }\n        const range = endNote - startNote + 1;\n        if (!inverse) {\n            if (pitch <= startNote) {\n                return envelopeLowerBound;\n            }\n            else if (pitch >= endNote) {\n                return envelopeUpperBound;\n            }\n            else {\n                return (pitch - startNote) * (envelopeUpperBound - envelopeLowerBound) / range + envelopeLowerBound;\n            }\n        }\n        else {\n            if (pitch <= startNote) {\n                return envelopeUpperBound;\n            }\n            else if (pitch >= endNote) {\n                return envelopeLowerBound;\n            }\n            else {\n                return envelopeUpperBound - (pitch - startNote) * (envelopeUpperBound - envelopeLowerBound) / range;\n            }\n        }\n    }\n    static getLowpassCutoffDecayVolumeCompensation(envelope, perEnvelopeSpeed = 1) {\n        if (envelope.type == 10)\n            return 1.25 + 0.025 * perEnvelopeSpeed;\n        if (envelope.type == 6)\n            return 1.0 + 0.02 * perEnvelopeSpeed;\n        return 1.0;\n    }\n    computeDrumsetEnvelopes(instrument, drumsetFilterEnvelope, beatsPerPart, partTimeStart, partTimeEnd) {\n        const pitch = 1;\n        function computeDrumsetEnvelope(unspedTime, time, beats, noteSize) {\n            return EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 1, 1, unspedTime, time, beats, 0, noteSize, pitch, false, 0, 1, true, 2, 2, 0, pitch, 0);\n        }\n        let drumsetFilterEnvelopeStart = computeDrumsetEnvelope(this.noteSecondsStartUnscaled, this.noteSecondsStartUnscaled, beatsPerPart * partTimeStart, this.noteSizeStart);\n        if (this.prevSlideStart) {\n            const other = computeDrumsetEnvelope(this.prevNoteSecondsStartUnscaled, this.prevNoteSecondsStartUnscaled, beatsPerPart * partTimeStart, this.prevNoteSize);\n            drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * this.prevSlideRatioStart;\n        }\n        if (this.nextSlideStart) {\n            const other = computeDrumsetEnvelope(0.0, 0.0, beatsPerPart * partTimeStart, this.nextNoteSize);\n            drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * this.nextSlideRatioStart;\n        }\n        let drumsetFilterEnvelopeEnd = drumsetFilterEnvelopeStart;\n        drumsetFilterEnvelopeEnd = computeDrumsetEnvelope(this.noteSecondsEndUnscaled, this.noteSecondsEndUnscaled, beatsPerPart * partTimeEnd, this.noteSizeEnd);\n        if (this.prevSlideEnd) {\n            const other = computeDrumsetEnvelope(this.prevNoteSecondsEndUnscaled, this.prevNoteSecondsEndUnscaled, beatsPerPart * partTimeEnd, this.prevNoteSize);\n            drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * this.prevSlideRatioEnd;\n        }\n        if (this.nextSlideEnd) {\n            const other = computeDrumsetEnvelope(0.0, 0.0, beatsPerPart * partTimeEnd, this.nextNoteSize);\n            drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * this.nextSlideRatioEnd;\n        }\n        this.drumsetFilterEnvelopeStart = drumsetFilterEnvelopeStart;\n        this.drumsetFilterEnvelopeEnd = drumsetFilterEnvelopeEnd;\n    }\n}\nclass Tone {\n    constructor() {\n        this.pitches = Array(Config.maxChordSize + 2).fill(0);\n        this.pitchCount = 0;\n        this.chordSize = 0;\n        this.drumsetPitch = null;\n        this.note = null;\n        this.prevNote = null;\n        this.nextNote = null;\n        this.prevNotePitchIndex = 0;\n        this.nextNotePitchIndex = 0;\n        this.freshlyAllocated = true;\n        this.atNoteStart = false;\n        this.isOnLastTick = false;\n        this.passedEndOfNote = false;\n        this.forceContinueAtStart = false;\n        this.forceContinueAtEnd = false;\n        this.noteStartPart = 0;\n        this.noteEndPart = 0;\n        this.ticksSinceReleased = 0;\n        this.liveInputSamplesHeld = 0;\n        this.lastInterval = 0;\n        this.stringSustainStart = 0;\n        this.stringSustainEnd = 0;\n        this.noiseSamples = [];\n        this.phases = [];\n        this.operatorWaves = [];\n        this.phaseDeltas = [];\n        this.directions = [];\n        this.chipWaveCompletions = [];\n        this.chipWavePrevWaves = [];\n        this.chipWaveCompletionsLastWave = [];\n        this.phaseDeltaScales = [];\n        this.expression = 0.0;\n        this.expressionDelta = 0.0;\n        this.operatorExpressions = [];\n        this.operatorExpressionDeltas = [];\n        this.prevPitchExpressions = Array(Config.maxPitchOrOperatorCount).fill(null);\n        this.prevVibrato = null;\n        this.prevStringDecay = null;\n        this.pulseWidth = 0.0;\n        this.pulseWidthDelta = 0.0;\n        this.decimalOffset = 0.0;\n        this.supersawDynamism = 0.0;\n        this.supersawDynamismDelta = 0.0;\n        this.supersawUnisonDetunes = [];\n        this.supersawShape = 0.0;\n        this.supersawShapeDelta = 0.0;\n        this.supersawDelayLength = 0.0;\n        this.supersawDelayLengthDelta = 0.0;\n        this.supersawDelayLine = null;\n        this.supersawDelayIndex = -1;\n        this.supersawPrevPhaseDelta = null;\n        this.pickedStrings = [];\n        this.noteFilters = [];\n        this.noteFilterCount = 0;\n        this.initialNoteFilterInput1 = 0.0;\n        this.initialNoteFilterInput2 = 0.0;\n        this.specialIntervalExpressionMult = 1.0;\n        this.feedbackOutputs = [];\n        this.feedbackMult = 0.0;\n        this.feedbackDelta = 0.0;\n        this.stereoVolumeLStart = 0.0;\n        this.stereoVolumeRStart = 0.0;\n        this.stereoVolumeLDelta = 0.0;\n        this.stereoVolumeRDelta = 0.0;\n        this.stereoDelayStart = 0.0;\n        this.stereoDelayEnd = 0.0;\n        this.stereoDelayDelta = 0.0;\n        this.customVolumeStart = 0.0;\n        this.customVolumeEnd = 0.0;\n        this.filterResonanceStart = 0.0;\n        this.filterResonanceDelta = 0.0;\n        this.isFirstOrder = false;\n        this.envelopeComputer = new EnvelopeComputer();\n        this.reset();\n    }\n    reset() {\n        for (let i = 0; i < Config.unisonVoicesMax; i++) {\n            this.noiseSamples[i] = 0.0;\n        }\n        for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            this.phases[i] = 0.0;\n            this.directions[i] = 1;\n            this.chipWaveCompletions[i] = 0;\n            this.chipWavePrevWaves[i] = 0;\n            this.chipWaveCompletionsLastWave[i] = 0;\n            this.operatorWaves[i] = Config.operatorWaves[0];\n            this.feedbackOutputs[i] = 0.0;\n            this.prevPitchExpressions[i] = null;\n        }\n        for (let i = 0; i < this.noteFilterCount; i++) {\n            this.noteFilters[i].resetOutput();\n        }\n        this.noteFilterCount = 0;\n        this.initialNoteFilterInput1 = 0.0;\n        this.initialNoteFilterInput2 = 0.0;\n        this.liveInputSamplesHeld = 0;\n        this.supersawDelayIndex = -1;\n        for (const pickedString of this.pickedStrings) {\n            pickedString.reset();\n        }\n        this.envelopeComputer.reset();\n        this.prevVibrato = null;\n        this.prevStringDecay = null;\n        this.supersawPrevPhaseDelta = null;\n        this.drumsetPitch = null;\n    }\n}\nclass InstrumentState {\n    constructor() {\n        this.awake = false;\n        this.computed = false;\n        this.tonesAddedInThisTick = false;\n        this.flushingDelayLines = false;\n        this.deactivateAfterThisTick = false;\n        this.attentuationProgress = 0.0;\n        this.flushedSamples = 0;\n        this.activeTones = new Deque();\n        this.activeModTones = new Deque();\n        this.releasedTones = new Deque();\n        this.liveInputTones = new Deque();\n        this.type = 0;\n        this.synthesizer = null;\n        this.wave = null;\n        this.isUsingAdvancedLoopControls = false;\n        this.chipWaveLoopStart = 0;\n        this.chipWaveLoopEnd = 0;\n        this.chipWaveLoopMode = 0;\n        this.chipWavePlayBackwards = false;\n        this.chipWaveStartOffset = 0;\n        this.noisePitchFilterMult = 1.0;\n        this.unison = null;\n        this.unisonVoices = 1;\n        this.unisonSpread = 0.0;\n        this.unisonOffset = 0.0;\n        this.unisonExpression = 1.4;\n        this.unisonSign = 1.0;\n        this.chord = null;\n        this.effects = 0;\n        this.volumeScale = 0;\n        this.aliases = false;\n        this.arpTime = 0;\n        this.vibratoTime = 0;\n        this.nextVibratoTime = 0;\n        this.envelopeTime = [];\n        this.eqFilterVolume = 1.0;\n        this.eqFilterVolumeDelta = 0.0;\n        this.mixVolume = 1.0;\n        this.mixVolumeDelta = 0.0;\n        this.delayInputMult = 0.0;\n        this.delayInputMultDelta = 0.0;\n        this.granularMix = 1.0;\n        this.granularMixDelta = 0.0;\n        this.granularDelayLine = null;\n        this.granularDelayLineIndex = 0;\n        this.granularMaximumDelayTimeInSeconds = 1;\n        this.usesRandomGrainLocation = true;\n        this.granularDelayLineDirty = false;\n        this.computeGrains = true;\n        this.ringModMix = 0;\n        this.ringModMixDelta = 0;\n        this.ringModPhase = 0;\n        this.ringModPhaseDelta = 0;\n        this.ringModPhaseDeltaScale = 1.0;\n        this.ringModWaveformIndex = 0.0;\n        this.ringModPulseWidth = 0.0;\n        this.ringModHzOffset = 0.0;\n        this.ringModMixFade = 1.0;\n        this.ringModMixFadeDelta = 0;\n        this.distortion = 0.0;\n        this.distortionDelta = 0.0;\n        this.distortionDrive = 0.0;\n        this.distortionDriveDelta = 0.0;\n        this.distortionFractionalInput1 = 0.0;\n        this.distortionFractionalInput2 = 0.0;\n        this.distortionFractionalInput3 = 0.0;\n        this.distortionPrevInput = 0.0;\n        this.distortionNextOutput = 0.0;\n        this.bitcrusherPrevInput = 0.0;\n        this.bitcrusherCurrentOutput = 0.0;\n        this.bitcrusherPhase = 1.0;\n        this.bitcrusherPhaseDelta = 0.0;\n        this.bitcrusherPhaseDeltaScale = 1.0;\n        this.bitcrusherScale = 1.0;\n        this.bitcrusherScaleScale = 1.0;\n        this.bitcrusherFoldLevel = 1.0;\n        this.bitcrusherFoldLevelScale = 1.0;\n        this.eqFilters = [];\n        this.eqFilterCount = 0;\n        this.initialEqFilterInput1 = 0.0;\n        this.initialEqFilterInput2 = 0.0;\n        this.panningDelayLine = null;\n        this.panningDelayPos = 0;\n        this.panningVolumeL = 0.0;\n        this.panningVolumeR = 0.0;\n        this.panningVolumeDeltaL = 0.0;\n        this.panningVolumeDeltaR = 0.0;\n        this.panningOffsetL = 0.0;\n        this.panningOffsetR = 0.0;\n        this.panningOffsetDeltaL = 0.0;\n        this.panningOffsetDeltaR = 0.0;\n        this.chorusDelayLineL = null;\n        this.chorusDelayLineR = null;\n        this.chorusDelayLineDirty = false;\n        this.chorusDelayPos = 0;\n        this.chorusPhase = 0;\n        this.chorusVoiceMult = 0;\n        this.chorusVoiceMultDelta = 0;\n        this.chorusCombinedMult = 0;\n        this.chorusCombinedMultDelta = 0;\n        this.echoDelayLineL = null;\n        this.echoDelayLineR = null;\n        this.echoDelayLineDirty = false;\n        this.echoDelayPos = 0;\n        this.echoDelayOffsetStart = 0;\n        this.echoDelayOffsetEnd = null;\n        this.echoDelayOffsetRatio = 0.0;\n        this.echoDelayOffsetRatioDelta = 0.0;\n        this.echoMult = 0.0;\n        this.echoMultDelta = 0.0;\n        this.echoShelfA1 = 0.0;\n        this.echoShelfB0 = 0.0;\n        this.echoShelfB1 = 0.0;\n        this.echoShelfSampleL = 0.0;\n        this.echoShelfSampleR = 0.0;\n        this.echoShelfPrevInputL = 0.0;\n        this.echoShelfPrevInputR = 0.0;\n        this.reverbDelayLine = null;\n        this.reverbDelayLineDirty = false;\n        this.reverbDelayPos = 0;\n        this.reverbMult = 0.0;\n        this.reverbMultDelta = 0.0;\n        this.reverbShelfA1 = 0.0;\n        this.reverbShelfB0 = 0.0;\n        this.reverbShelfB1 = 0.0;\n        this.reverbShelfSample0 = 0.0;\n        this.reverbShelfSample1 = 0.0;\n        this.reverbShelfSample2 = 0.0;\n        this.reverbShelfSample3 = 0.0;\n        this.reverbShelfPrevInput0 = 0.0;\n        this.reverbShelfPrevInput1 = 0.0;\n        this.reverbShelfPrevInput2 = 0.0;\n        this.reverbShelfPrevInput3 = 0.0;\n        this.spectrumWave = new SpectrumWaveState();\n        this.harmonicsWave = new HarmonicsWaveState();\n        this.drumsetSpectrumWaves = [];\n        this.envelopeComputer = new EnvelopeComputer();\n        for (let i = 0; i < Config.drumCount; i++) {\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\n        }\n        this.granularGrains = [];\n        this.granularMaximumGrains = 256;\n        for (let i = 0; i < this.granularMaximumGrains; i++) {\n            this.granularGrains.push(new Grain());\n        }\n        this.granularGrainsLength = 0;\n    }\n    allocateNecessaryBuffers(synth, instrument, samplesPerTick) {\n        if (effectsIncludePanning(instrument.effects)) {\n            if (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\n                this.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\n            }\n        }\n        if (effectsIncludeChorus(instrument.effects)) {\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\n            }\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\n            }\n        }\n        if (effectsIncludeEcho(instrument.effects)) {\n            this.allocateEchoBuffers(samplesPerTick, instrument.echoDelay);\n        }\n        if (effectsIncludeReverb(instrument.effects)) {\n            if (this.reverbDelayLine == null) {\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\n            }\n        }\n        if (effectsIncludeGranular(instrument.effects)) {\n            const granularDelayLineSizeInMilliseconds = 2500;\n            const granularDelayLineSizeInSeconds = granularDelayLineSizeInMilliseconds / 1000;\n            this.granularMaximumDelayTimeInSeconds = granularDelayLineSizeInSeconds;\n            const granularDelayLineSizeInSamples = Synth.fittingPowerOfTwo(Math.floor(granularDelayLineSizeInSeconds * synth.samplesPerSecond));\n            if (this.granularDelayLine == null || this.granularDelayLine.length != granularDelayLineSizeInSamples) {\n                this.granularDelayLine = new Float32Array(granularDelayLineSizeInSamples);\n                this.granularDelayLineIndex = 0;\n            }\n            const oldGrainsLength = this.granularGrains.length;\n            if (this.granularMaximumGrains > oldGrainsLength) {\n                for (let i = oldGrainsLength; i < this.granularMaximumGrains + 1; i++) {\n                    this.granularGrains.push(new Grain());\n                }\n            }\n            if (this.granularMaximumGrains < this.granularGrainsLength) {\n                this.granularGrainsLength = Math.round(this.granularMaximumGrains);\n            }\n        }\n    }\n    allocateEchoBuffers(samplesPerTick, echoDelay) {\n        const safeEchoDelaySteps = Math.max(Config.echoDelayRange >> 1, (echoDelay + 1));\n        const baseEchoDelayBufferSize = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\n        const safeEchoDelayBufferSize = baseEchoDelayBufferSize * 2;\n        if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\n            this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n            this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n        }\n        else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\n            const newDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n            const newDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n            const oldMask = this.echoDelayLineL.length - 1;\n            for (let i = 0; i < this.echoDelayLineL.length; i++) {\n                newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n                newDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n            }\n            this.echoDelayPos = this.echoDelayLineL.length;\n            this.echoDelayLineL = newDelayLineL;\n            this.echoDelayLineR = newDelayLineR;\n        }\n    }\n    deactivate() {\n        this.bitcrusherPrevInput = 0.0;\n        this.bitcrusherCurrentOutput = 0.0;\n        this.bitcrusherPhase = 1.0;\n        for (let i = 0; i < this.eqFilterCount; i++) {\n            this.eqFilters[i].resetOutput();\n        }\n        this.eqFilterCount = 0;\n        this.initialEqFilterInput1 = 0.0;\n        this.initialEqFilterInput2 = 0.0;\n        this.distortionFractionalInput1 = 0.0;\n        this.distortionFractionalInput2 = 0.0;\n        this.distortionFractionalInput3 = 0.0;\n        this.distortionPrevInput = 0.0;\n        this.distortionNextOutput = 0.0;\n        this.panningDelayPos = 0;\n        if (this.panningDelayLine != null)\n            for (let i = 0; i < this.panningDelayLine.length; i++)\n                this.panningDelayLine[i] = 0.0;\n        this.echoDelayOffsetEnd = null;\n        this.echoShelfSampleL = 0.0;\n        this.echoShelfSampleR = 0.0;\n        this.echoShelfPrevInputL = 0.0;\n        this.echoShelfPrevInputR = 0.0;\n        this.reverbShelfSample0 = 0.0;\n        this.reverbShelfSample1 = 0.0;\n        this.reverbShelfSample2 = 0.0;\n        this.reverbShelfSample3 = 0.0;\n        this.reverbShelfPrevInput0 = 0.0;\n        this.reverbShelfPrevInput1 = 0.0;\n        this.reverbShelfPrevInput2 = 0.0;\n        this.reverbShelfPrevInput3 = 0.0;\n        this.volumeScale = 1.0;\n        this.aliases = false;\n        this.awake = false;\n        this.flushingDelayLines = false;\n        this.deactivateAfterThisTick = false;\n        this.attentuationProgress = 0.0;\n        this.flushedSamples = 0;\n    }\n    resetAllEffects() {\n        this.deactivate();\n        this.vibratoTime = 0;\n        this.nextVibratoTime = 0;\n        this.arpTime = 0;\n        for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++)\n            this.envelopeTime[envelopeIndex] = 0;\n        this.envelopeComputer.reset();\n        if (this.chorusDelayLineDirty) {\n            for (let i = 0; i < this.chorusDelayLineL.length; i++)\n                this.chorusDelayLineL[i] = 0.0;\n            for (let i = 0; i < this.chorusDelayLineR.length; i++)\n                this.chorusDelayLineR[i] = 0.0;\n        }\n        if (this.echoDelayLineDirty) {\n            for (let i = 0; i < this.echoDelayLineL.length; i++)\n                this.echoDelayLineL[i] = 0.0;\n            for (let i = 0; i < this.echoDelayLineR.length; i++)\n                this.echoDelayLineR[i] = 0.0;\n        }\n        if (this.reverbDelayLineDirty) {\n            for (let i = 0; i < this.reverbDelayLine.length; i++)\n                this.reverbDelayLine[i] = 0.0;\n        }\n        if (this.granularDelayLineDirty) {\n            for (let i = 0; i < this.granularDelayLine.length; i++)\n                this.granularDelayLine[i] = 0.0;\n        }\n        this.chorusPhase = 0.0;\n        this.ringModPhase = 0.0;\n        this.ringModMixFade = 1.0;\n    }\n    compute(synth, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, instrumentIndex) {\n        this.computed = true;\n        this.type = instrument.type;\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\n        this.unison = Config.unisons[instrument.unison];\n        this.chord = instrument.getChord();\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\n        this.effects = instrument.effects;\n        this.aliases = instrument.aliases;\n        this.volumeScale = 1.0;\n        const samplesPerSecond = synth.samplesPerSecond;\n        this.updateWaves(instrument, samplesPerSecond);\n        const ticksIntoBar = synth.getTicksIntoBar();\n        const tickTimeStart = ticksIntoBar;\n        const secondsPerTick = samplesPerTick / synth.samplesPerSecond;\n        const currentPart = synth.getCurrentPart();\n        const envelopeSpeeds = [];\n        for (let i = 0; i < Config.maxEnvelopeCount; i++) {\n            envelopeSpeeds[i] = 0;\n        }\n        let useEnvelopeSpeed = Config.arpSpeedScale[instrument.envelopeSpeed];\n        if (synth.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex)) {\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, synth.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex, false)));\n            if (Number.isInteger(useEnvelopeSpeed)) {\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\n            }\n            else {\n                useEnvelopeSpeed = ((1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)]);\n            }\n        }\n        for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n            let perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n            if (synth.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channelIndex, instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed;\n            }\n            envelopeSpeeds[envelopeIndex] = useEnvelopeSpeed * perEnvelopeSpeed;\n        }\n        this.envelopeComputer.computeEnvelopes(instrument, currentPart, this.envelopeTime, tickTimeStart, secondsPerTick, tone, envelopeSpeeds, this, synth, channelIndex, instrumentIndex);\n        const envelopeStarts = this.envelopeComputer.envelopeStarts;\n        const envelopeEnds = this.envelopeComputer.envelopeEnds;\n        const usesGranular = effectsIncludeGranular(this.effects);\n        const usesRingModulation = effectsIncludeRingModulation(this.effects);\n        const usesDistortion = effectsIncludeDistortion(this.effects);\n        const usesBitcrusher = effectsIncludeBitcrusher(this.effects);\n        const usesPanning = effectsIncludePanning(this.effects);\n        const usesChorus = effectsIncludeChorus(this.effects);\n        const usesEcho = effectsIncludeEcho(this.effects);\n        const usesReverb = effectsIncludeReverb(this.effects);\n        let granularChance = 0;\n        if (usesGranular) {\n            granularChance = (instrument.grainAmounts + 1);\n            this.granularMaximumGrains = instrument.grainAmounts;\n            if (synth.isModActive(Config.modulators.dictionary[\"grain freq\"].index, channelIndex, instrumentIndex)) {\n                this.granularMaximumGrains = synth.getModValue(Config.modulators.dictionary[\"grain freq\"].index, channelIndex, instrumentIndex, false);\n                granularChance = (synth.getModValue(Config.modulators.dictionary[\"grain freq\"].index, channelIndex, instrumentIndex, false) + 1);\n            }\n            this.granularMaximumGrains = Math.floor(Math.pow(2, this.granularMaximumGrains * envelopeStarts[52]));\n            granularChance = granularChance * envelopeStarts[52];\n        }\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\n        if (usesGranular) {\n            this.granularMix = instrument.granular / Config.granularRange;\n            this.computeGrains = true;\n            let granularMixEnd = this.granularMix;\n            if (synth.isModActive(Config.modulators.dictionary[\"granular\"].index, channelIndex, instrumentIndex)) {\n                this.granularMix = synth.getModValue(Config.modulators.dictionary[\"granular\"].index, channelIndex, instrumentIndex, false) / Config.granularRange;\n                granularMixEnd = synth.getModValue(Config.modulators.dictionary[\"granular\"].index, channelIndex, instrumentIndex, true) / Config.granularRange;\n            }\n            this.granularMix *= envelopeStarts[51];\n            granularMixEnd *= envelopeEnds[51];\n            this.granularMixDelta = (granularMixEnd - this.granularMix) / roundedSamplesPerTick;\n            for (let iterations = 0; iterations < Math.ceil(Math.random() * Math.random() * 10); iterations++) {\n                if (this.granularGrainsLength < this.granularMaximumGrains && Math.random() <= granularChance) {\n                    let granularMinGrainSizeInMilliseconds = instrument.grainSize;\n                    if (synth.isModActive(Config.modulators.dictionary[\"grain size\"].index, channelIndex, instrumentIndex)) {\n                        granularMinGrainSizeInMilliseconds = synth.getModValue(Config.modulators.dictionary[\"grain size\"].index, channelIndex, instrumentIndex, false);\n                    }\n                    granularMinGrainSizeInMilliseconds *= envelopeStarts[53];\n                    let grainRange = instrument.grainRange;\n                    if (synth.isModActive(Config.modulators.dictionary[\"grain range\"].index, channelIndex, instrumentIndex)) {\n                        grainRange = synth.getModValue(Config.modulators.dictionary[\"grain range\"].index, channelIndex, instrumentIndex, false);\n                    }\n                    grainRange *= envelopeStarts[54];\n                    const granularMaxGrainSizeInMilliseconds = granularMinGrainSizeInMilliseconds + grainRange;\n                    const granularGrainSizeInMilliseconds = granularMinGrainSizeInMilliseconds + (granularMaxGrainSizeInMilliseconds - granularMinGrainSizeInMilliseconds) * Math.random();\n                    const granularGrainSizeInSeconds = granularGrainSizeInMilliseconds / 1000.0;\n                    const granularGrainSizeInSamples = Math.floor(granularGrainSizeInSeconds * samplesPerSecond);\n                    const granularDelayLineLength = this.granularDelayLine.length;\n                    const grainIndex = this.granularGrainsLength;\n                    this.granularGrainsLength++;\n                    const grain = this.granularGrains[grainIndex];\n                    grain.ageInSamples = 0;\n                    grain.maxAgeInSamples = granularGrainSizeInSamples;\n                    const minDelayTimeInSeconds = 0.02;\n                    const maxDelayTimeInSeconds = 2.4;\n                    grain.delayLinePosition = this.usesRandomGrainLocation ? (minDelayTimeInSeconds + (maxDelayTimeInSeconds - minDelayTimeInSeconds) * Math.random() * Math.random() * samplesPerSecond) % (granularDelayLineLength - 1) : minDelayTimeInSeconds;\n                    if (Config.granularEnvelopeType == 0) {\n                        grain.initializeParabolicEnvelope(grain.maxAgeInSamples, 1.0);\n                    }\n                    else if (Config.granularEnvelopeType == 1) {\n                        grain.initializeRCBEnvelope(grain.maxAgeInSamples, 1.0);\n                    }\n                    grain.addDelay(Math.random() * samplesPerTick * 4);\n                }\n            }\n        }\n        if (usesDistortion) {\n            let useDistortionStart = instrument.distortion;\n            let useDistortionEnd = instrument.distortion;\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\n            }\n            const distortionSliderStart = Math.min(1.0, envelopeStarts[42] * useDistortionStart / (Config.distortionRange - 1));\n            const distortionSliderEnd = Math.min(1.0, envelopeEnds[42] * useDistortionEnd / (Config.distortionRange - 1));\n            const distortionStart = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\n            const distortionEnd = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\n            const distortionDriveStart = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\n            const distortionDriveEnd = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\n            this.distortion = distortionStart;\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\n            this.distortionDrive = distortionDriveStart;\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\n        }\n        if (usesBitcrusher) {\n            let freqSettingStart = instrument.bitcrusherFreq * Math.sqrt(envelopeStarts[44]);\n            let freqSettingEnd = instrument.bitcrusherFreq * Math.sqrt(envelopeEnds[44]);\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false) * Math.sqrt(envelopeStarts[44]);\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true) * Math.sqrt(envelopeEnds[44]);\n            }\n            let quantizationSettingStart = instrument.bitcrusherQuantization * Math.sqrt(envelopeStarts[43]);\n            let quantizationSettingEnd = instrument.bitcrusherQuantization * Math.sqrt(envelopeEnds[43]);\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false) * Math.sqrt(envelopeStarts[43]);\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true) * Math.sqrt(envelopeEnds[43]);\n            }\n            const basePitch = Config.keys[synth.song.key].basePitch + (Config.pitchesPerOctave * synth.song.octave);\n            const freqStart = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingStart) * Config.bitcrusherOctaveStep);\n            const freqEnd = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingEnd) * Config.bitcrusherOctaveStep);\n            const phaseDeltaStart = Math.min(1.0, freqStart / samplesPerSecond);\n            const phaseDeltaEnd = Math.min(1.0, freqEnd / samplesPerSecond);\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\n            const scaleStart = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart) * 0.5));\n            const scaleEnd = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd) * 0.5));\n            this.bitcrusherScale = scaleStart;\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\n            const foldLevelStart = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart);\n            const foldLevelEnd = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd);\n            this.bitcrusherFoldLevel = foldLevelStart;\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\n        }\n        let eqFilterVolume = 1.0;\n        if (instrument.eqFilterType) {\n            const eqFilterSettingsStart = instrument.eqFilter;\n            if (instrument.eqSubFilters[1] == null)\n                instrument.eqSubFilters[1] = new FilterSettings();\n            const eqFilterSettingsEnd = instrument.eqSubFilters[1];\n            let startSimpleFreq = instrument.eqFilterSimpleCut;\n            let startSimpleGain = instrument.eqFilterSimplePeak;\n            let endSimpleFreq = instrument.eqFilterSimpleCut;\n            let endSimpleGain = instrument.eqFilterSimplePeak;\n            let filterChanges = false;\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\n                startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\n                endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\n                startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\n                endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n            let startPoint;\n            if (filterChanges) {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                let endPoint = eqFilterSettingsEnd.controlPoints[0];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.eqFilters.length < 1)\n                    this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            }\n            else {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.eqFilters.length < 1)\n                    this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            }\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            this.eqFilterCount = 1;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        else {\n            const eqFilterSettings = (instrument.tmpEqFilterStart != null) ? instrument.tmpEqFilterStart : instrument.eqFilter;\n            for (let i = 0; i < eqFilterSettings.controlPointCount; i++) {\n                let startPoint = eqFilterSettings.controlPoints[i];\n                let endPoint = (instrument.tmpEqFilterEnd != null && instrument.tmpEqFilterEnd.controlPoints[i] != null) ? instrument.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\n                if (startPoint.type != endPoint.type) {\n                    startPoint = endPoint;\n                }\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.eqFilters.length <= i)\n                    this.eqFilters[i] = new DynamicBiquadFilter();\n                this.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            }\n            this.eqFilterCount = eqFilterSettings.controlPointCount;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        const mainInstrumentVolume = Synth.instrumentVolumeToVolumeMult(instrument.volume);\n        this.mixVolume = mainInstrumentVolume;\n        let mixVolumeEnd = mainInstrumentVolume;\n        if (synth.isModActive(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex)) {\n            const startVal = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, false);\n            const endVal = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, true);\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n        }\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\n        }\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\n        let eqFilterVolumeStart = eqFilterVolume;\n        let eqFilterVolumeEnd = eqFilterVolume;\n        let delayInputMultStart = 1.0;\n        let delayInputMultEnd = 1.0;\n        if (usesPanning) {\n            const panEnvelopeStart = envelopeStarts[41] * 2.0 - 1.0;\n            const panEnvelopeEnd = envelopeEnds[41] * 2.0 - 1.0;\n            let usePanStart = instrument.pan;\n            let usePanEnd = instrument.pan;\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\n            }\n            let panStart = Math.max(-1.0, Math.min(1.0, (usePanStart - Config.panCenter) / Config.panCenter * panEnvelopeStart));\n            let panEnd = Math.max(-1.0, Math.min(1.0, (usePanEnd - Config.panCenter) / Config.panCenter * panEnvelopeEnd));\n            const volumeStartL = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\n            const volumeStartR = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\n            const volumeEndL = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\n            const volumeEndR = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\n            const maxDelaySamples = samplesPerSecond * Config.panDelaySecondsMax;\n            let usePanDelayStart = instrument.panDelay;\n            let usePanDelayEnd = instrument.panDelay;\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\n            }\n            const delayStart = panStart * usePanDelayStart * maxDelaySamples / 10;\n            const delayEnd = panEnd * usePanDelayEnd * maxDelaySamples / 10;\n            const delayStartL = Math.max(0.0, delayStart);\n            const delayStartR = Math.max(0.0, -delayStart);\n            const delayEndL = Math.max(0.0, delayEnd);\n            const delayEndR = Math.max(0.0, -delayEnd);\n            this.panningVolumeL = volumeStartL;\n            this.panningVolumeR = volumeStartR;\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\n        }\n        if (usesChorus) {\n            const chorusEnvelopeStart = envelopeStarts[45];\n            const chorusEnvelopeEnd = envelopeEnds[45];\n            let useChorusStart = instrument.chorus;\n            let useChorusEnd = instrument.chorus;\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\n            }\n            let chorusStart = Math.min(1.0, chorusEnvelopeStart * useChorusStart / (Config.chorusRange - 1));\n            let chorusEnd = Math.min(1.0, chorusEnvelopeEnd * useChorusEnd / (Config.chorusRange - 1));\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\n            this.chorusVoiceMult = chorusStart;\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\n            this.chorusCombinedMult = chorusCombinedMultStart;\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\n        }\n        if (usesRingModulation) {\n            let useRingModStart = instrument.ringModulation;\n            let useRingModEnd = instrument.ringModulation;\n            let useRingModEnvelopeStart = envelopeStarts[49];\n            let useRingModEnvelopeEnd = envelopeEnds[49];\n            let useRingModHzStart = Math.min(1.0, instrument.ringModulationHz / (Config.ringModHzRange - 1));\n            let useRingModHzEnd = Math.min(1.0, instrument.ringModulationHz / (Config.ringModHzRange - 1));\n            let useRingModHzEnvelopeStart = envelopeStarts[50];\n            let useRingModHzEnvelopeEnd = envelopeEnds[50];\n            if (synth.isModActive(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex)) {\n                useRingModStart = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, false));\n                useRingModEnd = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, true));\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex)) {\n                useRingModHzStart = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\n                useRingModHzEnd = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\n            }\n            useRingModHzStart *= useRingModHzEnvelopeStart;\n            useRingModHzEnd *= useRingModHzEnvelopeEnd;\n            let ringModStart = Math.min(1.0, (useRingModStart * useRingModEnvelopeStart) / (Config.ringModRange - 1));\n            let ringModEnd = Math.min(1.0, (useRingModEnd * useRingModEnvelopeEnd) / (Config.ringModRange - 1));\n            this.ringModMix = ringModStart;\n            this.ringModMixDelta = (ringModEnd - ringModStart) / roundedSamplesPerTick;\n            this.ringModHzOffset = instrument.ringModHzOffset;\n            let ringModPhaseDeltaStart = (Math.max(0, calculateRingModHertz(useRingModHzStart))) / synth.samplesPerSecond;\n            let ringModPhaseDeltaEnd = (Math.max(0, calculateRingModHertz(useRingModHzEnd))) / synth.samplesPerSecond;\n            if (useRingModHzStart < 1 / (Config.ringModHzRange - 1) || useRingModHzEnd < 1 / (Config.ringModHzRange - 1)) {\n                ringModPhaseDeltaStart *= useRingModHzStart * (Config.ringModHzRange - 1);\n                ringModPhaseDeltaEnd *= useRingModHzEnd * (Config.ringModHzRange - 1);\n            }\n            this.ringModMixFadeDelta = 0;\n            if (this.ringModMixFade < 0)\n                this.ringModMixFade = 0;\n            if (ringModPhaseDeltaStart <= 0 && ringModPhaseDeltaEnd <= 0 && this.ringModMixFade != 0) {\n                this.ringModMixFadeDelta = this.ringModMixFade / -40;\n            }\n            else if (ringModPhaseDeltaStart > 0 && ringModPhaseDeltaEnd > 0) {\n                this.ringModMixFade = 1.0;\n            }\n            this.ringModPhaseDelta = ringModPhaseDeltaStart;\n            this.ringModPhaseDeltaScale = ringModPhaseDeltaStart == 0 ? 1 : Math.pow(ringModPhaseDeltaEnd / ringModPhaseDeltaStart, 1.0 / roundedSamplesPerTick);\n            this.ringModWaveformIndex = instrument.ringModWaveformIndex;\n            this.ringModPulseWidth = instrument.ringModPulseWidth;\n        }\n        let maxEchoMult = 0.0;\n        let averageEchoDelaySeconds = 0.0;\n        if (usesEcho) {\n            const echoSustainEnvelopeStart = envelopeStarts[46];\n            const echoSustainEnvelopeEnd = envelopeEnds[46];\n            let useEchoSustainStart = instrument.echoSustain;\n            let useEchoSustainEnd = instrument.echoSustain;\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\n                useEchoSustainStart = Math.max(0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false));\n                useEchoSustainEnd = Math.max(0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true));\n            }\n            const echoMultStart = Math.min(1.0, Math.pow(echoSustainEnvelopeStart * useEchoSustainStart / Config.echoSustainRange, 1.1)) * 0.9;\n            const echoMultEnd = Math.min(1.0, Math.pow(echoSustainEnvelopeEnd * useEchoSustainEnd / Config.echoSustainRange, 1.1)) * 0.9;\n            this.echoMult = echoMultStart;\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\n            const echoDelayEnvelopeStart = envelopeStarts[55];\n            const echoDelayEnvelopeEnd = envelopeEnds[55];\n            let useEchoDelayStart = instrument.echoDelay * echoDelayEnvelopeStart;\n            let useEchoDelayEnd = instrument.echoDelay * echoDelayEnvelopeEnd;\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false) * echoDelayEnvelopeStart;\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true) * echoDelayEnvelopeEnd;\n            }\n            const tmpEchoDelayOffsetStart = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            const tmpEchoDelayOffsetEnd = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            if (this.echoDelayOffsetEnd != null) {\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\n            }\n            else {\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\n            }\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\n            this.echoDelayOffsetRatio = 0.0;\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\n            const shelfRadians = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n        let maxReverbMult = 0.0;\n        if (usesReverb) {\n            const reverbEnvelopeStart = envelopeStarts[47];\n            const reverbEnvelopeEnd = envelopeEnds[47];\n            let useReverbStart = instrument.reverb;\n            let useReverbEnd = instrument.reverb;\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n            }\n            const reverbStart = Math.min(1.0, Math.pow(reverbEnvelopeStart * useReverbStart / Config.reverbRange, 0.667)) * 0.425;\n            const reverbEnd = Math.min(1.0, Math.pow(reverbEnvelopeEnd * useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\n            this.reverbMult = reverbStart;\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\n            const shelfRadians = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n        if (this.tonesAddedInThisTick) {\n            this.attentuationProgress = 0.0;\n            this.flushedSamples = 0;\n            this.flushingDelayLines = false;\n        }\n        else if (!this.flushingDelayLines) {\n            if (this.attentuationProgress == 0.0) {\n                eqFilterVolumeEnd = 0.0;\n            }\n            else {\n                eqFilterVolumeStart = 0.0;\n                eqFilterVolumeEnd = 0.0;\n            }\n            const attenuationThreshold = 1.0 / 256.0;\n            const halfLifeMult = -Math.log2(attenuationThreshold);\n            let delayDuration = 0.0;\n            if (usesChorus) {\n                delayDuration += Config.chorusMaxDelay;\n            }\n            if (usesEcho) {\n                const attenuationPerSecond = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\n                const halfLife = -1.0 / Math.log2(attenuationPerSecond);\n                const echoDuration = halfLife * halfLifeMult;\n                delayDuration += echoDuration;\n            }\n            if (usesReverb) {\n                const averageMult = maxReverbMult * 2.0;\n                const averageReverbDelaySeconds = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\n                const attenuationPerSecond = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\n                const halfLife = -1.0 / Math.log2(attenuationPerSecond);\n                const reverbDuration = halfLife * halfLifeMult;\n                delayDuration += reverbDuration;\n            }\n            if (usesGranular) {\n                this.computeGrains = false;\n            }\n            const secondsInTick = samplesPerTick / samplesPerSecond;\n            const progressInTick = secondsInTick / delayDuration;\n            const progressAtEndOfTick = this.attentuationProgress + progressInTick;\n            if (progressAtEndOfTick >= 1.0) {\n                delayInputMultEnd = 0.0;\n            }\n            this.attentuationProgress = progressAtEndOfTick;\n            if (this.attentuationProgress >= 1.0) {\n                this.flushingDelayLines = true;\n            }\n        }\n        else {\n            eqFilterVolumeStart = 0.0;\n            eqFilterVolumeEnd = 0.0;\n            delayInputMultStart = 0.0;\n            delayInputMultEnd = 0.0;\n            let totalDelaySamples = 0;\n            if (usesChorus)\n                totalDelaySamples += synth.chorusDelayBufferSize;\n            if (usesEcho)\n                totalDelaySamples += this.echoDelayLineL.length;\n            if (usesReverb)\n                totalDelaySamples += Config.reverbDelayBufferSize;\n            if (usesGranular)\n                totalDelaySamples += this.granularMaximumDelayTimeInSeconds;\n            this.flushedSamples += roundedSamplesPerTick;\n            if (this.flushedSamples >= totalDelaySamples) {\n                this.deactivateAfterThisTick = true;\n            }\n        }\n        this.eqFilterVolume = eqFilterVolumeStart;\n        this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n        this.delayInputMult = delayInputMultStart;\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\n        this.envelopeComputer.clearEnvelopes();\n    }\n    updateWaves(instrument, samplesPerSecond) {\n        this.volumeScale = 1.0;\n        if (instrument.type == 0) {\n            this.wave = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\n            this.isUsingAdvancedLoopControls = instrument.isUsingAdvancedLoopControls;\n            this.chipWaveLoopStart = instrument.chipWaveLoopStart;\n            this.chipWaveLoopEnd = instrument.chipWaveLoopEnd;\n            this.chipWaveLoopMode = instrument.chipWaveLoopMode;\n            this.chipWavePlayBackwards = instrument.chipWavePlayBackwards;\n            this.chipWaveStartOffset = instrument.chipWaveStartOffset;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 6) {\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 9) {\n            this.wave = (this.aliases) ? instrument.customChipWave : instrument.customChipWaveIntegral;\n            this.volumeScale = 0.05;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 2) {\n            this.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 5) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 7) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 3) {\n            this.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 4) {\n            for (let i = 0; i < Config.drumCount; i++) {\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\n            }\n            this.wave = null;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else {\n            this.wave = null;\n        }\n    }\n    getDrumsetWave(pitch) {\n        if (this.type == 4) {\n            return this.drumsetSpectrumWaves[pitch].wave;\n        }\n        else {\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\n        }\n    }\n    static drumsetIndexReferenceDelta(index) {\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\n    }\n    static _drumsetIndexToSpectrumOctave(index) {\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\n    }\n}\nclass ChannelState {\n    constructor() {\n        this.instruments = [];\n        this.muted = false;\n        this.singleSeamlessInstrument = null;\n    }\n}\nexport class Synth {\n    syncSongState() {\n        const channelCount = this.song.getChannelCount();\n        for (let i = this.channels.length; i < channelCount; i++) {\n            this.channels[i] = new ChannelState();\n        }\n        this.channels.length = channelCount;\n        for (let i = 0; i < channelCount; i++) {\n            const channel = this.song.channels[i];\n            const channelState = this.channels[i];\n            for (let j = channelState.instruments.length; j < channel.instruments.length; j++) {\n                channelState.instruments[j] = new InstrumentState();\n            }\n            channelState.instruments.length = channel.instruments.length;\n            if (channelState.muted != channel.muted) {\n                channelState.muted = channel.muted;\n                if (channelState.muted) {\n                    for (const instrumentState of channelState.instruments) {\n                        instrumentState.resetAllEffects();\n                    }\n                }\n            }\n        }\n    }\n    initModFilters(song) {\n        if (song != null) {\n            song.tmpEqFilterStart = song.eqFilter;\n            song.tmpEqFilterEnd = null;\n            for (let channelIndex = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    instrument.tmpEqFilterStart = instrument.eqFilter;\n                    instrument.tmpEqFilterEnd = null;\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\n                    instrument.tmpNoteFilterEnd = null;\n                }\n            }\n        }\n    }\n    warmUpSynthesizer(song) {\n        if (song != null) {\n            this.syncSongState();\n            const samplesPerTick = this.getSamplesPerTick();\n            for (let channelIndex = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    const instrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    Synth.getInstrumentSynthFunction(instrument);\n                    instrumentState.vibratoTime = 0;\n                    instrumentState.nextVibratoTime = 0;\n                    for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++)\n                        instrumentState.envelopeTime[envelopeIndex] = 0;\n                    instrumentState.arpTime = 0;\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\n                }\n            }\n        }\n        var dummyArray = new Float32Array(1);\n        this.isPlayingSong = true;\n        this.synthesize(dummyArray, dummyArray, 1, true);\n        this.isPlayingSong = false;\n    }\n    computeLatestModValues() {\n        if (this.song != null && this.song.modChannelCount > 0) {\n            let latestModTimes = [];\n            let latestModInsTimes = [];\n            this.modValues = [];\n            this.nextModValues = [];\n            this.modInsValues = [];\n            this.nextModInsValues = [];\n            this.heldMods = [];\n            for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                latestModInsTimes[channel] = [];\n                this.modInsValues[channel] = [];\n                this.nextModInsValues[channel] = [];\n                for (let instrument = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\n                    this.modInsValues[channel][instrument] = [];\n                    this.nextModInsValues[channel][instrument] = [];\n                    latestModInsTimes[channel][instrument] = [];\n                }\n            }\n            let currentPart = this.beat * Config.partsPerBeat + this.part;\n            for (let channelIndex = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\n                if (!(this.song.channels[channelIndex].muted)) {\n                    let pattern;\n                    for (let currentBar = this.bar; currentBar >= 0; currentBar--) {\n                        pattern = this.song.getPattern(channelIndex, currentBar);\n                        if (pattern != null) {\n                            let instrumentIdx = pattern.instruments[0];\n                            let instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\n                            let latestPinParts = [];\n                            let latestPinValues = [];\n                            let partsInBar = (currentBar == this.bar)\n                                ? currentPart\n                                : this.findPartsInBar(currentBar);\n                            for (const note of pattern.notes) {\n                                if (note.start <= partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\n                                    if (note.start == partsInBar) {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.start;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[0].size;\n                                    }\n                                    if (note.end <= partsInBar) {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (let mod = 0; mod < Config.modCount; mod++) {\n                                if (latestPinParts[mod] != null) {\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\n                                        const songFilterParam = instrument.modulators[mod] == Config.modulators.dictionary[\"song eq\"].index;\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModTimes[instrument.modulators[mod]]) {\n                                            if (songFilterParam) {\n                                                let tgtSong = this.song;\n                                                if (instrument.modFilterTypes[mod] == 0) {\n                                                    tgtSong.tmpEqFilterStart = tgtSong.eqSubFilters[latestPinValues[mod]];\n                                                }\n                                                else {\n                                                    for (let i = 0; i < Config.filterMorphCount; i++) {\n                                                        if (tgtSong.tmpEqFilterStart != null && tgtSong.tmpEqFilterStart == tgtSong.eqSubFilters[i]) {\n                                                            tgtSong.tmpEqFilterStart = new FilterSettings();\n                                                            tgtSong.tmpEqFilterStart.fromJsonObject(tgtSong.eqSubFilters[i].toJsonObject());\n                                                            i = Config.filterMorphCount;\n                                                        }\n                                                    }\n                                                    if (tgtSong.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtSong.tmpEqFilterStart.controlPointCount) {\n                                                        if (instrument.modFilterTypes[mod] % 2)\n                                                            tgtSong.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                        else\n                                                            tgtSong.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                    }\n                                                }\n                                                tgtSong.tmpEqFilterEnd = tgtSong.tmpEqFilterStart;\n                                            }\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], instrument.modInstruments[mod], instrument.modulators[mod]);\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                        }\n                                    }\n                                    else {\n                                        let usedInstruments = [];\n                                        if (instrument.modInstruments[mod] == this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            for (let i = 0; i < this.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                                                usedInstruments.push(i);\n                                            }\n                                        }\n                                        else if (instrument.modInstruments[mod] > this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            const tgtPattern = this.song.getPattern(instrument.modChannels[mod], currentBar);\n                                            if (tgtPattern != null)\n                                                usedInstruments = tgtPattern.instruments;\n                                        }\n                                        else {\n                                            usedInstruments.push(instrument.modInstruments[mod]);\n                                        }\n                                        for (let instrumentIndex = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n                                            const eqFilterParam = instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index;\n                                            const noteFilterParam = instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index;\n                                            let modulatorAdjust = instrument.modulators[mod];\n                                            if (eqFilterParam) {\n                                                modulatorAdjust = Config.modulators.length + (instrument.modFilterTypes[mod] | 0);\n                                            }\n                                            else if (noteFilterParam) {\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + (instrument.modFilterTypes[mod] | 0);\n                                            }\n                                            if (latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust]) {\n                                                if (eqFilterParam) {\n                                                    let tgtInstrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpEqFilterStart = tgtInstrument.eqSubFilters[latestPinValues[mod]];\n                                                    }\n                                                    else {\n                                                        for (let i = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpEqFilterStart != null && tgtInstrument.tmpEqFilterStart == tgtInstrument.eqSubFilters[i]) {\n                                                                tgtInstrument.tmpEqFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpEqFilterStart.fromJsonObject(tgtInstrument.eqSubFilters[i].toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpEqFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpEqFilterEnd = tgtInstrument.tmpEqFilterStart;\n                                                }\n                                                else if (noteFilterParam) {\n                                                    let tgtInstrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\n                                                    }\n                                                    else {\n                                                        for (let i = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpNoteFilterStart != null && tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i].toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpNoteFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\n                                                }\n                                                else\n                                                    this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], usedInstruments[instrumentIndex], modulatorAdjust);\n                                                latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    determineInvalidModulators(instrument) {\n        if (this.song == null)\n            return;\n        for (let mod = 0; mod < Config.modCount; mod++) {\n            instrument.invalidModulators[mod] = true;\n            if (instrument.modChannels[mod] == -1) {\n                if (instrument.modulators[mod] != 0)\n                    instrument.invalidModulators[mod] = false;\n                continue;\n            }\n            const channel = this.song.channels[instrument.modChannels[mod]];\n            if (channel == null)\n                continue;\n            let tgtInstrumentList = [];\n            if (instrument.modInstruments[mod] >= channel.instruments.length) {\n                tgtInstrumentList = channel.instruments;\n            }\n            else {\n                tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod]]];\n            }\n            for (let i = 0; i < tgtInstrumentList.length; i++) {\n                const tgtInstrument = tgtInstrumentList[i];\n                if (tgtInstrument == null)\n                    continue;\n                const str = Config.modulators[instrument.modulators[mod]].name;\n                if (!((Config.modulators[instrument.modulators[mod]].associatedEffect != 15 && !(tgtInstrument.effects & (1 << Config.modulators[instrument.modulators[mod]].associatedEffect)))\n                    || ((tgtInstrument.type != 1 && tgtInstrument.type != 11) && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\n                    || tgtInstrument.type != 11 && (str == \"fm slider 5\" || str == \"fm slider 6\")\n                    || ((tgtInstrument.type != 6 && tgtInstrument.type != 8) && (str == \"pulse width\" || str == \"decimal offset\"))\n                    || ((tgtInstrument.type != 8) && (str == \"dynamism\" || str == \"spread\" || str == \"saw shape\"))\n                    || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\n                    || (tgtInstrument.eqFilterType && str == \"eq filter\")\n                    || (!tgtInstrument.eqFilterType && (str == \"eq filt cut\" || str == \"eq filt peak\"))\n                    || (str == \"eq filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(false))\n                    || (tgtInstrument.noteFilterType && str == \"note filter\")\n                    || (!tgtInstrument.noteFilterType && (str == \"note filt cut\" || str == \"note filt peak\"))\n                    || (str == \"note filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(true)))) {\n                    instrument.invalidModulators[mod] = false;\n                    i = tgtInstrumentList.length;\n                }\n            }\n        }\n    }\n    static operatorAmplitudeCurve(amplitude) {\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\n    }\n    get playing() {\n        return this.isPlayingSong;\n    }\n    get recording() {\n        return this.isRecording;\n    }\n    get playhead() {\n        return this.playheadInternal;\n    }\n    set playhead(value) {\n        if (this.song != null) {\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\n            let remainder = this.playheadInternal;\n            this.bar = Math.floor(remainder);\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\n            this.beat = Math.floor(remainder);\n            remainder = Config.partsPerBeat * (remainder - this.beat);\n            this.part = Math.floor(remainder);\n            remainder = Config.ticksPerPart * (remainder - this.part);\n            this.tick = Math.floor(remainder);\n            this.tickSampleCountdown = 0;\n            this.isAtStartOfTick = true;\n            this.prevBar = null;\n        }\n    }\n    getSamplesPerBar() {\n        if (this.song == null)\n            throw new Error();\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\n    }\n    getTicksIntoBar() {\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n    }\n    getCurrentPart() {\n        return (this.beat * Config.partsPerBeat + this.part);\n    }\n    findPartsInBar(bar) {\n        if (this.song == null)\n            return 0;\n        let partsInBar = Config.partsPerBeat * this.song.beatsPerBar;\n        for (let channel = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\n            let pattern = this.song.getPattern(channel, bar);\n            if (pattern != null) {\n                let instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                for (let mod = 0; mod < Config.modCount; mod++) {\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                        for (const note of pattern.notes) {\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                if (partsInBar > note.start)\n                                    partsInBar = note.start;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return partsInBar;\n    }\n    getTotalSamples(enableIntro, enableOutro, loop) {\n        if (this.song == null)\n            return -1;\n        let startBar = enableIntro ? 0 : this.song.loopStart;\n        let endBar = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\n        let hasTempoMods = false;\n        let hasNextBarMods = false;\n        let prevTempo = this.song.tempo;\n        for (let channel = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n            for (let bar = startBar; bar < endBar; bar++) {\n                let pattern = this.song.getPattern(channel, bar);\n                if (pattern != null) {\n                    let instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                    for (let mod = 0; mod < Config.modCount; mod++) {\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                            hasTempoMods = true;\n                        }\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                            hasNextBarMods = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (startBar > 0) {\n            let latestTempoPin = null;\n            let latestTempoValue = 0;\n            for (let bar = startBar - 1; bar >= 0; bar--) {\n                for (let channel = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                    let pattern = this.song.getPattern(channel, bar);\n                    if (pattern != null) {\n                        let instrumentIdx = pattern.instruments[0];\n                        let instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        let partsInBar = this.findPartsInBar(bar);\n                        for (const note of pattern.notes) {\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\n                                    if (note.end <= partsInBar) {\n                                        latestTempoPin = note.end;\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestTempoPin = partsInBar;\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (latestTempoPin != null) {\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                    bar = -1;\n                }\n            }\n        }\n        if (hasTempoMods || hasNextBarMods) {\n            let bar = startBar;\n            let ended = false;\n            let totalSamples = 0;\n            while (!ended) {\n                let partsInBar = Config.partsPerBeat * this.song.beatsPerBar;\n                let currentPart = 0;\n                if (hasNextBarMods) {\n                    partsInBar = this.findPartsInBar(bar);\n                }\n                if (hasTempoMods) {\n                    let foundMod = false;\n                    for (let channel = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                        if (foundMod == false) {\n                            let pattern = this.song.getPattern(channel, bar);\n                            if (pattern != null) {\n                                let instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                                for (let mod = 0; mod < Config.modCount; mod++) {\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\n                                        foundMod = true;\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n                                        for (const note of pattern.notes) {\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n                                                if (note.start < partsInBar) {\n                                                    for (let pinIdx = 1; pinIdx < note.pins.length; pinIdx++) {\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\n                                                            const tickLength = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\n                                                            const prevPinTempo = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            let currPinTempo = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            }\n                                                            let bpmScalar = Config.partsPerBeat * Config.ticksPerPart / 60;\n                                                            if (currPinTempo != prevPinTempo) {\n                                                                totalSamples += -this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\n                                                            }\n                                                            else {\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\n                                                            }\n                                                            prevTempo = currPinTempo;\n                                                        }\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n                bar++;\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\n                    bar = this.song.loopStart;\n                    if (loop > 0)\n                        loop--;\n                }\n                if (bar >= endBar) {\n                    ended = true;\n                }\n            }\n            return Math.ceil(totalSamples);\n        }\n        else {\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\n        }\n    }\n    getTotalBars(enableIntro, enableOutro, useLoopCount = this.loopRepeatCount) {\n        if (this.song == null)\n            throw new Error();\n        let bars = this.song.loopLength * (useLoopCount + 1);\n        if (enableIntro)\n            bars += this.song.loopStart;\n        if (enableOutro)\n            bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\n        return bars;\n    }\n    constructor(song = null) {\n        this.samplesPerSecond = 44100;\n        this.song = null;\n        this.preferLowerLatency = false;\n        this.anticipatePoorPerformance = false;\n        this.liveInputDuration = 0;\n        this.liveBassInputDuration = 0;\n        this.liveInputStarted = false;\n        this.liveBassInputStarted = false;\n        this.liveInputPitches = [];\n        this.liveBassInputPitches = [];\n        this.liveInputChannel = 0;\n        this.liveBassInputChannel = 0;\n        this.liveInputInstruments = [];\n        this.liveBassInputInstruments = [];\n        this.loopRepeatCount = -1;\n        this.volume = 1.0;\n        this.oscRefreshEventTimer = 0;\n        this.oscEnabled = true;\n        this.enableMetronome = false;\n        this.countInMetronome = false;\n        this.renderingSong = false;\n        this.heldMods = [];\n        this.wantToSkip = false;\n        this.playheadInternal = 0.0;\n        this.bar = 0;\n        this.prevBar = null;\n        this.nextBar = null;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.isAtStartOfTick = true;\n        this.isAtEndOfTick = true;\n        this.tickSampleCountdown = 0;\n        this.modValues = [];\n        this.modInsValues = [];\n        this.nextModValues = [];\n        this.nextModInsValues = [];\n        this.isPlayingSong = false;\n        this.isRecording = false;\n        this.liveInputEndTime = 0.0;\n        this.browserAutomaticallyClearsAudioBuffer = true;\n        this.tempDrumSetControlPoint = new FilterControlPoint();\n        this.tempFrequencyResponse = new FrequencyResponse();\n        this.loopBarStart = -1;\n        this.loopBarEnd = -1;\n        this.channels = [];\n        this.tonePool = new Deque();\n        this.tempMatchedPitchTones = Array(Config.maxChordSize).fill(null);\n        this.startedMetronome = false;\n        this.metronomeSamplesRemaining = -1;\n        this.metronomeAmplitude = 0.0;\n        this.metronomePrevAmplitude = 0.0;\n        this.metronomeFilter = 0.0;\n        this.limit = 0.0;\n        this.songEqFilterVolume = 1.0;\n        this.songEqFilterVolumeDelta = 0.0;\n        this.songEqFiltersL = [];\n        this.songEqFiltersR = [];\n        this.songEqFilterCount = 0;\n        this.initialSongEqFilterInput1L = 0.0;\n        this.initialSongEqFilterInput2L = 0.0;\n        this.initialSongEqFilterInput1R = 0.0;\n        this.initialSongEqFilterInput2R = 0.0;\n        this.tempMonoInstrumentSampleBuffer = null;\n        this.audioCtx = null;\n        this.scriptNode = null;\n        this.audioProcessCallback = (audioProcessingEvent) => {\n            const outputBuffer = audioProcessingEvent.outputBuffer;\n            const outputDataL = outputBuffer.getChannelData(0);\n            const outputDataR = outputBuffer.getChannelData(1);\n            if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\n                this.browserAutomaticallyClearsAudioBuffer = false;\n            }\n            if (!this.browserAutomaticallyClearsAudioBuffer) {\n                const length = outputBuffer.length;\n                for (let i = 0; i < length; i++) {\n                    outputDataL[i] = 0.0;\n                    outputDataR[i] = 0.0;\n                }\n            }\n            if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\n                this.deactivateAudio();\n            }\n            else {\n                this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\n                if (this.oscEnabled) {\n                    if (this.oscRefreshEventTimer <= 0) {\n                        events.raise(\"oscilloscopeUpdate\", outputDataL, outputDataR);\n                        this.oscRefreshEventTimer = 2;\n                    }\n                    else {\n                        this.oscRefreshEventTimer--;\n                    }\n                }\n            }\n        };\n        this.computeDelayBufferSizes();\n        if (song != null)\n            this.setSong(song);\n    }\n    setSong(song) {\n        if (typeof (song) == \"string\") {\n            this.song = new Song(song);\n        }\n        else if (song instanceof Song) {\n            this.song = song;\n        }\n        this.prevBar = null;\n    }\n    computeDelayBufferSizes() {\n        this.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\n        this.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\n    }\n    activateAudio() {\n        const bufferSize = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\n            if (this.scriptNode != null)\n                this.deactivateAudio();\n            const latencyHint = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\n            this.samplesPerSecond = this.audioCtx.sampleRate;\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2);\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\n            this.scriptNode.channelCountMode = 'explicit';\n            this.scriptNode.channelInterpretation = 'speakers';\n            this.scriptNode.connect(this.audioCtx.destination);\n            this.computeDelayBufferSizes();\n        }\n        this.audioCtx.resume();\n    }\n    deactivateAudio() {\n        if (this.audioCtx != null && this.scriptNode != null) {\n            this.scriptNode.disconnect(this.audioCtx.destination);\n            this.scriptNode = null;\n            if (this.audioCtx.close)\n                this.audioCtx.close();\n            this.audioCtx = null;\n        }\n    }\n    maintainLiveInput() {\n        this.activateAudio();\n        this.liveInputEndTime = performance.now() + 10000.0;\n    }\n    play() {\n        if (this.isPlayingSong)\n            return;\n        this.initModFilters(this.song);\n        this.computeLatestModValues();\n        this.activateAudio();\n        this.warmUpSynthesizer(this.song);\n        this.isPlayingSong = true;\n    }\n    pause() {\n        if (!this.isPlayingSong)\n            return;\n        this.isPlayingSong = false;\n        this.isRecording = false;\n        this.preferLowerLatency = false;\n        this.modValues = [];\n        this.nextModValues = [];\n        this.heldMods = [];\n        if (this.song != null) {\n            this.song.inVolumeCap = 0.0;\n            this.song.outVolumeCap = 0.0;\n            this.song.tmpEqFilterStart = null;\n            this.song.tmpEqFilterEnd = null;\n            for (let channelIndex = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                this.modInsValues[channelIndex] = [];\n                this.nextModInsValues[channelIndex] = [];\n            }\n        }\n    }\n    startRecording() {\n        this.preferLowerLatency = true;\n        this.isRecording = true;\n        this.play();\n    }\n    resetEffects() {\n        this.limit = 0.0;\n        this.freeAllTones();\n        if (this.song != null) {\n            for (const channelState of this.channels) {\n                for (const instrumentState of channelState.instruments) {\n                    instrumentState.resetAllEffects();\n                }\n            }\n        }\n    }\n    setModValue(volumeStart, volumeEnd, channelIndex, instrumentIndex, setting) {\n        let val = volumeStart + Config.modulators[setting].convertRealFactor;\n        let nextVal = volumeEnd + Config.modulators[setting].convertRealFactor;\n        if (Config.modulators[setting].forSong) {\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\n                this.modValues[setting] = val;\n                this.nextModValues[setting] = nextVal;\n            }\n        }\n        else {\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\n            }\n        }\n        return val;\n    }\n    getModValue(setting, channel, instrument, nextVal) {\n        const forSong = Config.modulators[setting].forSong;\n        if (forSong) {\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\n                return nextVal ? this.nextModValues[setting] : this.modValues[setting];\n            }\n        }\n        else if (channel != undefined && instrument != undefined) {\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                return nextVal ? this.nextModInsValues[channel][instrument][setting] : this.modInsValues[channel][instrument][setting];\n            }\n        }\n        return -1;\n    }\n    isAnyModActive(channel, instrument) {\n        for (let setting = 0; setting < Config.modulators.length; setting++) {\n            if ((this.modValues != undefined && this.modValues[setting] != null)\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    unsetMod(setting, channel, instrument) {\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\n            this.modValues[setting] = null;\n            this.nextModValues[setting] = null;\n            for (let i = 0; i < this.heldMods.length; i++) {\n                if (channel != undefined && instrument != undefined) {\n                    if (this.heldMods[i].channelIndex == channel && this.heldMods[i].instrumentIndex == instrument && this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                }\n                else {\n                    if (this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                }\n            }\n            if (channel != undefined && instrument != undefined) {\n                this.modInsValues[channel][instrument][setting] = null;\n                this.nextModInsValues[channel][instrument][setting] = null;\n            }\n        }\n    }\n    isFilterModActive(forNoteFilter, channelIdx, instrumentIdx, forSong) {\n        var _a;\n        const instrument = this.song.channels[channelIdx].instruments[instrumentIdx];\n        if (forNoteFilter) {\n            if (instrument.noteFilterType)\n                return false;\n            if (instrument.tmpNoteFilterEnd != null)\n                return true;\n        }\n        else {\n            if (forSong) {\n                if (((_a = this === null || this === void 0 ? void 0 : this.song) === null || _a === void 0 ? void 0 : _a.tmpEqFilterEnd) != null)\n                    return true;\n            }\n            else {\n                if (instrument.eqFilterType)\n                    return false;\n                if (instrument.tmpEqFilterEnd != null)\n                    return true;\n            }\n        }\n        return false;\n    }\n    isModActive(setting, channel, instrument) {\n        const forSong = Config.modulators[setting].forSong;\n        if (forSong) {\n            return (this.modValues != undefined && this.modValues[setting] != null);\n        }\n        else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\n            return (this.modInsValues[channel][instrument][setting] != null);\n        }\n        return false;\n    }\n    forceHoldMods(volumeStart, channelIndex, instrumentIndex, setting) {\n        let found = false;\n        for (let i = 0; i < this.heldMods.length; i++) {\n            if (this.heldMods[i].channelIndex == channelIndex && this.heldMods[i].instrumentIndex == instrumentIndex && this.heldMods[i].setting == setting) {\n                this.heldMods[i].volume = volumeStart;\n                this.heldMods[i].holdFor = 24;\n                found = true;\n            }\n        }\n        if (!found)\n            this.heldMods.push({ volume: volumeStart, channelIndex: channelIndex, instrumentIndex: instrumentIndex, setting: setting, holdFor: 24 });\n    }\n    snapToStart() {\n        this.bar = 0;\n        this.resetEffects();\n        this.snapToBar();\n    }\n    goToBar(bar) {\n        this.bar = bar;\n        this.resetEffects();\n        this.playheadInternal = this.bar;\n    }\n    snapToBar() {\n        this.playheadInternal = this.bar;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = 0;\n    }\n    jumpIntoLoop() {\n        if (!this.song)\n            return;\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\n            const oldBar = this.bar;\n            this.bar = this.song.loopStart;\n            this.playheadInternal += this.bar - oldBar;\n            if (this.playing)\n                this.computeLatestModValues();\n        }\n    }\n    goToNextBar() {\n        if (!this.song)\n            return;\n        this.prevBar = this.bar;\n        const oldBar = this.bar;\n        this.bar++;\n        if (this.bar >= this.song.barCount) {\n            this.bar = 0;\n        }\n        this.playheadInternal += this.bar - oldBar;\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n    goToPrevBar() {\n        if (!this.song)\n            return;\n        this.prevBar = null;\n        const oldBar = this.bar;\n        this.bar--;\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\n            this.bar = this.song.barCount - 1;\n        }\n        this.playheadInternal += this.bar - oldBar;\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n    getNextBar() {\n        let nextBar = this.bar + 1;\n        if (this.isRecording) {\n            if (nextBar >= this.song.barCount) {\n                nextBar = this.song.barCount - 1;\n            }\n        }\n        else if (this.bar == this.loopBarEnd && !this.renderingSong) {\n            nextBar = this.loopBarStart;\n        }\n        else if (this.loopRepeatCount != 0 && nextBar == Math.max(this.loopBarEnd + 1, this.song.loopStart + this.song.loopLength)) {\n            nextBar = this.song.loopStart;\n        }\n        return nextBar;\n    }\n    skipBar() {\n        if (!this.song)\n            return;\n        const samplesPerTick = this.getSamplesPerTick();\n        this.prevBar = this.bar;\n        if (this.loopBarEnd != this.bar)\n            this.bar++;\n        else {\n            this.bar = this.loopBarStart;\n        }\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = samplesPerTick;\n        this.isAtStartOfTick = true;\n        if (this.loopRepeatCount != 0 && this.bar == Math.max(this.song.loopStart + this.song.loopLength, this.loopBarEnd)) {\n            this.bar = this.song.loopStart;\n            if (this.loopBarStart != -1)\n                this.bar = this.loopBarStart;\n            if (this.loopRepeatCount > 0)\n                this.loopRepeatCount--;\n        }\n    }\n    computeSongState(samplesPerTick) {\n        if (this.song == null)\n            return;\n        const roundedSamplesPerTick = Math.ceil(samplesPerTick);\n        const samplesPerSecond = this.samplesPerSecond;\n        let eqFilterVolume = 1.0;\n        if (this.song.eqFilterType) {\n            const eqFilterSettingsStart = this.song.eqFilter;\n            if (this.song.eqSubFilters[1] == null)\n                this.song.eqSubFilters[1] = new FilterSettings();\n            const eqFilterSettingsEnd = this.song.eqSubFilters[1];\n            let startSimpleFreq = this.song.eqFilterSimpleCut;\n            let startSimpleGain = this.song.eqFilterSimplePeak;\n            let endSimpleFreq = this.song.eqFilterSimpleCut;\n            let endSimpleGain = this.song.eqFilterSimplePeak;\n            let filterChanges = false;\n            let startPoint;\n            if (filterChanges) {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                let endPoint = eqFilterSettingsEnd.controlPoints[0];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.songEqFiltersL.length < 1)\n                    this.songEqFiltersL[0] = new DynamicBiquadFilter();\n                this.songEqFiltersL[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                if (this.songEqFiltersR.length < 1)\n                    this.songEqFiltersR[0] = new DynamicBiquadFilter();\n                this.songEqFiltersR[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            }\n            else {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.songEqFiltersL.length < 1)\n                    this.songEqFiltersL[0] = new DynamicBiquadFilter();\n                this.songEqFiltersL[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                if (this.songEqFiltersR.length < 1)\n                    this.songEqFiltersR[0] = new DynamicBiquadFilter();\n                this.songEqFiltersR[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            }\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            this.songEqFilterCount = 1;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        else {\n            const eqFilterSettings = (this.song.tmpEqFilterStart != null) ? this.song.tmpEqFilterStart : this.song.eqFilter;\n            for (let i = 0; i < eqFilterSettings.controlPointCount; i++) {\n                let startPoint = eqFilterSettings.controlPoints[i];\n                let endPoint = (this.song.tmpEqFilterEnd != null && this.song.tmpEqFilterEnd.controlPoints[i] != null) ? this.song.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\n                if (startPoint.type != endPoint.type) {\n                    startPoint = endPoint;\n                }\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.songEqFiltersL.length <= i)\n                    this.songEqFiltersL[i] = new DynamicBiquadFilter();\n                this.songEqFiltersL[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                if (this.songEqFiltersR.length <= i)\n                    this.songEqFiltersR[i] = new DynamicBiquadFilter();\n                this.songEqFiltersR[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            }\n            this.songEqFilterCount = eqFilterSettings.controlPointCount;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        let eqFilterVolumeStart = eqFilterVolume;\n        let eqFilterVolumeEnd = eqFilterVolume;\n        this.songEqFilterVolume = eqFilterVolumeStart;\n        this.songEqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n    }\n    synthesize(outputDataL, outputDataR, outputBufferLength, playSong = true) {\n        if (this.song == null) {\n            for (let i = 0; i < outputBufferLength; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n            this.deactivateAudio();\n            return;\n        }\n        const outputDataLUnfiltered = outputDataL.slice();\n        const outputDataRUnfiltered = outputDataR.slice();\n        const song = this.song;\n        this.song.inVolumeCap = 0.0;\n        this.song.outVolumeCap = 0.0;\n        let samplesPerTick = this.getSamplesPerTick();\n        let ended = false;\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\n            this.tickSampleCountdown = samplesPerTick;\n            this.isAtStartOfTick = true;\n        }\n        if (playSong) {\n            if (this.beat >= song.beatsPerBar) {\n                this.beat = 0;\n                this.part = 0;\n                this.tick = 0;\n                this.tickSampleCountdown = samplesPerTick;\n                this.isAtStartOfTick = true;\n                this.prevBar = this.bar;\n                this.bar = this.getNextBar();\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0)\n                    this.loopRepeatCount--;\n            }\n            if (this.bar >= song.barCount) {\n                this.bar = 0;\n                if (this.loopRepeatCount != -1) {\n                    ended = true;\n                    this.pause();\n                }\n            }\n        }\n        this.syncSongState();\n        if (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\n            this.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\n        }\n        const volume = +this.volume;\n        const limitDecay = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond);\n        const limitRise = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond);\n        let limit = +this.limit;\n        let skippedBars = [];\n        let firstSkippedBufferIndex = -1;\n        let bufferIndex = 0;\n        while (bufferIndex < outputBufferLength && !ended) {\n            this.nextBar = this.getNextBar();\n            if (this.nextBar >= song.barCount)\n                this.nextBar = null;\n            const samplesLeftInBuffer = outputBufferLength - bufferIndex;\n            const samplesLeftInTick = Math.ceil(this.tickSampleCountdown);\n            const runLength = Math.min(samplesLeftInTick, samplesLeftInBuffer);\n            const runEnd = bufferIndex + runLength;\n            if (this.isPlayingSong || this.renderingSong) {\n                for (let channelIndex = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel = song.channels[channelIndex];\n                    const channelState = this.channels[channelIndex];\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\n                    for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState = channelState.instruments[instrumentIndex];\n                        for (let i = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone = instrumentState.activeModTones.get(i);\n                            const channel = song.channels[channelIndex];\n                            const instrument = channel.instruments[tone.instrumentIndex];\n                            let mod = Config.modCount - 1 - tone.pitches[0];\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"song eq\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n                                continue;\n                            }\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                        }\n                    }\n                }\n                for (let channelIndex = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel = song.channels[channelIndex];\n                    const channelState = this.channels[channelIndex];\n                    for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState = channelState.instruments[instrumentIndex];\n                        for (let i = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone = instrumentState.activeModTones.get(i);\n                            const channel = song.channels[channelIndex];\n                            const instrument = channel.instruments[tone.instrumentIndex];\n                            let mod = Config.modCount - 1 - tone.pitches[0];\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"song eq\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n                                this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.wantToSkip) {\n                let barVisited = skippedBars.includes(this.bar);\n                if (barVisited && bufferIndex == firstSkippedBufferIndex) {\n                    this.pause();\n                    return;\n                }\n                if (firstSkippedBufferIndex == -1) {\n                    firstSkippedBufferIndex = bufferIndex;\n                }\n                if (!barVisited)\n                    skippedBars.push(this.bar);\n                this.wantToSkip = false;\n                this.skipBar();\n                continue;\n            }\n            this.computeSongState(samplesPerTick);\n            for (let channelIndex = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\n                const channel = song.channels[channelIndex];\n                const channelState = this.channels[channelIndex];\n                if (this.isAtStartOfTick) {\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\n                }\n                for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                    const instrument = channel.instruments[instrumentIndex];\n                    const instrumentState = channelState.instruments[instrumentIndex];\n                    if (this.isAtStartOfTick) {\n                        let tonesPlayedInThisInstrument = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\n                        for (let i = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone = instrumentState.releasedTones.get(i);\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                                continue;\n                            }\n                            const shouldFadeOutFast = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\n                            tonesPlayedInThisInstrument++;\n                        }\n                        if (instrumentState.awake) {\n                            if (!instrumentState.computed) {\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\n                            }\n                            instrumentState.computed = false;\n                            instrumentState.envelopeComputer.clearEnvelopes();\n                        }\n                    }\n                    for (let i = 0; i < instrumentState.activeTones.count(); i++) {\n                        const tone = instrumentState.activeTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n                    for (let i = 0; i < instrumentState.liveInputTones.count(); i++) {\n                        const tone = instrumentState.liveInputTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n                    for (let i = 0; i < instrumentState.releasedTones.count(); i++) {\n                        const tone = instrumentState.releasedTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n                    if (instrumentState.awake) {\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n                    }\n                    const tickSampleCountdown = this.tickSampleCountdown;\n                    const startRatio = 1.0 - (tickSampleCountdown) / samplesPerTick;\n                    const endRatio = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\n                    const ticksIntoBar = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n                    const partTimeTickStart = (ticksIntoBar) / Config.ticksPerPart;\n                    const partTimeTickEnd = (ticksIntoBar + 1) / Config.ticksPerPart;\n                    const partTimeStart = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n                    const partTimeEnd = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n                    let useVibratoSpeed = instrument.vibratoSpeed;\n                    instrumentState.vibratoTime = instrumentState.nextVibratoTime;\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\n                    }\n                    if (useVibratoSpeed == 0) {\n                        instrumentState.vibratoTime = 0;\n                        instrumentState.nextVibratoTime = 0;\n                    }\n                    else {\n                        instrumentState.nextVibratoTime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\n                    }\n                }\n            }\n            if (this.enableMetronome || this.countInMetronome) {\n                if (this.part == 0) {\n                    if (!this.startedMetronome) {\n                        const midBeat = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\n                        const periods = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\n                        const hz = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\n                        const amplitude = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\n                        const samplesPerPeriod = this.samplesPerSecond / hz;\n                        const radiansPerSample = Math.PI * 2.0 / samplesPerPeriod;\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\n                        this.metronomePrevAmplitude = 0.0;\n                        this.startedMetronome = true;\n                    }\n                    if (this.metronomeSamplesRemaining > 0) {\n                        const stopIndex = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\n                        for (let i = bufferIndex; i < stopIndex; i++) {\n                            outputDataLUnfiltered[i] += this.metronomeAmplitude;\n                            outputDataRUnfiltered[i] += this.metronomeAmplitude;\n                            const tempAmplitude = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\n                            this.metronomeAmplitude = tempAmplitude;\n                        }\n                    }\n                }\n                else {\n                    this.startedMetronome = false;\n                }\n            }\n            for (let i = bufferIndex; i < runEnd; i++) {\n                {\n                    let filtersL = this.songEqFiltersL;\n                    let filtersR = this.songEqFiltersR;\n                    const filterCount = this.songEqFilterCount | 0;\n                    let initialFilterInput1L = +this.initialSongEqFilterInput1L;\n                    let initialFilterInput2L = +this.initialSongEqFilterInput2L;\n                    let initialFilterInput1R = +this.initialSongEqFilterInput1R;\n                    let initialFilterInput2R = +this.initialSongEqFilterInput2R;\n                    const applyFilters = Synth.applyFilters;\n                    let eqFilterVolume = +this.songEqFilterVolume;\n                    const eqFilterVolumeDelta = +this.songEqFilterVolumeDelta;\n                    const inputSampleL = outputDataL[i];\n                    let sampleL = inputSampleL;\n                    sampleL = applyFilters(sampleL, initialFilterInput1L, initialFilterInput2L, filterCount, filtersL);\n                    initialFilterInput2L = initialFilterInput1L;\n                    initialFilterInput1L = inputSampleL;\n                    sampleL *= eqFilterVolume;\n                    outputDataL[i] = sampleL;\n                    const inputSampleR = outputDataR[i];\n                    let sampleR = inputSampleR;\n                    sampleR = applyFilters(sampleR, initialFilterInput1R, initialFilterInput2R, filterCount, filtersR);\n                    initialFilterInput2R = initialFilterInput1R;\n                    initialFilterInput1R = inputSampleR;\n                    sampleR *= eqFilterVolume;\n                    outputDataR[i] = sampleR;\n                    eqFilterVolume += eqFilterVolumeDelta;\n                    this.sanitizeFilters(filtersL);\n                    if (!(initialFilterInput1L < 100) || !(initialFilterInput2L < 100)) {\n                        initialFilterInput1L = 0.0;\n                        initialFilterInput2L = 0.0;\n                    }\n                    if (Math.abs(initialFilterInput1L) < epsilon)\n                        initialFilterInput1L = 0.0;\n                    if (Math.abs(initialFilterInput2L) < epsilon)\n                        initialFilterInput2L = 0.0;\n                    this.initialSongEqFilterInput1L = initialFilterInput1L;\n                    this.initialSongEqFilterInput2L = initialFilterInput2L;\n                    this.sanitizeFilters(filtersR);\n                    if (!(initialFilterInput1R < 100) || !(initialFilterInput2R < 100)) {\n                        initialFilterInput1R = 0.0;\n                        initialFilterInput2R = 0.0;\n                    }\n                    if (Math.abs(initialFilterInput1R) < epsilon)\n                        initialFilterInput1R = 0.0;\n                    if (Math.abs(initialFilterInput2R) < epsilon)\n                        initialFilterInput2R = 0.0;\n                    this.initialSongEqFilterInput1R = initialFilterInput1R;\n                    this.initialSongEqFilterInput2R = initialFilterInput2R;\n                }\n                const sampleL = (outputDataL[i] + outputDataLUnfiltered[i]) * song.masterGain * song.masterGain;\n                const sampleR = (outputDataR[i] + outputDataRUnfiltered[i]) * song.masterGain * song.masterGain;\n                const absL = sampleL < 0.0 ? -sampleL : sampleL;\n                const absR = sampleR < 0.0 ? -sampleR : sampleR;\n                const abs = absL > absR ? absL : absR;\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs);\n                const limitRange = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\n                const limitTarget = (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\n                    + (+(limitRange == 1)) * (1.05)\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\n                outputDataL[i] = sampleL * limitedVolume;\n                outputDataR[i] = sampleR * limitedVolume;\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume);\n            }\n            bufferIndex += runLength;\n            this.isAtStartOfTick = false;\n            this.tickSampleCountdown -= runLength;\n            if (this.tickSampleCountdown <= 0) {\n                this.isAtStartOfTick = true;\n                for (const channelState of this.channels) {\n                    for (const instrumentState of channelState.instruments) {\n                        for (let i = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone = instrumentState.releasedTones.get(i);\n                            if (tone.isOnLastTick) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                            }\n                            else {\n                                tone.ticksSinceReleased++;\n                            }\n                        }\n                        if (instrumentState.deactivateAfterThisTick) {\n                            instrumentState.deactivate();\n                        }\n                        instrumentState.tonesAddedInThisTick = false;\n                    }\n                }\n                const ticksIntoBar = this.getTicksIntoBar();\n                const tickTimeStart = ticksIntoBar;\n                const secondsPerTick = samplesPerTick / this.samplesPerSecond;\n                const currentPart = this.getCurrentPart();\n                for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        let instrumentState = this.channels[channel].instruments[instrumentIdx];\n                        const envelopeComputer = instrumentState.envelopeComputer;\n                        const envelopeSpeeds = [];\n                        for (let i = 0; i < Config.maxEnvelopeCount; i++) {\n                            envelopeSpeeds[i] = 0;\n                        }\n                        for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                            let useEnvelopeSpeed = instrument.envelopeSpeed;\n                            let perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n                            if (this.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channel, instrumentIdx) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed;\n                            }\n                            if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx)) {\n                                useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx, false)));\n                                if (Number.isInteger(useEnvelopeSpeed)) {\n                                    instrumentState.envelopeTime[envelopeIndex] += Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                                }\n                                else {\n                                    instrumentState.envelopeTime[envelopeIndex] += ((1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)]) * perEnvelopeSpeed;\n                                }\n                            }\n                            else {\n                                instrumentState.envelopeTime[envelopeIndex] += Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                            }\n                        }\n                        if (instrumentState.activeTones.count() > 0) {\n                            const tone = instrumentState.activeTones.get(0);\n                            envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, tickTimeStart, secondsPerTick, tone, envelopeSpeeds, instrumentState, this, channel, instrumentIdx);\n                        }\n                        const envelopeStarts = envelopeComputer.envelopeStarts;\n                        const arpEnvelopeStart = envelopeStarts[48];\n                        let useArpeggioSpeed = instrument.arpeggioSpeed;\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\n                            useArpeggioSpeed = clamp(0, Config.arpSpeedScale.length, arpEnvelopeStart * this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false));\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            }\n                            else {\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        else {\n                            useArpeggioSpeed = clamp(0, Config.arpSpeedScale.length, arpEnvelopeStart * useArpeggioSpeed);\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            }\n                            else {\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        envelopeComputer.clearEnvelopes();\n                    }\n                }\n                for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        if (instrument.tmpEqFilterEnd != null) {\n                            instrument.tmpEqFilterStart = instrument.tmpEqFilterEnd;\n                        }\n                        else {\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\n                        }\n                        if (instrument.tmpNoteFilterEnd != null) {\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\n                        }\n                        else {\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\n                        }\n                    }\n                }\n                if (song.tmpEqFilterEnd != null) {\n                    song.tmpEqFilterStart = song.tmpEqFilterEnd;\n                }\n                else {\n                    song.tmpEqFilterStart = song.eqFilter;\n                }\n                this.tick++;\n                this.tickSampleCountdown += samplesPerTick;\n                if (this.tick == Config.ticksPerPart) {\n                    this.tick = 0;\n                    this.part++;\n                    this.liveInputDuration--;\n                    this.liveBassInputDuration--;\n                    for (let i = 0; i < this.heldMods.length; i++) {\n                        this.heldMods[i].holdFor--;\n                        if (this.heldMods[i].holdFor <= 0) {\n                            this.heldMods.splice(i, 1);\n                        }\n                    }\n                    if (this.part == Config.partsPerBeat) {\n                        this.part = 0;\n                        if (playSong) {\n                            this.beat++;\n                            if (this.beat == song.beatsPerBar) {\n                                this.beat = 0;\n                                if (this.countInMetronome) {\n                                    this.countInMetronome = false;\n                                }\n                                else {\n                                    this.prevBar = this.bar;\n                                    this.bar = this.getNextBar();\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0)\n                                        this.loopRepeatCount--;\n                                    if (this.bar >= song.barCount) {\n                                        this.bar = 0;\n                                        if (this.loopRepeatCount != -1) {\n                                            ended = true;\n                                            this.resetEffects();\n                                            this.pause();\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            for (let setting = 0; setting < Config.modulators.length; setting++) {\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\n                    this.modValues[setting] = this.nextModValues[setting];\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n                samplesPerTick = this.getSamplesPerTick();\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\n            }\n            for (let channelIndex = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    const instrument = this.song.channels[channelIndex].instruments[instrumentIndex];\n                    instrumentState.nextVibratoTime = (instrumentState.nextVibratoTime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\n                    instrumentState.arpTime = (instrumentState.arpTime % (2520 * Config.ticksPerArpeggio));\n                    for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                        instrumentState.envelopeTime[envelopeIndex] = (instrumentState.envelopeTime[envelopeIndex] % (Config.partsPerBeat * Config.ticksPerPart * this.song.beatsPerBar));\n                    }\n                }\n            }\n            const maxInstrumentsPerChannel = this.song.getMaxInstrumentsPerChannel();\n            for (let setting = 0; setting < Config.modulators.length; setting++) {\n                for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrument = 0; instrument < maxInstrumentsPerChannel; instrument++) {\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\n                        }\n                    }\n                }\n            }\n        }\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon)\n            limit = 0.0;\n        this.limit = limit;\n        if (playSong && !this.countInMetronome) {\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\n        }\n    }\n    freeTone(tone) {\n        this.tonePool.pushBack(tone);\n    }\n    newTone() {\n        if (this.tonePool.count() > 0) {\n            const tone = this.tonePool.popBack();\n            tone.freshlyAllocated = true;\n            return tone;\n        }\n        return new Tone();\n    }\n    releaseTone(instrumentState, tone) {\n        instrumentState.releasedTones.pushFront(tone);\n        tone.atNoteStart = false;\n        tone.passedEndOfNote = true;\n    }\n    freeReleasedTone(instrumentState, toneIndex) {\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\n        instrumentState.releasedTones.remove(toneIndex);\n    }\n    freeAllTones() {\n        for (const channelState of this.channels) {\n            for (const instrumentState of channelState.instruments) {\n                while (instrumentState.activeTones.count() > 0)\n                    this.freeTone(instrumentState.activeTones.popBack());\n                while (instrumentState.activeModTones.count() > 0)\n                    this.freeTone(instrumentState.activeModTones.popBack());\n                while (instrumentState.releasedTones.count() > 0)\n                    this.freeTone(instrumentState.releasedTones.popBack());\n                while (instrumentState.liveInputTones.count() > 0)\n                    this.freeTone(instrumentState.liveInputTones.popBack());\n            }\n        }\n    }\n    determineLiveInputTones(song, channelIndex, samplesPerTick) {\n        const channel = song.channels[channelIndex];\n        const channelState = this.channels[channelIndex];\n        const pitches = this.liveInputPitches;\n        const bassPitches = this.liveBassInputPitches;\n        if (this.liveInputPitches.length > 0 || this.liveBassInputPitches.length > 0) {\n            this.computeLatestModValues();\n        }\n        for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n            const instrumentState = channelState.instruments[instrumentIndex];\n            const toneList = instrumentState.liveInputTones;\n            let toneCount = 0;\n            if (this.liveInputDuration > 0 && (channelIndex == this.liveInputChannel) && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument = channel.instruments[instrumentIndex];\n                if (instrument.getChord().singleTone) {\n                    let tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    }\n                    else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    }\n                    else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n                    for (let i = 0; i < pitches.length; i++) {\n                        tone.pitches[i] = pitches[i];\n                    }\n                    tone.pitchCount = pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                }\n                else {\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, pitches);\n                    for (let i = 0; i < pitches.length; i++) {\n                        let tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount];\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != pitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        }\n                        else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n                        tone.pitches[0] = pitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = pitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n            if (this.liveBassInputDuration > 0 && (channelIndex == this.liveBassInputChannel) && bassPitches.length > 0 && this.liveBassInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument = channel.instruments[instrumentIndex];\n                if (instrument.getChord().singleTone) {\n                    let tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    }\n                    else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    }\n                    else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n                    for (let i = 0; i < bassPitches.length; i++) {\n                        tone.pitches[i] = bassPitches[i];\n                    }\n                    tone.pitchCount = bassPitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveBassInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                }\n                else {\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, bassPitches);\n                    for (let i = 0; i < bassPitches.length; i++) {\n                        let tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount];\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != bassPitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        }\n                        else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n                        tone.pitches[0] = bassPitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = bassPitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveBassInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n            while (toneList.count() > toneCount) {\n                this.releaseTone(instrumentState, toneList.popBack());\n            }\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\n        }\n        this.liveInputStarted = false;\n        this.liveBassInputStarted = false;\n    }\n    adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern, otherPattern, instrumentIndex, transition, chord, note, otherNote, forceContinue) {\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\n                return null;\n            }\n            const otherInstrument = channel.instruments[otherPattern.instruments[0]];\n            if (forceContinue) {\n                return otherInstrument.getChord();\n            }\n            const otherTransition = otherInstrument.getTransition();\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\n                return otherInstrument.getChord();\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\n        }\n    }\n    static adjacentNotesHaveMatchingPitches(firstNote, secondNote) {\n        if (firstNote.pitches.length != secondNote.pitches.length)\n            return false;\n        const firstNoteInterval = firstNote.pins[firstNote.pins.length - 1].interval;\n        for (const pitch of firstNote.pitches) {\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1)\n                return false;\n        }\n        return true;\n    }\n    moveTonesIntoOrderedTempMatchedList(toneList, notePitches) {\n        for (let i = 0; i < toneList.count(); i++) {\n            const tone = toneList.get(i);\n            const pitch = tone.pitches[0] + tone.lastInterval;\n            for (let j = 0; j < notePitches.length; j++) {\n                if (notePitches[j] == pitch) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    toneList.remove(i);\n                    i--;\n                    break;\n                }\n            }\n        }\n        while (toneList.count() > 0) {\n            const tone = toneList.popFront();\n            for (let j = 0; j < this.tempMatchedPitchTones.length; j++) {\n                if (this.tempMatchedPitchTones[j] == null) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    break;\n                }\n            }\n        }\n    }\n    determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong) {\n        const channel = song.channels[channelIndex];\n        const channelState = this.channels[channelIndex];\n        const pattern = song.getPattern(channelIndex, this.bar);\n        const currentPart = this.getCurrentPart();\n        const currentTick = this.tick + Config.ticksPerPart * currentPart;\n        if (playSong && song.getChannelIsMod(channelIndex)) {\n            let notes = [];\n            let prevNotes = [];\n            let nextNotes = [];\n            let fillCount = Config.modCount;\n            while (fillCount--) {\n                notes.push(null);\n                prevNotes.push(null);\n                nextNotes.push(null);\n            }\n            if (pattern != null && !channel.muted) {\n                for (let i = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > prevNotes[pattern.notes[i].pitches[0]].start) {\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start > currentPart) {\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < nextNotes[pattern.notes[i].pitches[0]].start) {\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                }\n            }\n            let modToneCount = 0;\n            const newInstrumentIndex = (song.patternInstruments && (pattern != null)) ? pattern.instruments[0] : 0;\n            const instrumentState = channelState.instruments[newInstrumentIndex];\n            const toneList = instrumentState.activeModTones;\n            for (let mod = 0; mod < Config.modCount; mod++) {\n                if (notes[mod] != null) {\n                    if (prevNotes[mod] != null && prevNotes[mod].end != notes[mod].start)\n                        prevNotes[mod] = null;\n                    if (nextNotes[mod] != null && nextNotes[mod].start != notes[mod].end)\n                        nextNotes[mod] = null;\n                }\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n                if (notes[mod] != null) {\n                    let prevNoteForThisInstrument = prevNotes[mod];\n                    let nextNoteForThisInstrument = nextNotes[mod];\n                    let forceContinueAtStart = false;\n                    let forceContinueAtEnd = false;\n                    const atNoteStart = (Config.ticksPerPart * notes[mod].start == currentTick) && this.isAtStartOfTick;\n                    let tone;\n                    if (toneList.count() <= modToneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    }\n                    else if (atNoteStart && (prevNoteForThisInstrument == null)) {\n                        const oldTone = toneList.get(modToneCount);\n                        if (oldTone.isOnLastTick) {\n                            this.freeTone(oldTone);\n                        }\n                        else {\n                            this.releaseTone(instrumentState, oldTone);\n                        }\n                        tone = this.newTone();\n                        toneList.set(modToneCount, tone);\n                    }\n                    else {\n                        tone = toneList.get(modToneCount);\n                    }\n                    modToneCount++;\n                    for (let i = 0; i < notes[mod].pitches.length; i++) {\n                        tone.pitches[i] = notes[mod].pitches[i];\n                    }\n                    tone.pitchCount = notes[mod].pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = newInstrumentIndex;\n                    tone.note = notes[mod];\n                    tone.noteStartPart = notes[mod].start;\n                    tone.noteEndPart = notes[mod].end;\n                    tone.prevNote = prevNoteForThisInstrument;\n                    tone.nextNote = nextNoteForThisInstrument;\n                    tone.prevNotePitchIndex = 0;\n                    tone.nextNotePitchIndex = 0;\n                    tone.atNoteStart = atNoteStart;\n                    tone.passedEndOfNote = false;\n                    tone.forceContinueAtStart = forceContinueAtStart;\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\n                }\n            }\n            while (toneList.count() > modToneCount) {\n                const tone = toneList.popBack();\n                const channel = song.channels[channelIndex];\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                    const instrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\n                    this.releaseTone(instrumentState, tone);\n                }\n                else {\n                    this.freeTone(tone);\n                }\n            }\n        }\n        else if (!song.getChannelIsMod(channelIndex)) {\n            let note = null;\n            let prevNote = null;\n            let nextNote = null;\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\n                for (let i = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        prevNote = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        note = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start > currentPart) {\n                        nextNote = pattern.notes[i];\n                        break;\n                    }\n                }\n                if (note != null) {\n                    if (prevNote != null && prevNote.end != note.start)\n                        prevNote = null;\n                    if (nextNote != null && nextNote.start != note.end)\n                        nextNote = null;\n                }\n            }\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\n                const newInstrumentIndex = song.patternInstruments ? pattern.instruments[0] : 0;\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeTones.count() > 0) {\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n            }\n            else {\n                channelState.singleSeamlessInstrument = null;\n            }\n            for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                const instrumentState = channelState.instruments[instrumentIndex];\n                const toneList = instrumentState.activeTones;\n                let toneCount = 0;\n                if ((note != null) && (!song.patternInstruments || (pattern.instruments.indexOf(instrumentIndex) != -1))) {\n                    const instrument = channel.instruments[instrumentIndex];\n                    let prevNoteForThisInstrument = prevNote;\n                    let nextNoteForThisInstrument = nextNote;\n                    const partsPerBar = Config.partsPerBeat * song.beatsPerBar;\n                    const transition = instrument.getTransition();\n                    const chord = instrument.getChord();\n                    let forceContinueAtStart = false;\n                    let forceContinueAtEnd = false;\n                    let tonesInPrevNote = 0;\n                    let tonesInNextNote = 0;\n                    if (note.start == 0) {\n                        let prevPattern = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\n                        if (prevPattern != null) {\n                            const lastNote = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\n                            if (lastNote != null && lastNote.end == partsPerBar) {\n                                const patternForcesContinueAtStart = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\n                                const chordOfCompatibleInstrument = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    prevNoteForThisInstrument = lastNote;\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevNoteForThisInstrument.pitches.length;\n                                    forceContinueAtStart = patternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    }\n                    else if (prevNoteForThisInstrument != null) {\n                        tonesInPrevNote = chord.singleTone ? 1 : prevNoteForThisInstrument.pitches.length;\n                    }\n                    if (note.end == partsPerBar) {\n                        let nextPattern = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\n                        if (nextPattern != null) {\n                            const firstNote = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\n                            if (firstNote != null && firstNote.start == 0) {\n                                const nextPatternForcesContinueAtStart = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\n                                const chordOfCompatibleInstrument = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    nextNoteForThisInstrument = firstNote;\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextNoteForThisInstrument.pitches.length;\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    }\n                    else if (nextNoteForThisInstrument != null) {\n                        tonesInNextNote = chord.singleTone ? 1 : nextNoteForThisInstrument.pitches.length;\n                    }\n                    if (chord.singleTone) {\n                        const atNoteStart = (Config.ticksPerPart * note.start == currentTick);\n                        let tone;\n                        if (toneList.count() <= toneCount) {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\n                            const oldTone = toneList.get(toneCount);\n                            if (oldTone.isOnLastTick) {\n                                this.freeTone(oldTone);\n                            }\n                            else {\n                                this.releaseTone(instrumentState, oldTone);\n                            }\n                            tone = this.newTone();\n                            toneList.set(toneCount, tone);\n                        }\n                        else {\n                            tone = toneList.get(toneCount);\n                        }\n                        toneCount++;\n                        for (let i = 0; i < note.pitches.length; i++) {\n                            tone.pitches[i] = note.pitches[i];\n                        }\n                        tone.pitchCount = note.pitches.length;\n                        tone.chordSize = 1;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = note;\n                        tone.noteStartPart = note.start;\n                        tone.noteEndPart = note.end;\n                        tone.prevNote = prevNoteForThisInstrument;\n                        tone.nextNote = nextNoteForThisInstrument;\n                        tone.prevNotePitchIndex = 0;\n                        tone.nextNotePitchIndex = 0;\n                        tone.atNoteStart = atNoteStart;\n                        tone.passedEndOfNote = false;\n                        tone.forceContinueAtStart = forceContinueAtStart;\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                    else {\n                        const transition = instrument.getTransition();\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, note.pitches);\n                        }\n                        let strumOffsetParts = 0;\n                        for (let i = 0; i < note.pitches.length; i++) {\n                            let prevNoteForThisTone = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\n                            let noteForThisTone = note;\n                            let nextNoteForThisTone = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\n                            let noteStartPart = noteForThisTone.start + strumOffsetParts;\n                            let passedEndOfNote = false;\n                            if (noteStartPart > currentPart) {\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\n                                    nextNoteForThisTone = noteForThisTone;\n                                    noteForThisTone = prevNoteForThisTone;\n                                    prevNoteForThisTone = null;\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\n                                    passedEndOfNote = true;\n                                }\n                                else {\n                                    break;\n                                }\n                            }\n                            let noteEndPart = noteForThisTone.end;\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song.beatsPerBar, noteEndPart + strumOffsetParts);\n                            }\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\n                                strumOffsetParts += chord.strumParts;\n                            }\n                            const atNoteStart = (Config.ticksPerPart * noteStartPart == currentTick);\n                            let tone;\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\n                                tone = this.tempMatchedPitchTones[toneCount];\n                                this.tempMatchedPitchTones[toneCount] = null;\n                                toneList.pushBack(tone);\n                            }\n                            else if (toneList.count() <= toneCount) {\n                                tone = this.newTone();\n                                toneList.pushBack(tone);\n                            }\n                            else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\n                                const oldTone = toneList.get(toneCount);\n                                if (oldTone.isOnLastTick) {\n                                    this.freeTone(oldTone);\n                                }\n                                else {\n                                    this.releaseTone(instrumentState, oldTone);\n                                }\n                                tone = this.newTone();\n                                toneList.set(toneCount, tone);\n                            }\n                            else {\n                                tone = toneList.get(toneCount);\n                            }\n                            toneCount++;\n                            tone.pitches[0] = noteForThisTone.pitches[i];\n                            tone.pitchCount = 1;\n                            tone.chordSize = noteForThisTone.pitches.length;\n                            tone.instrumentIndex = instrumentIndex;\n                            tone.note = noteForThisTone;\n                            tone.noteStartPart = noteStartPart;\n                            tone.noteEndPart = noteEndPart;\n                            tone.prevNote = prevNoteForThisTone;\n                            tone.nextNote = nextNoteForThisTone;\n                            tone.prevNotePitchIndex = i;\n                            tone.nextNotePitchIndex = i;\n                            tone.atNoteStart = atNoteStart;\n                            tone.passedEndOfNote = passedEndOfNote;\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                        }\n                    }\n                    if (transition.continues && (toneList.count() <= 0) || (note.pitches.length <= 0))\n                        instrumentState.envelopeComputer.reset();\n                }\n                while (toneList.count() > toneCount) {\n                    const tone = toneList.popBack();\n                    const channel = song.channels[channelIndex];\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                        const instrumentState = channelState.instruments[tone.instrumentIndex];\n                        this.releaseTone(instrumentState, tone);\n                    }\n                    else {\n                        this.freeTone(tone);\n                    }\n                }\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\n            }\n        }\n    }\n    clearTempMatchedPitchTones(toneCount, instrumentState) {\n        for (let i = toneCount; i < this.tempMatchedPitchTones.length; i++) {\n            const oldTone = this.tempMatchedPitchTones[i];\n            if (oldTone != null) {\n                if (oldTone.isOnLastTick) {\n                    this.freeTone(oldTone);\n                }\n                else {\n                    this.releaseTone(instrumentState, oldTone);\n                }\n                this.tempMatchedPitchTones[i] = null;\n            }\n        }\n    }\n    playTone(channelIndex, bufferIndex, runLength, tone) {\n        const channelState = this.channels[channelIndex];\n        const instrumentState = channelState.instruments[tone.instrumentIndex];\n        if (instrumentState.synthesizer != null)\n            instrumentState.synthesizer(this, bufferIndex, runLength, tone, instrumentState);\n        tone.envelopeComputer.clearEnvelopes();\n        instrumentState.envelopeComputer.clearEnvelopes();\n    }\n    playModTone(song, channelIndex, samplesPerTick, bufferIndex, roundedSamplesPerTick, tone, released, shouldFadeOutFast) {\n        const channel = song.channels[channelIndex];\n        const instrument = channel.instruments[tone.instrumentIndex];\n        if (tone.note != null) {\n            const ticksIntoBar = this.getTicksIntoBar();\n            const partTimeTickStart = (ticksIntoBar) / Config.ticksPerPart;\n            const partTimeTickEnd = (ticksIntoBar + 1) / Config.ticksPerPart;\n            const tickSampleCountdown = this.tickSampleCountdown;\n            const startRatio = 1.0 - (tickSampleCountdown) / samplesPerTick;\n            const endRatio = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\n            const partTimeStart = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n            const partTimeEnd = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n            const tickTimeStart = Config.ticksPerPart * partTimeStart;\n            const tickTimeEnd = Config.ticksPerPart * partTimeEnd;\n            const endPinIndex = tone.note.getEndPinIndex(this.getCurrentPart());\n            const startPin = tone.note.pins[endPinIndex - 1];\n            const endPin = tone.note.pins[endPinIndex];\n            const startPinTick = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            const endPinTick = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\n        }\n    }\n    static computeChordExpression(chordSize) {\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\n    }\n    computeTone(song, channelIndex, samplesPerTick, tone, released, shouldFadeOutFast) {\n        const roundedSamplesPerTick = Math.ceil(samplesPerTick);\n        const channel = song.channels[channelIndex];\n        const channelState = this.channels[channelIndex];\n        const instrument = channel.instruments[tone.instrumentIndex];\n        const instrumentState = channelState.instruments[tone.instrumentIndex];\n        instrumentState.awake = true;\n        instrumentState.tonesAddedInThisTick = true;\n        if (!instrumentState.computed) {\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\n        }\n        const transition = instrument.getTransition();\n        const chord = instrument.getChord();\n        const chordExpression = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\n        const isNoiseChannel = song.getChannelIsNoise(channelIndex);\n        const intervalScale = isNoiseChannel ? Config.noiseInterval : 1;\n        const secondsPerPart = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\n        const sampleTime = 1.0 / this.samplesPerSecond;\n        const beatsPerPart = 1.0 / Config.partsPerBeat;\n        const ticksIntoBar = this.getTicksIntoBar();\n        const partTimeStart = (ticksIntoBar) / Config.ticksPerPart;\n        const partTimeEnd = (ticksIntoBar + 1.0) / Config.ticksPerPart;\n        const currentPart = this.getCurrentPart();\n        let specialIntervalMult = 1.0;\n        tone.specialIntervalExpressionMult = 1.0;\n        let toneIsOnLastTick = shouldFadeOutFast;\n        let intervalStart = 0.0;\n        let intervalEnd = 0.0;\n        let fadeExpressionStart = 1.0;\n        let fadeExpressionEnd = 1.0;\n        let chordExpressionStart = chordExpression;\n        let chordExpressionEnd = chordExpression;\n        let expressionReferencePitch = 16;\n        let basePitch = Config.keys[song.key].basePitch + (Config.pitchesPerOctave * song.octave);\n        let baseExpression = 1.0;\n        let pitchDamping = 48;\n        if (instrument.type == 3) {\n            baseExpression = Config.spectrumBaseExpression;\n            if (isNoiseChannel) {\n                basePitch = Config.spectrumBasePitch;\n                baseExpression *= 2.0;\n            }\n            expressionReferencePitch = Config.spectrumBasePitch;\n            pitchDamping = 28;\n        }\n        else if (instrument.type == 4) {\n            basePitch = Config.spectrumBasePitch;\n            baseExpression = Config.drumsetBaseExpression;\n            expressionReferencePitch = basePitch;\n        }\n        else if (instrument.type == 2) {\n            basePitch = isNoiseChannel ? Config.chipNoises[instrument.chipNoise].basePitch : basePitch + Config.chipNoises[instrument.chipNoise].basePitch - 12;\n            baseExpression = Config.noiseBaseExpression;\n            expressionReferencePitch = basePitch;\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\n        }\n        else if (instrument.type == 1 || instrument.type == 11) {\n            baseExpression = Config.fmBaseExpression;\n        }\n        else if (instrument.type == 0) {\n            baseExpression = Config.chipBaseExpression;\n            if (Config.chipWaves[instrument.chipWave].isCustomSampled) {\n                if (Config.chipWaves[instrument.chipWave].isPercussion) {\n                    basePitch = -84.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length / Config.chipWaves[instrument.chipWave].sampleRate) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey);\n                }\n                else {\n                    basePitch += -96.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length / Config.chipWaves[instrument.chipWave].sampleRate) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey);\n                }\n            }\n            else {\n                if (Config.chipWaves[instrument.chipWave].isSampled && !Config.chipWaves[instrument.chipWave].isPercussion) {\n                    basePitch = basePitch - 63 + Config.chipWaves[instrument.chipWave].extraSampleDetune;\n                }\n                else if (Config.chipWaves[instrument.chipWave].isSampled && Config.chipWaves[instrument.chipWave].isPercussion) {\n                    basePitch = -51 + Config.chipWaves[instrument.chipWave].extraSampleDetune;\n                }\n            }\n        }\n        else if (instrument.type == 9) {\n            baseExpression = Config.chipBaseExpression;\n        }\n        else if (instrument.type == 5) {\n            baseExpression = Config.harmonicsBaseExpression;\n        }\n        else if (instrument.type == 6) {\n            baseExpression = Config.pwmBaseExpression;\n        }\n        else if (instrument.type == 8) {\n            baseExpression = Config.supersawBaseExpression;\n        }\n        else if (instrument.type == 7) {\n            baseExpression = Config.pickedStringBaseExpression;\n        }\n        else if (instrument.type == 10) {\n            baseExpression = 1.0;\n            expressionReferencePitch = 0;\n            pitchDamping = 1.0;\n            basePitch = 0;\n        }\n        else {\n            throw new Error(\"Unknown instrument type in computeTone.\");\n        }\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\n            tone.reset();\n            instrumentState.envelopeComputer.reset();\n            if (instrument.type == 0 && instrument.isUsingAdvancedLoopControls) {\n                const chipWaveLength = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\n                const firstOffset = instrument.chipWaveStartOffset / chipWaveLength;\n                const lastOffset = 0.999999999999999;\n                for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n                    tone.phases[i] = instrument.chipWavePlayBackwards ? Math.max(0, Math.min(lastOffset, firstOffset)) : Math.max(0, firstOffset);\n                    tone.directions[i] = instrument.chipWavePlayBackwards ? -1 : 1;\n                    tone.chipWaveCompletions[i] = 0;\n                    tone.chipWavePrevWaves[i] = 0;\n                    tone.chipWaveCompletionsLastWave[i] = 0;\n                }\n            }\n        }\n        tone.freshlyAllocated = false;\n        for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            tone.phaseDeltas[i] = 0.0;\n            tone.phaseDeltaScales[i] = 0.0;\n            tone.operatorExpressions[i] = 0.0;\n            tone.operatorExpressionDeltas[i] = 0.0;\n        }\n        tone.expression = 0.0;\n        tone.expressionDelta = 0.0;\n        for (let i = 0; i < (instrument.type == 11 ? 6 : Config.operatorCount); i++) {\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\n        }\n        if (released) {\n            const startTicksSinceReleased = tone.ticksSinceReleased;\n            const endTicksSinceReleased = tone.ticksSinceReleased + 1.0;\n            intervalStart = intervalEnd = tone.lastInterval;\n            const fadeOutTicks = Math.abs(instrument.getFadeOutTicks());\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n            if (shouldFadeOutFast) {\n                fadeExpressionEnd = 0.0;\n            }\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks)\n                toneIsOnLastTick = true;\n        }\n        else if (tone.note == null) {\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\n            tone.lastInterval = 0;\n            tone.ticksSinceReleased = 0;\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\n        }\n        else {\n            const note = tone.note;\n            const nextNote = tone.nextNote;\n            const noteStartPart = tone.noteStartPart;\n            const noteEndPart = tone.noteEndPart;\n            const endPinIndex = note.getEndPinIndex(currentPart);\n            const startPin = note.pins[endPinIndex - 1];\n            const endPin = note.pins[endPinIndex];\n            const noteStartTick = noteStartPart * Config.ticksPerPart;\n            const noteEndTick = noteEndPart * Config.ticksPerPart;\n            const pinStart = (note.start + startPin.time) * Config.ticksPerPart;\n            const pinEnd = (note.start + endPin.time) * Config.ticksPerPart;\n            tone.ticksSinceReleased = 0;\n            const tickTimeStart = currentPart * Config.ticksPerPart + this.tick;\n            const tickTimeEnd = tickTimeStart + 1.0;\n            const noteTicksPassedTickStart = tickTimeStart - noteStartTick;\n            const noteTicksPassedTickEnd = tickTimeEnd - noteStartTick;\n            const pinRatioStart = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\n            const pinRatioEnd = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\n            fadeExpressionStart = 1.0;\n            fadeExpressionEnd = 1.0;\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\n            tone.lastInterval = intervalEnd;\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\n                const fadeOutTicks = -instrument.getFadeOutTicks();\n                if (fadeOutTicks > 0.0) {\n                    const noteLengthTicks = noteEndTick - noteStartTick;\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks)\n                        toneIsOnLastTick = true;\n                }\n            }\n        }\n        tone.isOnLastTick = toneIsOnLastTick;\n        let tmpNoteFilter = instrument.noteFilter;\n        let startPoint;\n        let endPoint;\n        if (instrument.noteFilterType) {\n            const noteFilterSettingsStart = instrument.noteFilter;\n            if (instrument.noteSubFilters[1] == null)\n                instrument.noteSubFilters[1] = new FilterSettings();\n            const noteFilterSettingsEnd = instrument.noteSubFilters[1];\n            let startSimpleFreq = instrument.noteFilterSimpleCut;\n            let startSimpleGain = instrument.noteFilterSimplePeak;\n            let endSimpleFreq = instrument.noteFilterSimpleCut;\n            let endSimpleGain = instrument.noteFilterSimplePeak;\n            let filterChanges = false;\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\n            startPoint = noteFilterSettingsStart.controlPoints[0];\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\n            instrument.noteFilter = noteFilterSettingsStart;\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\n        }\n        const envelopeComputer = tone.envelopeComputer;\n        const envelopeSpeeds = [];\n        for (let i = 0; i < Config.maxEnvelopeCount; i++) {\n            envelopeSpeeds[i] = 0;\n        }\n        for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n            let perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n            if (this.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channelIndex, tone.instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed;\n            }\n            let useEnvelopeSpeed = Config.arpSpeedScale[instrument.envelopeSpeed] * perEnvelopeSpeed;\n            if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex)) {\n                useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex, false)));\n                if (Number.isInteger(useEnvelopeSpeed)) {\n                    useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                }\n                else {\n                    useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)] * perEnvelopeSpeed;\n                }\n            }\n            envelopeSpeeds[envelopeIndex] = useEnvelopeSpeed;\n        }\n        envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone, envelopeSpeeds, instrumentState, this, channelIndex, tone.instrumentIndex);\n        const envelopeStarts = tone.envelopeComputer.envelopeStarts;\n        const envelopeEnds = tone.envelopeComputer.envelopeEnds;\n        instrument.noteFilter = tmpNoteFilter;\n        if (transition.continues && (tone.prevNote == null || tone.note == null)) {\n            instrumentState.envelopeComputer.reset();\n        }\n        if (tone.note != null && transition.slides) {\n            const prevNote = tone.prevNote;\n            const nextNote = tone.nextNote;\n            if (prevNote != null) {\n                const intervalDiff = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\n                if (envelopeComputer.prevSlideStart)\n                    intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\n                if (envelopeComputer.prevSlideEnd)\n                    intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff = prevNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.prevSlideStart)\n                        chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\n                    if (envelopeComputer.prevSlideEnd)\n                        chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\n                }\n            }\n            if (nextNote != null) {\n                const intervalDiff = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\n                if (envelopeComputer.nextSlideStart)\n                    intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\n                if (envelopeComputer.nextSlideEnd)\n                    intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff = nextNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.nextSlideStart)\n                        chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\n                    if (envelopeComputer.nextSlideEnd)\n                        chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\n                }\n            }\n        }\n        if (effectsIncludePitchShift(instrument.effects)) {\n            let pitchShift = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\n            let pitchShiftScalarStart = 1.0;\n            let pitchShiftScalarEnd = 1.0;\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\n            }\n            const envelopeStart = envelopeStarts[18];\n            const envelopeEnd = envelopeEnds[18];\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\n        }\n        if (effectsIncludeDetune(instrument.effects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n            const envelopeStart = envelopeStarts[19];\n            const envelopeEnd = envelopeEnds[19];\n            let modDetuneStart = instrument.detune;\n            let modDetuneEnd = instrument.detune;\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\n            }\n            intervalStart += Synth.detuneToCents(modDetuneStart) * envelopeStart * Config.pitchesPerOctave / (12.0 * 100.0);\n            intervalEnd += Synth.detuneToCents(modDetuneEnd) * envelopeEnd * Config.pitchesPerOctave / (12.0 * 100.0);\n        }\n        if (effectsIncludeVibrato(instrument.effects)) {\n            let delayTicks;\n            let vibratoAmplitudeStart;\n            let vibratoAmplitudeEnd;\n            if (instrument.vibrato == Config.vibratos.length) {\n                delayTicks = instrument.vibratoDelay * 2;\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\n                    delayTicks = Number.POSITIVE_INFINITY;\n                vibratoAmplitudeStart = instrument.vibratoDepth;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            }\n            else {\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2;\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\n                    delayTicks = Number.POSITIVE_INFINITY;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\n            }\n            let vibratoStart;\n            if (tone.prevVibrato != null) {\n                vibratoStart = tone.prevVibrato;\n            }\n            else {\n                let vibratoLfoStart = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.vibratoTime);\n                const vibratoDepthEnvelopeStart = envelopeStarts[20];\n                vibratoStart = vibratoAmplitudeStart * vibratoLfoStart * vibratoDepthEnvelopeStart;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoStart = delayTicks - envelopeComputer.noteTicksStart;\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\n                }\n            }\n            let vibratoLfoEnd = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.nextVibratoTime);\n            const vibratoDepthEnvelopeEnd = envelopeEnds[20];\n            if (instrument.type != 10) {\n                let vibratoEnd = vibratoAmplitudeEnd * vibratoLfoEnd * vibratoDepthEnvelopeEnd;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoEnd = delayTicks - envelopeComputer.noteTicksEnd;\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\n                }\n                tone.prevVibrato = vibratoEnd;\n                intervalStart += vibratoStart;\n                intervalEnd += vibratoEnd;\n            }\n        }\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\n            const fadeInSeconds = instrument.getFadeInSeconds();\n            if (fadeInSeconds > 0.0) {\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStartUnscaled / fadeInSeconds);\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEndUnscaled / fadeInSeconds);\n            }\n        }\n        if (instrument.type == 4 && tone.drumsetPitch == null) {\n            tone.drumsetPitch = tone.pitches[0];\n            if (tone.note != null)\n                tone.drumsetPitch += tone.note.pickMainInterval();\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\n        }\n        let noteFilterExpression = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        if (!effectsIncludeNoteFilter(instrument.effects)) {\n            tone.noteFilterCount = 0;\n        }\n        else {\n            const noteAllFreqsEnvelopeStart = envelopeStarts[1];\n            const noteAllFreqsEnvelopeEnd = envelopeEnds[1];\n            if (instrument.noteFilterType) {\n                const noteFreqEnvelopeStart = envelopeStarts[21];\n                const noteFreqEnvelopeEnd = envelopeEnds[21];\n                const notePeakEnvelopeStart = envelopeStarts[29];\n                const notePeakEnvelopeEnd = envelopeEnds[29];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n                if (tone.noteFilters.length < 1)\n                    tone.noteFilters[0] = new DynamicBiquadFilter();\n                tone.noteFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                noteFilterExpression *= startPoint.getVolumeCompensationMult();\n                tone.noteFilterCount = 1;\n            }\n            else {\n                const noteFilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\n                for (let i = 0; i < noteFilterSettings.controlPointCount; i++) {\n                    const noteFreqEnvelopeStart = envelopeStarts[21 + i];\n                    const noteFreqEnvelopeEnd = envelopeEnds[21 + i];\n                    const notePeakEnvelopeStart = envelopeStarts[29 + i];\n                    const notePeakEnvelopeEnd = envelopeEnds[29 + i];\n                    let startPoint = noteFilterSettings.controlPoints[i];\n                    const endPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\n                    if (startPoint.type != endPoint.type) {\n                        startPoint = endPoint;\n                    }\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n                    if (tone.noteFilters.length <= i)\n                        tone.noteFilters[i] = new DynamicBiquadFilter();\n                    tone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                    noteFilterExpression *= startPoint.getVolumeCompensationMult();\n                }\n                tone.noteFilterCount = noteFilterSettings.controlPointCount;\n            }\n        }\n        if (instrument.type == 4) {\n            const drumsetEnvelopeComputer = tone.envelopeComputer;\n            const drumsetFilterEnvelope = instrument.getDrumsetEnvelope(tone.drumsetPitch);\n            noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope);\n            drumsetEnvelopeComputer.computeDrumsetEnvelopes(instrument, drumsetFilterEnvelope, beatsPerPart, partTimeStart, partTimeEnd);\n            const drumsetFilterEnvelopeStart = drumsetEnvelopeComputer.drumsetFilterEnvelopeStart;\n            const drumsetFilterEnvelopeEnd = drumsetEnvelopeComputer.drumsetFilterEnvelopeEnd;\n            const point = this.tempDrumSetControlPoint;\n            point.type = 0;\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.50);\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\n            if (tone.noteFilters.length == tone.noteFilterCount)\n                tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\n            tone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\n            tone.noteFilterCount++;\n        }\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\n        if (instrument.type == 1 || instrument.type == 11) {\n            let sineExpressionBoost = 1.0;\n            let totalCarrierExpression = 0.0;\n            let arpeggioInterval = 0;\n            const arpeggiates = chord.arpeggiates;\n            const isMono = chord.name == \"monophonic\";\n            if (tone.pitchCount > 1 && arpeggiates) {\n                const arpeggio = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n            }\n            const carrierCount = (instrument.type == 11 ? instrument.customAlgorithm.carrierCount : Config.algorithms[instrument.algorithm].carrierCount);\n            for (let i = 0; i < (instrument.type == 11 ? 6 : Config.operatorCount); i++) {\n                const associatedCarrierIndex = (instrument.type == 11 ? instrument.customAlgorithm.associatedCarrier[i] - 1 : Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1);\n                const pitch = tone.pitches[arpeggiates ? 0 : isMono ? instrument.monoChordTone : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\n                const pitchStart = basePitch + (pitch + intervalStart) * intervalScale + interval;\n                const pitchEnd = basePitch + (pitch + intervalEnd) * intervalScale + interval;\n                const baseFreqStart = Instrument.frequencyFromPitch(pitchStart);\n                const baseFreqEnd = Instrument.frequencyFromPitch(pitchEnd);\n                const hzOffset = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\n                const targetFreqStart = freqMult * baseFreqStart + hzOffset;\n                const targetFreqEnd = freqMult * baseFreqEnd + hzOffset;\n                const freqEnvelopeStart = envelopeStarts[5 + i];\n                const freqEnvelopeEnd = envelopeEnds[5 + i];\n                let freqStart;\n                let freqEnd;\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\n                }\n                else {\n                    freqStart = targetFreqStart;\n                    freqEnd = targetFreqEnd;\n                }\n                tone.phaseDeltas[i] = freqStart * sampleTime;\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\n                let amplitudeStart = instrument.operators[i].amplitude;\n                let amplitudeEnd = instrument.operators[i].amplitude;\n                if (i < 4) {\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                }\n                else {\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 5\"].index + i - 4, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i - 4, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i - 4, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                }\n                const amplitudeCurveStart = Synth.operatorAmplitudeCurve(amplitudeStart);\n                const amplitudeCurveEnd = Synth.operatorAmplitudeCurve(amplitudeEnd);\n                const amplitudeMultStart = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n                const amplitudeMultEnd = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n                let expressionStart = amplitudeMultStart;\n                let expressionEnd = amplitudeMultEnd;\n                if (i < carrierCount) {\n                    let pitchExpressionStart;\n                    if (tone.prevPitchExpressions[i] != null) {\n                        pitchExpressionStart = tone.prevPitchExpressions[i];\n                    }\n                    else {\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\n                    }\n                    const pitchExpressionEnd = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\n                    expressionStart *= pitchExpressionStart;\n                    expressionEnd *= pitchExpressionEnd;\n                    totalCarrierExpression += amplitudeCurveEnd;\n                }\n                else {\n                    expressionStart *= Config.sineWaveLength * 1.5;\n                    expressionEnd *= Config.sineWaveLength * 1.5;\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\n                }\n                expressionStart *= envelopeStarts[11 + i];\n                expressionEnd *= envelopeEnds[11 + i];\n                if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                    const startVal = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                    const endVal = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n                }\n                tone.operatorExpressions[i] = expressionStart;\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n            }\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\n            let expressionStart = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[0];\n            let expressionEnd = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[0];\n            if (isMono && tone.pitchCount <= instrument.monoChordTone) {\n                expressionStart = 0;\n                expressionEnd = 0;\n            }\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n            let useFeedbackAmplitudeStart = instrument.feedbackAmplitude;\n            let useFeedbackAmplitudeEnd = instrument.feedbackAmplitude;\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\n            }\n            let feedbackAmplitudeStart = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\n            const feedbackAmplitudeEnd = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\n            let feedbackStart = feedbackAmplitudeStart * envelopeStarts[17];\n            let feedbackEnd = feedbackAmplitudeEnd * envelopeEnds[17];\n            tone.feedbackMult = feedbackStart;\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\n        }\n        else {\n            const freqEndRatio = Math.pow(2.0, (intervalEnd - intervalStart) * intervalScale / 12.0);\n            const basePhaseDeltaScale = Math.pow(freqEndRatio, 1.0 / roundedSamplesPerTick);\n            const isMono = chord.name == \"monophonic\";\n            let pitch = tone.pitches[0];\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval || isMono)) {\n                const arpeggio = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                if (chord.customInterval) {\n                    const intervalOffset = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\n                }\n                else if (chord.arpeggiates) {\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\n                }\n                else {\n                    pitch = tone.pitches[instrument.monoChordTone];\n                }\n            }\n            const startPitch = basePitch + (pitch + intervalStart) * intervalScale;\n            const endPitch = basePitch + (pitch + intervalEnd) * intervalScale;\n            let pitchExpressionStart;\n            if (tone.prevPitchExpressions[0] != null) {\n                pitchExpressionStart = tone.prevPitchExpressions[0];\n            }\n            else {\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\n            }\n            const pitchExpressionEnd = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\n            let settingsExpressionMult = baseExpression * noteFilterExpression;\n            if (instrument.type == 2) {\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\n            }\n            if (instrument.type == 0) {\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\n            }\n            if (instrument.type == 6) {\n                const basePulseWidth = getPulseWidthRatio(instrument.pulseWidth);\n                let pulseWidthModStart = basePulseWidth;\n                let pulseWidthModEnd = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n                const pulseWidthStart = pulseWidthModStart * envelopeStarts[2];\n                const pulseWidthEnd = pulseWidthModEnd * envelopeEnds[2];\n                tone.pulseWidth = pulseWidthStart;\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\n                let decimalOffsetModStart = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n                const decimalOffsetStart = decimalOffsetModStart * envelopeStarts[37];\n                tone.decimalOffset = decimalOffsetStart;\n                tone.pulseWidth -= (tone.decimalOffset) / 10000;\n            }\n            if (instrument.type == 7) {\n                let useSustainStart = instrument.stringSustain;\n                let useSustainEnd = instrument.stringSustain;\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\n                }\n                tone.stringSustainStart = useSustainStart;\n                tone.stringSustainEnd = useSustainEnd;\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\n            }\n            const startFreq = Instrument.frequencyFromPitch(startPitch);\n            if (instrument.type == 0 || instrument.type == 9 || instrument.type == 5 || instrument.type == 7 || instrument.type == 3 || instrument.type == 6 || instrument.type == 2 || instrument.type == 4) {\n                const unisonVoices = instrument.unisonVoices;\n                const unisonSpread = instrument.unisonSpread;\n                const unisonOffset = instrument.unisonOffset;\n                const unisonExpression = instrument.unisonExpression;\n                const voiceCountExpression = (instrument.type == 7) ? 1 : unisonVoices / 2.0;\n                settingsExpressionMult *= unisonExpression * voiceCountExpression;\n                const unisonEnvelopeStart = envelopeStarts[4];\n                const unisonEnvelopeEnd = envelopeEnds[4];\n                const unisonStartA = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeStart / 12.0);\n                const unisonEndA = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeEnd / 12.0);\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonStartA;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonEndA / unisonStartA, 1.0 / roundedSamplesPerTick);\n                const divisor = (unisonVoices == 1) ? 1 : (unisonVoices - 1);\n                for (let i = 1; i <= unisonVoices; i++) {\n                    const unisonStart = Math.pow(2.0, (unisonOffset + unisonSpread - (2 * i * unisonSpread / divisor)) * unisonEnvelopeStart / 12.0) * (specialIntervalMult);\n                    const unisonEnd = Math.pow(2.0, (unisonOffset + unisonSpread - (2 * i * unisonSpread / divisor)) * unisonEnvelopeEnd / 12.0) * (specialIntervalMult);\n                    tone.phaseDeltas[i] = startFreq * sampleTime * unisonStart;\n                    tone.phaseDeltaScales[i] = basePhaseDeltaScale * Math.pow(unisonEnd / unisonStart, 1.0 / roundedSamplesPerTick);\n                }\n                for (let i = unisonVoices + 1; i < Config.unisonVoicesMax; i++) {\n                    if (i == 2) {\n                        const unisonBStart = Math.pow(2.0, (unisonOffset - unisonSpread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\n                        const unisonBEnd = Math.pow(2.0, (unisonOffset - unisonSpread) * unisonEnvelopeEnd / 12.0) * specialIntervalMult;\n                        tone.phaseDeltas[i] = startFreq * sampleTime * unisonBStart;\n                        tone.phaseDeltaScales[i] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\n                    }\n                    else {\n                        tone.phaseDeltas[i] = tone.phaseDeltas[0];\n                        tone.phaseDeltaScales[i] = tone.phaseDeltaScales[0];\n                    }\n                }\n            }\n            else {\n                tone.phaseDeltas[0] = startFreq * sampleTime;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\n            }\n            let supersawExpressionStart = 1.0;\n            let supersawExpressionEnd = 1.0;\n            if (instrument.type == 8) {\n                const minFirstVoiceAmplitude = 1.0 / Math.sqrt(Config.supersawVoiceCount);\n                let useDynamismStart = instrument.supersawDynamism / Config.supersawDynamismMax;\n                let useDynamismEnd = instrument.supersawDynamism / Config.supersawDynamismMax;\n                if (this.isModActive(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex)) {\n                    useDynamismStart = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawDynamismMax;\n                    useDynamismEnd = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawDynamismMax;\n                }\n                const curvedDynamismStart = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismStart * envelopeStarts[38]), 0.2);\n                const curvedDynamismEnd = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismEnd * envelopeEnds[38]), 0.2);\n                const firstVoiceAmplitudeStart = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismStart);\n                const firstVoiceAmplitudeEnd = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismEnd);\n                const dynamismStart = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeStart, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n                const dynamismEnd = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeEnd, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n                tone.supersawDynamism = dynamismStart;\n                tone.supersawDynamismDelta = (dynamismEnd - dynamismStart) / roundedSamplesPerTick;\n                const initializeSupersaw = (tone.supersawDelayIndex == -1);\n                if (initializeSupersaw) {\n                    let accumulator = 0.0;\n                    for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                        tone.phases[i] = accumulator;\n                        accumulator += -Math.log(Math.random());\n                    }\n                    const amplitudeSum = 1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart;\n                    const slope = amplitudeSum;\n                    let sample = 0.0;\n                    for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                        const amplitude = (i == 0) ? 1.0 : dynamismStart;\n                        const normalizedPhase = tone.phases[i] / accumulator;\n                        tone.phases[i] = normalizedPhase;\n                        sample += (normalizedPhase - 0.5) * amplitude;\n                    }\n                    let zeroCrossingPhase = 1.0;\n                    let prevDrop = 0.0;\n                    for (let i = Config.supersawVoiceCount - 1; i >= 0; i--) {\n                        const nextDrop = 1.0 - tone.phases[i];\n                        const phaseDelta = nextDrop - prevDrop;\n                        if (sample < 0.0) {\n                            const distanceToZeroCrossing = -sample / slope;\n                            if (distanceToZeroCrossing < phaseDelta) {\n                                zeroCrossingPhase = prevDrop + distanceToZeroCrossing;\n                                break;\n                            }\n                        }\n                        const amplitude = (i == 0) ? 1.0 : dynamismStart;\n                        sample += phaseDelta * slope - amplitude;\n                        prevDrop = nextDrop;\n                    }\n                    for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                        tone.phases[i] += zeroCrossingPhase;\n                    }\n                    for (let i = 1; i < Config.supersawVoiceCount - 1; i++) {\n                        const swappedIndex = i + Math.floor(Math.random() * (Config.supersawVoiceCount - i));\n                        const temp = tone.phases[i];\n                        tone.phases[i] = tone.phases[swappedIndex];\n                        tone.phases[swappedIndex] = temp;\n                    }\n                }\n                const baseSpreadSlider = instrument.supersawSpread / Config.supersawSpreadMax;\n                let useSpreadStart = baseSpreadSlider;\n                let useSpreadEnd = baseSpreadSlider;\n                if (this.isModActive(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSpreadStart = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawSpreadMax;\n                    useSpreadEnd = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawSpreadMax;\n                }\n                const spreadSliderStart = useSpreadStart * envelopeStarts[39];\n                const spreadSliderEnd = useSpreadEnd * envelopeEnds[39];\n                const averageSpreadSlider = (spreadSliderStart + spreadSliderEnd) * 0.5;\n                const curvedSpread = Math.pow(1.0 - Math.sqrt(Math.max(0.0, 1.0 - averageSpreadSlider)), 1.75);\n                for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                    const offset = (i == 0) ? 0.0 : Math.pow((((i + 1) >> 1) - 0.5 + 0.025 * ((i & 2) - 1)) / (Config.supersawVoiceCount >> 1), 1.1) * ((i & 1) * 2 - 1);\n                    tone.supersawUnisonDetunes[i] = Math.pow(2.0, curvedSpread * offset / 12.0);\n                }\n                const baseShape = instrument.supersawShape / Config.supersawShapeMax;\n                let useShapeStart = baseShape * envelopeStarts[40];\n                let useShapeEnd = baseShape * envelopeEnds[40];\n                if (this.isModActive(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex)) {\n                    useShapeStart = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawShapeMax;\n                    useShapeEnd = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawShapeMax;\n                }\n                const shapeStart = useShapeStart * envelopeStarts[40];\n                const shapeEnd = useShapeEnd * envelopeEnds[40];\n                tone.supersawShape = shapeStart;\n                tone.supersawShapeDelta = (shapeEnd - shapeStart) / roundedSamplesPerTick;\n                let decimalOffsetModStart = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n                const decimalOffsetStart = decimalOffsetModStart * envelopeStarts[37];\n                tone.decimalOffset = decimalOffsetStart;\n                const basePulseWidth = getPulseWidthRatio(instrument.pulseWidth);\n                let pulseWidthModStart = basePulseWidth;\n                let pulseWidthModEnd = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n                let pulseWidthStart = pulseWidthModStart * envelopeStarts[2];\n                let pulseWidthEnd = pulseWidthModEnd * envelopeEnds[2];\n                pulseWidthStart -= decimalOffsetStart / 10000;\n                pulseWidthEnd -= decimalOffsetStart / 10000;\n                const phaseDeltaStart = (tone.supersawPrevPhaseDelta != null) ? tone.supersawPrevPhaseDelta : startFreq * sampleTime;\n                const phaseDeltaEnd = startFreq * sampleTime * freqEndRatio;\n                tone.supersawPrevPhaseDelta = phaseDeltaEnd;\n                const delayLengthStart = pulseWidthStart / phaseDeltaStart;\n                const delayLengthEnd = pulseWidthEnd / phaseDeltaEnd;\n                tone.supersawDelayLength = delayLengthStart;\n                tone.supersawDelayLengthDelta = (delayLengthEnd - delayLengthStart) / roundedSamplesPerTick;\n                const minBufferLength = Math.ceil(Math.max(delayLengthStart, delayLengthEnd)) + 2;\n                if (tone.supersawDelayLine == null || tone.supersawDelayLine.length <= minBufferLength) {\n                    const likelyMaximumLength = Math.ceil(0.5 * this.samplesPerSecond / Instrument.frequencyFromPitch(24));\n                    const newDelayLine = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n                    if (!initializeSupersaw && tone.supersawDelayLine != null) {\n                        const oldDelayBufferMask = (tone.supersawDelayLine.length - 1) >> 0;\n                        const startCopyingFromIndex = tone.supersawDelayIndex;\n                        for (let i = 0; i < tone.supersawDelayLine.length; i++) {\n                            newDelayLine[i] = tone.supersawDelayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n                        }\n                    }\n                    tone.supersawDelayLine = newDelayLine;\n                    tone.supersawDelayIndex = tone.supersawDelayLine.length;\n                }\n                else if (initializeSupersaw) {\n                    tone.supersawDelayLine.fill(0.0);\n                    tone.supersawDelayIndex = tone.supersawDelayLine.length;\n                }\n                const pulseExpressionRatio = Config.pwmBaseExpression / Config.supersawBaseExpression;\n                supersawExpressionStart *= (1.0 + (pulseExpressionRatio - 1.0) * shapeStart) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart * dynamismStart);\n                supersawExpressionEnd *= (1.0 + (pulseExpressionRatio - 1.0) * shapeEnd) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismEnd * dynamismEnd);\n            }\n            let expressionStart = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[0] * supersawExpressionStart;\n            let expressionEnd = settingsExpressionMult * fadeExpressionEnd * chordExpressionEnd * pitchExpressionEnd * envelopeEnds[0] * supersawExpressionEnd;\n            if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                const startVal = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                const endVal = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n            }\n            if (isMono && tone.pitchCount <= instrument.monoChordTone) {\n                expressionStart = 0;\n                expressionEnd = 0;\n                instrumentState.awake = false;\n            }\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n            if (instrument.type == 7) {\n                let stringDecayStart;\n                if (tone.prevStringDecay != null) {\n                    stringDecayStart = tone.prevStringDecay;\n                }\n                else {\n                    const sustainEnvelopeStart = tone.envelopeComputer.envelopeStarts[3];\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\n                }\n                const sustainEnvelopeEnd = tone.envelopeComputer.envelopeEnds[3];\n                let stringDecayEnd = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\n                tone.prevStringDecay = stringDecayEnd;\n                const unisonVoices = instrument.unisonVoices;\n                for (let i = tone.pickedStrings.length; i < unisonVoices; i++) {\n                    tone.pickedStrings[i] = new PickedString();\n                }\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n                    for (const pickedString of tone.pickedStrings) {\n                        pickedString.delayIndex = -1;\n                    }\n                }\n                for (let i = 0; i < unisonVoices; i++) {\n                    tone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, instrument.stringSustainType);\n                }\n            }\n        }\n    }\n    static getLFOAmplitude(instrument, secondsIntoBar) {\n        let effect = 0.0;\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\n        }\n        return effect;\n    }\n    static getInstrumentSynthFunction(instrument) {\n        if (instrument.type == 1) {\n            const fingerprint = instrument.algorithm + \"_\" + instrument.feedbackType;\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\n                const synthSource = [];\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs = [];\n                        for (let j = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    }\n                    else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j = Config.operatorCount - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n                                    const feedbackIndices = Config.feedbacks[instrument.feedbackType].indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                }\n                                else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    }\n                    else if (line.indexOf(\"#\") != -1) {\n                        for (let j = 0; j < Config.operatorCount; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    }\n                    else {\n                        synthSource.push(line);\n                    }\n                }\n                const wrappedFmSynth = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n                Synth.fmSynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFmSynth)(Config, Synth);\n            }\n            return Synth.fmSynthFunctionCache[fingerprint];\n        }\n        else if (instrument.type == 0) {\n            if (instrument.isUsingAdvancedLoopControls) {\n                return Synth.loopableChipSynth;\n            }\n            return Synth.chipSynth;\n        }\n        else if (instrument.type == 9) {\n            return Synth.chipSynth;\n        }\n        else if (instrument.type == 5) {\n            return Synth.harmonicsSynth;\n        }\n        else if (instrument.type == 6) {\n            return Synth.pulseWidthSynth;\n        }\n        else if (instrument.type == 8) {\n            return Synth.supersawSynth;\n        }\n        else if (instrument.type == 7) {\n            return Synth.pickedStringSynth;\n        }\n        else if (instrument.type == 2) {\n            return Synth.noiseSynth;\n        }\n        else if (instrument.type == 3) {\n            return Synth.spectrumSynth;\n        }\n        else if (instrument.type == 4) {\n            return Synth.drumsetSynth;\n        }\n        else if (instrument.type == 10) {\n            return Synth.modSynth;\n        }\n        else if (instrument.type == 11) {\n            const fingerprint = instrument.customAlgorithm.name + \"_\" + instrument.customFeedbackType.name;\n            if (Synth.fm6SynthFunctionCache[fingerprint] == undefined) {\n                const synthSource = [];\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs = [];\n                        for (let j = 0; j < instrument.customAlgorithm.carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    }\n                    else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j = Config.operatorCount + 2 - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of instrument.customAlgorithm.modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n                                    const feedbackIndices = instrument.customFeedbackType.indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                }\n                                else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    }\n                    else if (line.indexOf(\"#\") != -1) {\n                        for (let j = 0; j < Config.operatorCount + 2; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    }\n                    else {\n                        synthSource.push(line);\n                    }\n                }\n                const wrappedFm6Synth = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n                Synth.fm6SynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFm6Synth)(Config, Synth);\n            }\n            return Synth.fm6SynthFunctionCache[fingerprint];\n        }\n        else {\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\n        }\n    }\n    static wrap(x, b) {\n        return (x % b + b) % b;\n    }\n    static loopableChipSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let chipFunction = Synth.loopableChipFunctionCache[instrumentState.unisonVoices];\n        if (chipFunction == undefined) {\n            let chipSource = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {\";\n            chipSource += `\n            const aliases = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n            // const aliases = false;\n            const data = synth.tempMonoInstrumentSampleBuffer;\n            const wave = instrumentState.wave;\n            const volumeScale = instrumentState.volumeScale;\n            const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n\n            let chipWaveLoopEnd = Math.max(0, Math.min(waveLength, instrumentState.chipWaveLoopEnd));\n            let chipWaveLoopStart = Math.max(0, Math.min(chipWaveLoopEnd - 1, instrumentState.chipWaveLoopStart));\n            `;\n            chipSource += `\n            let chipWaveLoopLength = chipWaveLoopEnd - chipWaveLoopStart;\n            if (chipWaveLoopLength < 2) {\n                chipWaveLoopStart = 0;\n                chipWaveLoopEnd = waveLength;\n                chipWaveLoopLength = waveLength;\n            }\n            const chipWaveLoopMode = instrumentState.chipWaveLoopMode;\n            const chipWavePlayBackwards = instrumentState.chipWavePlayBackwards;\n            const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n            if(instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {\n            `;\n            for (let i = 1; i < voiceCount; i++) {\n                chipSource += `\n                if (instrumentState.unisonVoices <= #)\n                    tone.phases[#] = tone.phases[#-1];\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            }`;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                let phaseDelta# = tone.phaseDeltas[#] * waveLength;\n                let direction# = tone.directions[#];\n                let chipWaveCompletion# = tone.chipWaveCompletions[#];\n\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            if (chipWaveLoopMode === 3 || chipWaveLoopMode === 2 || chipWaveLoopMode === 0) {\n                // If playing once or looping, we force the correct direction,\n                // since it shouldn't really change. This is mostly so that if\n                // the mode is changed midway through playback, it won't get\n                // stuck on the wrong direction.\n                if (!chipWavePlayBackwards) {`;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        direction# = 1;\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `} else {`;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        direction# = -1;\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                }\n            }\n            if (chipWaveLoopMode === 0 || chipWaveLoopMode === 1) {`;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                    chipWaveCompletion# = 0;\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `    \n            }\n            \n            const chipWaveCompletionFadeLength = 1000;\n            let expression = +tone.expression;\n            const expressionDelta = +tone.expressionDelta;\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                let lastWave# = tone.chipWaveCompletionsLastWave[#];\n                const phaseDeltaScale# = +tone.phaseDeltaScales[#];\n                let phase# = Synth.wrap(tone.phases[#], 1) * waveLength;\n                let prevWaveIntegral# = 0;\n\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            if (!aliases) {\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                    const phase#Int = Math.floor(phase#);\n                    const index# = Synth.wrap(phase#Int, waveLength);\n                    const phaseRatio# = phase# - phase#Int;\n                    prevWaveIntegral# = +wave[index#];\n                    prevWaveIntegral# += (wave[Synth.wrap(index# + 1, waveLength)] - prevWaveIntegral#) * phaseRatio#;\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            }\n            const filters = tone.noteFilters;\n            const filterCount = tone.noteFilterCount | 0;\n            let initialFilterInput1 = +tone.initialNoteFilterInput1;\n            let initialFilterInput2 = +tone.initialNoteFilterInput2;\n            const applyFilters = Synth.applyFilters;\n            const stopIndex = bufferIndex + roundedSamplesPerTick;\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                let prevWave# = tone.chipWavePrevWaves[#];\n\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                let wrapped = 0;\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                    if (chipWaveCompletion# > 0 && chipWaveCompletion# < chipWaveCompletionFadeLength) {\n                        chipWaveCompletion#++;\n                    }\n                    phase# += phaseDelta# * direction#;\n\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                if (chipWaveLoopMode === 2) {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        if (direction# === 1) {\n                            if (phase# > waveLength) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = #;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < 0) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = 1;\n                            }\n                        }\n\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                } else if (chipWaveLoopMode === 3) {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        if (direction# === 1) {\n                            if (phase# > chipWaveLoopEnd) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = 1;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < chipWaveLoopStart) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = 1;\n                            }\n                        }\n\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                } else if (chipWaveLoopMode === 0) {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        if (direction# === 1) {\n                            if (phase# > chipWaveLoopEnd) {\n                                phase# = chipWaveLoopStart + Synth.wrap(phase# - chipWaveLoopEnd, chipWaveLoopLength);\n                                // phase# = chipWaveLoopStart;\n                                wrapped = 1;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < chipWaveLoopStart) {\n                                phase# = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phase#, chipWaveLoopLength);\n                                // phase# = chipWaveLoopEnd;\n                                wrapped = 1;\n                            }\n                        }\n\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `    \n                } else if (chipWaveLoopMode === 1) {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        if (direction# === 1) {\n                            if (phase# > chipWaveLoopEnd) {\n                                phase# = chipWaveLoopEnd - Synth.wrap(phase# - chipWaveLoopEnd, chipWaveLoopLength);\n                                // phase# = chipWaveLoopEnd;\n                                direction# = -1;\n                                wrapped = 1;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < chipWaveLoopStart) {\n                                phase# = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phase#, chipWaveLoopLength);\n                                // phase# = chipWaveLoopStart;\n                                direction# = 1;\n                                wrapped = 1;\n                            }\n                        }\n\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `    \n                }\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                    let wave# = 0;\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `    \n                let inputSample = 0;\n                if (aliases) {\n                    inputSample = 0;\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        wave# = wave[Synth.wrap(Math.floor(phase#), waveLength)];\n                        prevWave# = wave#;\n                        const completionFade# = chipWaveCompletion# > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletion#, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                        \n                        if (chipWaveCompletion# > 0) {\n                            inputSample += lastWave# * completionFade#;\n                        } else {\n                            inputSample += wave#;\n                        }\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `   \n                } else {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        const phase#Int = Math.floor(phase#);\n                        const index# = Synth.wrap(phase#Int, waveLength);\n                        let nextWaveIntegral# = wave[index#];\n                        const phaseRatio# = phase# - phase#Int;\n                        nextWaveIntegral# += (wave[Synth.wrap(index# + 1, waveLength)] - nextWaveIntegral#) * phaseRatio#;\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                    if (!(chipWaveLoopMode === 0 && chipWaveLoopStart === 0 && chipWaveLoopEnd === waveLength) && wrapped !== 0) {\n                    `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                            let pwi# = 0;\n                            const phase#_ = Math.max(0, phase# - phaseDelta# * direction#);\n                            const phase#Int = Math.floor(phase#_);\n                            const index# = Synth.wrap(phase#Int, waveLength);\n                            pwi# = wave[index#];\n                            pwi# += (wave[Synth.wrap(index# + 1, waveLength)] - pwi#) * (phase#_ - phase#Int) * direction#;\n                            prevWaveIntegral# = pwi#;\n                            `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `    \n                    }\n                    if (chipWaveLoopMode === 1 && wrapped !== 0) {\n                    `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                            wave# = prevWave#;\n                            `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                    } else {\n                    `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                            wave# = (nextWaveIntegral# - prevWaveIntegral#) / (phaseDelta# * direction#);\n                            `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                    }\n                    `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        prevWave# = wave#;\n                        prevWaveIntegral# = nextWaveIntegral#;\n                        const completionFade# = chipWaveCompletion# > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletion#, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                        if (chipWaveCompletion# > 0) {\n                            inputSample += lastWave# * completionFade#;\n                        } else {\n                            inputSample += wave#;\n                        }\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                }\n                const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n                initialFilterInput2 = initialFilterInput1;\n                initialFilterInput1 = inputSample * volumeScale;\n                const output = sample * expression;\n                expression += expressionDelta;\n                data[sampleIndex] += output;\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                    phaseDelta# *= phaseDeltaScale#;\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            }\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                tone.phases[#] = phase# / waveLength;\n                tone.phaseDeltas[#] = phaseDelta# / waveLength;\n                tone.directions[#] = direction#;\n                tone.chipWaveCompletions[#] = chipWaveCompletion#;\n                tone.chipWavePrevWaves[#] = prevWave#;\n                tone.chipWaveCompletionsLastWave[#] = lastWave#;\n                \n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            tone.expression = expression;\n            synth.sanitizeFilters(filters);\n            tone.initialNoteFilterInput1 = initialFilterInput1;\n            tone.initialNoteFilterInput2 = initialFilterInput2;\n        }`;\n            chipFunction = new Function(\"Config\", \"Synth\", \"effectsIncludeDistortion\", chipSource)(Config, Synth, effectsIncludeDistortion);\n            Synth.loopableChipFunctionCache[instrumentState.unisonVoices] = chipFunction;\n        }\n        chipFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static chipSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let chipFunction = Synth.chipFunctionCache[instrumentState.unisonVoices];\n        if (chipFunction == undefined) {\n            let chipSource = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {\";\n            chipSource += `\n        const aliases = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n        const volumeScale = instrumentState.volumeScale;\n\n        const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `let phaseDelta# = tone.phaseDeltas[#] * waveLength;\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            `.replaceAll(\"#\", i + \"\");\n            }\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `let phase# = (tone.phases[#] % 1) * waveLength;\n            let prevWaveIntegral# = 0.0;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        if (!aliases) {\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `const phase#Int = phase# | 0;\n                const index# = phase#Int % waveLength;\n                prevWaveIntegral# = +wave[index#]\n                const phase#Ratio = phase# - phase#Int;\n                prevWaveIntegral# += (wave[index# + 1] - prevWaveIntegral#) * phase#Ratio;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n        } \n\n        const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        let inputSample = 0;\n            if (aliases) {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `phase# += phaseDelta#;\n\n                    const inputSample# = wave[(0 | phase#) % waveLength];\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleListA = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleListA.push(\"inputSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            chipSource += \"inputSample = \" + sampleListA.join(\" + \") + \";\";\n            chipSource += `} else {\n                    `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `phase# += phaseDelta#;\n\n                     \n                        const phase#Int = phase# | 0;\n                        const index# = phase#Int % waveLength;\n                        let nextWaveIntegral# = wave[index#]\n                        const phase#Ratio = phase# - phase#Int;\n                        nextWaveIntegral# += (wave[index# + 1] - nextWaveIntegral#) * phase#Ratio;\n                        const wave# = (nextWaveIntegral# - prevWaveIntegral#) / phaseDelta#;\n                        prevWaveIntegral# = nextWaveIntegral#;\n                        let inputSample# = wave#;\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleListB = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleListB.push(\"inputSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            chipSource += \"inputSample = \" + sampleListB.join(\" + \") + \";\";\n            chipSource += `}\n        `;\n            chipSource += `const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample * volumeScale;`;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `tone.phases[#] = phase# / waveLength;\n            tone.phaseDeltas[#] = phaseDelta# / waveLength;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += \"tone.expression = expression;\";\n            chipSource += `\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            chipFunction = new Function(\"Config\", \"Synth\", \"effectsIncludeDistortion\", chipSource)(Config, Synth, effectsIncludeDistortion);\n            Synth.chipFunctionCache[instrumentState.unisonVoices] = chipFunction;\n        }\n        chipFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static harmonicsSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let harmonicsFunction = Synth.harmonicsFunctionCache[instrumentState.unisonVoices];\n        if (harmonicsFunction == undefined) {\n            let harmonicsSource = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {\";\n            harmonicsSource += `\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n        const waveLength = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n         `;\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `let phaseDelta# = tone.phaseDeltas[#] * waveLength;\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            `.replaceAll(\"#\", i + \"\");\n            }\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `let phase# = (tone.phases[#] % 1) * waveLength;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            harmonicsSource += `const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `const phase#Int = phase# | 0;\n            const index# = phase#Int % waveLength;\n            prevWaveIntegral# = +wave[index#]\n            const phase#Ratio = phase# - phase#Int;\n            prevWaveIntegral# += (wave[index# + 1] - prevWaveIntegral#) * phase#Ratio;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            harmonicsSource += `const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `\n                        phase# += phaseDelta#;\n                        const phase#Int = phase# | 0;\n                        const index# = phase#Int % waveLength;\n                        let nextWaveIntegral# = wave[index#]\n                        const phase#Ratio = phase# - phase#Int;\n                        nextWaveIntegral# += (wave[index# + 1] - nextWaveIntegral#) * phase#Ratio;\n                        const wave# = (nextWaveIntegral# - prevWaveIntegral#) / phaseDelta#;\n                        prevWaveIntegral# = nextWaveIntegral#;\n                        let inputSample# = wave#;\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"inputSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            harmonicsSource += \"inputSample = \" + sampleList.join(\" + \") + \";\";\n            harmonicsSource += `const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;`;\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            harmonicsSource += `const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `tone.phases[#] = phase# / waveLength;\n            tone.phaseDeltas[#] = phaseDelta# / waveLength;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            harmonicsSource += \"tone.expression = expression;\";\n            harmonicsSource += `\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            harmonicsFunction = new Function(\"Config\", \"Synth\", harmonicsSource)(Config, Synth);\n            Synth.harmonicsFunctionCache[instrumentState.unisonVoices] = harmonicsFunction;\n        }\n        harmonicsFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static pickedStringSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = instrumentState.unisonVoices;\n        let pickedStringFunction = Synth.pickedStringFunctionCache[voiceCount];\n        if (pickedStringFunction == undefined) {\n            let pickedStringSource = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n            pickedStringSource += `\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n                if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[1] = tone.phases[0];\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (`;\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            pickedStringSource += sampleList.join(\" + \");\n            pickedStringSource += `) * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t\t}`;\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\n                const lines = [];\n                for (let voice = 0; voice < voiceCount; voice++) {\n                    lines.push(line.replace(/\\#/g, String(voice)));\n                }\n                return lines.join(\"\\n\");\n            });\n            pickedStringFunction = new Function(\"Config\", \"Synth\", pickedStringSource)(Config, Synth);\n            Synth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\n        }\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static effectsSynth(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) {\n        const usesDistortion = effectsIncludeDistortion(instrumentState.effects);\n        const usesBitcrusher = effectsIncludeBitcrusher(instrumentState.effects);\n        const usesEqFilter = instrumentState.eqFilterCount > 0;\n        const usesPanning = effectsIncludePanning(instrumentState.effects);\n        const usesChorus = effectsIncludeChorus(instrumentState.effects);\n        const usesEcho = effectsIncludeEcho(instrumentState.effects);\n        const usesReverb = effectsIncludeReverb(instrumentState.effects);\n        const usesGranular = effectsIncludeGranular(instrumentState.effects);\n        const usesRingModulation = effectsIncludeRingModulation(instrumentState.effects);\n        let signature = 0;\n        if (usesDistortion)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesBitcrusher)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesEqFilter)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesPanning)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesChorus)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesEcho)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesReverb)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesGranular)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesRingModulation)\n            signature = signature | 1;\n        let effectsFunction = Synth.effectsFunctionCache[signature];\n        if (effectsFunction == undefined) {\n            let effectsSource = \"return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {\";\n            const usesDelays = usesChorus || usesReverb || usesEcho || usesGranular;\n            effectsSource += `\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;\n                `;\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`;\n            }\n            if (usesGranular) {\n                effectsSource += `\n                let granularWet = instrumentState.granularMix;\n                const granularMixDelta = instrumentState.granularMixDelta;\n                let granularDry = 1.0 - granularWet; \n                const granularDelayLine = instrumentState.granularDelayLine;\n                const granularGrains = instrumentState.granularGrains;\n                let granularGrainCount = instrumentState.granularGrainsLength;\n                const granularDelayLineLength = granularDelayLine.length;\n                const granularDelayLineMask = granularDelayLineLength - 1;\n                let granularDelayLineIndex = instrumentState.granularDelayLineIndex;\n                const usesRandomGrainLocation = instrumentState.usesRandomGrainLocation;\n                const computeGrains = instrumentState.computeGrains;\n                instrumentState.granularDelayLineDirty = true;\n                `;\n            }\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`;\n            }\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`;\n            }\n            if (usesRingModulation) {\n                effectsSource += `\n\t\t\t\t\n                let ringModMix = +instrumentState.ringModMix;\n                let ringModMixDelta = +instrumentState.ringModMixDelta;\n                let ringModPhase = +instrumentState.ringModPhase;\n                let ringModPhaseDelta = +instrumentState.ringModPhaseDelta;\n                let ringModPhaseDeltaScale = +instrumentState.ringModPhaseDeltaScale;\n                let ringModWaveformIndex = +instrumentState.ringModWaveformIndex;\n                let ringModMixFade = +instrumentState.ringModMixFade;\n                let ringModMixFadeDelta = +instrumentState.ringModMixFadeDelta;\n                \n                let ringModPulseWidth = +instrumentState.ringModPulseWidth;\n\n                let waveform = Config.operatorWaves[ringModWaveformIndex].samples; \n                if (ringModWaveformIndex == Config.operatorWaves.dictionary['pulse width'].index) {\n                    waveform = Synth.getOperatorWave(ringModWaveformIndex, ringModPulseWidth).samples;\n                }\n                const waveformLength = waveform.length - 1;\n                `;\n            }\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;`;\n            }\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`;\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`;\n            }\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`;\n            }\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`;\n            }\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`;\n            }\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n            for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                    `;\n            if (usesGranular) {\n                effectsSource += `\n                let sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n                let granularOutput = 0;\n                for (let grainIndex = 0; grainIndex < granularGrainCount; grainIndex++) {\n                    const grain = granularGrains[grainIndex];\n                    if(computeGrains) {\n                        if(grain.delay > 0) {\n                            grain.delay--;\n                        } else {\n                            const grainDelayLinePosition = grain.delayLinePosition;\n                            const grainDelayLinePositionInt = grainDelayLinePosition | 0;\n                            // const grainDelayLinePositionT = grainDelayLinePosition - grainDelayLinePositionInt;\n                            let grainAgeInSamples = grain.ageInSamples;\n                            const grainMaxAgeInSamples = grain.maxAgeInSamples;\n                            // const grainSample0 = granularDelayLine[((granularDelayLineIndex + (granularDelayLineLength - grainDelayLinePositionInt))    ) & granularDelayLineMask];\n                            // const grainSample1 = granularDelayLine[((granularDelayLineIndex + (granularDelayLineLength - grainDelayLinePositionInt)) + 1) & granularDelayLineMask];\n                            // let grainSample = grainSample0 + (grainSample1 - grainSample0) * grainDelayLinePositionT; // Linear interpolation (@TODO: sounds quite bad?)\n                            let grainSample = granularDelayLine[((granularDelayLineIndex + (granularDelayLineLength - grainDelayLinePositionInt))    ) & granularDelayLineMask]; // No interpolation\n                            `;\n                if (Config.granularEnvelopeType == 0) {\n                    effectsSource += `\n                                const grainEnvelope = grain.parabolicEnvelopeAmplitude;\n                                `;\n                }\n                else if (Config.granularEnvelopeType == 1) {\n                    effectsSource += `\n                                const grainEnvelope = grain.rcbEnvelopeAmplitude;\n                                `;\n                }\n                effectsSource += `\n                            grainSample *= grainEnvelope;\n                            granularOutput += grainSample;\n                            if (grainAgeInSamples > grainMaxAgeInSamples) {\n                                if (granularGrainCount > 0) {\n                                    // Faster equivalent of .pop, ignoring the order in the array.\n                                    const lastGrainIndex = granularGrainCount - 1;\n                                    const lastGrain = granularGrains[lastGrainIndex];\n                                    granularGrains[grainIndex] = lastGrain;\n                                    granularGrains[lastGrainIndex] = grain;\n                                    granularGrainCount--;\n                                    grainIndex--;\n                                    // ^ Dangerous, since this could end up causing an infinite loop,\n                                    // but should be okay in this case.\n                                }\n                            } else {\n                                grainAgeInSamples++;\n                            `;\n                if (Config.granularEnvelopeType == 0) {\n                    effectsSource += `\n                                    grain.parabolicEnvelopeAmplitude += grain.parabolicEnvelopeSlope;\n                                    grain.parabolicEnvelopeSlope += grain.parabolicEnvelopeCurve;\n                                    `;\n                }\n                else if (Config.granularEnvelopeType == 1) {\n                    effectsSource += `\n                                    grain.updateRCBEnvelope();\n                                    `;\n                }\n                effectsSource += `\n                                grain.ageInSamples = grainAgeInSamples;\n                                // if(usesRandomGrainLocation) {\n                                //     grain.delayLine -= grainPitchShift;\n                                // }\n                            }\n                        }\n                    }\n                }\n                granularWet += granularMixDelta;\n                granularDry -= granularMixDelta;\n                granularOutput *= Config.granularOutputLoudnessCompensation;\n                granularDelayLine[granularDelayLineIndex] = sample;\n                granularDelayLineIndex = (granularDelayLineIndex + 1) & granularDelayLineMask;\n                sample = sample * granularDry + granularOutput * granularWet;\n                tempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;\n                `;\n            }\n            else {\n                effectsSource += `let sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n                tempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`;\n            }\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`;\n            }\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`;\n            }\n            if (usesRingModulation) {\n                effectsSource += ` \n                \n                const ringModOutput = sample * waveform[(ringModPhase*waveformLength)|0];\n                const ringModMixF = Math.max(0, ringModMix * ringModMixFade);\n                sample = sample * (1 - ringModMixF) + ringModOutput * ringModMixF;\n\n                ringModMix += ringModMixDelta;\n                ringModPhase += ringModPhaseDelta;\n                ringModPhase = ringModPhase % 1.0;\n                ringModPhaseDelta *= ringModPhaseDeltaScale;\n                ringModMixFade += ringModMixFadeDelta;\n                `;\n            }\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;`;\n            }\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`;\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`;\n            }\n            else {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;`;\n            }\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`;\n            }\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;\n                    `;\n            }\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;`;\n            }\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;`;\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`;\n            }\n            effectsSource += `\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);`;\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`;\n            }\n            if (usesGranular) {\n                effectsSource += `\n                    instrumentState.granularMix = granularWet;\n                    instrumentState.granularGrainsLength = granularGrainCount;\n                    instrumentState.granularDelayLineIndex = granularDelayLineIndex;\n                `;\n            }\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`;\n            }\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`;\n            }\n            if (usesRingModulation) {\n                effectsSource += ` \n                instrumentState.ringModMix = ringModMix;\n                instrumentState.ringModMixDelta = ringModMixDelta;\n                instrumentState.ringModPhase = ringModPhase;\n                instrumentState.ringModPhaseDelta = ringModPhaseDelta;\n                instrumentState.ringModPhaseDeltaScale = ringModPhaseDeltaScale;\n                instrumentState.ringModWaveformIndex = ringModWaveformIndex;\n                instrumentState.ringModPulseWidth = ringModPulseWidth;\n                instrumentState.ringModMixFade = ringModMixFade;\n                 `;\n            }\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`;\n            }\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`;\n            }\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`;\n            }\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`;\n            }\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`;\n            }\n            effectsSource += \"}\";\n            effectsFunction = new Function(\"Config\", \"Synth\", effectsSource)(Config, Synth);\n            Synth.effectsFunctionCache[signature] = effectsFunction;\n        }\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n    }\n    static pulseWidthSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let pulseFunction = Synth.pulseFunctionCache[instrumentState.unisonVoices];\n        if (pulseFunction == undefined) {\n            let pulseSource = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {\";\n            pulseSource += `\n        const data = synth.tempMonoInstrumentSampleBuffer;\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                pulseSource += `let phaseDelta# = tone.phaseDeltas[#];\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            `.replaceAll(\"#\", i + \"\");\n            }\n            for (let i = 0; i < voiceCount; i++) {\n                pulseSource += `phase# = (tone.phases[#] % 1);\n            `.replaceAll(\"#\", i + \"\");\n            }\n            pulseSource += `let pulseWidth = tone.pulseWidth;\n        const pulseWidthDelta = tone.pulseWidthDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                pulseSource += `const sawPhaseA# = phase# % 1;\n                const sawPhaseB# = (phase# + pulseWidth) % 1;\n                let pulseWave# = sawPhaseB# - sawPhaseA#;\n                if (!instrumentState.aliases) {\n                    if (sawPhaseA# < phaseDelta#) {\n                        var t = sawPhaseA# / phaseDelta#;\n                        pulseWave# += (t + t - t * t - 1) * 0.5;\n                    } else if (sawPhaseA# > 1.0 - phaseDelta#) {\n                        var t = (sawPhaseA# - 1.0) / phaseDelta#;\n                        pulseWave# += (t + t + t * t + 1) * 0.5;\n                    }\n                    if (sawPhaseB# < phaseDelta#) {\n                        var t = sawPhaseB# / phaseDelta#;\n                        pulseWave# -= (t + t - t * t - 1) * 0.5;\n                    } else if (sawPhaseB# > 1.0 - phaseDelta#) {\n                        var t = (sawPhaseB# - 1.0) / phaseDelta#;\n                        pulseWave# -= (t + t + t * t + 1) * 0.5;\n                    }\n                }\n\n                `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"pulseWave\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            pulseSource += \"let inputSample = \" + sampleList.join(\" + \") + \";\";\n            pulseSource += `const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;`;\n            for (let i = 0; i < voiceCount; i++) {\n                pulseSource += `phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            pulseSource += `pulseWidth += pulseWidthDelta;\n\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }`;\n            for (let i = 0; i < voiceCount; i++) {\n                pulseSource += `tone.phases[#] = phase#;\n            tone.phaseDeltas[#] = phaseDelta#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            pulseSource += `tone.expression = expression;\n        tone.pulseWidth = pulseWidth;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            pulseFunction = new Function(\"Config\", \"Synth\", pulseSource)(Config, Synth);\n            Synth.pulseFunctionCache[instrumentState.unisonVoices] = pulseFunction;\n        }\n        pulseFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static supersawSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const voiceCount = Config.supersawVoiceCount | 0;\n        let phaseDelta = tone.phaseDeltas[0];\n        const phaseDeltaScale = +tone.phaseDeltaScales[0];\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        let phases = tone.phases;\n        let dynamism = +tone.supersawDynamism;\n        const dynamismDelta = +tone.supersawDynamismDelta;\n        const unisonDetunes = tone.supersawUnisonDetunes;\n        let shape = +tone.supersawShape;\n        const shapeDelta = +tone.supersawShapeDelta;\n        let delayLength = +tone.supersawDelayLength;\n        const delayLengthDelta = +tone.supersawDelayLengthDelta;\n        const delayLine = tone.supersawDelayLine;\n        const delayBufferMask = (delayLine.length - 1) >> 0;\n        let delayIndex = tone.supersawDelayIndex | 0;\n        delayIndex = (delayIndex & delayBufferMask) + delayLine.length;\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            let phase = (phases[0] + phaseDelta) % 1.0;\n            let supersawSample = phase - 0.5 * (1.0 + (voiceCount - 1.0) * dynamism);\n            if (!instrumentState.aliases) {\n                if (phase < phaseDelta) {\n                    var t = phase / phaseDelta;\n                    supersawSample -= (t + t - t * t - 1) * 0.5;\n                }\n                else if (phase > 1.0 - phaseDelta) {\n                    var t = (phase - 1.0) / phaseDelta;\n                    supersawSample -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n            phases[0] = phase;\n            for (let i = 1; i < voiceCount; i++) {\n                const detunedPhaseDelta = phaseDelta * unisonDetunes[i];\n                let phase = (phases[i] + detunedPhaseDelta) % 1.0;\n                supersawSample += phase * dynamism;\n                if (!instrumentState.aliases) {\n                    if (phase < detunedPhaseDelta) {\n                        const t = phase / detunedPhaseDelta;\n                        supersawSample -= (t + t - t * t - 1) * 0.5 * dynamism;\n                    }\n                    else if (phase > 1.0 - detunedPhaseDelta) {\n                        const t = (phase - 1.0) / detunedPhaseDelta;\n                        supersawSample -= (t + t + t * t + 1) * 0.5 * dynamism;\n                    }\n                }\n                phases[i] = phase;\n            }\n            delayLine[delayIndex & delayBufferMask] = supersawSample;\n            const delaySampleTime = delayIndex - delayLength;\n            const lowerIndex = delaySampleTime | 0;\n            const upperIndex = lowerIndex + 1;\n            const delayRatio = delaySampleTime - lowerIndex;\n            const prevDelaySample = delayLine[lowerIndex & delayBufferMask];\n            const nextDelaySample = delayLine[upperIndex & delayBufferMask];\n            const delaySample = prevDelaySample + (nextDelaySample - prevDelaySample) * delayRatio;\n            delayIndex++;\n            const inputSample = supersawSample - delaySample * shape;\n            const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n            phaseDelta *= phaseDeltaScale;\n            dynamism += dynamismDelta;\n            shape += shapeDelta;\n            delayLength += delayLengthDelta;\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n        tone.phaseDeltas[0] = phaseDelta;\n        tone.expression = expression;\n        tone.supersawDynamism = dynamism;\n        tone.supersawShape = shape;\n        tone.supersawDelayLength = delayLength;\n        tone.supersawDelayIndex = delayIndex;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n    static noiseSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let noiseFunction = Synth.noiseFunctionCache[instrumentState.unisonVoices];\n        if (noiseFunction == undefined) {\n            let noiseSource = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n            noiseSource += `\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `\n            let phaseDelta# = tone.phaseDeltas[#];\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n            let noiseSample# = +tone.noiseSamples[#];\n            // This is for a \"legacy\" style simplified 1st order lowpass filter with\n            // a cutoff frequency that is relative to the tone's fundamental frequency.\n            const pitchRelativefilter# = Math.min(1.0, phaseDelta# * instrumentState.noisePitchFilterMult);\n            \n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[#-1];\n            `.replaceAll(\"#\", i + \"\");\n            }\n            noiseSource += `\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        const phaseMask = Config.spectrumNoiseLength - 1;\n\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `let phase# = (tone.phases[#] % 1) * Config.chipNoiseLength;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            noiseSource += \"let test = true;\";\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `\n            if (tone.phases[#] == 0.0) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phase# = Math.random() * Config.chipNoiseLength;\n                if (@ <= # && test && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {`.replaceAll(\"#\", i + \"\").replaceAll(\"@\", voiceCount + \"\").replaceAll(\"~\", tone.phases.length + \"\");\n                for (let j = i + 1; j < tone.phases.length; j++) {\n                    noiseSource += \"phase~ = phase#;\".replaceAll(\"#\", i + \"\").replaceAll(\"~\", j + \"\");\n                }\n                noiseSource += `\n                    test = false;\n                }\n            }`;\n            }\n            noiseSource += `\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `\n                let waveSample# = wave[phase# & phaseMask];\n\n                noiseSample# += (waveSample# - noiseSample#) * pitchRelativefilter#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"noiseSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            noiseSource += \"let inputSample = \" + sampleList.join(\" + \") + \";\";\n            noiseSource += `const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;`;\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            noiseSource += `const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }`;\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `tone.phases[#] = phase# / `.replaceAll(\"#\", i + \"\") + Config.chipNoiseLength + `;\n            tone.phaseDeltas[#] = phaseDelta#;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            noiseSource += \"tone.expression = expression;\";\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `tone.noiseSamples[#] = noiseSample#;\n             `.replaceAll(\"#\", i + \"\");\n            }\n            noiseSource += `\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            noiseFunction = new Function(\"Config\", \"Synth\", noiseSource)(Config, Synth);\n            ;\n            Synth.noiseFunctionCache[instrumentState.unisonVoices] = noiseFunction;\n        }\n        noiseFunction(synth, bufferIndex, runLength, tone, instrumentState);\n    }\n    static spectrumSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let spectrumFunction = Synth.spectrumFunctionCache[instrumentState.unisonVoices];\n        if (spectrumFunction == undefined) {\n            let spectrumSource = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n            spectrumSource += `\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n        const samplesInPeriod = (1 << 7);\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `\n                if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[#-1];\n                let phaseDelta# = tone.phaseDeltas[#] * samplesInPeriod;\n                let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n                let noiseSample# = +tone.noiseSamples[#];\n                // This is for a \"legacy\" style simplified 1st order lowpass filter with\n                // a cutoff frequency that is relative to the tone's fundamental frequency.\n                const pitchRelativefilter# = Math.min(1.0, phaseDelta#);\n                `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        const phaseMask = Config.spectrumNoiseLength - 1;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `let phase# = (tone.phases[#] % 1) * Config.spectrumNoiseLength;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `\n            if (tone.phases[0] == 0.0) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phase0 = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta0;\n            `;\n            for (let i = 1; i < voiceCount; i++) {\n                spectrumSource += `\n                if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {\n                    phase# = phase0;\n                }\n            `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `}`;\n            for (let i = 1; i < voiceCount; i++) {\n                spectrumSource += `\n                if (tone.phases[#] == 0.0 && !(instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)) {\n                    // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phase# = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta#;\n                }\n            `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {`;\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `\n                const phase#Int = phase# | 0;\n                const index# = phase#Int & phaseMask;\n                let waveSample# = wave[index#]\n                const phase#Ratio = phase# - phase#Int;\n                waveSample# += (wave[index# + 1] - waveSample#) * phase#Ratio;\n\n                noiseSample# += (waveSample# - noiseSample#) * pitchRelativefilter#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"noiseSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            spectrumSource += \"let inputSample = \" + sampleList.join(\" + \") + \";\";\n            spectrumSource += `const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;`;\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }`;\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `tone.phases[#] = phase# / `.replaceAll(\"#\", i + \"\") + Config.spectrumNoiseLength + `;\n            tone.phaseDeltas[#] = phaseDelta# / samplesInPeriod;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += \"tone.expression = expression;\";\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `tone.noiseSamples[#] = noiseSample#;\n             `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            spectrumFunction = new Function(\"Config\", \"Synth\", spectrumSource)(Config, Synth);\n            ;\n            Synth.spectrumFunctionCache[instrumentState.unisonVoices] = spectrumFunction;\n        }\n        spectrumFunction(synth, bufferIndex, runLength, tone, instrumentState);\n    }\n    static drumsetSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let drumFunction = Synth.drumFunctionCache[instrumentState.unisonVoices];\n        if (drumFunction == undefined) {\n            let drumSource = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n            drumSource += `\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        let wave = instrumentState.getDrumsetWave(tone.drumsetPitch);\n        const referenceDelta = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch);\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                drumSource += `let phaseDelta# = tone.phaseDeltas[#] / referenceDelta;\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;`;\n            for (let i = 0; i < voiceCount; i++) {\n                drumSource += `let phase# = (tone.phases[#] % 1) * Config.spectrumNoiseLength;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `\n        if (tone.phases[0] == 0.0) {\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phase0 = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta0;\n        `;\n            for (let i = 1; i < voiceCount; i++) {\n                drumSource += `\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {\n                phase# = phase0;\n            }\n        `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `}`;\n            for (let i = 1; i < voiceCount; i++) {\n                drumSource += `\n            if (tone.phases[#] == 0.0 && !(instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phase# = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta#;\n            }\n        `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `const phaseMask = Config.spectrumNoiseLength - 1;\n\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                drumSource += `\n                const phase#Int = phase# | 0;\n                const index# = phase#Int & phaseMask;\n                let noiseSample# = wave[index#]\n                const phase#Ratio = phase# - phase#Int;\n                noiseSample# += (wave[index# + 1] - noiseSample#) * phase#Ratio;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"noiseSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            drumSource += \"let inputSample = \" + sampleList.join(\" + \") + \";\";\n            drumSource += `const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;`;\n            for (let i = 0; i < voiceCount; i++) {\n                drumSource += `phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }`;\n            for (let i = 0; i < voiceCount; i++) {\n                drumSource += `tone.phases[#] = phase# / `.replaceAll(\"#\", i + \"\") + Config.spectrumNoiseLength + `;\n            tone.phaseDeltas[#] = phaseDelta# * referenceDelta;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `tone.expression = expression;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            drumFunction = new Function(\"Config\", \"Synth\", \"InstrumentState\", drumSource)(Config, Synth, InstrumentState);\n            ;\n            Synth.drumFunctionCache[instrumentState.unisonVoices] = drumFunction;\n        }\n        drumFunction(synth, bufferIndex, runLength, tone, instrumentState);\n    }\n    static modSynth(synth, stereoBufferIndex, roundedSamplesPerTick, tone, instrument) {\n        if (!synth.song)\n            return;\n        let mod = Config.modCount - 1 - tone.pitches[0];\n        if (instrument.invalidModulators[mod])\n            return;\n        let setting = instrument.modulators[mod];\n        let usedInstruments = [];\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\n            usedInstruments.push(0);\n        }\n        else {\n            if (instrument.modInstruments[mod] == synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                for (let i = 0; i < synth.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                    usedInstruments.push(i);\n                }\n            }\n            else if (instrument.modInstruments[mod] > synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                if (synth.song.getPattern(instrument.modChannels[mod], synth.bar) != null)\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod], synth.bar).instruments;\n            }\n            else {\n                usedInstruments.push(instrument.modInstruments[mod]);\n            }\n        }\n        for (let instrumentIndex = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n            for (let i = 0; i < synth.heldMods.length; i++) {\n                if (Config.modulators[instrument.modulators[mod]].forSong) {\n                    if (synth.heldMods[i].setting == setting)\n                        synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n                }\n                else if (synth.heldMods[i].channelIndex == instrument.modChannels[mod] && synth.heldMods[i].instrumentIndex == usedInstruments[instrumentIndex] && synth.heldMods[i].setting == setting) {\n                    synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n                }\n            }\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\n                synth.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\n            }\n            else if (setting == Config.modulators.dictionary[\"reset envelope\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                const tgtInstrumentState = synth.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    tgtInstrumentState.envelopeTime[envelopeTarget] = 0;\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\n                synth.wantToSkip = true;\n            }\n            else if (setting == Config.modulators.dictionary[\"song eq\"].index) {\n                const tgtSong = synth.song;\n                let dotTarget = instrument.modFilterTypes[mod] | 0;\n                if (dotTarget == 0) {\n                    let pinIdx = 0;\n                    const currentPart = synth.getTicksIntoBar() / Config.ticksPerPart;\n                    while (tone.note.start + tone.note.pins[pinIdx].time <= currentPart)\n                        pinIdx++;\n                    let lerpEndRatio = ((currentPart - tone.note.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note.pins[pinIdx - 1].time) / (tone.note.pins[pinIdx].time - tone.note.pins[pinIdx - 1].time);\n                    if (tgtSong.eqSubFilters[tone.note.pins[pinIdx - 1].size] != null || tgtSong.eqSubFilters[tone.note.pins[pinIdx].size] != null) {\n                        tgtSong.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtSong.eqSubFilters[tone.note.pins[pinIdx - 1].size], tgtSong.eqSubFilters[tone.note.pins[pinIdx].size], lerpEndRatio);\n                    }\n                    else {\n                        tgtSong.tmpEqFilterEnd = tgtSong.eqFilter;\n                    }\n                }\n                else {\n                    for (let i = 0; i < Config.filterMorphCount; i++) {\n                        if (tgtSong.tmpEqFilterEnd == tgtSong.eqSubFilters[i] && tgtSong.tmpEqFilterEnd != null) {\n                            tgtSong.tmpEqFilterEnd = new FilterSettings();\n                            tgtSong.tmpEqFilterEnd.fromJsonObject(tgtSong.eqSubFilters[i].toJsonObject());\n                        }\n                    }\n                    if (tgtSong.tmpEqFilterEnd == null) {\n                        tgtSong.tmpEqFilterEnd = new FilterSettings();\n                        tgtSong.tmpEqFilterEnd.fromJsonObject(tgtSong.eqFilter.toJsonObject());\n                    }\n                    if (tgtSong.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                        if (dotTarget % 2) {\n                            tgtSong.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                        }\n                        else {\n                            tgtSong.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                        }\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"eq filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                if (!tgtInstrument.eqFilterType) {\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n                    if (dotTarget == 0) {\n                        let pinIdx = 0;\n                        const currentPart = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note.start + tone.note.pins[pinIdx].time <= currentPart)\n                            pinIdx++;\n                        let lerpEndRatio = ((currentPart - tone.note.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note.pins[pinIdx - 1].time) / (tone.note.pins[pinIdx].time - tone.note.pins[pinIdx - 1].time);\n                        if (tgtInstrument.eqSubFilters[tone.note.pins[pinIdx - 1].size] != null || tgtInstrument.eqSubFilters[tone.note.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtInstrument.eqSubFilters[tone.note.pins[pinIdx - 1].size], tgtInstrument.eqSubFilters[tone.note.pins[pinIdx].size], lerpEndRatio);\n                        }\n                        else {\n                            tgtInstrument.tmpEqFilterEnd = tgtInstrument.eqFilter;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpEqFilterEnd == tgtInstrument.eqSubFilters[i] && tgtInstrument.tmpEqFilterEnd != null) {\n                                tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqSubFilters[i].toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpEqFilterEnd == null) {\n                            tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqFilter.toJsonObject());\n                        }\n                        if (tgtInstrument.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) {\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            }\n                            else {\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"note filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                if (!tgtInstrument.noteFilterType) {\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n                    if (dotTarget == 0) {\n                        let pinIdx = 0;\n                        const currentPart = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note.start + tone.note.pins[pinIdx].time <= currentPart)\n                            pinIdx++;\n                        let lerpEndRatio = ((currentPart - tone.note.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note.pins[pinIdx - 1].time) / (tone.note.pins[pinIdx].time - tone.note.pins[pinIdx - 1].time);\n                        if (tgtInstrument.noteSubFilters[tone.note.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note.pins[pinIdx - 1].size], tgtInstrument.noteSubFilters[tone.note.pins[pinIdx].size], lerpEndRatio);\n                        }\n                        else {\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i].toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\n                        }\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) {\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            }\n                            else {\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"individual envelope speed\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                let speed = tone.expression + tone.expressionDelta;\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    if (Number.isInteger(speed)) {\n                        tgtInstrument.envelopes[envelopeTarget].tempEnvelopeSpeed = Config.perEnvelopeSpeedIndices[speed];\n                    }\n                    else {\n                        speed = (1 - (speed % 1)) * Config.perEnvelopeSpeedIndices[Math.floor(speed)] + (speed % 1) * Config.perEnvelopeSpeedIndices[Math.ceil(speed)];\n                        tgtInstrument.envelopes[envelopeTarget].tempEnvelopeSpeed = speed;\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"individual envelope lower bound\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                let bound = tone.expression + tone.expressionDelta;\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    tgtInstrument.envelopes[envelopeTarget].tempEnvelopeLowerBound = bound / 10;\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"individual envelope upper bound\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                let bound = tone.expression + tone.expressionDelta;\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    tgtInstrument.envelopes[envelopeTarget].tempEnvelopeUpperBound = bound / 10;\n                }\n            }\n        }\n    }\n    static findRandomZeroCrossing(wave, waveLength) {\n        let phase = Math.random() * waveLength;\n        const phaseMask = waveLength - 1;\n        let indexPrev = phase & phaseMask;\n        let wavePrev = wave[indexPrev];\n        const stride = 16;\n        for (let attemptsRemaining = 128; attemptsRemaining > 0; attemptsRemaining--) {\n            const indexNext = (indexPrev + stride) & phaseMask;\n            const waveNext = wave[indexNext];\n            if (wavePrev * waveNext <= 0.0) {\n                for (let i = 0; i < stride; i++) {\n                    const innerIndexNext = (indexPrev + 1) & phaseMask;\n                    const innerWaveNext = wave[innerIndexNext];\n                    if (wavePrev * innerWaveNext <= 0.0) {\n                        const slope = innerWaveNext - wavePrev;\n                        phase = indexPrev;\n                        if (Math.abs(slope) > 0.00000001) {\n                            phase += -wavePrev / slope;\n                        }\n                        phase = Math.max(0, phase) % waveLength;\n                        break;\n                    }\n                    else {\n                        indexPrev = innerIndexNext;\n                        wavePrev = innerWaveNext;\n                    }\n                }\n                break;\n            }\n            else {\n                indexPrev = indexNext;\n                wavePrev = waveNext;\n            }\n        }\n        return phase;\n    }\n    static instrumentVolumeToVolumeMult(instrumentVolume) {\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\n    }\n    static volumeMultToInstrumentVolume(volumeMult) {\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\n    }\n    static noteSizeToVolumeMult(size) {\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\n    }\n    static volumeMultToNoteSize(volumeMult) {\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\n    }\n    static fadeInSettingToSeconds(setting) {\n        return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\n    }\n    static secondsToFadeInSetting(seconds) {\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\n    }\n    static fadeOutSettingToTicks(setting) {\n        return Config.fadeOutTicks[setting];\n    }\n    static ticksToFadeOutSetting(ticks) {\n        let lower = Config.fadeOutTicks[0];\n        if (ticks <= lower)\n            return 0;\n        for (let i = 1; i < Config.fadeOutTicks.length; i++) {\n            let upper = Config.fadeOutTicks[i];\n            if (ticks <= upper)\n                return (ticks < (lower + upper) / 2) ? i - 1 : i;\n            lower = upper;\n        }\n        return Config.fadeOutTicks.length - 1;\n    }\n    static detuneToCents(detune) {\n        return detune - Config.detuneCenter;\n    }\n    static centsToDetune(cents) {\n        return cents + Config.detuneCenter;\n    }\n    static getOperatorWave(waveform, pulseWidth) {\n        if (waveform != 2) {\n            return Config.operatorWaves[waveform];\n        }\n        else {\n            return Config.pwmOperatorWaves[pulseWidth];\n        }\n    }\n    getSamplesPerTick() {\n        if (this.song == null)\n            return 0;\n        let beatsPerMinute = this.song.getBeatsPerMinute();\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\n        }\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\n    }\n    getSamplesPerTickSpecificBPM(beatsPerMinute) {\n        const beatsPerSecond = beatsPerMinute / 60.0;\n        const partsPerSecond = Config.partsPerBeat * beatsPerSecond;\n        const tickPerSecond = Config.ticksPerPart * partsPerSecond;\n        return this.samplesPerSecond / tickPerSecond;\n    }\n    static fittingPowerOfTwo(x) {\n        return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\n    }\n    sanitizeFilters(filters) {\n        let reset = false;\n        for (const filter of filters) {\n            const output1 = Math.abs(filter.output1);\n            const output2 = Math.abs(filter.output2);\n            if (!(output1 < 100) || !(output2 < 100)) {\n                reset = true;\n                break;\n            }\n            if (output1 < epsilon)\n                filter.output1 = 0.0;\n            if (output2 < epsilon)\n                filter.output2 = 0.0;\n        }\n        if (reset) {\n            for (const filter of filters) {\n                filter.output1 = 0.0;\n                filter.output2 = 0.0;\n            }\n        }\n    }\n    static sanitizeDelayLine(delayLine, lastIndex, mask) {\n        while (true) {\n            lastIndex--;\n            const index = lastIndex & mask;\n            const sample = Math.abs(delayLine[index]);\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon))\n                break;\n            delayLine[index] = 0.0;\n        }\n    }\n    static applyFilters(sample, input1, input2, filterCount, filters) {\n        for (let i = 0; i < filterCount; i++) {\n            const filter = filters[i];\n            const output1 = filter.output1;\n            const output2 = filter.output2;\n            const a1 = filter.a1;\n            const a2 = filter.a2;\n            const b0 = filter.b0;\n            const b1 = filter.b1;\n            const b2 = filter.b2;\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\n            filter.a1 = a1 + filter.a1Delta;\n            filter.a2 = a2 + filter.a2Delta;\n            if (filter.useMultiplicativeInputCoefficients) {\n                filter.b0 = b0 * filter.b0Delta;\n                filter.b1 = b1 * filter.b1Delta;\n                filter.b2 = b2 * filter.b2Delta;\n            }\n            else {\n                filter.b0 = b0 + filter.b0Delta;\n                filter.b1 = b1 + filter.b1Delta;\n                filter.b2 = b2 + filter.b2Delta;\n            }\n            filter.output2 = output1;\n            filter.output1 = sample;\n            input2 = output2;\n            input1 = output1;\n        }\n        return sample;\n    }\n    computeTicksSinceStart(ofBar = false) {\n        var _a, _b;\n        const beatsPerBar = ((_a = this.song) === null || _a === void 0 ? void 0 : _a.beatsPerBar) ? (_b = this.song) === null || _b === void 0 ? void 0 : _b.beatsPerBar : 8;\n        if (ofBar) {\n            return Config.ticksPerPart * Config.partsPerBeat * beatsPerBar * this.bar;\n        }\n        else {\n            return this.tick + Config.ticksPerPart * (this.part + Config.partsPerBeat * (this.beat + beatsPerBar * this.bar));\n        }\n    }\n}\nSynth.tempFilterStartCoefficients = new FilterCoefficients();\nSynth.tempFilterEndCoefficients = new FilterCoefficients();\nSynth.fmSynthFunctionCache = {};\nSynth.fm6SynthFunctionCache = {};\nSynth.effectsFunctionCache = Array(1 << 7).fill(undefined);\nSynth.pickedStringFunctionCache = Array(3).fill(undefined);\nSynth.spectrumFunctionCache = [];\nSynth.noiseFunctionCache = [];\nSynth.drumFunctionCache = [];\nSynth.chipFunctionCache = [];\nSynth.pulseFunctionCache = [];\nSynth.harmonicsFunctionCache = [];\nSynth.loopableChipFunctionCache = Array(Config.unisonVoicesMax + 1).fill(undefined);\nSynth.fmSourceTemplate = (`\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t`).split(\"\\n\");\nSynth.operatorSourceTemplate = (`\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\n                const operator#Sample   = operator#Wave[operator#Index];\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t`).split(\"\\n\");\nexport { Config };\n//# sourceMappingURL=synth.js.map"],"names":["this"],"mappings":"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G,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE;IACzP,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;IAC7tC,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,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GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;IAChrB,IAAI,EAAE,IAAI,EAAE,wBAAwB,EAAE,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,sBAAsB,CAAC,CAAC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E,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE;IACxP,IAAI,EAAE,IAAI,EAAE,mBAAmB,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,sBAAsB,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;IACnd,IAAI,EAAE,IAAI,EAAE,kBAAkB,EAAE,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAA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AAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IACvD,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IACvD,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;IACvD,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IACvD,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IACvD,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IACvD,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IACvD,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;IACvD,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IACjE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CA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AE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAA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E,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,gBAAgB,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,wBAAwB,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE;IAC3rD,YAAY,EAAE,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,aAAa,EAAE,EAAE,EAAE,cAAc,EAAE,CAAC,EAAE,eAAe,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,iBAAiB,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,YAAY,EAAE,WAAW,EAAE,qBAAqB,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,cAAc,EAAE,EAAE,EAAE,aAAa,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,eAAe,EAAE,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,gBAAgB,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,E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CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IAC9E,wBAAwB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;IAC9E,wBAAwB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9E,wBAAwB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9E,wBAAwB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IAC9E,wBAAwB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IAC9E,wBAAwB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;IAC9E,wBAAwB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9E,wBAAwB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9E,wBAAwB,EAAE,IAAI,EAAE,OAAO,EAAE,OAA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CAAC,CAAC;IACvE,aAAa;IACb,YAAY,IAAI,cAAc,EAAE;IAChC,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,CAAC,CAAC;IACjF,aAAa;IACb,YAAY,IAAI,kBAAkB,EAAE;IACpC,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,CAAC,CAAC;IAClB,aAAa;IACb,YAAY,IAAI,YAAY,EAAE;IAC9B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA,4CAA4C,CAAC,CAAC;IAC9C,aAAa;IACb,YAAY,aAAa,IAAI,CAAC;AAC9B;AACA;AACA,qEAAqE,CAAC,CAAC;IACvE,YAAY,IAAI,WAAW,EAAE;IAC7B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,CAAC,CAAC;IAC5E,aAAa;IACb,YAAY,IAAI,UAAU,EAAE;IAC5B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,CAAC,CAAC;IAC5E,aAAa;IACb,YAAY,IAAI,QAAQ,EAAE;IAC1B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,CAAC,CAAC;IACrE,aAAa;IACb,YAAY,IAAI,UAAU,EAAE;IAC5B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,CAAC,CAAC;IACzE,aAAa;IACb,YAAY,aAAa,IAAI,CAAC;AAC9B;AACA;AACA;AACA,oBAAoB,CAAC,CAAC;IACtB,YAAY,IAAI,YAAY,EAAE;IAC9B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,CAAC,CAAC;IAC9B,gBAAgB,IAAI,MAAM,CAAC,oBAAoB,IAAI,CAAC,EAAE;IACtD,oBAAoB,aAAa,IAAI,CAAC;AACtC;AACA,gCAAgC,CAAC,CAAC;IAClC,iBAAiB;IACjB,qBAAqB,IAAI,MAAM,CAAC,oBAAoB,IAAI,CAAC,EAAE;IAC3D,oBAAoB,aAAa,IAAI,CAAC;AACtC;AACA,gCAAgC,CAAC,CAAC;IAClC,iBAAiB;IACjB,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,CAAC,CAAC;IAC9B,gBAAgB,IAAI,MAAM,CAAC,oBAAoB,IAAI,CAAC,EAAE;IACtD,oBAAoB,aAAa,IAAI,CAAC;AACtC;AACA;AACA,oCAAoC,CAAC,CAAC;IACtC,iBAAiB;IACjB,qBAAqB,IAAI,MAAM,CAAC,oBAAoB,IAAI,CAAC,EAAE;IAC3D,oBAAoB,aAAa,IAAI,CAAC;AACtC;AACA,oCAAoC,CAAC,CAAC;IACtC,iBAAiB;IACjB,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,CAAC,CAAC;IAClB,aAAa;IACb,iBAAiB;IACjB,gBAAgB,aAAa,IAAI,CAAC;AAClC,kEAAkE,CAAC,CAAC;IACpE,aAAa;IACb,YAAY,IAAI,cAAc,EAAE;IAChC,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,CAAC,CAAC;IAC/C,aAAa;IACb,YAAY,IAAI,cAAc,EAAE;IAChC,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,CAAC,CAAC;IACvD,aAAa;IACb,YAAY,IAAI,kBAAkB,EAAE;IACpC,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,CAAC,CAAC;IAClB,aAAa;IACb,YAAY,IAAI,YAAY,EAAE;IAC9B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA,uCAAuC,CAAC,CAAC;IACzC,aAAa;IACb,YAAY,aAAa,IAAI,CAAC;AAC9B;AACA;AACA,2CAA2C,CAAC,CAAC;IAC7C,YAAY,IAAI,WAAW,EAAE;IAC7B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,CAAC,CAAC;IAC7C,aAAa;IACb,iBAAiB;IACjB,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA,0BAA0B,CAAC,CAAC;IAC5B,aAAa;IACb,YAAY,IAAI,UAAU,EAAE;IAC5B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,CAAC,CAAC;IACrD,aAAa;IACb,YAAY,IAAI,QAAQ,EAAE;IAC1B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,CAAC,CAAC;IACtB,aAAa;IACb,YAAY,IAAI,UAAU,EAAE;IAC5B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,CAAC,CAAC;IAC7B,aAAa;IACb,YAAY,aAAa,IAAI,CAAC;AAC9B;AACA;AACA;AACA,iCAAiC,CAAC,CAAC;IACnC,YAAY,IAAI,UAAU,EAAE;IAC5B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA,2CAA2C,CAAC,CAAC;IAC7C,aAAa;IACb,YAAY,aAAa,IAAI,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,CAAC,CAAC;IAChC,YAAY,IAAI,UAAU,EAAE;IAC5B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA,oDAAoD,CAAC,CAAC;IACtD,aAAa;IACb,YAAY,IAAI,YAAY,EAAE;IAC9B,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA,gBAAgB,CAAC,CAAC;IAClB,aAAa;IACb,YAAY,IAAI,cAAc,EAAE;IAChC,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,CAAC,CAAC;IAClE,aAAa;IACb,YAAY,IAAI,cAAc,EAAE;IAChC,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,CAAC,CAAC;IAChE,aAAa;IACb,YAAY,IAAI,kBAAkB,EAAE;IACpC,gBAAgB,aAAa,IAAI,CAAC;AAClC;AACA;AACA;AACA;AACA;A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"}