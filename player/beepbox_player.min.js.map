{"version":3,"names":["_a","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","TypePresets","sampleLoadingState","constructor","statusTable","urlTable","totalSamples","samplesLoaded","SampleLoadedEvent","Event","super","SampleLoadEvents","EventTarget","sampleLoadEvents","startLoadingSample","url","chipWaveIndex","presetSettings","rawLoopOptions","customSampleRate","sampleLoaderAudioContext","AudioContext","sampleRate","closedSampleLoaderAudioContext","chipWave","Config","chipWaves","rawChipWave","rawChipWaves","rawRawChipWave","rawRawChipWaves","fetch","response","ok","arrayBuffer","Error","decodeAudioData","audioBuffer","samples","centerWave","Array","from","getChannelData","integratedSamples","performIntegral","length","dispatchEvent","close","catch","error","alert","loadScript","willReloadForCustomSamples","script","document","createElement","src","head","appendChild","addEventListener","event","loadBuiltInSamples","set","defaultIntegratedSamples","defaultSamples","name","expression","isSampled","isPercussion","extraSampleDetune","startIndex","index","integratedChipWave","dictionary","chipWaveSamples","kicksample","snaresample","pianosample","WOWsample","overdrivesample","trumpetsample","saxophonesample","orchhitsample","detatchedviolinsample","synthsample","sonic3snaresample","comeonsample","choirsample","overdrivensample","flutesample","legatoviolinsample","tremoloviolinsample","amenbreaksample","pizzicatoviolinsample","timallengruntsample","tubasample","loopingcymbalsample","kickdrumsample","snaredrumsample","closedhihatsample","foothihatsample","openhihatsample","crashsample","pianoC4sample","liverpadsample","marimbasample","susdotwavsample","wackyboxttssample","peppersteak1","peppersteak2","vinyl","slapbass","hdeboverdrive","sunsoftbass","masculinechoir","femininechoir","southtololoche","harp","panflute","krumhorn","timpani","crowdhey","warioland4brass","warioland4organ","warioland4daow","warioland4hourchime","warioland4tick","kirbykick","kirbysnare","kirbybongo","kirbyclick","funkkick","funksnare","funksnareleft","funksnareright","funktomhigh","funktomlow","funkhihatclosed","funkhihathalfopen","funkhihatopen","funkhihatopentip","funkhihatfoot","funkcrash","funkcrashtip","funkride","chipWaveIndexOffset","chipWaveSample","chronoperc1finalsample","synthkickfmsample","woodclicksample","acousticsnaresample","catpaintboxsample","gameboypaintboxsample","mariopaintboxsample","drumpaintboxsample","yoshipaintboxsample","starpaintboxsample","fireflowerpaintboxsample","dogpaintbox","oinkpaintbox","swanpaintboxsample","facepaintboxsample","console","log","generateSineWave","wave","Float32Array","sineWaveLength","i","Math","sin","PI","generateTriWave","asin","generateTrapezoidWave","drive","max","min","generateSquareWave","phaseWidth","centerPoint","abs","generateSawWave","inverse","generateQuasiSineWave","round","sum","average","push","centerAndNormalizeWave","magn","magnAvg","cumulative","newWave","getPulseWidthRatio","pulseWidth","pulseWidthRange","getDrumWave","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","ultraboxnewchipnoiserand","pow","clz32","b3","b4","b5","b6","b0","b1","b2","white","lastOut","waveLength","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","highIndex","retroWave","combinedAmplitude","lerped","log2","amplitude","radians","cos","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","effectsIncludeTransition","effects","effectsIncludeChord","effectsIncludePitchShift","effectsIncludeDetune","effectsIncludeVibrato","effectsIncludeNoteFilter","effectsIncludeDistortion","effectsIncludeBitcrusher","effectsIncludePanning","effectsIncludeChorus","effectsIncludeEcho","effectsIncludeReverb","effectsIncludeRingModulation","effectsIncludeGranular","calculateRingModHertz","sliderHz","sliderHzOffset","ringModHzRange","floor","ringModMinHz","ringModMaxHz","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","jsonFormat","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","octaveMin","octaveMax","echoDelayRange","echoDelayStepTicks","echoSustainRange","echoShelfHz","echoShelfGain","reverbShelfHz","reverbShelfGain","reverbRange","reverbDelayBufferSize","reverbDelayBufferMask","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentCountMin","layeredInstrumentCountMax","patternInstrumentCountMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipBaseExpression","fmBaseExpression","noiseBaseExpression","spectrumBaseExpression","drumsetBaseExpression","harmonicsBaseExpression","pwmBaseExpression","supersawBaseExpression","pickedStringBaseExpression","distortionBaseVolume","bitcrusherBaseVolume","granularOutputLoudnessCompensation","raw","newArray","Object","assign","key","rawChipToIntegrated","firstIndexForSamplesInChipWaveList","pitchFilterMult","isSoft","filterFreqStep","filterFreqRange","filterFreqReferenceSetting","filterFreqReferenceHz","filterFreqMaxHz","filterFreqMinHz","filterGainRange","filterGainCenter","filterGainStep","filterMaxPoints","filterTypeNames","filterMorphCount","filterSimpleCutRange","filterSimplePeakRange","fadeInRange","fadeOutTicks","fadeOutNeutral","drumsetFadeOutTicks","transitions","isSeamless","continues","slides","slideTicks","includeAdjacentPatterns","vibratos","type","delayTicks","vibratoTypes","periodsSeconds","period","arpSpeedScale","unisons","voices","spread","offset","sign","effectNames","effectOrder","noteSizeMax","volumeRange","volumeLogScale","panCenter","panMax","panDelaySecondsMax","ringModRange","rmHzOffsetCenter","rmHzOffsetMax","rmHzOffsetMin","granularRange","grainSizeMin","grainSizeMax","grainSizeStep","grainRangeMax","grainAmountsMax","granularEnvelopeType","chorusRange","chorusPeriodSeconds","chorusDelayRange","chorusDelayOffsets","chorusPhaseOffsets","chorusMaxDelay","concat","reduce","x","y","chords","customInterval","arpeggiates","strumParts","singleTone","maxChordSize","operatorCount","maxPitchOrOperatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","algorithms6Op","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","newEnvelopes","feedbacks","indices","feedbacks6Op","spectrumNoiseLength","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","spectrumMax","harmonicsControlPoints","harmonicsRendered","harmonicsRenderedForPickedString","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthStepPower","supersawVoiceCount","supersawDynamismMax","supersawSpreadMax","supersawShapeMax","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","pitchOctaves","modCount","maxPitch","maximumTonesPerChannel","justIntonationSemitones","map","pitchShiftRange","pitchShiftCenter","detuneCenter","detuneMax","detuneMin","songDetuneMin","songDetuneMax","unisonVoicesMin","unisonVoicesMax","unisonSpreadMin","unisonSpreadMax","unisonOffsetMin","unisonOffsetMax","unisonExpressionMin","unisonExpressionMax","unisonSignMin","unisonSignMax","sineWaveMask","sineWave","perEnvelopeSpeedIndices","perEnvelopeSpeedToIndices","perEnvelopeBoundMin","perEnvelopeBoundMax","randomEnvelopeSeedMax","randomEnvelopeStepsMax","pickedStringDispersionCenterFreq","pickedStringDispersionFreqScale","pickedStringDispersionFreqMult","pickedStringShelfHz","distortionRange","stringSustainRange","stringDecayRate","enableAcousticSustain","sustainTypeNames","bitcrusherFreqRange","bitcrusherOctaveStep","bitcrusherQuantizationRange","maxEnvelopeCount","defaultAutomationRange","instrumentAutomationTargets","computeIndex","displayName","interleave","isFilter","maxCount","effect","compatibleInstruments","operatorWaves","pwmOperatorWaves","barEditorHeight","modulators","pianoName","maxRawVol","newNoteVol","forSong","convertRealFactor","associatedEffect","maxIndex","promptName","promptDesc","ceil","invertSliderIndicator","__values","o","s","Symbol","iterator","m","call","TypeError","__read","n","r","ar","__spread","arguments","applyElementArgs","element","args","e_1","e_2","_b","e_3","_c","args_1","args_1_1","arg","Node","createTextNode","isArray","Element","_d","_e","setAttribute","join","warn","tagName","_f","_g","styleKey","style","setProperty","e_3_1","return","removeAttribute","e_2_1","e_1_1","svgNS","HTML","_i","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","_loop_1","name_1","split","_loop_2","name_2","createElementNS","test","snakeCaseName","replace","ColorConfig","resetColors","colorLookup","clear","getArbitaryChannelColor","channel","usesColorFormula","base","noiseChannels","c_noiseLimit","modChannels","c_modLimit","pitchChannels","c_pitchLimit","regex","secondaryChannel","getComputed","exec","primaryChannel","secondaryNote","primaryNote","colorFormulaPitchLimit","c_colorFormulaPitchLimit","colorFormulaNoiseLimit","c_colorFormulaNoiseLimit","colorFormulaModLimit","c_colorFormulaModLimit","c_noiseSecondaryChannelHue","c_noiseSecondaryChannelHueScale","c_noiseChannelCountOverride","c_noiseSecondaryChannelSat","c_noiseSecondaryChannelSatScale","c_noiseSecondaryChannelLum","c_noiseSecondaryChannelLumScale","c_noisePrimaryChannelHue","c_noisePrimaryChannelHueScale","c_noisePrimaryChannelSat","c_noisePrimaryChannelSatScale","c_noisePrimaryChannelLum","c_noisePrimaryChannelLumScale","c_noiseSecondaryNoteHue","c_noiseSecondaryNoteHueScale","c_noiseSecondaryNoteSat","c_noiseSecondaryNoteSatScale","c_noiseSecondaryNoteLum","c_noiseSecondaryNoteLumScale","c_noisePrimaryNoteHue","c_noisePrimaryNoteHueScale","c_noisePrimaryNoteSat","c_noisePrimaryNoteSatScale","c_noisePrimaryNoteLum","c_noisePrimaryNoteLumScale","c_modSecondaryChannelHue","c_modSecondaryChannelHueScale","c_modChannelCountOverride","c_modSecondaryChannelSat","c_modSecondaryChannelSatScale","c_modSecondaryChannelLum","c_modSecondaryChannelLumScale","c_modPrimaryChannelHue","c_modPrimaryChannelHueScale","c_modPrimaryChannelSat","c_modPrimaryChannelSatScale","c_modPrimaryChannelLum","c_modPrimaryChannelLumScale","c_modSecondaryNoteHue","c_modSecondaryNoteHueScale","c_modSecondaryNoteSat","c_modSecondaryNoteSatScale","c_modSecondaryNoteLum","c_modSecondaryNoteLumScale","c_modPrimaryNoteHue","c_modPrimaryNoteHueScale","c_modPrimaryNoteSat","c_modPrimaryNoteSatScale","c_modPrimaryNoteLum","c_modPrimaryNoteLumScale","c_pitchSecondaryChannelHue","c_pitchSecondaryChannelHueScale","c_pitchChannelCountOverride","c_pitchSecondaryChannelSat","c_pitchSecondaryChannelSatScale","c_pitchSecondaryChannelLum","c_pitchSecondaryChannelLumScale","c_pitchPrimaryChannelHue","c_pitchPrimaryChannelHueScale","c_pitchPrimaryChannelSat","c_pitchPrimaryChannelSatScale","c_pitchPrimaryChannelLum","c_pitchPrimaryChannelLumScale","c_pitchSecondaryNoteHue","c_pitchSecondaryNoteHueScale","c_pitchSecondaryNoteSat","c_pitchSecondaryNoteSatScale","c_pitchSecondaryNoteLum","c_pitchSecondaryNoteLumScale","c_pitchPrimaryNoteHue","c_pitchPrimaryNoteHueScale","c_pitchPrimaryNoteSat","c_pitchPrimaryNoteSatScale","c_pitchPrimaryNoteLum","c_pitchPrimaryNoteLumScale","getComputedChannelColor","song","getChannelColor","has","get","pitchChannelCount","newChannelColors","noiseChannelCount","setTheme","theme","themes","undefined","defaultTheme","_styleElement","textContent","valuesToAdd","getComputedStyle","getPropertyValue","themeColor","querySelector","trim","c_invertedText","c_trackEditorBgNoiseDim","c_trackEditorBgNoise","c_trackEditorBgModDim","c_trackEditorBgMod","c_trackEditorBgPitchDim","c_trackEditorBgPitch","Map","forest","canyon","midnight","beachcombing","roe","moonlight","autumn","fruit","sunset","toxic","portal","fusion","nebula","energized","neapolitan","poly","greyscale","blutonium","slushie","zefbox","harrybox","brucebox","nerdbox","nepbox","fogbox","foxbox","wackybox","microbox","paandorasbox","midbox","dogebox2","slarmoosbox","voxonium","axobox","custom","localStorage","getItem","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","whitePianoKeyText","blackPianoKeyText","useColorFormula","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","disabledNotePrimary","disabledNoteSecondary","navigator","userAgent","EditorConfig","valueToPreset","presetValue","categoryIndex","presetIndex","presetCategories","presets","midiProgramToPresetValue","program","category","preset","generalMidi","midiProgram","nameToPresetValue","presetName","instrumentToPreset","instrument","factor","countBits","isPowerOf2","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","version","versionDisplayName","releaseNotesURL","isOnMac","platform","ctrlSymbol","ctrlName","customType","settings","eqFilter","transition","fadeInSeconds","chord","unison","cutoffHz","linearGain","vibrato","isNoise","filterCutoffHz","filterResonance","filterEnvelope","reverb","dynamism","shape","algorithm","feedbackType","feedbackAmplitude","operators","frequency","target","envelope","eqFilterType","eqSimpleCut","eqSimplePeak","envelopeSpeed","discreteEnvelope","panDelay","waveform","customChipWave","noteFilter","harmonics","stringSustain","stringSustainType","feedbackEnvelope","volume","fastTwoNoteArp","arpeggioSpeed","noteFilterType","noteSimpleCut","noteSimplePeak","pitchEnvelopeStart","pitchEnvelopeEnd","perEnvelopeSpeed","perEnvelopeLowerBound","perEnvelopeUpperBound","isDrum","midiSubharmonicOctaves","interval","bitcrusherOctave","bitcrusherQuantization","distortion","vibratoDepth","vibratoDelay","vibratoSpeed","vibratoType","chorus","eqSubFilters0","noteSubFilters0","spectrum","pulseEnvelope","noteSubFilters1","eqSubFilters1","drums","pitchShiftSemitones","clicklessTransition","echoSustain","echoDelayBeats","pan","customChipWaveIntegral","detuneCents","aliases","eqSubFilters4","noteSubFilters2","noteSubFilters4","pitchEnvelopeInverse","decimalOffset","pitchEnvelopeStart0","pitchEnvelopeEnd0","envelopeInverse0","pitchEnvelopeStart1","pitchEnvelopeEnd1","envelopeInverse1","pitchEnvelopeStart2","pitchEnvelopeEnd2","envelopeInverse2","eqSubFilters2","eqSubFilters3","isUsingAdvancedLoopControls","chipWaveLoopStart","chipWaveLoopEnd","chipWaveLoopMode","chipWavePlayBackwards","chipWaveStartOffset","customAlgorithm","mods","steps","seed","granular","grainSize","grainAmounts","grainRange","discrete","unisonVoices","unisonSpread","unisonOffset","unisonExpression","unisonSign","monoChordTone","ringMod","ringModHz","ringModWaveformIndex","Deque","_capacity","_buffer","_mask","_offset","_count","pushFront","_expandCapacity","pushBack","popFront","popBack","peakFront","peakBack","count","remove","oldBuffer","size","events","activeEvents","listeners","raise","eventType","eventData","extraEventData","pop","listen","callback","unlisten","lisen","indexOf","splice","unlistenAll","FilterCoefficients","a","b","order","linearGain0thOrder","lowPass1stOrderButterworth","cornerRadiansPerSample","g","tan","a0","lowPass1stOrderSimplified","highPass1stOrderButterworth","highShelf1stOrder","shelfLinearGain","sqrtGain","allPass1stOrderInvertPhaseAbove","allPass1stOrderFractionalDelay","delay","lowPass2ndOrderButterworth","peakLinearGain","alpha","lowPass2ndOrderSimplified","feedback","highPass2ndOrderButterworth","highShelf2ndOrder","slope","A","Aplus","Aminus","sqrtA2Alpha","peak2ndOrder","bandWidthScale","bandWidth","FrequencyResponse","real","imag","denom","analyze","filter","radiansPerSample","analyzeComplex","realZ1","imagZ1","realNum","imagNum","realDenom","imagDenom","realZ","imagZ","imagTemp","magnitude","angle","atan2","DynamicBiquadFilter","a1","a2","a1Delta","a2Delta","b0Delta","b1Delta","b2Delta","output1","output2","useMultiplicativeInputCoefficients","resetOutput","loadCoefficientsWithGradient","start","end","deltaRate","warpInfinityToNyquist","atan","PRIME32_1","PRIME32_2","PRIME32_3","PRIME32_4","PRIME32_5","encoder","xxHash32","input","buffer","TextEncoder","encode","acc","accN","limit","lane","laneN0","laneN1","laneNP","acc0","acc1","epsilon","clamp","val","validateRange","parseFloatWithDefault","defaultValue","parseFloat","Number","isNaN","parseIntWithDefault","parseInt","encode32BitNumber","base64IntToCharCode","decode32BitNumber","compressed","charIndex","base64CharCodeToInt","charCodeAt","encodeUnisonSettings","v","cleanS","cleanSDivided","cleanO","cleanODivided","cleanE","cleanI","convertLegacyKeyToKeyAndOctave","rawKeyIndex","octave","BitFieldReader","source","_bits","_readIndex","read","readLongTail","minValue","minBits","numBits","readPartDuration","readLegacyPartDuration","readPinCount","readPitchInterval","BitFieldWriter","_index","write","writeLongTail","writePartDuration","writePinCount","writePitchInterval","other","encodeBase64","lengthBase64","makeNotePin","time","Note","pitch","fadeout","pitches","pins","continuesLastPattern","pickMainInterval","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestSize","pin","clone","newNote","getEndPinIndex","part","endPinIndex","Pattern","notes","instruments","cloneNotes","note","reset","toJsonObject","isModChannel","noteArray","mod","volumeCap","getVolumeCapForSetting","modFilterTypes","pointArray","useVol","tick","rhythm","pitchBend","forMod","noteObject","points","patternObject","patternInstruments","fromJsonObject","importedPartsPerBeat","isNoiseChannel","format","toLowerCase","instrumentCount","getMaxInstrumentsPerPatternForChannel","maxNoteCount","beatsPerBar","k","startInterval","pointObject","lowestPitch","highestPitch","oldMin","newMin","old","Operator","copy","CustomAlgorithm","fromPreset","carriers","modulation","CustomFeedBack","inIndices","SpectrumWave","hash","isHarmonic","markCustomWaveDirty","hashMult","Synth","fittingPowerOfTwo","point","SpectrumWaveState","_hash","getCustomWave","lowestOctave","pitchTweak","controlPointToOctave","value1","value2","octave1","octave2","HarmonicsWave","HarmonicsWaveState","instrumentType","_generatedForType","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","performIntegralOld","Grain","delayLinePosition","ageInSamples","maxAgeInSamples","parabolicEnvelopeAmplitude","parabolicEnvelopeSlope","parabolicEnvelopeCurve","rcbEnvelopeAmplitude","rcbEnvelopeAttackIndex","rcbEnvelopeReleaseIndex","rcbEnvelopeSustain","initializeParabolicEnvelope","durationInSamples","invDuration","invDurationSquared","updateParabolicEnvelope","initializeRCBEnvelope","updateRCBEnvelope","addDelay","FilterControlPoint","freq","gain","freqSetting","gainSetting","getHz","getHzFromSettingValue","getSettingValueFromHz","hz","getRoundedSettingValueFromHz","getLinearGain","peakMult","power","neutral","interpolatedPower","getRoundedSettingValueFromLinearGain","toCoefficients","freqMult","getVolumeCompensationMult","gainPow","freqRelativeTo8khz","warpedFreq","warpedOctave","distanceFromCenter","freqLoudness","FilterSettings","controlPoints","controlPointCount","addPoint","controlPoint","filterArray","filterObject","filtersCanMorph","filterA","filterB","lerpFilters","pos","lerpedFilter","convertLegacySettings","legacyCutoffSetting","legacyResonanceSetting","legacyEnv","legacyFilterMaxRadians","legacyFilterMax","resonant","firstOrder","cutoffAtMax","legacyFilterCutoffRange","envDecays","standardSampleRate","legacyHz","legacyRadians","extraOctaves","targetRadians","curvedHz","finalHz","finalRadians","legacyFilter","legacyFilterGainAtNewRadians","logGain","convertedGain","intendedGain","invertedGain","curvedRadians","legacyFilterGain","convertLegacySettingsForSynth","allowFirstOrder","EnvelopeSettings","isNoiseEnvelope","tempEnvelopeSpeed","tempEnvelopeLowerBound","tempEnvelopeUpperBound","envelopeObject","isTremolo2","Boolean","Instrument","chipNoise","eqFilterSimpleCut","eqFilterSimplePeak","noteFilterSimpleCut","noteFilterSimplePeak","eqSubFilters","noteSubFilters","fadeIn","fadeOut","envelopeCount","pitchShift","detune","legacyTieOver","supersawDynamism","supersawSpread","supersawShape","bitcrusherFreq","ringModulation","ringModulationHz","ringModPulseWidth","ringModHzOffset","echoDelay","algorithm6Op","feedbackType6Op","customFeedbackType","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modInstruments","modEnvelopeNumbers","invalidModulators","isNoiseInstrument","spectrumWave","wavePrev","setTypeAndReset","legacySettings","forceSimpleFilter","filterCutoff","legacyFilterEnv","legacyPulseEnv","legacyOperatorEnvelopes","operatorEnvelopes","legacyFeedbackEnv","noCarriersControlledByNoteSize","allCarriersControlledByNoteSize","noteSizeControlsSomethingElse","addEnvelope","instrumentObject","getChord","detuneToCents","fadeInSettingToSeconds","fadeOutSettingToTicks","getDrumsetEnvelope","operatorArray","operator","customFeedback","Float64Array","useSlowerRhythm","legacyGlobalReverb","legacyEffectsNames","transitionProperty","binary","seamless","sudden","hard","smooth","soft","slide","secondsToFadeInSetting","ticksToFadeOutSetting","chordProperty","legacyChordNames","harmony","unisonProperty","legacyChorusNames","union","fifths","octaves","potentialPitchShift","centsToDetune","vibratoProperty","legacyVibratoNames","findIndex","legacyEnvelopeNames","steady","getEnvelope","drum","legacyWaveNames","triangle","square","sawtooth","spiky","plateau","modboxWaveNames","sax","guitar","viola","brass","lyre","piccolo","squaretooth","flatline","sandboxWaveNames","euphonium","recorder","contrabass","zefboxWaveNames","squaretal","sawtal","pulse","miscWaveNames","test1","intense","paandorasboxWaveNames","kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","synth","sonic3snare","choir","overdriveguitar","flute","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","marimba","susdotwav","wackyboxtts","rawName","table","potentialChipWaveIndex","feedback6Op","synthboxLegacyFeedbacks","synthboxFeedbackType","operatorObject","filterCutoffMaxHz","filterCutoffRange","filterResonanceRange","LN2","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","envelopeArray","tempEnvelope","envelopeInverse","getLargestControlPointCount","forNoteFilter","largest","frequencyFromPitch","makeEmpty","supportsEnvelopeTarget","envelopeSettings","automationTarget","useControlPointCount","clearInvalidEnvelopeTargets","envelopeIndex","getTransition","getFadeInSeconds","getFadeOutTicks","Channel","patterns","bars","muted","Song","string","scaleCustom","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","getNewNoteVolume","isMod","modChannel","modInstrument","vol","currentIndex","tempoIndex","tempo","chorusIndex","reverbIndex","panningIndex","panDelayIndex","distortionIndex","detuneIndex","vibratoDepthIndex","vibratoSpeedIndex","vibratoDelayIndex","arpSpeedIndex","bitCrushIndex","freqCrushIndex","echoIndex","echoDelayIndex","pitchShiftIndex","ringModIndex","ringModHertzIndex","granularIndex","grainAmountIndex","grainSizeIndex","grainRangeIndex","envSpeedIndex","perEnvSpeedIndex","perEnvLowerIndex","perEnvUpperIndex","instrumentIndex","getVolumeCap","modulator","cap","modSetting","filterType","fromBase64String","initToDefault","getChannelCount","modChannelCount","getMaxInstrumentsPerChannel","layeredInstruments","getMaxInstrumentsPerPattern","channelIndex","getChannelIsNoise","getChannelIsMod","andResetChannels","scale","loopStart","loopLength","barCount","patternsPerChannel","title","pattern","bar","toBase64String","bits","_variant","_latestSlarmoosBoxVersion","encodedSongTitle","encodeURIComponent","usingSubFilterBitfield","encodedChannelName","harmonicsBits","encodedLoopMode","encodedReleaseMode","spectrumBits","checkboxValues","neededBits","shapeBits","bitsPerNoteSize","getNeededBits","maxInstrumentsPerPattern","neededInstrumentCountBits","neededInstrumentIndexBits","neededModInstrumentIndexBits","modFilter","modEnvelope","status","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","shapeIndex","unshift","allPitches","pitchIndex","pitchIter","stringLength","digits","prototype","maxApplyArgs","customSamplesStr","customSamples","slice","_envelopeFromLegacyIndex","legacyIndex","_clearSamples","JSON","parse","substring","variantTest","fromBeepBox","fromJummBox","fromGoldBox","fromUltraBox","fromSlarmoosBox","_latestBeepboxVersion","_oldestBeepboxVersion","_latestJummBoxVersion","_oldestJummBoxVersion","_latestGoldBoxVersion","_oldestGoldBoxVersion","_latestUltraBoxVersion","_oldestUltraBoxVersion","_oldestSlarmoosBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","beforeNine","willLoadLegacySamplesForOldSongs","compressed_array","replaceAll","shift","_restoreChipWaveListToDefault","willLoadLegacySamples","willLoadNintariboxSamples","willLoadMarioPaintboxSamples","customSampleUrls","customSamplePresets","parseOldSyntax","_parseAndConfigureCustomSample","customSamplePresetsMap","legacySettingsCache","command","instrumentChannelIterator","instrumentIndexIterator","useSlowerArpSpeed","songNameLength","decodeURIComponent","channelCount","instrumentsPerChannel","instrumentsFlagBits","rhythmMap","newRhythm","legacyWaves","chipWaveReal","chipWaveCounter","typeCheck","originalControlPointCount","originalSubfilterControlPointCount","sampleLoopInfoEncodedLength","sampleLoopInfoEncoded","sampleLoopInfo","atob","entry","info","URL","pregoldToEnvelope","aa","sustainValue","legacyEffects","legacyEnvelopes","originalValue","unisonLength","unisonSpreadNegative","unisonOffsetNegative","unisonExpressionNegative","unisonSignNegative","nextValue","restoreLimiterDefaults","channelNameLength","carrierCountTemp","tempModArray","chipWaveForCompat","freqToGold3","freqToUltraBox","jummToUltraEnvelope","slarURL3toURL4Envelope","envelopeDiscrete","updatedEnvelopes","pitchEnvelopeCompact","instrumentPitchEnvelopeStart","instrumentPitchEnvelopeEnd","instrumentEnvelopeInverse","pre3To3g","jummToG","byteCount","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","songReverbChannel","songReverbInstrument","songReverbIndex","shouldCorrectTempoMods","jummboxTempoMin","jumfive","detuneScaleNotes","newPattern","newNotes","noteCount","useOldShape","pinCount","initialSize","bendCount","pinObj","intervalIter","noteIsForTempoMod","tempoOffset","isBackwards","restLength","patternIndex","lowestPart","chn","window","location","setTimeout","reload","_isProperUrl","customSampleUrlIndex","urlSliced","isCustomPercussive","customRootKey","presetIsUsingAdvancedLoopControls","presetChipWaveLoopStart","presetChipWaveLoopEnd","presetChipWaveStartOffset","presetChipWaveLoopMode","presetChipWavePlayBackwards","parsedSampleOptions","optionsStartIndex","optionsEndIndex","rawOptions","rawOption","optionCode","charAt","optionData","parsedUrl","sliceForSampleRate","sliceForRootKey","urlWithNamedOptions","namedOptions","pathname","isCustomSampled","rootKey","customSamplePresetSettings","customSamplePreset","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","patternArray","sequenceArray","l","channelObject","sequence","_format","customScale","keyOctave","introBars","loopBars","ticksPerBeat","beatsPerMinute","songEq","jsonObject","shouldLoadLegacySamples","instrumentObjects","waveName","names","oldNames","veryOldNames","includes","oldScaleNames","enigma","scaleName","letter","toUpperCase","symbol","C","D","E","F","G","B","maxInstruments","maxPatterns","maxBars","newPitchChannels","newNoiseChannels","newModChannels","getPattern","getBeatsPerMinute","maxValue","PickedString","delayLine","allPassG","allPassGDelta","sustainFilterA1","sustainFilterA1Delta","sustainFilterA2","sustainFilterA2Delta","sustainFilterB0","sustainFilterB0Delta","sustainFilterB1","sustainFilterB1Delta","sustainFilterB2","sustainFilterB2Delta","delayIndex","allPassSample","allPassPrevInput","sustainFilterSample","sustainFilterPrevOutput2","sustainFilterPrevInput1","sustainFilterPrevInput2","fractionalDelaySample","prevDelayLength","delayResetOffset","update","instrumentState","tone","stringIndex","roundedSamplesPerTick","stringDecayStart","stringDecayEnd","sustainType","allPassCenter","samplesPerSecond","phaseDeltaStart","phaseDeltas","phaseDeltaScale","phaseDeltaScales","phaseDeltaEnd","radiansPerSampleStart","radiansPerSampleEnd","centerHarmonicStart","centerHarmonicEnd","allPassRadiansStart","allPassRadiansEnd","shelfRadians","decayCurveStart","decayCurveEnd","register","registerShelfCenter","registerLowpassCenter","decayRateStart","decayRateEnd","expressionDecayStart","expressionDecayEnd","tempFilterStartCoefficients","tempFrequencyResponse","allPassGStart","allPassPhaseDelayStart","tempFilterEndCoefficients","allPassGEnd","allPassPhaseDelayEnd","brightnessType","shelfGainStart","shelfGainEnd","cornerHardness","lowpass1stOrderCutoffRadiansStart","lowpass1stOrderCutoffRadiansEnd","lowpass2ndOrderCutoffRadiansStart","lowpass2ndOrderCutoffRadiansEnd","lowpass2ndOrderGainStart","lowpass2ndOrderGainEnd","sustainFilterA1Start","sustainFilterA2Start","sustainFilterB0Start","sustainFilterB1Start","sustainFilterB2Start","sustainFilterPhaseDelayStart","sustainFilterA1End","sustainFilterA2End","sustainFilterB0End","sustainFilterB1End","sustainFilterB2End","sustainFilterPhaseDelayEnd","periodLengthStart","periodLengthEnd","minBufferLength","delayLength","delayLengthEnd","delayLengthDelta","pitchChanged","reinitializeImpulse","likelyMaximumLength","newDelayLine","oldDelayBufferMask","startCopyingFromIndex","delayBufferMask","startImpulseFrom","startZerosFrom","stopZerosAt","impulseWave","impulseWaveLength","impulsePhaseDelta","fadeDuration","startImpulseFromSample","stopImpulseAt","stopImpulseAtSample","impulsePhase","prevWaveIntegral","impulsePhaseInt","nextWaveIntegral","phaseRatio","sample","combinedFade","curvedFade","EnvelopeComputer","noteSecondsStart","noteSecondsStartUnscaled","noteSecondsEnd","noteSecondsEndUnscaled","noteTicksStart","noteTicksEnd","noteSizeStart","noteSizeEnd","prevNoteSize","nextNoteSize","_noteSizeFinal","prevNoteSecondsStart","prevNoteSecondsStartUnscaled","prevNoteSecondsEnd","prevNoteSecondsEndUnscaled","prevNoteTicksStart","prevNoteTicksEnd","_prevNoteSizeFinal","tickTimeEnd","drumsetFilterEnvelopeStart","drumsetFilterEnvelopeEnd","prevSlideStart","prevSlideEnd","nextSlideStart","nextSlideEnd","prevSlideRatioStart","prevSlideRatioEnd","nextSlideRatioStart","nextSlideRatioEnd","startPinTickAbsolute","startPinTickDefaultPitch","startPinTickPitch","envelopeStarts","envelopeEnds","_modifiedEnvelopeIndices","_modifiedEnvelopeCount","lowpassCutoffDecayVolumeCompensation","computeEnvelopes","currentPart","tickTimeStart","tickTimeStartReal","secondsPerTick","timeScale","secondsPerTickUnscaled","atNoteStart","forceContinueAtStart","tickTimeEndReal","beatsPerTick","beatTimeStart","beatTimeEnd","passedEndOfNote","startPin","endPin","startPinTick","computeTicksSinceStart","getPitchValue","endPinTick","ratioStart","ratioEnd","noteStartTick","noteStartPart","noteEndTick","noteEndPart","maximumSlideTicks","prevNote","nextNote","forceContinueAtEnd","usedNoteSize","targetIndex","isDiscrete","globalEnvelopeSpeed","timeSinceStart","defaultPitch","isModActive","secondsPerTickScaled","computePitchEnvelope","envelopeStart","computeEnvelope","envelopeEnd","filterSettings","tmpNoteFilterStart","getLowpassCutoffDecayVolumeCompensation","clearEnvelopes","unspedTime","beats","noteSize","isDrumset","notePinStart","boundAdjust","noteSizeToVolumeMult","hashMax","timeHash","pitchHash","noteHash","weightedAverage","trap","saw","tri","attack","lin","calculateBends","monophonic","arpTime","tonePitch","lastInterval","startNote","endNote","envelopeLowerBound","envelopeUpperBound","range","computeDrumsetEnvelopes","drumsetFilterEnvelope","beatsPerPart","partTimeStart","partTimeEnd","computeDrumsetEnvelope","Tone","fill","chordSize","drumsetPitch","prevNotePitchIndex","nextNotePitchIndex","freshlyAllocated","isOnLastTick","ticksSinceReleased","liveInputSamplesHeld","stringSustainStart","stringSustainEnd","noiseSamples","phases","directions","chipWaveCompletions","chipWavePrevWaves","chipWaveCompletionsLastWave","expressionDelta","operatorExpressions","operatorExpressionDeltas","prevPitchExpressions","prevVibrato","prevStringDecay","pulseWidthDelta","supersawDynamismDelta","supersawUnisonDetunes","supersawShapeDelta","supersawDelayLength","supersawDelayLengthDelta","supersawDelayLine","supersawDelayIndex","supersawPrevPhaseDelta","pickedStrings","noteFilters","noteFilterCount","initialNoteFilterInput1","initialNoteFilterInput2","specialIntervalExpressionMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","envelopeComputer","pickedString","InstrumentState","awake","computed","tonesAddedInThisTick","flushingDelayLines","deactivateAfterThisTick","attentuationProgress","flushedSamples","activeTones","activeModTones","releasedTones","liveInputTones","synthesizer","noisePitchFilterMult","volumeScale","vibratoTime","nextVibratoTime","envelopeTime","eqFilterVolume","eqFilterVolumeDelta","mixVolume","mixVolumeDelta","delayInputMult","delayInputMultDelta","granularMix","granularMixDelta","granularDelayLine","granularDelayLineIndex","granularMaximumDelayTimeInSeconds","usesRandomGrainLocation","granularDelayLineDirty","computeGrains","ringModMix","ringModMixDelta","ringModPhase","ringModPhaseDelta","ringModPhaseDeltaScale","ringModMixFade","ringModMixFadeDelta","distortionDelta","distortionDrive","distortionDriveDelta","distortionFractionalInput1","distortionFractionalInput2","distortionFractionalInput3","distortionPrevInput","distortionNextOutput","bitcrusherPrevInput","bitcrusherCurrentOutput","bitcrusherPhase","bitcrusherPhaseDelta","bitcrusherPhaseDeltaScale","bitcrusherScale","bitcrusherScaleScale","bitcrusherFoldLevel","bitcrusherFoldLevelScale","eqFilters","eqFilterCount","initialEqFilterInput1","initialEqFilterInput2","panningDelayLine","panningDelayPos","panningVolumeL","panningVolumeR","panningVolumeDeltaL","panningVolumeDeltaR","panningOffsetL","panningOffsetR","panningOffsetDeltaL","panningOffsetDeltaR","chorusDelayLineL","chorusDelayLineR","chorusDelayLineDirty","chorusDelayPos","chorusPhase","chorusVoiceMult","chorusVoiceMultDelta","chorusCombinedMult","chorusCombinedMultDelta","echoDelayLineL","echoDelayLineR","echoDelayLineDirty","echoDelayPos","echoDelayOffsetStart","echoDelayOffsetEnd","echoDelayOffsetRatio","echoDelayOffsetRatioDelta","echoMult","echoMultDelta","echoShelfA1","echoShelfB0","echoShelfB1","echoShelfSampleL","echoShelfSampleR","echoShelfPrevInputL","echoShelfPrevInputR","reverbDelayLine","reverbDelayLineDirty","reverbDelayPos","reverbMult","reverbMultDelta","reverbShelfA1","reverbShelfB0","reverbShelfB1","reverbShelfSample0","reverbShelfSample1","reverbShelfSample2","reverbShelfSample3","reverbShelfPrevInput0","reverbShelfPrevInput1","reverbShelfPrevInput2","reverbShelfPrevInput3","granularGrains","granularMaximumGrains","granularGrainsLength","allocateNecessaryBuffers","samplesPerTick","panningDelayBufferSize","chorusDelayBufferSize","allocateEchoBuffers","granularDelayLineSizeInSeconds","granularDelayLineSizeInSamples","oldGrainsLength","safeEchoDelaySteps","safeEchoDelayBufferSize","newDelayLineL","newDelayLineR","oldMask","deactivate","resetAllEffects","compute","getInstrumentSynthFunction","updateWaves","getTicksIntoBar","getCurrentPart","envelopeSpeeds","useEnvelopeSpeed","getModValue","isInteger","usesGranular","usesRingModulation","usesDistortion","usesBitcrusher","usesPanning","usesChorus","usesEcho","usesReverb","granularChance","granularMixEnd","iterations","granularMinGrainSizeInMilliseconds","granularGrainSizeInSeconds","granularGrainSizeInSamples","granularDelayLineLength","grainIndex","grain","minDelayTimeInSeconds","maxDelayTimeInSeconds","useDistortionStart","useDistortionEnd","distortionSliderStart","distortionSliderEnd","distortionStart","distortionEnd","distortionDriveStart","distortionDriveEnd","freqSettingStart","freqSettingEnd","quantizationSettingStart","quantizationSettingEnd","freqStart","freqEnd","scaleStart","scaleEnd","foldLevelStart","foldLevelEnd","eqFilterSettingsStart","eqFilterSettingsEnd","startPoint","startSimpleFreq","startSimpleGain","endSimpleFreq","endSimpleGain","filterChanges","endPoint","eqFilterSettings","tmpEqFilterStart","tmpEqFilterEnd","mainInstrumentVolume","instrumentVolumeToVolumeMult","mixVolumeEnd","startVal","endVal","eqFilterVolumeStart","eqFilterVolumeEnd","delayInputMultStart","delayInputMultEnd","panEnvelopeStart","panEnvelopeEnd","usePanStart","usePanEnd","panStart","panEnd","volumeStartL","volumeStartR","volumeEndL","volumeEndR","maxDelaySamples","usePanDelayStart","usePanDelayEnd","delayStart","delayEnd","delayStartL","delayStartR","delayEndL","delayEndR","chorusEnvelopeStart","chorusEnvelopeEnd","useChorusStart","useChorusEnd","chorusStart","chorusEnd","chorusCombinedMultStart","chorusCombinedMultEnd","useRingModStart","useRingModEnd","useRingModEnvelopeStart","useRingModEnvelopeEnd","useRingModHzStart","useRingModHzEnd","useRingModHzEnvelopeStart","useRingModHzEnvelopeEnd","ringModStart","ringModEnd","ringModPhaseDeltaStart","ringModPhaseDeltaEnd","maxEchoMult","averageEchoDelaySeconds","echoSustainEnvelopeStart","echoSustainEnvelopeEnd","useEchoSustainStart","useEchoSustainEnd","echoMultStart","echoMultEnd","echoDelayEnvelopeStart","echoDelayEnvelopeEnd","useEchoDelayStart","useEchoDelayEnd","tmpEchoDelayOffsetStart","tmpEchoDelayOffsetEnd","maxReverbMult","reverbEnvelopeStart","reverbEnvelopeEnd","useReverbStart","useReverbEnd","reverbStart","reverbEnd","totalDelaySamples","attenuationThreshold","halfLifeMult","delayDuration","attenuationPerSecond","averageMult","averageReverbDelaySeconds","progressInTick","progressAtEndOfTick","_drumsetIndexToSpectrumOctave","getDrumsetWave","drumsetIndexReferenceDelta","ChannelState","singleSeamlessInstrument","syncSongState","channelState","initModFilters","tmpNoteFilterEnd","warmUpSynthesizer","getSamplesPerTick","dummyArray","isPlayingSong","synthesize","computeLatestModValues","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","heldMods","beat","currentBar","instrumentIdx","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","songFilterParam","tgtSong","setModValue","usedInstruments","tgtPattern","eqFilterParam","noteFilterParam","modulatorAdjust","tgtInstrument","determineInvalidModulators","tgtInstrumentList","str","operatorAmplitudeCurve","playing","recording","isRecording","playheadInternal","remainder","tickSampleCountdown","isAtStartOfTick","prevBar","getSamplesPerBar","getTotalSamples","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","ended","foundMod","find","sort","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getTotalBars","useLoopCount","loopRepeatCount","preferLowerLatency","anticipatePoorPerformance","liveInputDuration","liveBassInputDuration","liveInputStarted","liveBassInputStarted","liveInputPitches","liveBassInputPitches","liveInputChannel","liveBassInputChannel","liveInputInstruments","liveBassInputInstruments","oscRefreshEventTimer","oscEnabled","enableMetronome","countInMetronome","renderingSong","wantToSkip","nextBar","isAtEndOfTick","liveInputEndTime","browserAutomaticallyClearsAudioBuffer","tempDrumSetControlPoint","loopBarStart","loopBarEnd","tonePool","tempMatchedPitchTones","startedMetronome","metronomeSamplesRemaining","metronomeAmplitude","metronomePrevAmplitude","metronomeFilter","songEqFilterVolume","songEqFilterVolumeDelta","songEqFiltersL","songEqFiltersR","songEqFilterCount","initialSongEqFilterInput1L","initialSongEqFilterInput2L","initialSongEqFilterInput1R","initialSongEqFilterInput2R","tempMonoInstrumentSampleBuffer","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","outputDataR","performance","now","deactivateAudio","computeDelayBufferSizes","setSong","panningDelayBufferMask","chorusDelayBufferMask","activateAudio","bufferSize","latencyHint","webkitAudioContext","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","maintainLiveInput","play","pause","startRecording","resetEffects","freeAllTones","volumeStart","volumeEnd","setting","nextVal","isAnyModActive","unsetMod","isFilterModActive","channelIdx","forceHoldMods","found","holdFor","snapToStart","snapToBar","goToBar","jumpIntoLoop","oldBar","goToNextBar","goToPrevBar","getNextBar","skipBar","computeSongState","outputBufferLength","playSong","outputDataLUnfiltered","outputDataRUnfiltered","skippedBars","firstSkippedBufferIndex","bufferIndex","samplesLeftInBuffer","samplesLeftInTick","runLength","runEnd","determineCurrentActiveTones","playModTone","barVisited","determineLiveInputTones","tonesPlayedInThisInstrument","freeReleasedTone","shouldFadeOutFast","computeTone","playTone","effectsSynth","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","useVibratoSpeed","midBeat","periods","samplesPerPeriod","tempAmplitude","filtersL","filtersR","filterCount","initialFilterInput1L","initialFilterInput2L","initialFilterInput1R","initialFilterInput2R","applyFilters","inputSampleL","sampleL","inputSampleR","sampleR","sanitizeFilters","absL","absR","limitRange","limitTarget","limitedVolume","arpEnvelopeStart","useArpeggioSpeed","maxInstrumentsPerChannel","isFinite","freeTone","newTone","releaseTone","toneIndex","bassPitches","toneList","toneCount","moveTonesIntoOrderedTempMatchedList","clearTempMatchedPitchTones","adjacentPatternHasCompatibleInstrumentTransition","otherPattern","otherNote","forceContinue","otherInstrument","otherTransition","adjacentNotesHaveMatchingPitches","firstNote","secondNote","firstNoteInterval","notePitches","currentTick","prevNotes","nextNotes","fillCount","modToneCount","newInstrumentIndex","sourceInstrumentState","destInstrumentState","prevNoteForThisInstrument","nextNoteForThisInstrument","oldTone","partsPerBar","tonesInPrevNote","tonesInNextNote","prevPattern","lastNote","patternForcesContinueAtStart","chordOfCompatibleInstrument","nextPattern","nextPatternForcesContinueAtStart","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","modSynth","computeChordExpression","chordExpression","intervalScale","secondsPerPart","sampleTime","specialIntervalMult","toneIsOnLastTick","intervalStart","intervalEnd","fadeExpressionStart","fadeExpressionEnd","chordExpressionStart","chordExpressionEnd","expressionReferencePitch","baseExpression","pitchDamping","chipWaveLength","firstOffset","lastOffset","getOperatorWave","startTicksSinceReleased","endTicksSinceReleased","pinStart","pinEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","noteLengthTicks","tmpNoteFilter","noteFilterSettingsStart","noteFilterSettingsEnd","intervalDiff","chordSizeDiff","pitchShiftScalarStart","pitchShiftScalarEnd","modDetuneStart","modDetuneEnd","vibratoAmplitudeStart","vibratoAmplitudeEnd","vibratoStart","POSITIVE_INFINITY","getLFOAmplitude","ticksUntilVibratoStart","vibratoLfoEnd","vibratoDepthEnvelopeEnd","vibratoEnd","ticksUntilVibratoEnd","noteFilterExpression","noteAllFreqsEnvelopeStart","noteAllFreqsEnvelopeEnd","noteFreqEnvelopeStart","noteFreqEnvelopeEnd","notePeakEnvelopeStart","notePeakEnvelopeEnd","noteFilterSettings","drumsetEnvelopeComputer","sineExpressionBoost","totalCarrierExpression","arpeggioInterval","isMono","associatedCarrierIndex","pitchStart","pitchEnd","baseFreqStart","baseFreqEnd","targetFreqStart","targetFreqEnd","freqEnvelopeStart","freqEnvelopeEnd","amplitudeStart","amplitudeEnd","amplitudeCurveStart","amplitudeCurveEnd","expressionStart","expressionEnd","pitchExpressionStart","pitchExpressionEnd","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","freqEndRatio","basePhaseDeltaScale","intervalOffset","endPitch","settingsExpressionMult","basePulseWidth","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","decimalOffsetModStart","decimalOffsetStart","useSustainStart","useSustainEnd","startFreq","unisonEnvelopeStart","unisonEnvelopeEnd","unisonStartA","unisonEndA","divisor","unisonStart","unisonEnd","unisonBStart","unisonBEnd","supersawExpressionStart","supersawExpressionEnd","minFirstVoiceAmplitude","useDynamismStart","useDynamismEnd","curvedDynamismStart","curvedDynamismEnd","firstVoiceAmplitudeStart","firstVoiceAmplitudeEnd","dynamismStart","dynamismEnd","initializeSupersaw","accumulator","normalizedPhase","zeroCrossingPhase","prevDrop","nextDrop","phaseDelta","distanceToZeroCrossing","swappedIndex","baseSpreadSlider","useSpreadStart","useSpreadEnd","averageSpreadSlider","curvedSpread","baseShape","useShapeStart","useShapeEnd","shapeStart","shapeEnd","delayLengthStart","pulseExpressionRatio","sustainEnvelopeStart","sustainEnvelopeEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulatorNumber","feedbackIndices","wrappedFmSynth","Function","loopableChipSynth","chipSynth","harmonicsSynth","pulseWidthSynth","supersawSynth","pickedStringSynth","noiseSynth","spectrumSynth","drumsetSynth","fm6SynthFunctionCache","wrappedFm6Synth","wrap","voiceCount","chipFunction","loopableChipFunctionCache","chipSource","chipFunctionCache","sampleListA","voice","sampleListB","harmonicsFunction","harmonicsFunctionCache","harmonicsSource","sampleList","pickedStringFunction","pickedStringFunctionCache","pickedStringSource","lines","usesEqFilter","signature","effectsFunction","effectsFunctionCache","effectsSource","usesDelays","pulseFunction","pulseFunctionCache","pulseSource","data","dynamismDelta","unisonDetunes","shapeDelta","filters","initialFilterInput1","initialFilterInput2","sampleIndex","phase","supersawSample","t","detunedPhaseDelta","delaySampleTime","lowerIndex","upperIndex","delayRatio","prevDelaySample","inputSample","output","noiseFunction","noiseFunctionCache","noiseSource","spectrumFunction","spectrumFunctionCache","spectrumSource","drumFunction","drumFunctionCache","drumSource","stereoBufferIndex","envelopeTarget","tgtInstrumentState","dotTarget","lerpEndRatio","bound","findRandomZeroCrossing","phaseMask","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","instrumentVolume","volumeMultToInstrumentVolume","volumeMult","volumeMultToNoteSize","seconds","ticks","lower","upper","cents","beatsPerSecond","partsPerSecond","tickPerSecond","sanitizeDelayLine","lastIndex","mask","input1","input2","ofBar","button","div","h1","canvas","svg","circle","rect","path","isMobile","colorTheme","getLocalStorage","animationRequest","prevHash","id","toString","pauseButtonDisplayed","zoomEnabled","timelineWidth","outVolumeHistoricTimer","outVolumeHistoricCap","oscilloscope","_EventUpdateCanvas","directlinkL","directlinkR","ctx","getContext","fillStyle","fillRect","width","height","yl","yr","display","titleText","editLink","copyLink","href","shareLink","fullscreenLink","draggingPlayhead","playButton","playButtonContainer","loopIcon","d","loopButton","viewBox","volumeIcon","volumeSlider","zoomIcon","cx","cy","stroke","zoomButton","timeline","timelineContainer","visualizationContainer","noteFlashElementsPerBar","currentNoteFlashElements","currentNoteFlashBar","notesFlashWhenPlayed","outVolumeBarBg","outVolumeBar","stop1","stop","stop2","stop3","gradient","linearGradient","gradientUnits","defs","volumeBarContainer","preserveAspectRatio","setLocalStorage","setItem","removeFromUnorderedArray","lastElement","loadSong","songString","reuseParams","updatedSongString","hashUpdatedExternally","myHash","parameter","equalsIndex","paramName","renderLoopIcon","renderTimeline","body","pauseIfAnotherPlayerStartsHandle","pauseIfAnotherPlayerStarts","clearInterval","storedPlayerId","onTogglePlay","renderPlayhead","animate","requestAnimationFrame","volumeUpdate","renderPlayButton","useOutVolumeCap","historicOutCap","cancelAnimationFrame","setInterval","onToggleLoop","onToggleZoom","renderZoomIcon","onTimelineMouseMove","preventDefault","onTimelineCursorMove","clientX","pageX","onTimelineTouchMove","touches","mouseX","boundingRect","getBoundingClientRect","left","right","onTimelineCursorUp","setSynthVolume","scrollLeft","playheadBar","modPlayhead","noteFlashElementsForThisBar","outsideOfCurrentBar","getAttribute","isInvisible","opacity","noteStart","noteEnd","noteBar","dist","innerHTML","timelineHeight","windowOctaves","windowPitchCount","semitoneHeight","targetBeatWidth","targetSemitoneHeight","barWidth","partWidth","wavePitchHeight","drumPitchHeight","color","noteFlashColor","noteFlashColorSecondary","pitchHeight","configuredOctaveScroll","offsetY","offsetX","drawNote","noteElement","dflash","noteFlashElement","radius","classList","add","onCopyClicked","nav","clipboard","writeText","prompt","textField","select","succeeded","execCommand","top","self","keyCode","shiftKey","ctrlKey","shortenerStrategy","open","shortenUrl","share"],"sources":["../../build/synth/SynthConfig.js","../../node_modules/imperative-html/dist/esm/elements-base.js","../../node_modules/imperative-html/dist/esm/elements-strict.js","../../build/editor/ColorConfig.js","../../build/editor/EditorConfig.js","../../build/synth/FFT.js","../../build/synth/Deque.js","../../build/global/Events.js","../../build/synth/filtering.js","../../node_modules/js-xxhash/dist/esm/xxHash32.js","../../build/synth/synth.js","../../build/player/main.js","../../build/global/Oscilloscope.js"],"sourcesContent":["/*!\nCopyright (c) 2012-2022 John Nesky and contributing authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nexport const TypePresets = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"pulse width\", \"picked string\", \"supersaw\", \"chip (custom)\", \"mod\", \"FM (6-op)\"];\nexport function getSampleLoadingStatusName(status) {\n    switch (status) {\n        case 0: return \"loading\";\n        case 1: return \"loaded\";\n        case 2: return \"error\";\n    }\n}\nexport class SampleLoadingState {\n    constructor() {\n        this.statusTable = {};\n        this.urlTable = {};\n        this.totalSamples = 0;\n        this.samplesLoaded = 0;\n    }\n}\nexport const sampleLoadingState = new SampleLoadingState();\nexport class SampleLoadedEvent extends Event {\n    constructor(totalSamples, samplesLoaded) {\n        super(\"sampleloaded\");\n        this.totalSamples = totalSamples;\n        this.samplesLoaded = samplesLoaded;\n    }\n}\nexport class SampleLoadEvents extends EventTarget {\n    constructor() {\n        super();\n    }\n}\nexport const sampleLoadEvents = new SampleLoadEvents();\nexport function startLoadingSample(url, chipWaveIndex, presetSettings, rawLoopOptions, customSampleRate) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const sampleLoaderAudioContext = new AudioContext({ sampleRate: customSampleRate });\n        let closedSampleLoaderAudioContext = false;\n        const chipWave = Config.chipWaves[chipWaveIndex];\n        const rawChipWave = Config.rawChipWaves[chipWaveIndex];\n        const rawRawChipWave = Config.rawRawChipWaves[chipWaveIndex];\n        if (OFFLINE) {\n            if (url.slice(0, 5) === \"file:\") {\n                const dirname = yield getDirname();\n                const joined = yield pathJoin(dirname, url.slice(5));\n                url = joined;\n            }\n        }\n        fetch(url).then((response) => {\n            if (!response.ok) {\n                sampleLoadingState.statusTable[chipWaveIndex] = 2;\n                return Promise.reject(new Error(\"Couldn't load sample\"));\n            }\n            return response.arrayBuffer();\n        }).then((arrayBuffer) => {\n            return sampleLoaderAudioContext.decodeAudioData(arrayBuffer);\n        }).then((audioBuffer) => {\n            const samples = centerWave(Array.from(audioBuffer.getChannelData(0)));\n            const integratedSamples = performIntegral(samples);\n            chipWave.samples = integratedSamples;\n            rawChipWave.samples = samples;\n            rawRawChipWave.samples = samples;\n            if (rawLoopOptions[\"isUsingAdvancedLoopControls\"]) {\n                presetSettings[\"chipWaveLoopStart\"] = rawLoopOptions[\"chipWaveLoopStart\"] != null ? rawLoopOptions[\"chipWaveLoopStart\"] : 0;\n                presetSettings[\"chipWaveLoopEnd\"] = rawLoopOptions[\"chipWaveLoopEnd\"] != null ? rawLoopOptions[\"chipWaveLoopEnd\"] : samples.length - 1;\n                presetSettings[\"chipWaveLoopMode\"] = rawLoopOptions[\"chipWaveLoopMode\"] != null ? rawLoopOptions[\"chipWaveLoopMode\"] : 0;\n                presetSettings[\"chipWavePlayBackwards\"] = rawLoopOptions[\"chipWavePlayBackwards\"];\n                presetSettings[\"chipWaveStartOffset\"] = rawLoopOptions[\"chipWaveStartOffset\"] != null ? rawLoopOptions[\"chipWaveStartOffset\"] : 0;\n            }\n            sampleLoadingState.samplesLoaded++;\n            sampleLoadingState.statusTable[chipWaveIndex] = 1;\n            sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n            if (!closedSampleLoaderAudioContext) {\n                closedSampleLoaderAudioContext = true;\n                sampleLoaderAudioContext.close();\n            }\n        }).catch((error) => {\n            sampleLoadingState.statusTable[chipWaveIndex] = 2;\n            alert(\"Failed to load \" + url + \":\\n\" + error);\n            if (!closedSampleLoaderAudioContext) {\n                closedSampleLoaderAudioContext = true;\n                sampleLoaderAudioContext.close();\n            }\n        });\n    });\n}\nexport function getLocalStorageItem(key, defaultValue) {\n    let value = localStorage.getItem(key);\n    if (value == null || value === \"null\" || value === \"undefined\") {\n        value = defaultValue;\n    }\n    return value;\n}\nfunction loadScript(url) {\n    const result = new Promise((resolve, reject) => {\n        if (!Config.willReloadForCustomSamples) {\n            const script = document.createElement(\"script\");\n            script.src = url;\n            document.head.appendChild(script);\n            script.addEventListener(\"load\", (event) => {\n                resolve();\n            });\n        }\n        else {\n        }\n    });\n    return result;\n}\nexport function loadBuiltInSamples(set) {\n    const defaultIndex = 0;\n    const defaultIntegratedSamples = Config.chipWaves[defaultIndex].samples;\n    const defaultSamples = Config.rawRawChipWaves[defaultIndex].samples;\n    if (set == 0) {\n        const chipWaves = [\n            { name: \"paandorasbox kick\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox snare\", expression: 3.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox piano1\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 2 },\n            { name: \"paandorasbox WOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n            { name: \"paandorasbox overdrive\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -2 },\n            { name: \"paandorasbox trumpet\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 1.2 },\n            { name: \"paandorasbox saxophone\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -5 },\n            { name: \"paandorasbox orchestrahit\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n            { name: \"paandorasbox detatched violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n            { name: \"paandorasbox synth\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -0.8 },\n            { name: \"paandorasbox sonic3snare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox come on\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n            { name: \"paandorasbox choir\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n            { name: \"paandorasbox overdriveguitar\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6.2 },\n            { name: \"paandorasbox flute\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6 },\n            { name: \"paandorasbox legato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -28 },\n            { name: \"paandorasbox tremolo violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -33 },\n            { name: \"paandorasbox amen break\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -55 },\n            { name: \"paandorasbox pizzicato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -11 },\n            { name: \"paandorasbox tim allen grunt\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -20 },\n            { name: \"paandorasbox tuba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 44 },\n            { name: \"paandorasbox loopingcymbal\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17 },\n            { name: \"paandorasbox standardkick\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -7 },\n            { name: \"paandorasbox standardsnare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox closedhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 5 },\n            { name: \"paandorasbox foothihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 4 },\n            { name: \"paandorasbox openhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -31 },\n            { name: \"paandorasbox crashcymbal\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -43 },\n            { name: \"paandorasbox pianoC4\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.5 },\n            { name: \"paandorasbox liver pad\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -22.5 },\n            { name: \"paandorasbox marimba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -15.5 },\n            { name: \"paandorasbox susdotwav\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -24.5 },\n            { name: \"paandorasbox wackyboxtts\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17.5 },\n            { name: \"paandorasbox peppersteak_1\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.2 },\n            { name: \"paandorasbox peppersteak_2\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -47 },\n            { name: \"paandorasbox vinyl_noise\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -50 },\n            { name: \"paandorasbeta slap bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -56 },\n            { name: \"paandorasbeta HD EB overdrive guitar\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60 },\n            { name: \"paandorasbeta sunsoft bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -18.5 },\n            { name: \"paandorasbeta masculine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n            { name: \"paandorasbeta feminine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60.5 },\n            { name: \"paandorasbeta tololoche\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -29.5 },\n            { name: \"paandorasbeta harp\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -54 },\n            { name: \"paandorasbeta pan flute\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -58 },\n            { name: \"paandorasbeta krumhorn\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -46 },\n            { name: \"paandorasbeta timpani\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n            { name: \"paandorasbeta crowd hey\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -29 },\n            { name: \"paandorasbeta wario land 4 brass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -68 },\n            { name: \"paandorasbeta wario land 4 rock organ\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -63 },\n            { name: \"paandorasbeta wario land 4 DAOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -35 },\n            { name: \"paandorasbeta wario land 4 hour chime\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -47.5 },\n            { name: \"paandorasbeta wario land 4 tick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -12.5 },\n            { name: \"paandorasbeta kirby kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta kirby snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta kirby bongo\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta kirby click\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta sonor kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n            { name: \"paandorasbeta sonor snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n            { name: \"paandorasbeta sonor snare (left hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n            { name: \"paandorasbeta sonor snare (right hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n            { name: \"paandorasbeta sonor high tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n            { name: \"paandorasbeta sonor low tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n            { name: \"paandorasbeta sonor hihat (closed)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -17 },\n            { name: \"paandorasbeta sonor hihat (half opened)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -21 },\n            { name: \"paandorasbeta sonor hihat (open)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -54.5 },\n            { name: \"paandorasbeta sonor hihat (open tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -43.5 },\n            { name: \"paandorasbeta sonor hihat (pedal)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28 },\n            { name: \"paandorasbeta sonor crash\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -51 },\n            { name: \"paandorasbeta sonor crash (tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -50.5 },\n            { name: \"paandorasbeta sonor ride\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46 }\n        ];\n        sampleLoadingState.totalSamples += chipWaves.length;\n        const startIndex = Config.rawRawChipWaves.length;\n        for (const chipWave of chipWaves) {\n            const chipWaveIndex = Config.rawRawChipWaves.length;\n            const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n            Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n            Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n            Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n            Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n            Config.chipWaves[chipWaveIndex] = integratedChipWave;\n            Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = \"legacySamples\";\n        }\n        loadScript(\"samples.js\")\n            .then(() => loadScript(\"samples2.js\"))\n            .then(() => loadScript(\"samples3.js\"))\n            .then(() => loadScript(\"drumsamples.js\"))\n            .then(() => loadScript(\"wario_samples.js\"))\n            .then(() => loadScript(\"kirby_samples.js\"))\n            .then(() => {\n            const chipWaveSamples = [\n                centerWave(kicksample),\n                centerWave(snaresample),\n                centerWave(pianosample),\n                centerWave(WOWsample),\n                centerWave(overdrivesample),\n                centerWave(trumpetsample),\n                centerWave(saxophonesample),\n                centerWave(orchhitsample),\n                centerWave(detatchedviolinsample),\n                centerWave(synthsample),\n                centerWave(sonic3snaresample),\n                centerWave(comeonsample),\n                centerWave(choirsample),\n                centerWave(overdrivensample),\n                centerWave(flutesample),\n                centerWave(legatoviolinsample),\n                centerWave(tremoloviolinsample),\n                centerWave(amenbreaksample),\n                centerWave(pizzicatoviolinsample),\n                centerWave(timallengruntsample),\n                centerWave(tubasample),\n                centerWave(loopingcymbalsample),\n                centerWave(kickdrumsample),\n                centerWave(snaredrumsample),\n                centerWave(closedhihatsample),\n                centerWave(foothihatsample),\n                centerWave(openhihatsample),\n                centerWave(crashsample),\n                centerWave(pianoC4sample),\n                centerWave(liverpadsample),\n                centerWave(marimbasample),\n                centerWave(susdotwavsample),\n                centerWave(wackyboxttssample),\n                centerWave(peppersteak1),\n                centerWave(peppersteak2),\n                centerWave(vinyl),\n                centerWave(slapbass),\n                centerWave(hdeboverdrive),\n                centerWave(sunsoftbass),\n                centerWave(masculinechoir),\n                centerWave(femininechoir),\n                centerWave(southtololoche),\n                centerWave(harp),\n                centerWave(panflute),\n                centerWave(krumhorn),\n                centerWave(timpani),\n                centerWave(crowdhey),\n                centerWave(warioland4brass),\n                centerWave(warioland4organ),\n                centerWave(warioland4daow),\n                centerWave(warioland4hourchime),\n                centerWave(warioland4tick),\n                centerWave(kirbykick),\n                centerWave(kirbysnare),\n                centerWave(kirbybongo),\n                centerWave(kirbyclick),\n                centerWave(funkkick),\n                centerWave(funksnare),\n                centerWave(funksnareleft),\n                centerWave(funksnareright),\n                centerWave(funktomhigh),\n                centerWave(funktomlow),\n                centerWave(funkhihatclosed),\n                centerWave(funkhihathalfopen),\n                centerWave(funkhihatopen),\n                centerWave(funkhihatopentip),\n                centerWave(funkhihatfoot),\n                centerWave(funkcrash),\n                centerWave(funkcrashtip),\n                centerWave(funkride)\n            ];\n            let chipWaveIndexOffset = 0;\n            for (const chipWaveSample of chipWaveSamples) {\n                const chipWaveIndex = startIndex + chipWaveIndexOffset;\n                Config.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n                sampleLoadingState.statusTable[chipWaveIndex] = 1;\n                sampleLoadingState.samplesLoaded++;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                chipWaveIndexOffset++;\n            }\n        });\n    }\n    else if (set == 1) {\n        const chipWaves = [\n            { name: \"chronoperc1final\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"synthkickfm\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"mcwoodclick1\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"acoustic snare\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 }\n        ];\n        sampleLoadingState.totalSamples += chipWaves.length;\n        const startIndex = Config.rawRawChipWaves.length;\n        for (const chipWave of chipWaves) {\n            const chipWaveIndex = Config.rawRawChipWaves.length;\n            const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n            Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n            Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n            Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n            Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n            Config.chipWaves[chipWaveIndex] = integratedChipWave;\n            Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = \"nintariboxSamples\";\n        }\n        loadScript(\"nintaribox_samples.js\")\n            .then(() => {\n            const chipWaveSamples = [\n                centerWave(chronoperc1finalsample),\n                centerWave(synthkickfmsample),\n                centerWave(woodclicksample),\n                centerWave(acousticsnaresample)\n            ];\n            let chipWaveIndexOffset = 0;\n            for (const chipWaveSample of chipWaveSamples) {\n                const chipWaveIndex = startIndex + chipWaveIndexOffset;\n                Config.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n                sampleLoadingState.statusTable[chipWaveIndex] = 1;\n                sampleLoadingState.samplesLoaded++;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                chipWaveIndexOffset++;\n            }\n        });\n    }\n    else if (set == 2) {\n        const chipWaves = [\n            { name: \"cat\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n            { name: \"gameboy\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 7 },\n            { name: \"mario\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n            { name: \"drum\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 4 },\n            { name: \"yoshi\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n            { name: \"star\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n            { name: \"fire flower\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n            { name: \"dog\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n            { name: \"oink\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 3 },\n            { name: \"swan\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 1 },\n            { name: \"face\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -12 }\n        ];\n        sampleLoadingState.totalSamples += chipWaves.length;\n        const startIndex = Config.rawRawChipWaves.length;\n        for (const chipWave of chipWaves) {\n            const chipWaveIndex = Config.rawRawChipWaves.length;\n            const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n            Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n            Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n            Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n            Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n            Config.chipWaves[chipWaveIndex] = integratedChipWave;\n            Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = \"marioPaintboxSamples\";\n        }\n        loadScript(\"mario_paintbox_samples.js\")\n            .then(() => {\n            const chipWaveSamples = [\n                centerWave(catpaintboxsample),\n                centerWave(gameboypaintboxsample),\n                centerWave(mariopaintboxsample),\n                centerWave(drumpaintboxsample),\n                centerWave(yoshipaintboxsample),\n                centerWave(starpaintboxsample),\n                centerWave(fireflowerpaintboxsample),\n                centerWave(dogpaintbox),\n                centerWave(oinkpaintbox),\n                centerWave(swanpaintboxsample),\n                centerWave(facepaintboxsample)\n            ];\n            let chipWaveIndexOffset = 0;\n            for (const chipWaveSample of chipWaveSamples) {\n                const chipWaveIndex = startIndex + chipWaveIndexOffset;\n                Config.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n                sampleLoadingState.statusTable[chipWaveIndex] = 1;\n                sampleLoadingState.samplesLoaded++;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                chipWaveIndexOffset++;\n            }\n        });\n    }\n    else {\n        console.log(\"invalid set of built-in samples\");\n    }\n}\nexport class Config {\n    static generateSineWave() {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength);\n        }\n        return wave;\n    }\n    static generateTriWave() {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength)) / (Math.PI / 2);\n        }\n        return wave;\n    }\n    static generateTrapezoidWave(drive = 2) {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength)) * drive));\n        }\n        return wave;\n    }\n    static generateSquareWave(phaseWidth = 0) {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        const centerPoint = _a.sineWaveLength / 4;\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * _a.sineWaveLength / 2)\n                || ((Math.abs(i - _a.sineWaveLength - centerPoint) < phaseWidth * _a.sineWaveLength / 2))) * 2 - 1;\n        }\n        return wave;\n    }\n    static generateSawWave(inverse = false) {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = ((i + (_a.sineWaveLength / 4.0)) * 2.0 / _a.sineWaveLength) % 2 - 1;\n            wave[i] = inverse ? -wave[i] : wave[i];\n        }\n        return wave;\n    }\n    static generateQuasiSineWave() {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.round(Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength));\n        }\n        return wave;\n    }\n}\n_a = Config;\nConfig.thresholdVal = -10;\nConfig.kneeVal = 40;\nConfig.ratioVal = 12;\nConfig.attackVal = 0;\nConfig.releaseVal = 0.25;\nConfig.willReloadForCustomSamples = false;\nConfig.jsonFormat = \"slarmoosbox\";\nConfig.scales = toNameMap([\n    { name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] },\n    { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] },\n    { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] },\n    { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] },\n    { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] },\n    { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] },\n    { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] },\n    { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] },\n    { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] },\n    { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] },\n    { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] },\n    { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] },\n    { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] },\n    { name: \"Blues Major\", realName: \"blues major\", flags: [true, false, true, true, true, false, false, true, false, true, false, false] },\n    { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] },\n    { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] },\n    { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] },\n    { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] },\n    { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] },\n    { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] },\n    { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] },\n    { name: \"No Dabbing (MB)\", realName: \"no dabbing\", flags: [true, true, false, true, true, true, true, true, true, false, true, false] },\n    { name: \"Jacked Toad (TB)\", realName: \"jacked toad\", flags: [true, false, true, true, false, true, true, true, true, false, true, true] },\n    { name: \"Test Scale (TB)\", realName: \"**t\", flags: [true, true, false, false, false, true, true, false, false, true, true, false] },\n    { name: \"Custom\", realName: \"custom\", flags: [true, false, true, true, false, false, false, true, true, false, true, true] },\n]);\nConfig.keys = toNameMap([\n    { name: \"C\", isWhiteKey: true, basePitch: 12 },\n    { name: \"C♯\", isWhiteKey: false, basePitch: 13 },\n    { name: \"D\", isWhiteKey: true, basePitch: 14 },\n    { name: \"D♯\", isWhiteKey: false, basePitch: 15 },\n    { name: \"E\", isWhiteKey: true, basePitch: 16 },\n    { name: \"F\", isWhiteKey: true, basePitch: 17 },\n    { name: \"F♯\", isWhiteKey: false, basePitch: 18 },\n    { name: \"G\", isWhiteKey: true, basePitch: 19 },\n    { name: \"G♯\", isWhiteKey: false, basePitch: 20 },\n    { name: \"A\", isWhiteKey: true, basePitch: 21 },\n    { name: \"A♯\", isWhiteKey: false, basePitch: 22 },\n    { name: \"B\", isWhiteKey: true, basePitch: 23 },\n]);\nConfig.blackKeyNameParents = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\nConfig.tempoMin = 1;\nConfig.tempoMax = 500;\nConfig.octaveMin = -2;\nConfig.octaveMax = 2;\nConfig.echoDelayRange = 24;\nConfig.echoDelayStepTicks = 4;\nConfig.echoSustainRange = 8;\nConfig.echoShelfHz = 4000.0;\nConfig.echoShelfGain = Math.pow(2.0, -0.5);\nConfig.reverbShelfHz = 8000.0;\nConfig.reverbShelfGain = Math.pow(2.0, -1.5);\nConfig.reverbRange = 32;\nConfig.reverbDelayBufferSize = 16384;\nConfig.reverbDelayBufferMask = _a.reverbDelayBufferSize - 1;\nConfig.beatsPerBarMin = 1;\nConfig.beatsPerBarMax = 64;\nConfig.barCountMin = 1;\nConfig.barCountMax = 1024;\nConfig.instrumentCountMin = 1;\nConfig.layeredInstrumentCountMax = 10;\nConfig.patternInstrumentCountMax = 10;\nConfig.partsPerBeat = 24;\nConfig.ticksPerPart = 2;\nConfig.ticksPerArpeggio = 3;\nConfig.arpeggioPatterns = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7]];\nConfig.rhythms = toNameMap([\n    { name: \"÷3 (triplets)\", stepsPerBeat: 3, roundUpThresholds: [5, 12, 18] },\n    { name: \"÷4 (standard)\", stepsPerBeat: 4, roundUpThresholds: [3, 9, 17, 21] },\n    { name: \"÷6\", stepsPerBeat: 6, roundUpThresholds: null },\n    { name: \"÷8\", stepsPerBeat: 8, roundUpThresholds: null },\n    { name: \"÷12\", stepsPerBeat: 12, roundUpThresholds: null },\n    { name: \"freehand\", stepsPerBeat: 24, roundUpThresholds: null },\n]);\nConfig.instrumentTypeNames = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"supersaw\", \"custom chip\", \"mod\", \"FM6op\"];\nConfig.instrumentTypeHasSpecialInterval = [true, true, false, false, false, true, false, false, false, false, false];\nConfig.chipBaseExpression = 0.03375;\nConfig.fmBaseExpression = 0.03;\nConfig.noiseBaseExpression = 0.19;\nConfig.spectrumBaseExpression = 0.3;\nConfig.drumsetBaseExpression = 0.45;\nConfig.harmonicsBaseExpression = 0.025;\nConfig.pwmBaseExpression = 0.04725;\nConfig.supersawBaseExpression = 0.061425;\nConfig.pickedStringBaseExpression = 0.025;\nConfig.distortionBaseVolume = 0.011;\nConfig.bitcrusherBaseVolume = 0.010;\nConfig.granularOutputLoudnessCompensation = 0.5;\nConfig.rawChipWaves = toNameMap([\n    { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\n    { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\n    { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\n    { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\n    { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\n    { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\n    { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\n    { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\n    { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\n    { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\n    { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\n    { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n    { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\n    { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\n    { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\n    { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\n    { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\n    { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\n    { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\n    { name: \"trapezoid\", expression: 1.0, samples: centerWave([1.0 / 15.0, 6.0 / 15.0, 10.0 / 15.0, 14.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 14.0 / 15.0, 10.0 / 15.0, 6.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -6.0 / 15.0, -10.0 / 15.0, -14.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -14.0 / 15.0, -10.0 / 15.0, -6.0 / 15.0, -1.0 / 15.0,]) },\n    { name: \"modbox 10% pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"modbox sunsoft bass\", expression: 1.0, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, 1.0, 0.6875, 0.5, 0.625, 0.625, 0.5, 0.375, 0.5625, 0.4375, 0.5625, 0.4375, 0.4375, 0.3125, 0.1875, 0.1875, 0.375, 0.5625, 0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n    { name: \"modbox loud pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.7, 0.1, 0.1, 0, 0, 0, 0, 0, 0.1, 0.2, 0.15, 0.25, 0.125, 0.215, 0.345, 4.0]) },\n    { name: \"modbox sax\", expression: 0.5, samples: centerAndNormalizeWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 9.0, 0.06]) },\n    { name: \"modbox guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.5, 3.5, 3.0, -0.5, -0.25, -1.0]) },\n    { name: \"modbox sine\", expression: 0.5, samples: centerAndNormalizeWave([0.0, 0.05, 0.125, 0.2, 0.25, 0.3, 0.425, 0.475, 0.525, 0.625, 0.675, 0.725, 0.775, 0.8, 0.825, 0.875, 0.9, 0.925, 0.95, 0.975, 0.98, 0.99, 0.995, 1, 0.995, 0.99, 0.98, 0.975, 0.95, 0.925, 0.9, 0.875, 0.825, 0.8, 0.775, 0.725, 0.675, 0.625, 0.525, 0.475, 0.425, 0.3, 0.25, 0.2, 0.125, 0.05, 0.0, -0.05, -0.125, -0.2, -0.25, -0.3, -0.425, -0.475, -0.525, -0.625, -0.675, -0.725, -0.775, -0.8, -0.825, -0.875, -0.9, -0.925, -0.95, -0.975, -0.98, -0.99, -0.995, -1, -0.995, -0.99, -0.98, -0.975, -0.95, -0.925, -0.9, -0.875, -0.825, -0.8, -0.775, -0.725, -0.675, -0.625, -0.525, -0.475, -0.425, -0.3, -0.25, -0.2, -0.125, -0.05]) },\n    { name: \"modbox atari bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]) },\n    { name: \"modbox atari pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n    { name: \"modbox 1% pulse\", expression: 0.5, samples: centerAndNormalizeWave},\n    { name: \"modbox curved sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0 / 2.0, 1.0 / 3.0, 1.0 / 4.0]) },\n    { name: \"modbox viola\", expression: 0.45, samples: centerAndNormalizeWave([-0.9, -1.0, -0.85, -0.775, -0.7, -0.6, -0.5, -0.4, -0.325, -0.225, -0.2, -0.125, -0.1, -0.11, -0.125, -0.15, -0.175, -0.18, -0.2, -0.21, -0.22, -0.21, -0.2, -0.175, -0.15, -0.1, -0.5, 0.75, 0.11, 0.175, 0.2, 0.25, 0.26, 0.275, 0.26, 0.25, 0.225, 0.2, 0.19, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.275, 0.28, 0.29, 0.3, 0.29, 0.28, 0.27, 0.26, 0.25, 0.225, 0.2, 0.175, 0.15, 0.1, 0.075, 0.0, -0.01, -0.025, 0.025, 0.075, 0.2, 0.3, 0.475, 0.6, 0.75, 0.85, 0.85, 1.0, 0.99, 0.95, 0.8, 0.675, 0.475, 0.275, 0.01, -0.15, -0.3, -0.475, -0.5, -0.6, -0.71, -0.81, -0.9, -1.0, -0.9]) },\n    { name: \"modbox brass\", expression: 0.45, samples: centerAndNormalizeWave([-1.0, -0.95, -0.975, -0.9, -0.85, -0.8, -0.775, -0.65, -0.6, -0.5, -0.475, -0.35, -0.275, -0.2, -0.125, -0.05, 0.0, 0.075, 0.125, 0.15, 0.20, 0.21, 0.225, 0.25, 0.225, 0.21, 0.20, 0.19, 0.175, 0.125, 0.10, 0.075, 0.06, 0.05, 0.04, 0.025, 0.04, 0.05, 0.10, 0.15, 0.225, 0.325, 0.425, 0.575, 0.70, 0.85, 0.95, 1.0, 0.9, 0.675, 0.375, 0.2, 0.275, 0.4, 0.5, 0.55, 0.6, 0.625, 0.65, 0.65, 0.65, 0.65, 0.64, 0.6, 0.55, 0.5, 0.4, 0.325, 0.25, 0.15, 0.05, -0.05, -0.15, -0.275, -0.35, -0.45, -0.55, -0.65, -0.7, -0.78, -0.825, -0.9, -0.925, -0.95, -0.975]) },\n    { name: \"modbox acoustic bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 0.1, -0.1, -0.2, -0.4, -0.3, -1.0]) },\n    { name: \"modbox lyre\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, 4.0, 2.15, 4.13, 5.15, 0.0, -0.05, 1.0]) },\n    { name: \"modbox ramp pulse\", expression: 0.5, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\n    { name: \"modbox piccolo\", expression: 0.5, samples: centerAndNormalizeWave([1, 4, 2, 1, -0.1, -1, -0.12]) },\n    { name: \"modbox squaretooth\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\n    { name: \"modbox flatline\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]) },\n    { name: \"modbox pnryshk a (u5)\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]) },\n    { name: \"modbox pnryshk b (riff)\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -0.9, 0.8, -0.7, 0.6, -0.5, 0.4, -0.3, 0.2, -0.1, 0.0, -0.1, 0.2, -0.3, 0.4, -0.5, 0.6, -0.7, 0.8, -0.9, 1.0]) },\n    { name: \"sandbox shrill lute\", expression: 0.94, samples: centerAndNormalizeWave([1.0, 1.5, 1.25, 1.2, 1.3, 1.5]) },\n    { name: \"sandbox bassoon\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]) },\n    { name: \"sandbox shrill bass\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 0, 0, 1, 0, 1, 0, 0, 0]) },\n    { name: \"sandbox nes pulse\", expression: 0.4, samples: centerAndNormalizeWave([2.1, -2.2, 1.2, 3]) },\n    { name: \"sandbox saw bass\", expression: 0.25, samples: centerAndNormalizeWave([1, 1, 1, 1, 0, 2, 1, 2, 3, 1, -2, 1, 4, 1, 4, 2, 1, 6, -3, 4, 2, 1, 5, 1, 4, 1, 5, 6, 7, 1, 6, 1, 4, 1, 9]) },\n    { name: \"sandbox euphonium\", expression: 0.3, samples: centerAndNormalizeWave([0, 1, 2, 1, 2, 1, 4, 2, 5, 0, -2, 1, 5, 1, 2, 1, 2, 4, 5, 1, 5, -2, 5, 10, 1]) },\n    { name: \"sandbox shrill pulse\", expression: 0.3, samples: centerAndNormalizeWave([4 - 2, 0, 4, 1, 4, 6, 7, 3]) },\n    { name: \"sandbox r-sawtooth\", expression: 0.2, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\n    { name: \"sandbox recorder\", expression: 0.2, samples: centerAndNormalizeWave([5.0, -5.1, 4.0, -4.1, 3.0, -3.1, 2.0, -2.1, 1.0, -1.1, 6.0]) },\n    { name: \"sandbox narrow saw\", expression: 1.2, samples: centerAndNormalizeWave([0.1, 0.13 / -0.1, 0.13 / -0.3, 0.13 / -0.5, 0.13 / -0.7, 0.13 / -0.9, 0.13 / -0.11, 0.13 / -0.31, 0.13 / -0.51, 0.13 / -0.71, 0.13 / -0.91, 0.13 / -0.12, 0.13 / -0.32, 0.13 / -0.52, 0.13 / -0.72, 0.13 / -0.92, 0.13 / -0.13, 0.13 / 0.13, 0.13 / 0.92, 0.13 / 0.72, 0.13 / 0.52, 0.13 / 0.32, 0.13 / 0.12, 0.13 / 0.91, 0.13 / 0.71, 0.13 / 0.51, 0.13 / 0.31, 0.13 / 0.11, 0.13 / 0.9, 0.13 / 0.7, 0.13 / 0.5, 0.13 / 0.3, 0.13]) },\n    { name: \"sandbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n    { name: \"sandbox ring pulse\", expression: 1.0, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"sandbox double sine\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.0, -1.0, -1.1, -1.2, -1.3, -1.4, -1.5, -1.6, -1.7, -1.8, -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1.0]) },\n    { name: \"sandbox contrabass\", expression: 0.5, samples: centerAndNormalizeWave([4.20, 6.9, 1.337, 6.66]) },\n    { name: \"sandbox double bass\", expression: 0.4, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, -1.0, -0.6875, -0.5, -0.625, -0.625, -0.5, -0.375, -0.5625, -0.4375, -0.5625, -0.4375, -0.4375, -0.3125, -0.1875, 0.1875, 0.375, 0.5625, -0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n    { name: \"haileybox test1\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.5, -1.0]) },\n    { name: \"brucebox pokey 4bit lfsr\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0]) },\n    { name: \"brucebox pokey 5step bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0]) },\n    { name: \"brucebox isolated spiky\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0, -1.0]) },\n    { name: \"nerdbox unnamed 1\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 0.8 / 0.2, 0.7, -0.4, -1.0, 0.5, -0.5 / 0.6]) },\n    { name: \"nerdbox unnamed 2\", expression: 0.5, samples: centerAndNormalizeWave([2.0, 5.0 / 55.0, -9.0, 6.5 / 6.5, -55.0, 18.5 / -26.0]) },\n    { name: \"zefbox semi-square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.5, 2.0, 2.5, 2.5, 2.5, 2.0, 1.5, 1.0]) },\n    { name: \"zefbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n    { name: \"zefbox squaretal\", expression: 0.7, samples: centerAndNormalizeWave([1.5, 1.0, 1.5, -1.5, -1.0, -1.5]) },\n    { name: \"zefbox saw wide\", expression: 0.65, samples: centerAndNormalizeWave([0.0, -0.4, -0.8, -1.2, -1.6, -2.0, 0.0, -0.4, -0.8, -1.2, -1.6]) },\n    { name: \"zefbox saw narrow\", expression: 0.65, samples: centerAndNormalizeWave([1, 0.5, 1, 0.5, 1, 0.5, 1, 2, 1, 2, 1]) },\n    { name: \"zefbox deep sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([0, 2, 3, 4, 4.5, 5, 5.5, 6, 6.25, 6.5, 6.75, 7, 6.75, 6.5, 6.25, 6, 5.5, 5, 4.5, 4, 3, 2, 1]) },\n    { name: \"zefbox sawtal\", expression: 0.3, samples: centerAndNormalizeWave([1.5, 1.0, 1.25, -0.5, 1.5, -0.5, 0.0, -1.5, 1.5, 0.0, 0.5, -1.5, 0.5, 1.25, -1.0, -1.5]) },\n    { name: \"zefbox deep sawtal\", expression: 0.7, samples: centerAndNormalizeWave([0.75, 0.25, 0.5, -0.5, 0.5, -0.5, -0.25, -0.75]) },\n    { name: \"zefbox pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -2.0, -2.0, -1.5, -1.5, -1.25, -1.25, -1.0, -1.0]) },\n    { name: \"zefbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },\n    { name: \"zefbox high pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, -2, 2, -3, 3, -4, 5, -4, 3, -3, 2, -2, 1]) },\n    { name: \"zefbox deep pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, 2, 2, -2, -2, -3, -4, -4, -5, -5, -5, -5, 0, -1, -2]) },\n    { name: \"wackybox guitar string\", expression: 0.6, samples: centerAndNormalizeWave([0, 63, 63, 63, 63, 19, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 11, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 27, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 34, 63, 63, 63, 63]) },\n    { name: \"wackybox intense\", expression: 0.6, samples: centerAndNormalizeWave([36, 25, 33, 35, 18, 51, 22, 40, 27, 37, 31, 33, 25, 29, 41, 23, 31, 31, 45, 20, 37, 23, 29, 26, 42, 29, 33, 26, 31, 27, 40, 25, 40, 26, 37, 24, 41, 32, 0, 32, 33, 29, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]) },\n    { name: \"wackybox buzz wave\", expression: 0.6, samples: centerAndNormalizeWave([0, 1, 1, 2, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8, 8, 8, 11, 15, 23, 62, 61, 60, 58, 56, 56, 54, 53, 52, 50, 49, 48, 47, 47, 45, 45, 45, 44, 44, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 53]) },\n    { name: \"todbox 1/3 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0]) },\n    { name: \"todbox 1/5 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"todbox slap bass\", expression: 0.5, samples: centerAndNormalizeWave([1, 0.5, 0, 0.5, 1.25, 0.5, -0.25, 0.1, -0.1, 0.1, 1.1, 2.1, 3, 3.5, 2.9, 3.3, 2.7, 2.9, 2.3, 2, 1.9, 1.8, 1, 0.7, 0.9, 0.8, 0.4, 0.1, 0.0, 0.2, 0.4, 0.6, 0.5, 0.8]) },\n    { name: \"todbox harsh wave\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 0.5, 0.5, 0.5, 0.7, 0.39, 1.3, 0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"todbox accordian\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 1, 2, 2, 1.5, 1.5, 0.8, 0, -2, -3.25, -4, -4.5, -5.5, -6, -5.75, -5.5, -5, -5, -5, -6, -6, -6, -5, -4, -3, -2, -1, 0.75, 1, 2, 3, 4, 5, 6, 6.5, 7.5, 8, 7.75, 6, 5.25, 5, 5, 5, 5, 5, 4.25, 3.75, 3.25, 2.75, 1.25, -0.75, -2, -0.75, 1.25, 1.25, 2, 2, 2, 2, 1.5, -1, -2, -1, 1.5, 2, 2.75, 2.75, 2.75, 3, 2.75, -1, -2, -2.5, -2, -1, -2.25, -2.75, -2, -3, -1.75, 1, 2, 3.5, 4, 5.25, 6, 8, 9.75, 10, 9.5, 9, 8.5, 7.5, 6.5, 5.25, 5, 4.5, 4, 4, 4, 3.25, 2.5, 2, 1, -0.5, -2, -3.5, -4, -4, -4, -3.75, -3, -2, -1]) },\n    { name: \"todbox beta banana wave\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0]) },\n    { name: \"todbox beta test wave\", expression: 0.5, samples: centerAndNormalizeWave([56, 0, -52, 16, 3, 3, 2, -35, 20, 147, -53, 0, 0, 5, -6]) },\n    { name: \"todbox beta real snare\", expression: 1.0, samples: centerAndNormalizeWave([0.00000, -0.01208, -0.02997, -0.04382, -0.06042, -0.07529, -0.09116, -0.10654, -0.12189, -0.13751, -0.15289, -0.16849, -0.18387, -0.19974, -0.21484, -0.23071, -0.24557, -0.26144, -0.27731, -0.29141, -0.30350, -0.32416, -0.34406, -0.32947, -0.31158, -0.33725, -0.37579, -0.39746, -0.40201, -0.40906, -0.44180, -0.47229, -0.47379, -0.47733, -0.45239, -0.33954, -0.22894, -0.22443, -0.32138, -0.46371, -0.57178, -0.61081, -0.59998, -0.61459, -0.62189, -0.43979, -0.19217, -0.12643, -0.17252, -0.20956, -0.20981, -0.19217, -0.22845, -0.34332, -0.50629, -0.64307, -0.72922, -0.81384, -0.87857, -0.90149, -0.88687, -0.86169, -0.87781, -0.80478, -0.52493, -0.31308, -0.33249, -0.39395, -0.39017, -0.30301, -0.19949, -0.13071, -0.02493, 0.14307, 0.34961, 0.52542, 0.63223, 0.68613, 0.74710, 0.87305, 0.98184, 0.98889, 0.97052, 0.99066, 0.99747, 0.99344, 0.99469, 0.99393, 0.99570, 0.99393, 0.99521, 0.99469, 0.99420, 0.99521, 0.99420, 0.99521, 0.99469, 0.99469, 0.99521, 0.99420, 0.99545, 0.99445, 0.99469, 0.99493, 0.99420, 0.99521, 0.99393, 0.99493, 0.99469, 0.99445, 0.99570, 0.99445, 0.99521, 0.99469, 0.99469, 0.99521, 0.99420, 0.99545, 0.99445, 0.99445, 0.99493, 0.99420, 0.99545, 0.99420, 0.99493, 0.99493, 0.99420, 0.99545, 0.99445, 0.99521, 0.99469, 0.99445, 0.99545, 0.99368, 0.99393, 0.99445, 0.99268, 0.97983, 0.97229, 0.95944, 0.88486, 0.76773, 0.64481, 0.53098, 0.39847, 0.19318, -0.03827, -0.20325, -0.39319, -0.68765, -0.88461, -0.93448, -0.96069, -0.97681, -0.98715, -0.99042, -0.99142, -0.99091, -0.99142, -0.99219, -0.99091, -0.99219, -0.99066, -0.99142, -0.99142, -0.99118, -0.99191, -0.99066, -0.99191, -0.99142, -0.99142, -0.99191, -0.99091, -0.99219, -0.99118, -0.99142, -0.99167, -0.99091, -0.99219, -0.99091, -0.99167, -0.99142, -0.99091, -0.99191, -0.99091, -0.99191, -0.99142, -0.99118, -0.99191, -0.99066, -0.99191, -0.99118, -0.99142, -0.99191, -0.99066, -0.99191, -0.99091, -0.99167, -0.99191, -0.99118, -0.99219, -0.99091, -0.99191, -0.99142, -0.99142, -0.99243, -0.98865, -0.98764, -0.99219, -0.98083, -0.92517, -0.92770, -0.91486, -0.59042, -0.15189, 0.02945, 0.05667, 0.06195, 0.00629, -0.18008, -0.56497, -0.88010, -0.92770, -0.92871, -0.97705, -0.99167, -0.98663, -0.99118, -0.99042, -0.99219, -0.99142, -0.99118, -0.98941, -0.99219, -1.00000, -0.97580, -0.95993, -0.99948, -0.98236, -0.84659, -0.74860, -0.70679, -0.59747, -0.48035, -0.41687, -0.36826, -0.29745, -0.18185, -0.06219, 0.02164, 0.07907, 0.13123, 0.18033, 0.19620, 0.15692, 0.14053, 0.20251, 0.27530, 0.30905, 0.29092, 0.27252, 0.30402, 0.32416, 0.32214, 0.35239, 0.39670, 0.43198, 0.49420, 0.58487, 0.64154, 0.65967, 0.67050, 0.67026, 0.66522, 0.65540, 0.66119, 0.70627, 0.75842, 0.78738, 0.78940, 0.78763, 0.80402, 0.85944, 0.94559, 0.98990, 0.98160, 0.98007, 0.99368, 0.99393, 0.98538, 0.97580, 0.97101, 0.93802, 0.81812, 0.64633, 0.46649, 0.28613, 0.14685, 0.08966, 0.12543, 0.20325, 0.24557, 0.18866, 0.02795, -0.20175, -0.44205, -0.58713, -0.57629, -0.41385, -0.14255, 0.18033, 0.47882, 0.68311, 0.72314, 0.62064, 0.48309, 0.43073, 0.53577, 0.72794, 0.90250, 0.97354, 0.97000, 0.98083, 0.99191, 0.99319, 0.99493, 0.99393, 0.99521, 0.99393, 0.99545, 0.99420, 0.99493, 0.99493, 0.99445, 0.99545, 0.99420, 0.99545, 0.99243, 0.98917, 0.98386, 0.97781, 0.95844, 0.89066, 0.81561, 0.78134, 0.77277, 0.75995, 0.73022, 0.67126, 0.57178, 0.47000, 0.38361, 0.29419, 0.20703, 0.14734, 0.15866, 0.25162, 0.35818, 0.45062, 0.56750, 0.69748, 0.81232, 0.89697, 0.95062, 0.97656, 0.98615, 0.99191, 0.99219, 0.99243, 0.99368, 0.99368, 0.97028, 0.95566, 0.94559, 0.82617, 0.59973, 0.38361, 0.23901, 0.15338, 0.12921, 0.11206, 0.04382, -0.12946, -0.43552, -0.72644, -0.89847, -0.95465, -0.95541, -0.97229, -0.99268, -0.99319, -0.98840, -0.99142, -0.99167, -0.99091, -0.98840, -0.98965, -0.99368, -0.97455, -0.95010, -0.94684, -0.96219, -0.98514, -0.99243, -0.98889, -0.98917, -0.99142, -0.99219, -0.99091, -0.99191, -0.99142, -0.99142, -0.99191, -0.99066, -0.99167, -0.99091, -0.99142, -0.99191, -0.99091, -0.99191, -0.99091, -0.99167, -0.99167, -0.99091, -0.99219, -0.99091, -0.99191, -0.99142, -0.99118, -0.99191, -0.99066, -0.99191, -0.99091, -0.99118, -0.99243, -0.98941, -0.98462, -0.96976, -0.96320, -0.96194, -0.87305, -0.66196, -0.44809, -0.29495, -0.18085, -0.11813, -0.11334, -0.18564, -0.34885, -0.58237, -0.80450, -0.93726, -0.97806, -0.97354, -0.97531, -0.98990, -0.99368, -0.98941, -0.99219, -0.99091, -0.99142, -0.99167, -0.99091, -0.99191, -0.99118, -0.99219, -0.98236, -0.97781, -0.97656, -0.95135, -0.87204, -0.71335, -0.52139, -0.34232, -0.17783, -0.00906, 0.14886, 0.30450, 0.48889, 0.67404, 0.84030, 0.94128, 0.97681, 0.98462, 0.98337, 0.99142, 0.99521, 0.99493, 0.99420, 0.99445, 0.99521, 0.99393, 0.99545, 0.99445, 0.99521, 0.99521, 0.99445, 0.99570, 0.99445, 0.99521, 0.99469, 0.99445, 0.99521, 0.99420, 0.99521, 0.99445, 0.99445, 0.99521, 0.99445, 0.99545, 0.99445, 0.99469, 0.99493, 0.99393, 0.99493, 0.99445, 0.99393, 0.98285, 0.97781, 0.97479, 0.92844, 0.82114, 0.66095, 0.52417, 0.46826, 0.46722, 0.47934, 0.47379, 0.47076, 0.48209, 0.42014, 0.25439, 0.10074, -0.00302, -0.08966, -0.16068, -0.21436, -0.22040, -0.15137, -0.00476, 0.18536, 0.37631, 0.52292, 0.62164, 0.70425, 0.74835, 0.72366, 0.63928, 0.52567, 0.40805, 0.35666, 0.42896, 0.60175, 0.80200, 0.92743, 0.96548, 0.97632, 0.98337, 0.99066, 0.99521, 0.99420, 0.99368, 0.99292, 0.98840, 0.98083, 0.96774, 0.93323, 0.85440, 0.69470, 0.47202, 0.20425, -0.08890, -0.36423, -0.60025, -0.77481, -0.90173, -0.96017, -0.97028, -0.98108, -0.98840, -0.99219, -0.98990, -0.99219, -0.99142, -0.99142, -0.99219, -0.99091, -0.99243, -0.99066, -0.99142, -0.99142, -0.99118, -0.99191, -0.99066, -0.99167, -0.99142, -0.99142, -0.99219, -0.99091, -0.99191, -0.99118, -0.99142, -0.99191, -0.99091, -0.99191, -0.99091, -0.99167, -0.99191, -0.99118, -0.99219, -0.99091, -0.99167, -0.99142, -0.99142, -0.99219, -0.99091, -0.99191, -0.99142, -0.99118, -0.98917, -0.99042, -0.99445, -0.97330, -0.95590, -0.96219, -0.89670, -0.72241, -0.55112, -0.44809, -0.39319, -0.37833, -0.35641, -0.26270, -0.14230, -0.11282, -0.13525, -0.11536, -0.09671, -0.11511, -0.18060, -0.26874, -0.33374, -0.42215, -0.51358, -0.44785, -0.30450, -0.28613, -0.30527, -0.25037, -0.15390, -0.08286, -0.11157, -0.12592, -0.00327, 0.13803, 0.19141, 0.12820, 0.01788, -0.03952, -0.12592, -0.26773, -0.34634, -0.31384, -0.18060, -0.01080, 0.13574, 0.26120, 0.36975, 0.46573, 0.55087, 0.63626, 0.73022, 0.83072, 0.92014, 0.97177, 0.98587, 0.98413, 0.99167, 0.99445, 0.99292, 0.99219, 0.98740, 0.98007, 0.96472, 0.92239, 0.82166, 0.69067, 0.57959, 0.54962, 0.59695, 0.64255, 0.64633, 0.60629, 0.55942, 0.54910, 0.58966, 0.61887, 0.56952, 0.54181, 0.59518, 0.63248, 0.63876, 0.65463, 0.73398, 0.88312, 0.96927, 0.97101, 0.97958, 0.99344, 0.99420, 0.99268, 0.99493, 0.99469, 0.99445, 0.99521, 0.99445, 0.99545, 0.99420, 0.99493, 0.99493, 0.99420, 0.99545, 0.99420, 0.99493, 0.99420, 0.99393, 0.99420, 0.98840, 0.98309, 0.98309, 0.96069, 0.88461, 0.79370, 0.72064, 0.65765, 0.59998, 0.53247, 0.49268, 0.48615, 0.44205, 0.38034, 0.36447, 0.38715, 0.39294, 0.32645, 0.19595, 0.07782, -0.05893, -0.27832, -0.48309, -0.62619, -0.72995, -0.79999, -0.84583, -0.82166, -0.73575, -0.67227, -0.65491, -0.64960, -0.66397, -0.70175, -0.72894, -0.74658, -0.76724, -0.79520, -0.82846, -0.86523, -0.90527, -0.94382, -0.89948, -0.69849, -0.47479, -0.31662, -0.15414, -0.00729, 0.07077, 0.08237, 0.04431, -0.02292, -0.11761, -0.24307, -0.36926, -0.45087, -0.46170, -0.40250, -0.30679, -0.17529, 0.00000, 0.14331, 0.24179, 0.36774, 0.49545, 0.56522, 0.57907, 0.56775, 0.53851, 0.51132, 0.48688, 0.41913, 0.26044, 0.00955, -0.26297, -0.46396, -0.62341, -0.82214, -0.94684, -0.96774, -0.97531, -0.98413, -0.99017, -0.98990, -0.99219, -0.99066, -0.99142, -0.99167, -0.99118, -0.99219, -0.98990, -0.99118, -0.99368, -0.99142, -0.97757, -0.97403, -0.98007, -0.96170, -0.86826, -0.67783, -0.52719, -0.48788, -0.45490, -0.43146, -0.47681, -0.54105, -0.57983, -0.60904, -0.62317, -0.59949, -0.55566, -0.52063, -0.52115, -0.55112, -0.56244, -0.58337, -0.65540, -0.73373, -0.77228, -0.74759, -0.68890, -0.64609, -0.61887, -0.58060, -0.50351, -0.40729, -0.33929, -0.35110, -0.42944, -0.47028, -0.42267, -0.32718, -0.20224, -0.05640, 0.04556, 0.10529, 0.17630, 0.26169, 0.33197, 0.32138, 0.23776, 0.20956, 0.23148, 0.20352, 0.23325, 0.39267, 0.52719, 0.58438, 0.62289, 0.66345, 0.70023, 0.66296, 0.54330, 0.42618, 0.33475, 0.24533, 0.14105, 0.03851, 0.01358, 0.09143, 0.22845, 0.34961, 0.41711, 0.48740, 0.58914, 0.69519, 0.78186, 0.84357, 0.89822, 0.95389, 0.98135, 0.98615, 0.99167, 0.99243, 0.99445, 0.99420, 0.99469, 0.99493, 0.99393, 0.99545, 0.99445, 0.99521, 0.99469, 0.99445, 0.99521, 0.99420, 0.99469, 0.98965, 0.98715, 0.98563, 0.96295, 0.91736, 0.86624, 0.82367, 0.77554, 0.68411, 0.53549, 0.38916, 0.26120, 0.11435, -0.04053, -0.18161, -0.23172, -0.19394, -0.15237, -0.10730, -0.02997, 0.08588, 0.22620, 0.34305, 0.44104, 0.55740, 0.65765, 0.71259, 0.69217, 0.65363, 0.69748, 0.79572, 0.89368, 0.95514, 0.97733, 0.98413, 0.98816, 0.99243, 0.99445, 0.99243, 0.97302, 0.96674, 0.97983, 0.90378, 0.71005, 0.51056, 0.40451, 0.40982, 0.41559, 0.32996, 0.24356, 0.18866, 0.11411, 0.05365, 0.01157, -0.03247, -0.09216, -0.16095, -0.23248, -0.31662, -0.39771, -0.48663, -0.59647, -0.71536, -0.82013, -0.85287, -0.82947, -0.84937, -0.92215, -0.97177, -0.98663, -0.98816, -0.98438, -0.99091, -0.99219, -0.99091, -0.99191, -0.99042, -0.99191, -0.99091, -0.99142, -0.99191, -0.99091, -0.99191, -0.99091, -0.99167, -0.99142]) },\n    { name: \"ultrabox shortened od guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.82785, -0.67621, -0.40268, -0.43817, -0.45468, -0.22531, -0.18329, 0.24750, 0.71246, 0.52155, 0.56082, 0.48395, 0.33990, 0.46957, 0.27744, 0.42313, 0.47104, 0.18796, 0.12930, -0.13901, -0.07431, -0.16348, -0.74857, -0.73206, -0.35181, -0.26227, -0.41882, -0.27786, -0.19806, -0.19867, 0.18643, 0.24808, 0.08847, -0.06964, 0.06912, 0.20474, -0.05304, 0.29416, 0.31967, 0.14243, 0.27521, -0.23932, -0.14752, 0.12360, -0.26123, -0.26111, 0.06616, 0.26520, 0.08090, 0.15240, 0.16254, -0.12061, 0.04562, 0.00131, 0.04050, 0.08182, -0.21729, -0.17041, -0.16312, -0.08563, 0.06390, 0.05099, 0.05627, 0.02728, 0.00726, -0.13028, -0.05673, -0.14969, -0.17645, 0.35492, 0.16766, -0.00897, 0.24326, -0.00461, -0.04456, 0.01776, -0.04950, -0.01221, 0.02039, 0.07684, 0.13397, 0.39850, 0.35962, 0.13754, 0.42310, 0.27161, -0.17609, 0.03659, 0.10635, -0.21909, -0.22046, -0.20258, -0.40973, -0.40280, -0.40521, -0.66284]) },\n]);\nConfig.chipWaves = rawChipToIntegrated(_a.rawChipWaves);\nConfig.rawRawChipWaves = _a.rawChipWaves;\nConfig.firstIndexForSamplesInChipWaveList = _a.chipWaves.length;\nConfig.chipNoises = toNameMap([\n    { name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n    { name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\n    { name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\n    { name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"static\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"1-bit white\", expression: 0.5, basePitch: 74.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"1-bit metallic\", expression: 0.5, basePitch: 86.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"crackling\", expression: 0.9, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"pink\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n    { name: \"brownian\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n]);\nConfig.filterFreqStep = 1.0 / 4.0;\nConfig.filterFreqRange = 34;\nConfig.filterFreqReferenceSetting = 28;\nConfig.filterFreqReferenceHz = 8000.0;\nConfig.filterFreqMaxHz = _a.filterFreqReferenceHz * Math.pow(2.0, _a.filterFreqStep * (_a.filterFreqRange - 1 - _a.filterFreqReferenceSetting));\nConfig.filterFreqMinHz = 8.0;\nConfig.filterGainRange = 15;\nConfig.filterGainCenter = 7;\nConfig.filterGainStep = 1.0 / 2.0;\nConfig.filterMaxPoints = 12;\nConfig.filterTypeNames = [\"low-pass\", \"high-pass\", \"peak\"];\nConfig.filterMorphCount = 10;\nConfig.filterSimpleCutRange = 11;\nConfig.filterSimplePeakRange = 8;\nConfig.fadeInRange = 10;\nConfig.fadeOutTicks = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\nConfig.fadeOutNeutral = 4;\nConfig.drumsetFadeOutTicks = 48;\nConfig.transitions = toNameMap([\n    { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\n    { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n    { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n    { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\n    { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false }\n]);\nConfig.vibratos = toNameMap([\n    { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\n    { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\n    { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 },\n    { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\n    { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\n]);\nConfig.vibratoTypes = toNameMap([\n    { name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\n    { name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 },\n]);\nConfig.arpSpeedScale = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\nConfig.unisons = toNameMap([\n    { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\n    { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\n    { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\n    { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\n    { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\n    { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\n    { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\n    { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 },\n    { name: \"hecking gosh\", voices: 2, spread: 6.25, offset: -6.0, expression: 0.8, sign: -0.7 },\n    { name: \"spinner\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"detune\", voices: 1, spread: 0.0, offset: 0.25, expression: 1.0, sign: 1.0 },\n    { name: \"rising\", voices: 2, spread: 1.0, offset: 0.7, expression: 0.95, sign: 1.0 },\n    { name: \"vibrate\", voices: 2, spread: 3.5, offset: 7, expression: 0.975, sign: 1.0 },\n    { name: \"fourths\", voices: 2, spread: 4, offset: 4, expression: 0.95, sign: 1.0 },\n    { name: \"bass\", voices: 1, spread: 0, offset: -7, expression: 1.0, sign: 1.0 },\n    { name: \"dirty\", voices: 2, spread: 0, offset: 0.1, expression: 0.975, sign: 1.0 },\n    { name: \"stationary\", voices: 2, spread: 3.5, offset: 0.0, expression: 0.9, sign: 1.0 },\n    { name: \"recurve\", voices: 2, spread: 0.005, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"voiced\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"fluctuate\", voices: 2, spread: 12, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"thin\", voices: 1, spread: 0.0, offset: 50.0, expression: 1.0, sign: 1.0 },\n    { name: \"inject\", voices: 2, spread: 6.0, offset: 0.4, expression: 1.0, sign: 1.0 },\n    { name: \"askewed\", voices: 2, spread: 0.0, offset: 0.42, expression: 0.7, sign: 1.0 },\n    { name: \"resonance\", voices: 2, spread: 0.0025, offset: 0.1, expression: 0.8, sign: -1.5 },\n    { name: \"FART\", voices: 2, spread: 13, offset: -5, expression: 1.0, sign: -3 },\n    { name: \"augmented\", voices: 4, spread: 6, offset: 6, expression: 0.5, sign: 1.0 },\n    { name: \"diminished\", voices: 5, spread: 6, offset: 6, expression: 0.4, sign: 1.0 },\n    { name: \"chorus\", voices: 9, spread: 0.22, offset: 0, expression: 0.15, sign: 1.0 },\n    { name: \"block\", voices: 9, spread: 6, offset: 6, expression: 0.15, sign: 0.8 },\n    { name: \"extraterrestrial\", voices: 6, spread: 15.2, offset: -6, expression: 0.35, sign: 0.7 },\n    { name: \"bow\", voices: 9, spread: 0.006, offset: 0, expression: 0.15, sign: 0.5 }\n]);\nConfig.effectNames = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\", \"\", \"ring mod\", \"granular\"];\nConfig.effectOrder = [2, 10, 11, 7, 8, 9, 5, 14, 3, 4, 1, 6, 0, 13];\nConfig.noteSizeMax = 6;\nConfig.volumeRange = 50;\nConfig.volumeLogScale = 0.1428;\nConfig.panCenter = 50;\nConfig.panMax = _a.panCenter * 2;\nConfig.panDelaySecondsMax = 0.001;\nConfig.ringModRange = 8;\nConfig.ringModHzRange = 64;\nConfig.ringModMinHz = 20;\nConfig.ringModMaxHz = 4400;\nConfig.rmHzOffsetCenter = 200;\nConfig.rmHzOffsetMax = 400;\nConfig.rmHzOffsetMin = 0;\nConfig.granularRange = 10;\nConfig.grainSizeMin = 40;\nConfig.grainSizeMax = 2000;\nConfig.grainSizeStep = 40;\nConfig.grainRangeMax = 1600;\nConfig.grainAmountsMax = 10;\nConfig.granularEnvelopeType = 0;\nConfig.chorusRange = 8;\nConfig.chorusPeriodSeconds = 2.0;\nConfig.chorusDelayRange = 0.0034;\nConfig.chorusDelayOffsets = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\nConfig.chorusPhaseOffsets = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\nConfig.chorusMaxDelay = _a.chorusDelayRange * (1.0 + _a.chorusDelayOffsets[0].concat(_a.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\nConfig.chords = toNameMap([\n    { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\n    { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\n    { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\n    { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\n    { name: \"monophonic\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: true }\n]);\nConfig.maxChordSize = 9;\nConfig.operatorCount = 4;\nConfig.maxPitchOrOperatorCount = Math.max(_a.maxChordSize, _a.operatorCount + 2);\nConfig.algorithms = toNameMap([\n    { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\n    { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\n    { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\n    { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\n    { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\n    { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\n    { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\n    { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\n    { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\n    { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\n    { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\n    { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\n    { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\n    { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\n    { name: \"1←(2 (3 (4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[2, 3, 4], [3, 4], [4], []] },\n]);\nConfig.algorithms6Op = toNameMap([\n    { name: \"Custom\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n    { name: \"1←2←3←4←5←6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2], [3], [4], [5], [6], []] },\n    { name: \"1←3 2←4←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5], [6], []] },\n    { name: \"1←3←4 2←5←6\", carrierCount: 2, associatedCarrier: [1, 1, 1, 2, 2, 2], modulatedBy: [[3], [5], [4], [], [6], []] },\n    { name: \"1←4 2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [5], [6], [], [], []] },\n    { name: \"1←3 2←(4 5←6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [], [6], []] },\n    { name: \"1←(3 4) 2←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [5], [], [], [6], []] },\n    { name: \"1←3 2←(4 5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5, 6], [], [], [], []] },\n    { name: \"1←3 2←(4 5)←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [6], [6], []] },\n    { name: \"1←3 2←4←(5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5, 6], [], []] },\n    { name: \"1←(2 3 4 5 6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n    { name: \"1←(2 3←5 4←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [5], [6], [], []] },\n    { name: \"1←(2 3 4←5←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], [5], [6], []] },\n    { name: \"1←4←5 (2 3)←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [6], [6], [5], [], []] },\n    { name: \"1←(3 4)←5 2←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [6], [5], [5], [], []] },\n    { name: \"(1 2)←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [4], [5, 6], [], [], []] },\n    { name: \"(1 2)←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [5], [6], [6], [], []] },\n    { name: \"(1 2 3)←(4 5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4, 5, 6], [4, 5, 6], [4, 5, 6], [], [], []] },\n    { name: \"1←5 (2 3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [6], [6], [6], [], []] },\n    { name: \"1 2←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [5], [6], [6], [], []] },\n    { name: \"1 2 (3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [6], [6], [6], []] },\n    { name: \"1 2 3 (4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [6], [6], []] },\n    { name: \"1 2←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3], modulatedBy: [[], [4], [5, 6], [], [], []] },\n    { name: \"1←4 2←(5 6) 3\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3,], modulatedBy: [[4], [5, 6], [], [], [], []] },\n    { name: \"1 2 3←5 4←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5], [6], [], []] },\n    { name: \"1 (2 3)←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4,], modulatedBy: [[], [5], [5], [], [6], []] },\n    { name: \"1 2 3←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5, 6], [], [], []] },\n    { name: \"(1 2 3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[6], [6], [6], [6], [6], []] },\n    { name: \"1 2 3 4 5←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [], [6], []] },\n    { name: \"1 2 3 4 5 6\", carrierCount: 6, associatedCarrier: [1, 2, 3, 4, 5, 6], modulatedBy: [[], [], [], [], [], []] },\n    { name: \"1←(2 (3 (4 (5 (6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n    { name: \"1←(2(3(4(5(6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n    { name: \"1←4(2←5(3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [3, 5], [6], [], [], []] },\n    { name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] },\n]);\nConfig.operatorCarrierInterval = [0.0, 0.04, -0.073, 0.091, 0.061, 0.024];\nConfig.operatorAmplitudeMax = 15;\nConfig.operatorFrequencies = toNameMap([\n    { name: \"0.12×\", mult: 0.125, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"0.75×\", mult: 0.75, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\n    { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\n    { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\n    { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~4×\", mult: 4.0, hzOffset: -2.4, amplitudeSign: -1.0 },\n    { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"10×\", mult: 10.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"12×\", mult: 12.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"14×\", mult: 14.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"15×\", mult: 15.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"17×\", mult: 17.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"18×\", mult: 18.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"19×\", mult: 19.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~20×\", mult: 20.0, hzOffset: -5.0, amplitudeSign: -1.0 },\n    { name: \"25×\", mult: 25.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"50×\", mult: 50.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"75×\", mult: 75.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"100×\", mult: 100.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"128×\", mult: 128.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"256×\", mult: 250.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n]);\nConfig.envelopes = toNameMap([\n    { name: \"none\", type: 0, speed: 1.0 },\n    { name: \"note size\", type: 1, speed: 1.0 },\n    { name: \"pitch\", type: 2, speed: 1.0 },\n    { name: \"punch\", type: 4, speed: 1.0 },\n    { name: \"flare -1\", type: 5, speed: 128.0 },\n    { name: \"flare 1\", type: 5, speed: 32.0 },\n    { name: \"flare 2\", type: 5, speed: 8.0 },\n    { name: \"flare 3\", type: 5, speed: 2.0 },\n    { name: \"twang -1\", type: 6, speed: 128.0 },\n    { name: \"twang 1\", type: 6, speed: 32.0 },\n    { name: \"twang 2\", type: 6, speed: 8.0 },\n    { name: \"twang 3\", type: 6, speed: 2.0 },\n    { name: \"swell -1\", type: 7, speed: 128.0 },\n    { name: \"swell 1\", type: 7, speed: 32.0 },\n    { name: \"swell 2\", type: 7, speed: 8.0 },\n    { name: \"swell 3\", type: 7, speed: 2.0 },\n    { name: \"tremolo0\", type: 8, speed: 8.0 },\n    { name: \"tremolo1\", type: 8, speed: 4.0 },\n    { name: \"tremolo2\", type: 8, speed: 2.0 },\n    { name: \"tremolo3\", type: 8, speed: 1.0 },\n    { name: \"tremolo4\", type: 9, speed: 4.0 },\n    { name: \"tremolo5\", type: 9, speed: 2.0 },\n    { name: \"tremolo6\", type: 9, speed: 1.0 },\n    { name: \"decay -1\", type: 10, speed: 40.0 },\n    { name: \"decay 1\", type: 10, speed: 10.0 },\n    { name: \"decay 2\", type: 10, speed: 7.0 },\n    { name: \"decay 3\", type: 10, speed: 4.0 },\n    { name: \"wibble-1\", type: 11, speed: 128.0 },\n    { name: \"wibble 1\", type: 11, speed: 24.0 },\n    { name: \"wibble 2\", type: 11, speed: 12.0 },\n    { name: \"wibble 3\", type: 11, speed: 4.0 },\n    { name: \"linear-2\", type: 12, speed: 256.0 },\n    { name: \"linear-1\", type: 12, speed: 128.0 },\n    { name: \"linear 1\", type: 12, speed: 32.0 },\n    { name: \"linear 2\", type: 12, speed: 8.0 },\n    { name: \"linear 3\", type: 12, speed: 2.0 },\n    { name: \"rise -2\", type: 13, speed: 256.0 },\n    { name: \"rise -1\", type: 13, speed: 128.0 },\n    { name: \"rise 1\", type: 13, speed: 32.0 },\n    { name: \"rise 2\", type: 13, speed: 8.0 },\n    { name: \"rise 3\", type: 13, speed: 2.0 },\n    { name: \"flute 1\", type: 11, speed: 16.0 },\n    { name: \"flute 2\", type: 11, speed: 8.0 },\n    { name: \"flute 3\", type: 11, speed: 4.0 },\n    { name: \"tripolo1\", type: 8, speed: 9.0 },\n    { name: \"tripolo2\", type: 8, speed: 6.0 },\n    { name: \"tripolo3\", type: 8, speed: 3.0 },\n    { name: \"tripolo4\", type: 9, speed: 9.0 },\n    { name: \"tripolo5\", type: 9, speed: 6.0 },\n    { name: \"tripolo6\", type: 9, speed: 3.0 },\n    { name: \"pentolo1\", type: 8, speed: 10.0 },\n    { name: \"pentolo2\", type: 8, speed: 5.0 },\n    { name: \"pentolo3\", type: 8, speed: 2.5 },\n    { name: \"pentolo4\", type: 9, speed: 10.0 },\n    { name: \"pentolo5\", type: 9, speed: 5.0 },\n    { name: \"pentolo6\", type: 9, speed: 2.5 },\n    { name: \"flutter 1\", type: 8, speed: 14.0 },\n    { name: \"flutter 2\", type: 9, speed: 11.0 },\n    { name: \"water-y flutter\", type: 8, speed: 9.0 },\n    { name: \"blip 1\", type: 14, speed: 6.0 },\n    { name: \"blip 2\", type: 14, speed: 16.0 },\n    { name: \"blip 3\", type: 14, speed: 32.0 },\n    { name: \"fall 1\", type: 15, speed: 8.0 },\n    { name: \"fall 2\", type: 15, speed: 4.0 },\n    { name: \"fall 3\", type: 15, speed: 2.0 },\n]);\nConfig.newEnvelopes = toNameMap([\n    { name: \"none\", type: 0, speed: 1.0 },\n    { name: \"note size\", type: 1, speed: 1.0 },\n    { name: \"pitch\", type: 2, speed: 1.0 },\n    { name: \"random\", type: 3, speed: 4.0 },\n    { name: \"punch\", type: 4, speed: 1.0 },\n    { name: \"flare\", type: 5, speed: 32.0 },\n    { name: \"twang\", type: 6, speed: 32.0 },\n    { name: \"swell\", type: 7, speed: 32.0 },\n    { name: \"lfo\", type: 8, speed: 4.0 },\n    { name: \"decay\", type: 10, speed: 10.0 },\n    { name: \"wibble\", type: 11, speed: 24.0 },\n    { name: \"linear\", type: 12, speed: 32.0 },\n    { name: \"rise\", type: 13, speed: 32.0 },\n    { name: \"blip\", type: 14, speed: 6.0 },\n    { name: \"fall\", type: 15, speed: 2.0 },\n]);\nConfig.feedbacks = toNameMap([\n    { name: \"1⟲\", indices: [[1], [], [], []] },\n    { name: \"2⟲\", indices: [[], [2], [], []] },\n    { name: \"3⟲\", indices: [[], [], [3], []] },\n    { name: \"4⟲\", indices: [[], [], [], [4]] },\n    { name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\n    { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\n    { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\n    { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\n    { name: \"1→2\", indices: [[], [1], [], []] },\n    { name: \"1→3\", indices: [[], [], [1], []] },\n    { name: \"1→4\", indices: [[], [], [], [1]] },\n    { name: \"2→3\", indices: [[], [], [2], []] },\n    { name: \"2→4\", indices: [[], [], [], [2]] },\n    { name: \"3→4\", indices: [[], [], [], [3]] },\n    { name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\n    { name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\n    { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\n    { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\n    { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\n    { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\n    { name: \"1→2→3→4→1\", indices: [[4], [1], [2], [3]] },\n    { name: \"(1 2 3)→4\", indices: [[], [], [], [1, 2, 3]] },\n    { name: \"ALL\", indices: [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]] },\n]);\nConfig.feedbacks6Op = toNameMap([\n    { name: \"Custom\", indices: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n    { name: \"1⟲\", indices: [[1], [], [], [], [], []] },\n    { name: \"2⟲\", indices: [[], [2], [], [], [], []] },\n    { name: \"3⟲\", indices: [[], [], [3], [], [], []] },\n    { name: \"4⟲\", indices: [[], [], [], [4], [], []] },\n    { name: \"5⟲\", indices: [[], [], [], [], [5], []] },\n    { name: \"6⟲\", indices: [[], [], [], [], [], [6]] },\n    { name: \"1⟲ 2⟲\", indices: [[1], [2], [], [], [], []] },\n    { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\n    { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], [], [], []] },\n    { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4], [], []] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4], [], []] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲\", indices: [[1], [2], [3], [4], [5], []] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲\", indices: [[1], [2], [3], [4], [5], [6]] },\n    { name: \"1→2\", indices: [[], [1], [], [], [], []] },\n    { name: \"1→3\", indices: [[], [], [1], [], [], []] },\n    { name: \"1→4\", indices: [[], [], [], [1], [], []] },\n    { name: \"1→5\", indices: [[], [], [], [], [1], []] },\n    { name: \"1→6\", indices: [[], [], [], [], [], [1]] },\n    { name: \"2→3\", indices: [[], [], [2], [], [], []] },\n    { name: \"2→4\", indices: [[], [], [], [2], [], []] },\n    { name: \"3→4\", indices: [[], [], [], [3], [], []] },\n    { name: \"4→5\", indices: [[], [], [], [], [4], []] },\n    { name: \"1→4 2→5 3→6\", indices: [[], [], [], [1], [2], [3]] },\n    { name: \"1→5 2→6 3→4\", indices: [[], [], [], [3], [1], [2]] },\n    { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n    { name: \"2→1→6→5→4→3→2\", indices: [[2], [3], [4], [5], [6], [1]] },\n    { name: \"1→2→3→4→5→6→1\", indices: [[6], [1], [2], [3], [4], [5]] },\n    { name: \"1↔2 3↔4 5↔6\", indices: [[2], [1], [4], [3], [6], [5]] },\n    { name: \"1↔4 2↔5 3↔6\", indices: [[4], [5], [6], [1], [2], [3]] },\n    { name: \"(1,2,3,4,5)→6\", indices: [[], [], [], [], [], [1, 2, 3, 4, 5]] },\n    { name: \"ALL\", indices: [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]] },\n]);\nConfig.chipNoiseLength = 1 << 15;\nConfig.spectrumNoiseLength = 1 << 15;\nConfig.spectrumBasePitch = 24;\nConfig.spectrumControlPoints = 30;\nConfig.spectrumControlPointsPerOctave = 7;\nConfig.spectrumControlPointBits = 3;\nConfig.spectrumMax = (1 << _a.spectrumControlPointBits) - 1;\nConfig.harmonicsControlPoints = 28;\nConfig.harmonicsRendered = 64;\nConfig.harmonicsRenderedForPickedString = 1 << 8;\nConfig.harmonicsControlPointBits = 3;\nConfig.harmonicsMax = (1 << _a.harmonicsControlPointBits) - 1;\nConfig.harmonicsWavelength = 1 << 11;\nConfig.pulseWidthRange = 50;\nConfig.pulseWidthStepPower = 0.5;\nConfig.supersawVoiceCount = 7;\nConfig.supersawDynamismMax = 6;\nConfig.supersawSpreadMax = 12;\nConfig.supersawShapeMax = 6;\nConfig.pitchChannelCountMin = 1;\nConfig.pitchChannelCountMax = 60;\nConfig.noiseChannelCountMin = 0;\nConfig.noiseChannelCountMax = 60;\nConfig.modChannelCountMin = 0;\nConfig.modChannelCountMax = 60;\nConfig.noiseInterval = 6;\nConfig.pitchesPerOctave = 12;\nConfig.drumCount = 12;\nConfig.pitchOctaves = 8;\nConfig.modCount = 6;\nConfig.maxPitch = _a.pitchOctaves * _a.pitchesPerOctave;\nConfig.maximumTonesPerChannel = _a.maxChordSize * 2;\nConfig.justIntonationSemitones = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * _a.pitchesPerOctave);\nConfig.pitchShiftRange = _a.justIntonationSemitones.length;\nConfig.pitchShiftCenter = _a.pitchShiftRange >> 1;\nConfig.detuneCenter = 200;\nConfig.detuneMax = 400;\nConfig.detuneMin = 0;\nConfig.songDetuneMin = 0;\nConfig.songDetuneMax = 500;\nConfig.unisonVoicesMin = 1;\nConfig.unisonVoicesMax = 9;\nConfig.unisonSpreadMin = -96;\nConfig.unisonSpreadMax = 96;\nConfig.unisonOffsetMin = -96;\nConfig.unisonOffsetMax = 96;\nConfig.unisonExpressionMin = -2;\nConfig.unisonExpressionMax = 2;\nConfig.unisonSignMin = -2;\nConfig.unisonSignMax = 2;\nConfig.sineWaveLength = 1 << 8;\nConfig.sineWaveMask = _a.sineWaveLength - 1;\nConfig.sineWave = _a.generateSineWave();\nConfig.perEnvelopeSpeedIndices = [0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.2, 0.25, 0.3, 0.3333, 0.4, 0.5, 0.6, 0.6667, 0.7, 0.75, 0.8, 0.9, 1, 1.25, 1.3333, 1.5, 1.6667, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 32, 40, 64, 128, 256];\nConfig.perEnvelopeSpeedToIndices = {\n    0: 0,\n    0.01: 1,\n    0.02: 2,\n    0.03: 3,\n    0.04: 4,\n    0.05: 5,\n    0.06: 6,\n    0.07: 7,\n    0.08: 8,\n    0.09: 9,\n    0.1: 10,\n    0.2: 11,\n    0.25: 12,\n    0.3: 13,\n    0.3333: 14,\n    0.4: 15,\n    0.5: 16,\n    0.6: 17,\n    0.6667: 18,\n    0.7: 19,\n    0.75: 20,\n    0.8: 21,\n    0.9: 22,\n    1: 23,\n    1.25: 24,\n    1.3333: 25,\n    1.5: 26,\n    1.6667: 27,\n    1.75: 28,\n    2: 29,\n    2.25: 30,\n    2.5: 31,\n    2.75: 32,\n    3: 33,\n    3.5: 34,\n    4: 35,\n    4.5: 36,\n    5: 37,\n    5.5: 38,\n    6: 39,\n    6.5: 40,\n    7: 41,\n    7.5: 42,\n    8: 43,\n    8.5: 44,\n    9: 45,\n    9.5: 46,\n    10: 47,\n    11: 48,\n    12: 49,\n    13: 50,\n    14: 51,\n    15: 52,\n    16: 53,\n    17: 54,\n    18: 55,\n    19: 56,\n    20: 57,\n    24: 58,\n    32: 59,\n    40: 60,\n    64: 61,\n    128: 62,\n    256: 63,\n};\nConfig.perEnvelopeBoundMin = 0;\nConfig.perEnvelopeBoundMax = 2;\nConfig.randomEnvelopeSeedMax = 63;\nConfig.randomEnvelopeStepsMax = 32;\nConfig.pickedStringDispersionCenterFreq = 6000.0;\nConfig.pickedStringDispersionFreqScale = 0.3;\nConfig.pickedStringDispersionFreqMult = 4.0;\nConfig.pickedStringShelfHz = 4000.0;\nConfig.distortionRange = 8;\nConfig.stringSustainRange = 15;\nConfig.stringDecayRate = 0.12;\nConfig.enableAcousticSustain = false;\nConfig.sustainTypeNames = [\"bright\", \"acoustic\"];\nConfig.bitcrusherFreqRange = 14;\nConfig.bitcrusherOctaveStep = 0.5;\nConfig.bitcrusherQuantizationRange = 8;\nConfig.maxEnvelopeCount = 16;\nConfig.defaultAutomationRange = 13;\nConfig.instrumentAutomationTargets = toNameMap([\n    { name: \"none\", computeIndex: null, displayName: \"none\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: null },\n    { name: \"noteVolume\", computeIndex: 0, displayName: \"note volume\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: null },\n    { name: \"pulseWidth\", computeIndex: 2, displayName: \"pulse width\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [6, 8] },\n    { name: \"stringSustain\", computeIndex: 3, displayName: \"sustain\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [7] },\n    { name: \"unison\", computeIndex: 4, displayName: \"unison\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [0, 5, 7, 9, 6, 2, 3, 4] },\n    { name: \"operatorFrequency\", computeIndex: 5, displayName: \"fm# freq\", interleave: true, isFilter: false, maxCount: _a.operatorCount + 2, effect: null, compatibleInstruments: [1, 11] },\n    { name: \"operatorAmplitude\", computeIndex: 11, displayName: \"fm# volume\", interleave: false, isFilter: false, maxCount: _a.operatorCount + 2, effect: null, compatibleInstruments: [1, 11] },\n    { name: \"feedbackAmplitude\", computeIndex: 17, displayName: \"fm feedback\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [1, 11] },\n    { name: \"pitchShift\", computeIndex: 18, displayName: \"pitch shift\", interleave: false, isFilter: false, maxCount: 1, effect: 7, compatibleInstruments: null },\n    { name: \"detune\", computeIndex: 19, displayName: \"detune\", interleave: false, isFilter: false, maxCount: 1, effect: 8, compatibleInstruments: null },\n    { name: \"vibratoDepth\", computeIndex: 20, displayName: \"vibrato depth\", interleave: false, isFilter: false, maxCount: 1, effect: 9, compatibleInstruments: null },\n    { name: \"noteFilterAllFreqs\", computeIndex: 1, displayName: \"n. filter freqs\", interleave: false, isFilter: true, maxCount: 1, effect: 5, compatibleInstruments: null },\n    { name: \"noteFilterFreq\", computeIndex: 21, displayName: \"n. filter # freq\", interleave: false, isFilter: true, maxCount: _a.filterMaxPoints, effect: 5, compatibleInstruments: null },\n    { name: \"decimalOffset\", computeIndex: 37, displayName: \"decimal offset\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [6, 8] },\n    { name: \"supersawDynamism\", computeIndex: 38, displayName: \"dynamism\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [8] },\n    { name: \"supersawSpread\", computeIndex: 39, displayName: \"spread\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [8] },\n    { name: \"supersawShape\", computeIndex: 40, displayName: \"saw↔pulse\", interleave: false, isFilter: false, maxCount: 1, effect: null, compatibleInstruments: [8] },\n    { name: \"panning\", computeIndex: 41, displayName: \"panning\", interleave: false, isFilter: false, maxCount: 1, effect: 2, compatibleInstruments: null },\n    { name: \"distortion\", computeIndex: 42, displayName: \"distortion\", interleave: false, isFilter: false, maxCount: 1, effect: 3, compatibleInstruments: null },\n    { name: \"bitcrusherQuantization\", computeIndex: 43, displayName: \"bitcrush\", interleave: false, isFilter: false, maxCount: 1, effect: 4, compatibleInstruments: null },\n    { name: \"bitcrusherFrequency\", computeIndex: 44, displayName: \"freq crush\", interleave: false, isFilter: false, maxCount: 1, effect: 4, compatibleInstruments: null },\n    { name: \"chorus\", computeIndex: 45, displayName: \"chorus\", interleave: false, isFilter: false, maxCount: 1, effect: 1, compatibleInstruments: null },\n    { name: \"echoSustain\", computeIndex: 46, displayName: \"echo\", interleave: false, isFilter: false, maxCount: 1, effect: 6, compatibleInstruments: null },\n    { name: \"reverb\", computeIndex: 47, displayName: \"reverb\", interleave: false, isFilter: false, maxCount: 1, effect: 0, compatibleInstruments: null },\n    { name: \"arpeggioSpeed\", computeIndex: 48, displayName: \"arpeggio speed\", interleave: false, isFilter: false, maxCount: 1, effect: 11, compatibleInstruments: null },\n    { name: \"ringModulation\", computeIndex: 49, displayName: \"ring mod\", interleave: false, isFilter: false, maxCount: 1, effect: 13, compatibleInstruments: null },\n    { name: \"ringModulationHz\", computeIndex: 50, displayName: \"ring mod hz\", interleave: false, isFilter: false, maxCount: 1, effect: 13, compatibleInstruments: null },\n    { name: \"granular\", computeIndex: 51, displayName: \"granular\", interleave: false, isFilter: false, maxCount: 1, effect: 14, compatibleInstruments: null },\n    { name: \"grainFreq\", computeIndex: 52, displayName: \"grain freq\", interleave: false, isFilter: false, maxCount: 1, effect: 14, compatibleInstruments: null },\n    { name: \"grainSize\", computeIndex: 53, displayName: \"grain size\", interleave: false, isFilter: false, maxCount: 1, effect: 14, compatibleInstruments: null },\n    { name: \"grainRange\", computeIndex: 54, displayName: \"grain range\", interleave: false, isFilter: false, maxCount: 1, effect: 14, compatibleInstruments: null },\n    { name: \"echoDelay\", computeIndex: 55, displayName: \"echo delay\", interleave: false, isFilter: false, maxCount: 1, effect: 6, compatibleInstruments: null },\n]);\nConfig.operatorWaves = toNameMap([\n    { name: \"sine\", samples: _a.sineWave },\n    { name: \"triangle\", samples: _a.generateTriWave() },\n    { name: \"pulse width\", samples: _a.generateSquareWave(0.5) },\n    { name: \"sawtooth\", samples: _a.generateSawWave() },\n    { name: \"ramp\", samples: _a.generateSawWave(true) },\n    { name: \"trapezoid\", samples: _a.generateTrapezoidWave(2) },\n    { name: \"quasi-sine\", samples: _a.generateQuasiSineWave() },\n]);\nConfig.pwmOperatorWaves = toNameMap([\n    { name: \"1%\", samples: _a.generateSquareWave(0.01) },\n    { name: \"5%\", samples: _a.generateSquareWave(0.05) },\n    { name: \"12.5%\", samples: _a.generateSquareWave(0.125) },\n    { name: \"25%\", samples: _a.generateSquareWave(0.25) },\n    { name: \"33%\", samples: _a.generateSquareWave(1 / 3) },\n    { name: \"50%\", samples: _a.generateSquareWave(0.5) },\n    { name: \"66%\", samples: _a.generateSquareWave(2 / 3) },\n    { name: \"75%\", samples: _a.generateSquareWave(0.75) },\n    { name: \"87.5%\", samples: _a.generateSquareWave(0.875) },\n    { name: \"95%\", samples: _a.generateSquareWave(0.95) },\n    { name: \"99%\", samples: _a.generateSquareWave(0.99) },\n]);\nConfig.barEditorHeight = 10;\nConfig.modulators = toNameMap([\n    { name: \"none\", pianoName: \"None\", maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"No Mod Setting\", promptDesc: [\"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\"] },\n    { name: \"song volume\", pianoName: \"Volume\", maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Song Volume\", promptDesc: [\"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"tempo\", pianoName: \"Tempo\", maxRawVol: _a.tempoMax - _a.tempoMin, newNoteVol: Math.ceil((_a.tempoMax - _a.tempoMin) / 2), forSong: true, convertRealFactor: _a.tempoMin, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Song Tempo\", promptDesc: [\"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\"] },\n    { name: \"song reverb\", pianoName: \"Reverb\", maxRawVol: _a.reverbRange * 2, newNoteVol: _a.reverbRange, forSong: true, convertRealFactor: -_a.reverbRange, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Song Reverb\", promptDesc: [\"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n    { name: \"next bar\", pianoName: \"Next Bar\", maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Go To Next Bar\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\"] },\n    { name: \"note volume\", pianoName: \"Note Vol.\", maxRawVol: _a.volumeRange, newNoteVol: Math.ceil(_a.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-_a.volumeRange / 2.0), associatedEffect: 15, maxIndex: 0,\n        promptName: \"Note Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n    { name: \"pan\", pianoName: \"Pan\", maxRawVol: _a.panMax, newNoteVol: Math.ceil(_a.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: 2, maxIndex: 0,\n        promptName: \"Instrument Panning\", promptDesc: [\"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\"] },\n    { name: \"reverb\", pianoName: \"Reverb\", maxRawVol: _a.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 0, maxIndex: 0,\n        promptName: \"Instrument Reverb\", promptDesc: [\"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"distortion\", pianoName: \"Distortion\", maxRawVol: _a.distortionRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 3, maxIndex: 0,\n        promptName: \"Instrument Distortion\", promptDesc: [\"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"fm slider 1\", pianoName: \"FM 1\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 1\", promptDesc: [\"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 2\", pianoName: \"FM 2\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 2\", promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 3\", pianoName: \"FM 3\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 3\", promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 4\", pianoName: \"FM 4\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 4\", promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm feedback\", pianoName: \"FM Feedbck\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Feedback\", promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"pulse width\", pianoName: \"Pulse Width\", maxRawVol: _a.pulseWidthRange, newNoteVol: _a.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Pulse Width\", promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\n    { name: \"detune\", pianoName: \"Detune\", maxRawVol: _a.detuneMax - _a.detuneMin, newNoteVol: _a.detuneCenter, forSong: false, convertRealFactor: -_a.detuneCenter, associatedEffect: 8, maxIndex: 0,\n        promptName: \"Instrument Detune\", promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\n    { name: \"vibrato depth\", pianoName: \"Vibrato Depth\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 9, maxIndex: 0,\n        promptName: \"Vibrato Depth\", promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\n    { name: \"song detune\", pianoName: \"Detune\", maxRawVol: _a.songDetuneMax - _a.songDetuneMin, newNoteVol: Math.ceil((_a.songDetuneMax - _a.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Song Detune\", promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [cents x4]\"] },\n    { name: \"vibrato speed\", pianoName: \"Vibrato Speed\", maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 9, maxIndex: 0,\n        promptName: \"Vibrato Speed\", promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"vibrato delay\", pianoName: \"Vibrato Delay\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 9, maxIndex: 0,\n        promptName: \"Vibrato Delay\", promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\n    { name: \"arp speed\", pianoName: \"Arp Speed\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: 11, maxIndex: 0,\n        promptName: \"Arpeggio Speed\", promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\n            \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\", \"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"pan delay\", pianoName: \"Pan Delay\", maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: 2, maxIndex: 0,\n        promptName: \"Panning Delay\", promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"reset arp\", pianoName: \"Reset Arp\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: 11, maxIndex: 0,\n        promptName: \"Reset Arpeggio\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\n    { name: \"eq filter\", pianoName: \"EQFlt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"EQ Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"note filter\", pianoName: \"N.Flt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 5, maxIndex: 0,\n        promptName: \"Note Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"bit crush\", pianoName: \"Bitcrush\", maxRawVol: _a.bitcrusherQuantizationRange - 1, newNoteVol: Math.round(_a.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: 4, maxIndex: 0,\n        promptName: \"Instrument Bit Crush\", promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"freq crush\", pianoName: \"Freq Crush\", maxRawVol: _a.bitcrusherFreqRange - 1, newNoteVol: Math.round(_a.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: 4, maxIndex: 0,\n        promptName: \"Instrument Frequency Crush\", promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"echo\", pianoName: \"Echo\", maxRawVol: _a.echoSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Echo Sustain\", promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"echo delay\", pianoName: \"Echo Delay\", maxRawVol: _a.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Echo Delay\", promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\"]\n    },\n    { name: \"chorus\", pianoName: \"Chorus\", maxRawVol: _a.chorusRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 1, maxIndex: 0,\n        promptName: \"Instrument Chorus\", promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"eq filt cut\", pianoName: \"EQFlt Cut\", maxRawVol: _a.filterSimpleCutRange - 1, newNoteVol: _a.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"EQ Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"eq filt peak\", pianoName: \"EQFlt Peak\", maxRawVol: _a.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"EQ Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"note filt cut\", pianoName: \"N.Flt Cut\", maxRawVol: _a.filterSimpleCutRange - 1, newNoteVol: _a.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: 5, maxIndex: 0,\n        promptName: \"Note Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"note filt peak\", pianoName: \"N.Flt Peak\", maxRawVol: _a.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 5, maxIndex: 0,\n        promptName: \"Note Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"pitch shift\", pianoName: \"Pitch Shift\", maxRawVol: _a.pitchShiftRange - 1, newNoteVol: _a.pitchShiftCenter, forSong: false, convertRealFactor: -_a.pitchShiftCenter, associatedEffect: 7, maxIndex: 0,\n        promptName: \"Pitch Shift\", promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\n    { name: \"sustain\", pianoName: \"Sustain\", maxRawVol: _a.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Picked String Sustain\", promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"mix volume\", pianoName: \"Mix Vol.\", maxRawVol: _a.volumeRange, newNoteVol: Math.ceil(_a.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-_a.volumeRange / 2.0), associatedEffect: 15, maxIndex: 0,\n        promptName: \"Mix Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n    { name: \"fm slider 5\", pianoName: \"FM 5\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 5\", promptDesc: [\"This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 6\", pianoName: \"FM 6\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"FM Slider 6\", promptDesc: [\"This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"decimal offset\", pianoName: \"Decimal Offset\", maxRawVol: 99, newNoteVol: 0, forSong: false, convertRealFactor: 0, invertSliderIndicator: true, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Decimal Offset\", promptDesc: [\"This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.\", \"[$LO - $HI]\"] },\n    { name: \"envelope speed\", pianoName: \"EnvelopeSpd\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Envelope Speed\", promptDesc: [\"This setting controls how fast all of the envelopes for the instrument play.\", \"At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:\",\n            \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\", \"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"dynamism\", pianoName: \"Dynamism\", maxRawVol: _a.supersawDynamismMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Supersaw Dynamism\", promptDesc: [\"This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.\", \"At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"spread\", pianoName: \"Spread\", maxRawVol: _a.supersawSpreadMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Supersaw Spread\", promptDesc: [\"This setting controls the supersaw spread of your instrument, just like the spread slider.\", \"At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"saw shape\", pianoName: \"Saw Shape\", maxRawVol: _a.supersawShapeMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Supersaw Shape\", promptDesc: [\"This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.\", \"As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\n    { name: \"individual envelope speed\", pianoName: \"IndvEnvSpd\", maxRawVol: 63, newNoteVol: 23, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Individual Envelope Speed\", promptDesc: [\"This setting controls how fast the specified envelope of the instrument will play.\", \"At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:\",\n            \"[0-4]: x0, x0.01, x0.02, x0.03, x0.04,\", \"[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,\", \"[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,\", \"[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,\", \"[20-24]: x0.75, x0.8, x0.9, x1, x1.25,\", \"[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,\", \"[30-34]: x2.25, x2.5, x2.75, x3, x3.5,\", \"[35-39]: x4, x4.5, x5, x5.5, x6,\", \"[40-44]: x6.5, x7, x7.5, x8, x8.5,\", \"[45-49]: x9, x9.5, x10, x11, x12\", \"[50-54]: x13, x14, x15, x16, x17\", \"[55-59]: x18, x19, x20, x24, x32\", \"[60-63]: x40, x64, x128, x256\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"song eq\", pianoName: \"Song EQ\", maxRawVol: 10, newNoteVol: 0, forSong: true, convertRealFactor: 0, associatedEffect: 15, maxIndex: 0,\n        promptName: \"Song EQ Filter\", promptDesc: [\"This setting overwrites every instrument's eq filter. You can do this in a few separate ways, similar to the per instrument eq filter modulator.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"reset envelope\", pianoName: \"ResetEnv\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Reset Envelope\", promptDesc: [\"This setting functions a lot like the reset arp modulator. Wherever a note is placed, the envelope of this instrument at the specified index will reset at the very start of that note. \", \"[$LO - $HI]\",] },\n    { name: \"ring modulation\", pianoName: \"Ring Mod\", maxRawVol: _a.ringModRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 13, maxIndex: 0,\n        promptName: \"Ring Modulation\", promptDesc: [\"This setting controls the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"ring mod hertz\", pianoName: \"Ring Mod(Hz)\", maxRawVol: _a.ringModHzRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 13, maxIndex: 0,\n        promptName: \"Ring Modulation (Hertz)\", promptDesc: [\"This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"granular\", pianoName: \"Granular\", maxRawVol: _a.granularRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 14, maxIndex: 0,\n        promptName: \"Granular\", promptDesc: [\"This setting controls the granular effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"grain freq\", pianoName: \"Grain #\", maxRawVol: _a.grainAmountsMax, newNoteVol: 8, forSong: false, convertRealFactor: 0, associatedEffect: 14, maxIndex: 0,\n        promptName: \"Grain Count\", promptDesc: [\"This setting controls the density of grains for the granular effect on your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"grain size\", pianoName: \"Grain Size\", maxRawVol: _a.grainSizeMax / _a.grainSizeStep, newNoteVol: _a.grainSizeMin / _a.grainSizeStep, forSong: false, convertRealFactor: 0, associatedEffect: 14, maxIndex: 0,\n        promptName: \"Grain Size\", promptDesc: [\"This setting controls the grain size of the granular effect in your instrument.\", \"The number shown in the mod channel is multiplied by \" + _a.grainSizeStep + \" to get the actual grain size.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"grain range\", pianoName: \"Grain Range\", maxRawVol: _a.grainRangeMax / _a.grainSizeStep, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 14, maxIndex: 0,\n        promptName: \"Grain Range\", promptDesc: [\"This setting controls the range of values for your grain size of the granular effect in your instrument, from no variation to a lot\", \"The number shown in the mod channel is multiplied by \" + _a.grainSizeStep + \" to get the actual grain size.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"individual envelope lower bound\", pianoName: \"IndvEnvLow\", maxRawVol: _a.perEnvelopeBoundMax * 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Individual Envelope Lower Bound\", promptDesc: [\"This setting controls the envelope lower bound\", \"At $LO, your the envelope will output an upper envelope bound to 0, and at $HI your envelope will output an upper envelope bound to 2.\", \"This settings will not work if your lower envelope bound is higher than your upper envelope bound\",] },\n    { name: \"individual envelope upper bound\", pianoName: \"IndvEnvUp\", maxRawVol: _a.perEnvelopeBoundMax * 10, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: 15, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Individual Envelope Upper Bound\", promptDesc: [\"This setting controls the envelope upper bound\", \"At $LO, your the envelope will output a 0 to lower envelope bound, and at $HI your envelope will output a 2 to lower envelope bound.\", \"This settings will not work if your lower envelope bound is higher than your upper envelope bound\",] },\n]);\nfunction centerWave(wave) {\n    let sum = 0.0;\n    for (let i = 0; i < wave.length; i++)\n        sum += wave[i];\n    const average = sum / wave.length;\n    for (let i = 0; i < wave.length; i++)\n        wave[i] -= average;\n    performIntegral(wave);\n    wave.push(0);\n    return new Float32Array(wave);\n}\nfunction centerAndNormalizeWave(wave) {\n    let magn = 0.0;\n    centerWave(wave);\n    for (let i = 0; i < wave.length - 1; i++) {\n        magn += Math.abs(wave[i]);\n    }\n    const magnAvg = magn / (wave.length - 1);\n    for (let i = 0; i < wave.length - 1; i++) {\n        wave[i] = wave[i] / magnAvg;\n    }\n    return new Float32Array(wave);\n}\nexport function performIntegral(wave) {\n    let cumulative = 0.0;\n    let newWave = new Float32Array(wave.length);\n    for (let i = 0; i < wave.length; i++) {\n        newWave[i] = cumulative;\n        cumulative += wave[i];\n    }\n    return newWave;\n}\nexport function performIntegralOld(wave) {\n    let cumulative = 0.0;\n    for (let i = 0; i < wave.length; i++) {\n        const temp = wave[i];\n        wave[i] = cumulative;\n        cumulative += temp;\n    }\n}\nexport function getPulseWidthRatio(pulseWidth) {\n    return pulseWidth / (Config.pulseWidthRange * 2);\n}\nexport function getDrumWave(index, inverseRealFourierTransform, scaleElementsByFactor) {\n    let wave = Config.chipNoises[index].samples;\n    if (wave == null) {\n        wave = new Float32Array(Config.chipNoiseLength + 1);\n        Config.chipNoises[index].samples = wave;\n        if (index == 0) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 1 << 14;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 1) {\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = Math.random() * 2.0 - 1.0;\n            }\n        }\n        else if (index == 2) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 2 << 14;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 3) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 4) {\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\n            inverseRealFourierTransform(wave, Config.chipNoiseLength);\n            scaleElementsByFactor(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n        }\n        else if (index == 5) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 6) {\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\n            inverseRealFourierTransform(wave, Config.chipNoiseLength);\n            scaleElementsByFactor(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n        }\n        else if (index == 7) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1) - 8.0;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 15 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 8) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) / 2.0 - 0.5;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer -= 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 9) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 8 ^ 2 << 16;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 10) {\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = Math.round(Math.random());\n            }\n        }\n        else if (index == 11) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = Math.round((drumBuffer & 1));\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer -= 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 12) {\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                var ultraboxnewchipnoiserand = Math.random();\n                wave[i] = Math.pow(ultraboxnewchipnoiserand, Math.clz32(ultraboxnewchipnoiserand));\n            }\n        }\n        else if (index == 13) {\n            var b0 = 0, b1 = 0, b2 = 0, b3, b4, b5, b6;\n            b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                var white = Math.random() * 2 - 1;\n                b0 = 0.99886 * b0 + white * 0.0555179;\n                b1 = 0.99332 * b1 + white * 0.0750759;\n                b2 = 0.96900 * b2 + white * 0.1538520;\n                b3 = 0.86650 * b3 + white * 0.3104856;\n                b4 = 0.55000 * b4 + white * 0.5329522;\n                b5 = -0.7616 * b5 - white * 0.0168980;\n                wave[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n                wave[i] *= 0.44;\n                b6 = white * 0.115926;\n            }\n        }\n        else if (index == 14) {\n            var lastOut = 0.0;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                var white = Math.random() * 2 - 1;\n                wave[i] = (lastOut + (0.02 * white)) / 1.02;\n                lastOut = wave[i];\n                wave[i] *= 14;\n            }\n        }\n        else {\n            throw new Error(\"Unrecognized drum index: \" + index);\n        }\n        wave[Config.chipNoiseLength] = wave[0];\n    }\n    return wave;\n}\nexport function drawNoiseSpectrum(wave, waveLength, lowOctave, highOctave, lowPower, highPower, overallSlope) {\n    const referenceOctave = 11;\n    const referenceIndex = 1 << referenceOctave;\n    const lowIndex = Math.pow(2, lowOctave) | 0;\n    const highIndex = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\n    const retroWave = getDrumWave(0, null, null);\n    let combinedAmplitude = 0.0;\n    for (let i = lowIndex; i < highIndex; i++) {\n        let lerped = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\n        let amplitude = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\n        combinedAmplitude += amplitude;\n        amplitude *= retroWave[i];\n        const radians = 0.61803398875 * i * i * Math.PI * 2.0;\n        wave[i] = Math.cos(radians) * amplitude;\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\n    }\n    return combinedAmplitude;\n}\nexport function getArpeggioPitchIndex(pitchCount, useFastTwoNoteArp, arpeggio) {\n    let arpeggioPattern = Config.arpeggioPatterns[pitchCount - 1];\n    if (arpeggioPattern != null) {\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\n            arpeggioPattern = [0, 0, 1, 1];\n        }\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\n    }\n    else {\n        return arpeggio % pitchCount;\n    }\n}\nexport function toNameMap(array) {\n    const dictionary = {};\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        value.index = i;\n        dictionary[value.name] = value;\n    }\n    const result = array;\n    result.dictionary = dictionary;\n    return result;\n}\nexport function effectsIncludeTransition(effects) {\n    return (effects & (1 << 10)) != 0;\n}\nexport function effectsIncludeChord(effects) {\n    return (effects & (1 << 11)) != 0;\n}\nexport function effectsIncludePitchShift(effects) {\n    return (effects & (1 << 7)) != 0;\n}\nexport function effectsIncludeDetune(effects) {\n    return (effects & (1 << 8)) != 0;\n}\nexport function effectsIncludeVibrato(effects) {\n    return (effects & (1 << 9)) != 0;\n}\nexport function effectsIncludeNoteFilter(effects) {\n    return (effects & (1 << 5)) != 0;\n}\nexport function effectsIncludeDistortion(effects) {\n    return (effects & (1 << 3)) != 0;\n}\nexport function effectsIncludeBitcrusher(effects) {\n    return (effects & (1 << 4)) != 0;\n}\nexport function effectsIncludePanning(effects) {\n    return (effects & (1 << 2)) != 0;\n}\nexport function effectsIncludeChorus(effects) {\n    return (effects & (1 << 1)) != 0;\n}\nexport function effectsIncludeEcho(effects) {\n    return (effects & (1 << 6)) != 0;\n}\nexport function effectsIncludeReverb(effects) {\n    return (effects & (1 << 0)) != 0;\n}\nexport function effectsIncludeRingModulation(effects) {\n    return (effects & (1 << 13)) != 0;\n}\nexport function effectsIncludeGranular(effects) {\n    return (effects & (1 << 14)) != 0;\n}\nexport function effectsIncludeNoteRange(effects) {\n    return (effects & (1 << 12)) != 0;\n}\nexport function calculateRingModHertz(sliderHz, sliderHzOffset = 0) {\n    if (sliderHz == 0)\n        return 0;\n    if (sliderHz > 0)\n        sliderHz -= 1 / Config.ringModHzRange;\n    if (sliderHz > 1 / Config.ringModHzRange)\n        sliderHz += 1 / Config.ringModHzRange;\n    return Math.floor(Config.ringModMinHz * Math.pow(Config.ringModMaxHz / Config.ringModMinHz, sliderHz));\n}\nexport function rawChipToIntegrated(raw) {\n    const newArray = new Array(raw.length);\n    const dictionary = {};\n    for (let i = 0; i < newArray.length; i++) {\n        newArray[i] = Object.assign([], raw[i]);\n        const value = newArray[i];\n        value.index = i;\n        dictionary[value.name] = value;\n    }\n    for (let key in dictionary) {\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\n    }\n    const result = newArray;\n    result.dictionary = dictionary;\n    return result;\n}\n//# sourceMappingURL=SynthConfig.js.map","var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nexport function applyElementArgs(element, args) {\n    var e_1, _a, e_2, _b, e_3, _c;\n    try {\n        for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n            var arg = args_1_1.value;\n            if (arg instanceof Node) {\n                element.appendChild(arg);\n            }\n            else if (typeof arg === \"string\") {\n                element.appendChild(document.createTextNode(arg));\n            }\n            else if (typeof arg === \"function\") {\n                applyElementArgs(element, [arg()]);\n            }\n            else if (Array.isArray(arg)) {\n                applyElementArgs(element, arg);\n            }\n            else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n                applyElementArgs(element, __spread(arg));\n            }\n            else if (arg && arg.constructor === Object && element instanceof Element) {\n                try {\n                    for (var _d = (e_2 = void 0, __values(Object.keys(arg))), _e = _d.next(); !_e.done; _e = _d.next()) {\n                        var key = _e.value;\n                        var value = arg[key];\n                        if (key === \"class\") {\n                            if (typeof value === \"string\") {\n                                element.setAttribute(\"class\", value);\n                            }\n                            else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n                                element.setAttribute(\"class\", __spread(value).join(\" \"));\n                            }\n                            else {\n                                console.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n                            }\n                        }\n                        else if (key === \"style\") {\n                            if (value && value.constructor === Object) {\n                                try {\n                                    for (var _f = (e_3 = void 0, __values(Object.keys(value))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                                        var styleKey = _g.value;\n                                        if (styleKey in element.style) {\n                                            element.style[styleKey] = value[styleKey];\n                                        }\n                                        else {\n                                            element.style.setProperty(styleKey, value[styleKey]);\n                                        }\n                                    }\n                                }\n                                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                                finally {\n                                    try {\n                                        if (_g && !_g.done && (_c = _f.return)) _c.call(_f);\n                                    }\n                                    finally { if (e_3) throw e_3.error; }\n                                }\n                            }\n                            else {\n                                element.setAttribute(key, value);\n                            }\n                        }\n                        else if (typeof (value) === \"function\") {\n                            element[key] = value;\n                        }\n                        else if (typeof (value) === \"boolean\") {\n                            if (value)\n                                element.setAttribute(key, \"\");\n                            else\n                                element.removeAttribute(key);\n                        }\n                        else {\n                            element.setAttribute(key, value);\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                element.appendChild(document.createTextNode(arg));\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return element;\n}\nexport var svgNS = \"http://www.w3.org/2000/svg\";\nexport function parseHTML() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return document.createRange().createContextualFragment(args.join());\n}\nexport function parseSVG() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var fragment = document.createDocumentFragment();\n    var svgParser = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n    while (svgParser.firstChild !== null) {\n        document.importNode(svgParser.firstChild, true);\n        fragment.appendChild(svgParser.firstChild);\n    }\n    return fragment;\n}\nexport function replaceScriptWith() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var currentScript = document.currentScript;\n    if (currentScript == null) {\n        if (document.readyState === \"loading\") {\n            var scripts = document.getElementsByTagName(\"script\");\n            currentScript = scripts[scripts.length - 1];\n        }\n        if (currentScript == null) {\n            console.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n            return;\n        }\n    }\n    if (currentScript.parentNode === null) {\n        console.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n        return;\n    }\n    currentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\nexport function applyToElement(element) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (!(element instanceof Element || element instanceof DocumentFragment)) {\n        console.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n        return element;\n    }\n    return applyElementArgs(element, args);\n}\n//# sourceMappingURL=elements-base.js.map","var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar e_1, _a, e_2, _b;\nimport { applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement } from \"./elements-base\";\nexport { replaceScriptWith, applyToElement };\nexport var HTML = parseHTML;\nexport var SVG = parseSVG;\nvar _loop_1 = function (name_1) {\n    HTML[name_1] = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return applyElementArgs(document.createElement(name_1), args);\n    };\n};\ntry {\n    for (var _c = __values(\"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var name_1 = _d.value;\n        _loop_1(name_1);\n    }\n}\ncatch (e_1_1) { e_1 = { error: e_1_1 }; }\nfinally {\n    try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n    }\n    finally { if (e_1) throw e_1.error; }\n}\nvar _loop_2 = function (name_2) {\n    SVG[name_2] = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return applyElementArgs(document.createElementNS(svgNS, name_2), args);\n    };\n    if (/-/.test(name_2)) {\n        var snakeCaseName = name_2.replace(/-/g, \"_\");\n        SVG[snakeCaseName] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return applyElementArgs(document.createElementNS(svgNS, name_2), args);\n        };\n    }\n};\ntry {\n    for (var _e = __values(\"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var name_2 = _f.value;\n        _loop_2(name_2);\n    }\n}\ncatch (e_2_1) { e_2 = { error: e_2_1 }; }\nfinally {\n    try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n    }\n    finally { if (e_2) throw e_2.error; }\n}\n//# sourceMappingURL=elements-strict.js.map","import { toNameMap, Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nexport class ColorConfig {\n    static resetColors() {\n        this.colorLookup.clear();\n    }\n    static getArbitaryChannelColor(type, channel) {\n        if (!this.usesColorFormula) {\n            let base;\n            switch (type) {\n                case (\"noise\"): {\n                    base = ColorConfig.noiseChannels[(channel % this.c_noiseLimit) % ColorConfig.noiseChannels.length];\n                    break;\n                }\n                case (\"mod\"): {\n                    base = ColorConfig.modChannels[(channel % this.c_modLimit) % ColorConfig.modChannels.length];\n                    break;\n                }\n                case (\"pitch\"):\n                default: {\n                    base = ColorConfig.pitchChannels[(channel % this.c_pitchLimit) % ColorConfig.pitchChannels.length];\n                    break;\n                }\n            }\n            var regex = /\\(([^\\,)]+)/;\n            let newChannelSecondary = ColorConfig.getComputed(regex.exec(base.secondaryChannel)[1]);\n            let newChannelPrimary = ColorConfig.getComputed(regex.exec(base.primaryChannel)[1]);\n            let newNoteSecondary = ColorConfig.getComputed(regex.exec(base.secondaryNote)[1]);\n            let newNotePrimary = ColorConfig.getComputed(regex.exec(base.primaryNote)[1]);\n            return { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        let colorFormulaPitchLimit = this.c_colorFormulaPitchLimit;\n        let colorFormulaNoiseLimit = this.c_colorFormulaNoiseLimit;\n        let colorFormulaModLimit = this.c_colorFormulaModLimit;\n        switch (type) {\n            case (\"noise\"): {\n                let newChannelSecondary = \"hsl(\" + ((this.c_noiseSecondaryChannelHue + ((channel * this.c_noiseSecondaryChannelHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                    + (this.c_noiseSecondaryChannelSat + channel * this.c_noiseSecondaryChannelSatScale) + \"%,\"\n                    + (this.c_noiseSecondaryChannelLum + channel * this.c_noiseSecondaryChannelLumScale) + \"%)\";\n                let newChannelPrimary = \"hsl(\" + ((this.c_noisePrimaryChannelHue + ((channel * this.c_noisePrimaryChannelHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                    + (this.c_noisePrimaryChannelSat + channel * this.c_noisePrimaryChannelSatScale) + \"%,\"\n                    + (this.c_noisePrimaryChannelLum + channel * this.c_noisePrimaryChannelLumScale) + \"%)\";\n                let newNoteSecondary = \"hsl(\" + ((this.c_noiseSecondaryNoteHue + ((channel * this.c_noiseSecondaryNoteHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                    + (this.c_noiseSecondaryNoteSat + channel * this.c_noiseSecondaryNoteSatScale) + \"%,\"\n                    + (this.c_noiseSecondaryNoteLum + channel * this.c_noiseSecondaryNoteLumScale) + \"%)\";\n                let newNotePrimary = \"hsl(\" + ((this.c_noisePrimaryNoteHue + ((channel * this.c_noisePrimaryNoteHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                    + (this.c_noisePrimaryNoteSat + channel * this.c_noisePrimaryNoteSatScale) + \"%,\"\n                    + (this.c_noisePrimaryNoteLum + channel * this.c_noisePrimaryNoteLumScale) + \"%)\";\n                let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                return newChannelColors;\n            }\n            case (\"mod\"): {\n                let newChannelSecondary = \"hsl(\" + ((this.c_modSecondaryChannelHue + ((channel * this.c_modSecondaryChannelHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                    + (this.c_modSecondaryChannelSat + channel * this.c_modSecondaryChannelSatScale) + \"%,\"\n                    + (this.c_modSecondaryChannelLum + channel * this.c_modSecondaryChannelLumScale) + \"%)\";\n                let newChannelPrimary = \"hsl(\" + ((this.c_modPrimaryChannelHue + ((channel * this.c_modPrimaryChannelHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                    + (this.c_modPrimaryChannelSat + channel * this.c_modPrimaryChannelSatScale) + \"%,\"\n                    + (this.c_modPrimaryChannelLum + channel * this.c_modPrimaryChannelLumScale) + \"%)\";\n                let newNoteSecondary = \"hsl(\" + ((this.c_modSecondaryNoteHue + ((channel * this.c_modSecondaryNoteHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                    + (this.c_modSecondaryNoteSat + channel * this.c_modSecondaryNoteSatScale) + \"%,\"\n                    + (this.c_modSecondaryNoteLum + channel * this.c_modSecondaryNoteLumScale) + \"%)\";\n                let newNotePrimary = \"hsl(\" + ((this.c_modPrimaryNoteHue + ((channel * this.c_modPrimaryNoteHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                    + (this.c_modPrimaryNoteSat + channel * this.c_modPrimaryNoteSatScale) + \"%,\"\n                    + (this.c_modPrimaryNoteLum + channel * this.c_modPrimaryNoteLumScale) + \"%)\";\n                let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                return newChannelColors;\n            }\n            case (\"pitch\"):\n            default: {\n                let newChannelSecondary = \"hsl(\" + ((this.c_pitchSecondaryChannelHue + (channel * this.c_pitchSecondaryChannelHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                    + (this.c_pitchSecondaryChannelSat * (1 - (this.c_pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (this.c_pitchSecondaryChannelLum * (1 - (this.c_pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newChannelPrimary = \"hsl(\" + ((this.c_pitchPrimaryChannelHue + (channel * this.c_pitchPrimaryChannelHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                    + (this.c_pitchPrimaryChannelSat * (1 - (this.c_pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (this.c_pitchPrimaryChannelLum * (1 - (this.c_pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newNoteSecondary = \"hsl(\" + ((this.c_pitchSecondaryNoteHue + (channel * this.c_pitchSecondaryNoteHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                    + (this.c_pitchSecondaryNoteSat * (1 - (this.c_pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (this.c_pitchSecondaryNoteLum * (1 - (this.c_pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newNotePrimary = \"hsl(\" + ((this.c_pitchPrimaryNoteHue + (channel * this.c_pitchPrimaryNoteHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                    + (this.c_pitchPrimaryNoteSat * (1 - (this.c_pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (this.c_pitchPrimaryNoteLum * (1 - (this.c_pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                return newChannelColors;\n            }\n        }\n    }\n    static getComputedChannelColor(song, channel) {\n        if (!this.usesColorFormula) {\n            let base = ColorConfig.getChannelColor(song, channel);\n            var regex = /\\(([^\\,)]+)/;\n            let newChannelSecondary = ColorConfig.getComputed(regex.exec(base.secondaryChannel)[1]);\n            let newChannelPrimary = ColorConfig.getComputed(regex.exec(base.primaryChannel)[1]);\n            let newNoteSecondary = ColorConfig.getComputed(regex.exec(base.secondaryNote)[1]);\n            let newNotePrimary = ColorConfig.getComputed(regex.exec(base.primaryNote)[1]);\n            return { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        else {\n            return ColorConfig.getChannelColor(song, channel);\n        }\n    }\n    ;\n    static getChannelColor(song, channel) {\n        if (!this.usesColorFormula) {\n            if (channel < song.pitchChannelCount) {\n                return ColorConfig.pitchChannels[(channel % this.c_pitchLimit) % ColorConfig.pitchChannels.length];\n            }\n            else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                return ColorConfig.noiseChannels[((channel - song.pitchChannelCount) % this.c_noiseLimit) % ColorConfig.noiseChannels.length];\n            }\n            else {\n                return ColorConfig.modChannels[((channel - song.pitchChannelCount - song.noiseChannelCount) % this.c_modLimit) % ColorConfig.modChannels.length];\n            }\n        }\n        else {\n            if (ColorConfig.colorLookup.has(channel)) {\n                return ColorConfig.colorLookup.get(channel);\n            }\n            else {\n                let colorFormulaPitchLimit = this.c_colorFormulaPitchLimit;\n                let colorFormulaNoiseLimit = this.c_colorFormulaNoiseLimit;\n                let colorFormulaModLimit = this.c_colorFormulaModLimit;\n                if (channel < song.pitchChannelCount) {\n                    let newChannelSecondary = \"hsl(\" + ((this.c_pitchSecondaryChannelHue + (channel * this.c_pitchSecondaryChannelHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                        + (this.c_pitchSecondaryChannelSat * (1 - (this.c_pitchSecondaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\n                        + (this.c_pitchSecondaryChannelLum * (1 - (this.c_pitchSecondaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\n                    let newChannelPrimary = \"hsl(\" + ((this.c_pitchPrimaryChannelHue + (channel * this.c_pitchPrimaryChannelHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                        + (this.c_pitchPrimaryChannelSat * (1 - (this.c_pitchPrimaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\n                        + (this.c_pitchPrimaryChannelLum * (1 - (this.c_pitchPrimaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\n                    let newNoteSecondary = \"hsl(\" + ((this.c_pitchSecondaryNoteHue + (channel * this.c_pitchSecondaryNoteHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                        + (this.c_pitchSecondaryNoteSat * (1 - (this.c_pitchSecondaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\n                        + (this.c_pitchSecondaryNoteLum * (1 - (this.c_pitchSecondaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\n                    let newNotePrimary = \"hsl(\" + ((this.c_pitchPrimaryNoteHue + (channel * this.c_pitchPrimaryNoteHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                        + (this.c_pitchPrimaryNoteSat * (1 - (this.c_pitchPrimaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\n                        + (this.c_pitchPrimaryNoteLum * (1 - (this.c_pitchPrimaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\n                    let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                    let newChannelSecondary = \"hsl(\" + ((this.c_noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryChannelHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                        + (this.c_noiseSecondaryChannelSat + channel * this.c_noiseSecondaryChannelSatScale) + \"%,\"\n                        + (this.c_noiseSecondaryChannelLum + channel * this.c_noiseSecondaryChannelLumScale) + \"%)\";\n                    let newChannelPrimary = \"hsl(\" + ((this.c_noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryChannelHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                        + (this.c_noisePrimaryChannelSat + channel * this.c_noisePrimaryChannelSatScale) + \"%,\"\n                        + (this.c_noisePrimaryChannelLum + channel * this.c_noisePrimaryChannelLumScale) + \"%)\";\n                    let newNoteSecondary = \"hsl(\" + ((this.c_noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryNoteHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                        + (this.c_noiseSecondaryNoteSat + channel * this.c_noiseSecondaryNoteSatScale) + \"%,\"\n                        + (this.c_noiseSecondaryNoteLum + channel * this.c_noiseSecondaryNoteLumScale) + \"%)\";\n                    let newNotePrimary = \"hsl(\" + ((this.c_noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryNoteHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                        + (this.c_noisePrimaryNoteSat + channel * this.c_noisePrimaryNoteSatScale) + \"%,\"\n                        + (this.c_noisePrimaryNoteLum + channel * this.c_noisePrimaryNoteLumScale) + \"%)\";\n                    let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n                else {\n                    let newChannelSecondary = \"hsl(\" + ((this.c_modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryChannelHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                        + (this.c_modSecondaryChannelSat + channel * this.c_modSecondaryChannelSatScale) + \"%,\"\n                        + (this.c_modSecondaryChannelLum + channel * this.c_modSecondaryChannelLumScale) + \"%)\";\n                    let newChannelPrimary = \"hsl(\" + ((this.c_modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryChannelHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                        + (this.c_modPrimaryChannelSat + channel * this.c_modPrimaryChannelSatScale) + \"%,\"\n                        + (this.c_modPrimaryChannelLum + channel * this.c_modPrimaryChannelLumScale) + \"%)\";\n                    let newNoteSecondary = \"hsl(\" + ((this.c_modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryNoteHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                        + (this.c_modSecondaryNoteSat + channel * this.c_modSecondaryNoteSatScale) + \"%,\"\n                        + (this.c_modSecondaryNoteLum + channel * this.c_modSecondaryNoteLumScale) + \"%)\";\n                    let newNotePrimary = \"hsl(\" + ((this.c_modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryNoteHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                        + (this.c_modPrimaryNoteSat + channel * this.c_modPrimaryNoteSatScale) + \"%,\"\n                        + (this.c_modPrimaryNoteLum + channel * this.c_modPrimaryNoteLumScale) + \"%)\";\n                    let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n            }\n        }\n    }\n    static setTheme(name) {\n        let theme = this.themes[name];\n        if (theme == undefined)\n            theme = ColorConfig.defaultTheme;\n        this._styleElement.textContent = theme;\n        let valuesToAdd = \":root{\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--oscilloscope-line-L\") == \"\")\n            valuesToAdd += \"--oscilloscope-line-L:var(--primary-text,white);\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--oscilloscope-line-R\") == \"\")\n            valuesToAdd += \"--oscilloscope-line-R:var(--text-selection,rgba(119,68,255,0.99));\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--text-enabled-icon\") == \"\")\n            valuesToAdd += \"--text-enabled-icon:✓ ;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--text-disabled-icon\") == \"\")\n            valuesToAdd += \"--text-disabled-icon:　;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--text-spacing-icon\") == \"\")\n            valuesToAdd += \"--text-spacing-icon:　;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--note-flash\") == \"\")\n            valuesToAdd += \"--note-flash:#ffffff;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--note-flash-secondary\") == \"\")\n            valuesToAdd += \"--note-flash-secondary:#ffffff77;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-channel-limit\") == \"\")\n            valuesToAdd += \"--pitch-channel-limit:\" + Config.pitchChannelCountMax + \";\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise-channel-limit\") == \"\")\n            valuesToAdd += \"--noise-channel-limit:\" + Config.noiseChannelCountMax + \";\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod-channel-limit\") == \"\")\n            valuesToAdd += \"--mod-channel-limit:\" + Config.modChannelCountMax + \";\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-pitch-channel-limit\") == \"\")\n            valuesToAdd += \"--formula-pitch-channel-limit:360;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-noise-channel-limit\") == \"\")\n            valuesToAdd += \"--formula-noise-channel-limit:360;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-mod-channel-limit\") == \"\")\n            valuesToAdd += \"--formula-mod-channel-limit:360;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--editor-background\") == \"\")\n            valuesToAdd += \"--editor-background:black;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--ui-widget-background\") == \"\")\n            valuesToAdd += \"--ui-widget-background:#444;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--loop-accent\") == \"\")\n            valuesToAdd += \"--loop-accent:#74f;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--box-selection-fill\") == \"\")\n            valuesToAdd += \"--box-selection-fill:rgba(255,255,255,0.2);\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--primary-text\") == \"\")\n            valuesToAdd += \"--primary-text:white;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--inverted-text\") == \"\")\n            valuesToAdd += \"--inverted-text:black;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch\") == \"\")\n            valuesToAdd += \"--track-editor-bg-pitch:#444;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch-dim\") == \"\")\n            valuesToAdd += \"--track-editor-bg-pitch-dim:#333;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise\") == \"\")\n            valuesToAdd += \"--track-editor-bg-noise:#444;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise-dim\") == \"\")\n            valuesToAdd += \"--track-editor-bg-noise-dim:#333;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod\") == \"\")\n            valuesToAdd += \"--track-editor-bg-mod:#234;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod-dim\") == \"\")\n            valuesToAdd += \"--track-editor-bg-mod-dim:#123;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mute-button-normal\") == \"\")\n            valuesToAdd += \"--mute-button-normal:#ffa033;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mute-button-mod\") == \"\")\n            valuesToAdd += \"--mute-button-mod:#9a6bff;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch1-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch1-secondary-channel:#0099A1;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch1-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch1-primary-channel:#25F3FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch1-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch1-secondary-note:#00BDC7;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch1-primary-note\") == \"\")\n            valuesToAdd += \"--pitch1-primary-note:#92F9FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch2-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch2-secondary-channel:#A1A100;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch2-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch2-primary-channel:#FFFF25;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch2-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch2-secondary-note:#C7C700;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch2-primary-note\") == \"\")\n            valuesToAdd += \"--pitch2-primary-note:#FFFF92;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch3-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch3-secondary-channel:#C75000;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch3-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch3-primary-channel:#FF9752;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch3-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch3-secondary-note:#FF771C;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch3-primary-note\") == \"\")\n            valuesToAdd += \"--pitch3-primary-note:#FFCDAB;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch4-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch4-secondary-channel:#00A100;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch4-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch4-primary-channel:#50FF50;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch4-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch4-secondary-note:#00C700;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch4-primary-note\") == \"\")\n            valuesToAdd += \"--pitch4-primary-note:#A0FFA0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch5-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch5-secondary-channel:#D020D0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch5-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch5-primary-channel:#FF90FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch5-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch5-secondary-note:#E040E0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch5-primary-note\") == \"\")\n            valuesToAdd += \"--pitch5-primary-note:#FFC0FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch6-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch6-secondary-channel:#7777B0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch6-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch6-primary-channel:#A0A0FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch6-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch6-secondary-note:#8888D0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch6-primary-note\") == \"\")\n            valuesToAdd += \"--pitch6-primary-note:#D0D0FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch7-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch7-secondary-channel:#8AA100;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch7-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch7-primary-channel:#DEFF25;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch7-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch7-secondary-note:#AAC700;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch7-primary-note\") == \"\")\n            valuesToAdd += \"--pitch7-primary-note:#E6FF92;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch8-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch8-secondary-channel:#DF0019;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch8-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch8-primary-channel:#FF98A4;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch8-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch8-secondary-note:#FF4E63;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch8-primary-note\") == \"\")\n            valuesToAdd += \"--pitch8-primary-note:#FFB2BB;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch9-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch9-secondary-channel:#00A170;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch9-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch9-primary-channel:#50FFC9;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch9-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch9-secondary-note:#00C78A;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch9-primary-note\") == \"\")\n            valuesToAdd += \"--pitch9-primary-note:#83FFD9;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch10-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch10-secondary-channel:#A11FFF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch10-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch10-primary-channel:#CE8BFF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch10-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch10-secondary-note:#B757FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch10-primary-note\") == \"\")\n            valuesToAdd += \"--pitch10-primary-note:#DFACFF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise1-secondary-channel\") == \"\")\n            valuesToAdd += \"--noise1-secondary-channel:#6F6F6F;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise1-primary-channel\") == \"\")\n            valuesToAdd += \"--noise1-primary-channel:#AAAAAA;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise1-secondary-note\") == \"\")\n            valuesToAdd += \"--noise1-secondary-note:#A7A7A7;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise1-primary-note\") == \"\")\n            valuesToAdd += \"--noise1-primary-note:#E0E0E0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise2-secondary-channel\") == \"\")\n            valuesToAdd += \"--noise2-secondary-channel:#996633;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise2-primary-channel\") == \"\")\n            valuesToAdd += \"--noise2-primary-channel:#DDAA77;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise2-secondary-note\") == \"\")\n            valuesToAdd += \"--noise2-secondary-note:#CC9966;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise2-primary-note\") == \"\")\n            valuesToAdd += \"--noise2-primary-note:#F0D0BB;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise3-secondary-channel\") == \"\")\n            valuesToAdd += \"--noise3-secondary-channel:#4A6D8F;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise3-primary-channel\") == \"\")\n            valuesToAdd += \"--noise3-primary-channel:#77AADD;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise3-secondary-note\") == \"\")\n            valuesToAdd += \"--noise3-secondary-note:#6F9FCF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise3-primary-note\") == \"\")\n            valuesToAdd += \"--noise3-primary-note:#BBD7FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise4-secondary-channel\") == \"\")\n            valuesToAdd += \"--noise4-secondary-channel:#7A4F9A;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise4-primary-channel\") == \"\")\n            valuesToAdd += \"--noise4-primary-channel:#AF82D2;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise4-secondary-note\") == \"\")\n            valuesToAdd += \"--noise4-secondary-note:#9E71C1;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise4-primary-note\") == \"\")\n            valuesToAdd += \"--noise4-primary-note:#D4C1EA;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise5-secondary-channel\") == \"\")\n            valuesToAdd += \"--noise5-secondary-channel:#607837;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise5-primary-channel\") == \"\")\n            valuesToAdd += \"--noise5-primary-channel:#A2BB77;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise5-secondary-note\") == \"\")\n            valuesToAdd += \"--noise5-secondary-note:#91AA66;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise5-primary-note\") == \"\")\n            valuesToAdd += \"--noise5-primary-note:#C5E2B2;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod1-secondary-channel\") == \"\")\n            valuesToAdd += \"--mod1-secondary-channel:#339955;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod1-primary-channel\") == \"\")\n            valuesToAdd += \"--mod1-primary-channel:#77fc55;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod1-secondary-note\") == \"\")\n            valuesToAdd += \"--mod1-secondary-note:#77ff8a;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod1-primary-note\") == \"\")\n            valuesToAdd += \"--mod1-primary-note:#cdffee;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod2-secondary-channel\") == \"\")\n            valuesToAdd += \"--mod2-secondary-channel:#993355;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod2-primary-channel\") == \"\")\n            valuesToAdd += \"--mod2-primary-channel:#f04960;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod2-secondary-note\") == \"\")\n            valuesToAdd += \"--mod2-secondary-note:#f057a0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod2-primary-note\") == \"\")\n            valuesToAdd += \"--mod2-primary-note:#ffb8de;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod3-secondary-channel\") == \"\")\n            valuesToAdd += \"--mod3-secondary-channel:#553399;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod3-primary-channel\") == \"\")\n            valuesToAdd += \"--mod3-primary-channel:#8855fc;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod3-secondary-note\") == \"\")\n            valuesToAdd += \"--mod3-secondary-note:#aa64ff;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod3-primary-note\") == \"\")\n            valuesToAdd += \"--mod3-primary-note:#f8ddff;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod4-secondary-channel\") == \"\")\n            valuesToAdd += \"--mod4-secondary-channel:#a86436;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod4-primary-channel\") == \"\")\n            valuesToAdd += \"--mod4-primary-channel:#c8a825;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod4-secondary-note\") == \"\")\n            valuesToAdd += \"--mod4-secondary-note:#e8ba46;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod4-primary-note\") == \"\")\n            valuesToAdd += \"--mod4-primary-note:#fff6d3;\";\n        valuesToAdd += \"}\";\n        this._styleElement.textContent = valuesToAdd + this._styleElement.textContent;\n        const themeColor = document.querySelector(\"meta[name='theme-color']\");\n        if (themeColor != null) {\n            themeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\n        }\n        this.resetColors();\n        this.usesColorFormula = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"true\");\n        this.c_pitchLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-channel-limit\");\n        this.c_noiseLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-channel-limit\");\n        this.c_modLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-channel-limit\");\n        this.c_colorFormulaPitchLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-pitch-channel-limit\");\n        this.c_colorFormulaNoiseLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-noise-channel-limit\");\n        this.c_colorFormulaModLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-mod-channel-limit\");\n        this.c_invertedText = getComputedStyle(this._styleElement).getPropertyValue(\"--inverted-text\");\n        this.c_trackEditorBgNoiseDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise-dim\");\n        this.c_trackEditorBgNoise = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise\");\n        this.c_trackEditorBgModDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod-dim\");\n        this.c_trackEditorBgMod = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod\");\n        this.c_trackEditorBgPitchDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch-dim\");\n        this.c_trackEditorBgPitch = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch\");\n        if (this.usesColorFormula) {\n            this.c_pitchSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\n            this.c_pitchSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\n            this.c_pitchSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\n            this.c_pitchSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\n            this.c_pitchSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\n            this.c_pitchSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\n            this.c_pitchPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\n            this.c_pitchPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\n            this.c_pitchPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\n            this.c_pitchPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\n            this.c_pitchPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\n            this.c_pitchPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\n            this.c_pitchSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\n            this.c_pitchSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\n            this.c_pitchSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\n            this.c_pitchSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\n            this.c_pitchSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\n            this.c_pitchSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\n            this.c_pitchPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\n            this.c_pitchPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\n            this.c_pitchPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\n            this.c_pitchPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\n            this.c_pitchPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\n            this.c_pitchPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\n            this.c_noiseSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\n            this.c_noiseSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\n            this.c_noiseSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\n            this.c_noiseSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\n            this.c_noiseSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\n            this.c_noiseSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\n            this.c_noisePrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\n            this.c_noisePrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\n            this.c_noisePrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\n            this.c_noisePrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\n            this.c_noisePrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\n            this.c_noisePrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\n            this.c_noiseSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\n            this.c_noiseSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\n            this.c_noiseSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\n            this.c_noiseSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\n            this.c_noiseSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\n            this.c_noiseSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\n            this.c_noisePrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\n            this.c_noisePrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\n            this.c_noisePrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\n            this.c_noisePrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\n            this.c_noisePrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\n            this.c_noisePrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\n            this.c_modSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\n            this.c_modSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\n            this.c_modSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\n            this.c_modSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\n            this.c_modSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\n            this.c_modSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\n            this.c_modPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\n            this.c_modPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\n            this.c_modPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\n            this.c_modPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\n            this.c_modPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\n            this.c_modPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\n            this.c_modSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\n            this.c_modSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\n            this.c_modSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\n            this.c_modSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\n            this.c_modSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\n            this.c_modSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\n            this.c_modPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\n            this.c_modPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\n            this.c_modPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\n            this.c_modPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\n            this.c_modPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\n            this.c_modPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\n            if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-pitch-channel-count-override\") != \"\")\n                this.c_pitchChannelCountOverride = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-pitch-channel-count-override\");\n            if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-noise-channel-count-override\") != \"\")\n                this.c_noiseChannelCountOverride = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-noise-channel-count-override\");\n            if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-mod-channel-count-override\") != \"\")\n                this.c_modChannelCountOverride = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-mod-channel-count-override\");\n        }\n    }\n    static getComputed(name) {\n        return getComputedStyle(this._styleElement).getPropertyValue(name);\n    }\n}\nColorConfig.colorLookup = new Map();\nColorConfig.usesColorFormula = false;\nColorConfig.defaultTheme = \"slarmoosbox\";\nColorConfig.themes = {\n    \"dark classic\": ``,\n    \"dark competition\": `\n\t\t\t\t:root {\n\t\t\t\t\t--hover-preview: #ddd;\n\t\t\t\t\t--playhead: #ddd;\n\t\t\t\t\t--primary-text: #ddd;\n\t\t\t\t\t--secondary-text: #8e695b;\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\n\t\t\t\t\t--loop-accent: #bf15ba;\n\t\t\t\t\t--link-accent: #f888ff;\n\t\t\t\t\t--ui-widget-background: #443a3a;\n\t\t\t\t\t--pitch-background: #353333;\n\t\t\t\t\t--tonic: #884a44;\n\t\t\t\t\t--fifth-note: #415498;\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\n\t\t\t}\n\t\t`,\n    \"light classic\": `\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t--page-margin: #685d88;\n\t\t\t\t--editor-background: white;\n\t\t\t\t--hover-preview: black;\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\n\t\t\t\t--primary-text: black;\n\t\t\t\t--secondary-text: #777;\n\t\t\t\t--inverted-text: white;\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\n\t\t\t\t--loop-accent: #98f;\n\t\t\t\t--link-accent: #74f;\n\t\t\t\t--ui-widget-background: #ececec;\n\t\t\t\t--ui-widget-focus: #eee;\n\t\t\t\t--pitch-background: #ececec;\n\t\t\t\t--tonic: #f0d6b6;\n\t\t\t\t--fifth-note: #bbddf0;\n\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t--black-piano-key: #666;\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\n\t\t\t\t\t--multiplicative-mod-slider: #789;\n\t\t\t\t\t--overwriting-mod-slider: #987;\n\t\t\t\t\t--indicator-primary: #98f;\n\t\t\t\t\t--indicator-secondary: #cde;\n\t\t\t\t\t--select2-opt-group: #cecece;\n\t\t\t\t\t--input-box-outline: #ddd;\n\t\t\t\t\t--mute-button-normal: #c0b47f;\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\n\t\t\t\t--pitch1-primary-note:      #00758A;\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\n\t\t\t\t--pitch2-primary-channel:   #B49700;\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\n\t\t\t\t--pitch2-primary-note:      #836E00;\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\n\t\t\t\t--pitch3-primary-note:      #B64000;\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\n\t\t\t\t--pitch4-primary-channel:   #00A800;\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\n\t\t\t\t--pitch4-primary-note:      #008000;\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\n\t\t\t\t--pitch5-primary-note:      #A600A5;\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\n\t\t\t\t--pitch7-primary-note:      #6C8000;\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\n\t\t\t\t--pitch8-primary-note:      #A6001D;\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\n\t\t\t\t--pitch9-primary-channel:   #00B481;\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\n\t\t\t\t--pitch9-primary-note:      #00835E;\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\n\t\t\t\t--pitch10-primary-note:     #8400E3;\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\n\t\t\t\t--noise1-primary-channel:   #898989;\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\n\t\t\t\t--noise2-secondary-note:    #D1A374;\n\t\t\t\t--noise2-primary-note:      #836342;\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\n\t\t\t\t--noise3-primary-channel:   #4481BE;\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\n\t\t\t\t--noise3-primary-note:      #476685;\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\n\t\t\t\t--noise4-primary-channel:   #8553AE;\n\t\t\t\t--noise4-secondary-note:    #B290CC;\n\t\t\t\t--noise4-primary-note:      #684F7D;\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\n\t\t\t\t--noise5-primary-channel:   #87A74F;\n\t\t\t\t--noise5-secondary-note:    #ABC183;\n\t\t\t\t--noise5-primary-note:      #68784C;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\n\t\t\t\t\t--mod4-primary-note:        #a86810;\n\t\t\t\t\t--mod-label-primary:        #dddddd;\n\t\t\t\t\t--mod-label-secondary-text: #777;\n\t\t\t\t\t--disabled-note-primary:    #666;\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\n\t\t\t}\n\t\t\t\n\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.promptContainerBG::before {\n\t\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t\t\t}\t\n\t\t`,\n    \"jummbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t\t--black-piano-key: #666;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #dda85d;\n\t\t\t\t\t--mute-button-mod: #886eae;\n\t\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.5;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.5;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.5;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.5;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #91879f;\n\t\t\t\t\t--disabled-note-secondary:  #6a677a;\n\t\t\t\t}\n\t\t\t`,\n    \"forest\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #010c03;\n\t\t\t\t\t--editor-background: #010c03;\n\t\t\t\t\t--hover-preview: #efe;\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\n\t\t\t\t\t--primary-text: #efe;\n\t\t\t\t\t--secondary-text: #70A070;\n\t\t\t\t\t--inverted-text: #280228;\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\n\t\t\t\t\t--box-selection-fill: #267aa3;\n\t\t\t\t\t--loop-accent: #ffe845;\n\t\t\t\t\t--link-accent: #9f8;\n\t\t\t\t\t--ui-widget-background: #203829;\n\t\t\t\t\t--ui-widget-focus: #487860;\n\t\t\t\t\t--pitch-background: #203829;\n\t\t\t\t\t--tonic: #2b8d20;\n\t\t\t\t\t--fifth-note: #385840;\n\t\t\t\t\t--white-piano-key: #bda;\n\t\t\t\t\t--black-piano-key: #573;\n                    --black-piano-key-text: #ffffff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\n\t\t\t\t\t--track-editor-bg-noise: #304050;\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\n\t\t\t\t\t--track-editor-bg-mod: #506030;\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\n\t\t\t\t\t--indicator-primary: #dcd866;\n\t\t\t\t\t--indicator-secondary: #203829;\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\n\t\t\t\t\t--input-box-outline: #242;\n\t\t\t\t\t--mute-button-normal: #49e980;\n\t\t\t\t\t--mute-button-mod: #c2e502;\n\t\t\t\t\t--mod-label-primary: #133613;\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\n\t\t\t\t\t--mod-label-primary-text: #efe;\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-note-hue: 120;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 80;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 200;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-channel-sat: 48;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 65;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 200;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 33;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 200;\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 64;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 40;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-channel-sat: 60;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 40;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-note-sat: 62;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 55;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 40;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-note-sat: 66;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\n\t\t\t\t\t--disabled-note-secondary:  #395440;\n\t\t\t\t}\n\t\t\t`,\n    \"canyon\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0a0000;\n\t\t\t\t\t--editor-background: #0a0000;\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\n\t\t\t\t\t--primary-text: #f5d6bf;\n\t\t\t\t\t--secondary-text: #934050;\n\t\t\t\t\t--inverted-text: #290505;\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\n\t\t\t\t\t--box-selection-fill: #94044870;\n\t\t\t\t\t--loop-accent: #ff1e1e;\n\t\t\t\t\t--link-accent: #da7b76;\n\t\t\t\t\t--ui-widget-background: #533137;\n\t\t\t\t\t--ui-widget-focus: #743e4b;\n\t\t\t\t\t--pitch-background: #4f3939;\n\t\t\t\t\t--tonic: #9e4145;\n\t\t\t\t\t--fifth-note: #5b3e6b;\n\t\t\t\t\t--white-piano-key: #d89898;\n\t\t\t\t\t--black-piano-key: #572b29;\n                    --black-piano-key-text: #ffffff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\n\t\t\t\t\t--track-editor-bg-mod: #552045;\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\n\t\t\t\t\t--indicator-primary: #f2f764;\n\t\t\t\t\t--indicator-secondary: #4f3939;\n\t\t\t\t\t--select2-opt-group: #673030;\n\t\t\t\t\t--input-box-outline: #443131;\n\t\t\t\t\t--mute-button-normal: #d81833;\n\t\t\t\t\t--mute-button-mod: #9e2691;\n\t\t\t\t\t--mod-label-primary: #5f2b39;\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 60;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 60;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 60;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 222;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 222;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 54;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 222;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 75;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #515164;\n\t\t\t\t\t--disabled-note-secondary:  #2a2a3a;\n\t\t\t\t}\n\t\t\t`,\n    \"midnight\": `\n\t\t:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #757575;\n\t\t\t--playhead: #fff;\n\t\t\t--primary-text: #fff;\n\t\t\t--secondary-text: #acacac;\n\t\t\t--inverted-text: #290505;\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\n\t\t\t--box-selection-fill: #79797970;\n\t\t\t--loop-accent: #646464;\n\t\t\t--link-accent: #707070;\n\t\t\t--ui-widget-background: #353535;\n\t\t\t--ui-widget-focus: #464646;\n\t\t\t--pitch-background: #222121;\n\t\t\t--tonic: #555955;\n\t\t\t--fifth-note: #1a1818;\n\t\t\t--white-piano-key: #a89e9e;\n\t\t\t--black-piano-key: #2d2424;\n            --black-piano-key-text: #ffffff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #373737;\n\t\t\t--track-editor-bg-pitch-dim: #131313;\n\t\t\t--track-editor-bg-noise: #484848;\n\t\t\t--track-editor-bg-noise-dim: #131313;\n\t\t\t--track-editor-bg-mod: #373737;\n\t\t\t--track-editor-bg-mod-dim: #131313;\n\t\t\t--multiplicative-mod-slider: #555;\n\t\t\t--overwriting-mod-slider: #464545;\n\t\t\t--indicator-primary: #e0e0e0;\n\t\t\t--indicator-secondary: #404040;\n\t\t\t--select2-opt-group: #3c3b3b;\n\t\t\t--input-box-outline: #757575;\n\t\t\t--mute-button-normal: #8e8d8d;\n\t\t\t--mute-button-mod: #ddd;\n\t\t\t--mod-label-primary: #262526;\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\n\t\t\t--mod-label-primary-text: #b9b9b9;\n\t\t\t--pitch-secondary-channel-hue: 240;\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\n\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 25;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 240;\n\t\t\t--pitch-primary-channel-hue-scale: 228;\n\t\t\t--pitch-primary-channel-sat: 80;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 60.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 240;\n\t\t\t--pitch-secondary-note-hue-scale: 228;\n\t\t\t--pitch-secondary-note-sat: 73.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 32;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 240;\n\t\t\t--pitch-primary-note-hue-scale: 228;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 80.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 160;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 160;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 160;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 62;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 30;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 62;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 62;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 34;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 62;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 75;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #66a;\n\t\t\t--disabled-note-secondary:  #447;\n\t\t}\n\t`,\n    \"jummbox light\": `\n\t\t\t\t:root {\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #cab1d3;\n\t\t\t\t\t--editor-background: #f4f4f4;\n\t\t\t\t\t--hover-preview: #2d26a2;\n\t\t\t\t\t--playhead: rgb(20 25 153 / 90%);\n\t\t\t\t\t--primary-text: #b686c3;\n\t\t\t\t\t--secondary-text: #970f38;\n\t\t\t\t\t--inverted-text: #fefdff;\n\t\t\t\t\t--text-selection: rgb(56 21 8 / 99%);\n\t\t\t\t\t--box-selection-fill: rgb(20 203 160 / 61%);\n\t\t\t\t\t--loop-accent: #09dc0e;\n\t\t\t\t\t--link-accent: #3ee669;\n\t\t\t\t\t--ui-widget-background: #0e0a42;\n\t\t\t\t\t--ui-widget-focus: #380c42;\n\t\t\t\t\t--pitch-background: #8daf96;\n\t\t\t\t\t--tonic: #a16fb1;\n\t\t\t\t\t--fifth-note: #d08c8c;\n\t\t\t\t\t--white-piano-key: #fbffee;\n\t\t\t\t\t--black-piano-key: #c9d8e5;\n\t\t\t\t\t--white-piano-key-text: #101160;\n\t\t\t\t\t--black-piano-key-text: #231b03;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #34456a;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #88afad;\n\t\t\t\t\t--track-editor-bg-noise: #564566;\n\t\t\t\t\t--track-editor-bg-noise-dim: #aaa;\n\t\t\t\t\t--track-editor-bg-mod: #7f779d;\n\t\t\t\t\t--track-editor-bg-mod-dim: #aaa;\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\n\t\t\t\t\t--indicator-primary: #ae38ff;\n\t\t\t\t\t--indicator-secondary: #5c8dbb;\n\t\t\t\t\t--select2-opt-group: #581b50;\n\t\t\t\t\t--input-box-outline: #6f7074;\n\t\t\t\t\t--mute-button-normal: #db1e00;\n\t\t\t\t\t--mute-button-mod: #883bf9;\n\t\t\t\t\t--mod-label-primary: #525297;\n\t\t\t\t\t--mod-label-secondary-text: rgb(197 147 245);\n\t\t\t\t\t--mod-label-primary-text: #a3aae9;\n                    --pitch-secondary-channel-hue: 26;\n                    --pitch-secondary-channel-hue-scale: 214.5;\n                    --pitch-secondary-channel-sat: 74.3;\n                    --pitch-secondary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 55;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 26;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 214.5;\n\t\t\t\t\t--pitch-primary-channel-sat: 74;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 65.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 26;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 214.5;\n\t\t\t\t\t--pitch-secondary-note-sat: 74.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 70;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 26;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 214.5;\n\t\t\t\t\t--pitch-primary-note-sat: 85;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 64.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-primary-channel-hue: 220;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 53;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-secondary-note-hue: 220;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 85;\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\n\t\t\t\t\t--noise-primary-note-hue: 220;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 54;\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 90;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 89;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 65;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 90;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 79;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 95;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 90;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 79;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 55;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #868;\n\t\t\t\t\t--disabled-note-secondary:  #767;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .piano-button::before {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t.promptContainerBG::before {\n\t\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t\t\t}\n\t\t\t`,\n    \"amoled dark\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000;\n\t\t\t\t\t--editor-background: #020406;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--secondary-text: #8e88ce;\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #ad38f9;\n\t\t\t\t\t--link-accent: #bd25ff;\n\t\t\t\t\t--ui-widget-background: #080d1f;\n\t\t\t\t\t--ui-widget-focus: #060f2d;\n\t\t\t\t\t--pitch-background: #02060b;\n\t\t\t\t\t--tonic: #00113a;\n\t\t\t\t\t--fifth-note: #1b0019;\n\t\t\t\t\t--white-piano-key: #02040c;\n\t\t\t\t\t--black-piano-key: #02040c;\n                    --white-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #050829;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #010213;\n\t\t\t\t\t--track-editor-bg-noise: #051529;\n\t\t\t\t\t--track-editor-bg-noise-dim: #010b13;\n\t\t\t\t\t--track-editor-bg-mod: #150529;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a0113;\n\t\t\t\t\t--multiplicative-mod-slider: #2b409c;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #7f3bec;\n\t\t\t\t\t--indicator-secondary: #213888;\n\t\t\t\t\t--select2-opt-group: #1d123c;\n\t\t\t\t\t--input-box-outline: #1b1e48;\n\t\t\t\t\t--mute-button-normal: #d234b0;\n\t\t\t\t\t--mute-button-mod: #263d98;\n\t\t\t\t\t--mod-label-primary: #090910;\n\t\t\t\t\t--mod-label-secondary-text: rgb(73, 69, 214);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 183;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 158.7;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 183;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 158.7;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 183;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 158.7;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 183;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 158.7;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 30;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 30;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 30;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 30;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 0;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 0;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 0;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 0;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary: #91879f;\n\t\t\t\t\t--disabled-note-secondary: #6a677a;\n\t\t\t\t}\n\n\t\t\t`,\n    \"beachcombing\": `\n\t\t\t:root {\n\t\t\t  --page-margin: #010121;\n  --editor-background: #020222;\n  --hover-preview: #f3ffff;\n  --playhead: #fff;\n  --primary-text: #c1f1ff;\n  --secondary-text: #546775;\n  --box-selection-fill: #3e0028;\n  --loop-accent: #5e68fffc;\n  --link-accent: #ff3ad5fc;\n  --ui-widget-background: #1f2b52;\n  --ui-widget-focus: #384e91;\n  --pitch-background: #2c3155;\n  --tonic: #935175;\n  --fifth-note: #1f569f;\n  --white-piano-key: #f3f2ff;\n  --black-piano-key: #4b4471;\n  --white-piano-key-text: #4b4471;\n  --track-editor-bg-pitch: #34406c;\n  --track-editor-bg-pitch-dim: #121931;\n  --track-editor-bg-noise: #562e3b;\n  --track-editor-bg-noise-dim: #161313;\n  --track-editor-bg-mod: #372e66;\n  --track-editor-bg-mod-dim: #2a1640;\n  --multiplicative-mod-slider: #606c9f;\n  --overwriting-mod-slider: #6850b5;\n  --indicator-primary: #ff8bd1;\n  --indicator-secondary: #393e4f;\n  --select2-opt-group: #5d576f;\n  --input-box-outline: #222;\n  --mute-button-normal: #7ce1ff;\n  --mute-button-mod: #db519d;\n  --pitch1-secondary-channel: #329b70;\n  --pitch1-primary-channel: #53ffb8;\n  --pitch1-secondary-note: #4cb98c;\n  --pitch1-primary-note: #98ffd4;\n  --pitch2-secondary-channel: #b08e4d;\n  --pitch2-primary-channel: #ffe185;\n  --pitch2-secondary-note: #91782e;\n  --pitch2-primary-note: #ffd968;\n  --pitch3-secondary-channel: #018e8e;\n  --pitch3-primary-channel: #3de4ff;\n  --pitch3-secondary-note: #24b7b7;\n  --pitch3-primary-note: #a7ffff;\n  --pitch4-secondary-channel: #792354;\n  --pitch4-primary-channel: #ff68bd;\n  --pitch4-secondary-note: #a73c78;\n  --pitch4-primary-note: #ff98d2;\n  --pitch5-secondary-channel: #185aab;\n  --pitch5-primary-channel: #6493ff;\n  --pitch5-secondary-note: #3e99d9;\n  --pitch5-primary-note: #b3e3ff;\n  --pitch6-secondary-channel: #953C47;\n  --pitch6-primary-channel: #FF7888;\n  --pitch6-secondary-note: #DF4F60;\n  --pitch6-primary-note: #FFB2BB;\n  --pitch7-secondary-channel: #4f007d;\n  --pitch7-primary-channel: #a54cd9;\n  --pitch7-secondary-note: #732b9d;\n  --pitch7-primary-note: #d386ff;\n  --pitch8-secondary-channel: #323c99;\n  --pitch8-primary-channel: #1b61ff;\n  --pitch8-secondary-note: #1848b3;\n  --pitch8-primary-note: #6f9bff;\n  --pitch9-secondary-channel: #1F605A;\n  --pitch9-primary-channel: #69FFEA;\n  --pitch9-secondary-note: #178076;\n  --pitch10-secondary-channel: #6D438C;\n  --pitch10-secondary-note: #8040B0;\n  --noise1-secondary-channel: #635070;\n  --noise1-primary-channel: #9071db;\n  --noise1-secondary-note: #915dc1;\n  --noise1-primary-note: #c5a5ff;\n  --noise2-secondary-channel: #993367;\n  --noise2-primary-channel: #dd777c;\n  --noise2-secondary-note: #cc6695;\n  --noise2-primary-note: #f0bbd1;\n  --noise3-secondary-channel: #4a8c8f;\n  --noise3-primary-channel: #77c5dd;\n  --noise3-secondary-note: #6fb4cf;\n  --noise3-primary-note: #bbf2ff;\n  --noise4-secondary-channel: #8e3e7d;\n  --noise4-primary-channel: #c682d2;\n  --noise4-secondary-note: #b871c1;\n  --noise4-primary-note: #ffb8f0;\n  --noise5-secondary-channel: #785e37;\n  --noise5-primary-channel: #bb9d77;\n  --noise5-secondary-note: #aa8c66;\n  --noise5-primary-note: #e2d1b2;\n  --mod1-secondary-channel: #4e8397;\n  --mod1-primary-channel: #92e6f3;\n  --mod1-secondary-note: #76b9d9;\n  --mod1-primary-note: #cde3ff;\n  --mod2-secondary-channel: #ad5774;\n  --mod2-primary-channel: #eba4ae;\n  --mod2-secondary-note: #c9719b;\n  --mod2-primary-note: #fdcee7;\n  --mod3-secondary-channel: #6f579f;\n  --mod3-primary-channel: #b192f7;\n  --mod3-secondary-note: #7c3fc8;\n  --mod4-secondary-channel: #a88a36;\n  --mod4-primary-channel: #bec825;\n  --mod4-secondary-note: #aecb57;\n  --mod4-primary-note: #dee9bd;\n  --mod-label-primary: #2c2c56;\n  --mod-label-secondary-text: rgb(71,69,147);\n  --mod-label-primary-text: white;\n  --disabled-note-primary: #91879f;\n  --disabled-note-secondary: #6a677a;\n\n\n\t\t\t}\n\t\t`,\n    \"roe\": `\n\t\t\t:root {\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--primary-text: #b8cee0;\n\t\t\t--secondary-text: #cb3434;\n\t\t\t--text-selection: rgb(255 68 68 / 99%);\n\t\t\t--box-selection-fill: rgb(255 0 0 / 30%);\n\t\t\t--loop-accent: #7744FF;\n\t\t\t--link-accent: #FF2A2A;\n\t\t\t--ui-widget-background: #1a2642;\n\t\t\t--ui-widget-focus: #2c3f6d;\n\t\t\t--pitch-background: #15111a;\n\t\t\t--tonic: #1b3041;\n\t\t\t--fifth-note: #381818;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--track-editor-bg-pitch: #302938;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #800000;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #299eff;\n\t\t\t--mute-button-mod: #165a93;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #4281FF;\n\t\t\t--noise1-primary-channel: #96b9ff;\n\t\t\t--noise1-secondary-note: #4281FF;\n\t\t\t--noise1-primary-note: #96b9ff;\n\t\t\t--noise2-secondary-channel: #7347FF;\n\t\t\t--noise2-primary-channel: #c3b0ff;\n\t\t\t--noise2-secondary-note: #7347FF;\n\t\t\t--noise2-primary-note: #c3b0ff;\n\t\t\t--noise3-secondary-channel: #9F3CBF;\n\t\t\t--noise3-primary-channel: #e29cf9;\n\t\t\t--noise3-secondary-note: #9F3CBF;\n\t\t\t--noise3-primary-note: #e29cf9;\n\t\t\t--noise4-secondary-channel: #D3326F;\n\t\t\t--noise4-primary-channel: #fb9bbf;\n\t\t\t--noise4-secondary-note: #D3326F;\n\t\t\t--noise4-primary-note: #fb9bbf;\n\t\t\t--noise5-secondary-channel: #FF2A2A;\n\t\t\t--noise5-primary-channel: #ffa2a2;\n\t\t\t--noise5-secondary-note: #FF2A2A;\n\t\t\t--noise5-primary-note: #ffa2a2;\n\t\t\t--mod1-secondary-channel: #47587a;\n\t\t\t--mod1-primary-channel: #96b9ff;\n\t\t\t--mod1-secondary-note: #47587a;\n\t\t\t--mod1-primary-note: #96b9ff;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #c3b0ff;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #c3b0ff;\n\t\t\t--mod3-secondary-channel: #6f4c7b;\n\t\t\t--mod3-primary-channel: #e29cf9;\n\t\t\t--mod3-secondary-note: #6f4c7b;\n\t\t\t--mod3-primary-note: #e29cf9;\n\t\t\t--mod4-secondary-channel: #9e6279;\n\t\t\t--mod4-primary-channel: #fb9bbf;\n\t\t\t--mod4-secondary-note: #9e6279;\n\t\t\t--mod4-primary-note: #fb9bbf;\n\t\t\t--mod-label-primary: #15111a;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\t\t}`,\n    \"moonlight\": `\n\t\t\t:root {\n\t\t\t--page-margin: #020514;\n\t\t\t--editor-background: #020514;\n\t\t\t--primary-text: #D4DCE9;\n\t\t\t--secondary-text: #3E87DA;\n\t\t\t--text-selection: #03599bd9;\n\t\t\t--box-selection-fill: hsl(206deg 66% 41% / 85%);\n\t\t\t--loop-accent: #639BD6;\n\t\t\t--link-accent: #A8C6E8;\n\t\t\t--ui-widget-background: #1e2940;\n\t\t\t--ui-widget-focus: #324b81;\n\t\t\t--pitch-background: #223849;\n\t\t\t--tonic: #33536c;\n\t\t\t--fifth-note: hsl(206deg 36% 16%);\n\t\t\t--white-piano-key: #c1bfe9;\n\t\t\t--black-piano-key: #454354;\n\t\t\t--track-editor-bg-pitch: #25568d80;\n\t\t\t--track-editor-bg-pitch-dim: #10253c80;\n\t\t\t--track-editor-bg-noise: #25568d80;\n\t\t\t--track-editor-bg-noise-dim: #10253c80;\n\t\t\t--track-editor-bg-mod: #25568d80;\n\t\t\t--track-editor-bg-mod-dim: #10253c80;\n\t\t\t--multiplicative-mod-slider: #0476cd;\n\t\t\t--overwriting-mod-slider: #035899;\n\t\t\t--indicator-primary: #57a1f4;\n\t\t\t--indicator-secondary: #2e5684;\n\t\t\t--select2-opt-group: #24355c;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #6ebffc;\n\t\t\t--mute-button-mod: #0a92fa;\n\t\t\t--pitch1-secondary-channel: #47425c;\n\t\t\t--pitch1-primary-channel: #918bac;\n\t\t\t--pitch1-secondary-note: #6b6489;\n\t\t\t--pitch1-primary-note: #a8a3bf;\n\t\t\t--pitch2-secondary-channel: #626493;\n\t\t\t--pitch2-primary-channel: #bdbed3;\n\t\t\t--pitch2-secondary-note: #626493;\n\t\t\t--pitch2-primary-note: #bdbed3;\n\t\t\t--pitch3-secondary-channel: #6e89b4;\n\t\t\t--pitch3-primary-channel: #d4dce9;\n\t\t\t--pitch3-secondary-note: #6e89b4;\n\t\t\t--pitch3-primary-note: #d4dce9;\n\t\t\t--pitch4-secondary-channel: #4c77a9;\n\t\t\t--pitch4-primary-channel: #a8c6e8;\n\t\t\t--pitch4-secondary-note: #4c77a9;\n\t\t\t--pitch4-primary-note: #a8c6e8;\n\t\t\t--pitch5-secondary-channel: #314e6d;\n\t\t\t--pitch5-primary-channel: #639bd6;\n\t\t\t--pitch5-secondary-note: #46698f;\n\t\t\t--pitch5-primary-note: #639bd6;\n\t\t\t--pitch6-secondary-channel: #143d6b;\n\t\t\t--pitch6-primary-channel: #3e87da;\n\t\t\t--pitch6-secondary-note: #143d6b;\n\t\t\t--pitch6-primary-note: #3e87da;\n\t\t\t--pitch7-secondary-channel: #314e6d;\n\t\t\t--pitch7-primary-channel: #639bd6;\n\t\t\t--pitch7-secondary-note: #314e6d;\n\t\t\t--pitch7-primary-note: #639bd6;\n\t\t\t--pitch8-secondary-channel: #4c77a9;\n\t\t\t--pitch8-primary-channel: #a8c6e8;\n\t\t\t--pitch8-secondary-note: #4c77a9;\n\t\t\t--pitch8-primary-note: #a8c6e8;\n\t\t\t--pitch9-secondary-channel: #6e89b4;\n\t\t\t--pitch9-primary-channel: #d4dce9;\n\t\t\t--pitch9-secondary-note: #6e89b4;\n\t\t\t--pitch9-primary-note: #d4dce9;\n\t\t\t--pitch10-secondary-channel: #626493;\n\t\t\t--pitch10-primary-channel: #bdbed3;\n\t\t\t--pitch10-secondary-note: #626493;\n\t\t\t--pitch10-primary-note: #bdbed3;\n\t\t\t--noise1-secondary-channel: #4b4a55;\n\t\t\t--noise1-primary-channel: #9795a3;\n\t\t\t--noise1-secondary-note: #4b4a55;\n\t\t\t--noise1-primary-note: #9795a3;\n\t\t\t--noise2-secondary-channel: #858e9d;\n\t\t\t--noise2-primary-channel: #d7dce5;\n\t\t\t--noise2-secondary-note: #858e9d;\n\t\t\t--noise2-primary-note: #d7dce5;\n\t\t\t--noise3-secondary-channel: #394e65;\n\t\t\t--noise3-primary-channel: #809bb7;\n\t\t\t--noise3-secondary-note: #394e65;\n\t\t\t--noise3-primary-note: #809bb7;\n\t\t\t--noise4-secondary-channel: #37577b;\n\t\t\t--noise4-primary-channel: #6189b8;\n\t\t\t--noise4-secondary-note: #37577b;\n\t\t\t--noise4-primary-note: #6189b8;\n\t\t\t--noise5-secondary-channel: #223849;\n\t\t\t--noise5-primary-channel: #5588af;\n\t\t\t--noise5-secondary-note: #223849;\n\t\t\t--noise5-primary-note: #5588af;\n\t\t\t--mod1-secondary-channel: #3e336c;\n\t\t\t--mod1-primary-channel: #6d60a4;\n\t\t\t--mod1-secondary-note: #3e336c;\n\t\t\t--mod1-primary-note: #6d60a4;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #bdbed3;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #bdbed3;\n\t\t\t--mod3-secondary-channel: #6b91bd;\n\t\t\t--mod3-primary-channel: #4b8fdd;\n\t\t\t--mod3-secondary-note: #597ca7;\n\t\t\t--mod3-primary-note: #7eade3;\n\t\t\t--mod4-secondary-channel: #14559f;\n\t\t\t--mod4-primary-channel: #3386e6;\n\t\t\t--mod4-secondary-note: #14559f;\n\t\t\t--mod4-primary-note: #3386e6;\n\t\t\t--mod-label-primary: #1e2940;\n\t\t\t--mod-label-secondary-text: #748ebe;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #828282;\n\t\t\t--disabled-note-secondary: #4f4f4f;\n\t\t\t}`,\n    \"autumn\": `\n\t\t:root {\n\t\t\t--page-margin: #060304;\n\t\t\t--editor-background: #060304;\n\t\t\t--text-selection: rgb(115 80 76);\n\t\t\t--box-selection-fill: rgb(174 73 81 / 45%);\n\t\t\t--loop-accent: #834A69;\n\t\t\t--ui-widget-background: #2a2523;\n\t\t\t--ui-widget-focus: #4e4c44;\n\t\t\t--pitch-background: #121212;\n\t\t\t--tonic: #4f4f4f;\n\t\t\t--fifth-note: #222;\n\t\t\t--white-piano-key: #b59b9b;\n\t\t\t--black-piano-key: #231e1e;\n\t\t\t--track-editor-bg-pitch: #352f38;\n\t\t\t--track-editor-bg-pitch-dim: #232025;\n\t\t\t--track-editor-bg-noise: #3c3029;\n\t\t\t--track-editor-bg-noise-dim: #251d19;\n\t\t\t--track-editor-bg-mod: #202623;\n\t\t\t--track-editor-bg-mod-dim: #131715;\n\t\t\t--multiplicative-mod-slider: #D9D16E;\n\t\t\t--overwriting-mod-slider: #2D826F;\n\t\t\t--indicator-primary: #D9D16E;\n\t\t\t--indicator-secondary: #444226;\n\t\t\t--select2-opt-group: #20191c;\n\t\t\t--input-box-outline: #20191c;\n\t\t\t--mute-button-normal: var(--pitch2-primary-channel);\n\t\t\t--mute-button-mod: var(--pitch4-primary-channel);\n\t\t\t--pitch1-secondary-channel: #704a34;\n\t\t\t--pitch1-primary-channel: #D9895A;\n\t\t\t--pitch1-secondary-note: #704a34;\n\t\t\t--pitch1-primary-note: #D9895A;\n\t\t\t--pitch2-secondary-channel: #5f3538;\n\t\t\t--pitch2-primary-channel: #AE4951;\n\t\t\t--pitch2-secondary-note: #5f3538;\n\t\t\t--pitch2-primary-note: #AE4951;\n\t\t\t--pitch3-secondary-channel: #5c4336;\n\t\t\t--pitch3-primary-channel: #CA9A81;\n\t\t\t--pitch3-secondary-note: #5c4336;\n\t\t\t--pitch3-primary-note: #CA9A81;\n\t\t\t--pitch4-secondary-channel: #1d3143;\n\t\t\t--pitch4-primary-channel: #386995;\n\t\t\t--pitch4-secondary-note: #1d3143;\n\t\t\t--pitch4-primary-note: #386995;\n\t\t\t--pitch5-secondary-channel: #9c8a58;\n\t\t\t--pitch5-primary-channel: #D9D16E;\n\t\t\t--pitch5-secondary-note: #7c783f;\n\t\t\t--pitch5-primary-note: #D9D16E;\n\t\t\t--pitch6-secondary-channel: #886562;\n\t\t\t--pitch6-primary-channel: #D3A9A5;\n\t\t\t--pitch6-secondary-note: #886562;\n\t\t\t--pitch6-primary-note: #D3A9A5;\n\t\t\t--pitch7-secondary-channel: #1c3f37;\n\t\t\t--pitch7-primary-channel: #2D826F;\n\t\t\t--pitch7-secondary-note: #1c3f37;\n\t\t\t--pitch7-primary-note: #2D826F;\n\t\t\t--pitch8-secondary-channel: #442e2d;\n\t\t\t--pitch8-primary-channel: #815150;\n\t\t\t--pitch8-secondary-note: #442e2d;\n\t\t\t--pitch8-primary-note: #815150;\n\t\t\t--pitch9-secondary-channel: #8e6f60;\n\t\t\t--pitch9-primary-channel: #E5B8A1;\n\t\t\t--pitch9-secondary-note: #8e6f60;\n\t\t\t--pitch9-primary-note: #E5B8A1;\n\t\t\t--pitch10-secondary-channel: #4f3142;\n\t\t\t--pitch10-primary-channel: #834A69;\n\t\t\t--pitch10-secondary-note: #4f3142;\n\t\t\t--pitch10-primary-note: #834A69;\n\t\t\t--noise1-secondary-channel: #6b5346;\n\t\t\t--noise1-primary-channel: #b99c89;\n\t\t\t--noise1-secondary-note: #6b5346;\n\t\t\t--noise1-primary-note: #F0D0BB;\n\t\t\t--noise2-secondary-channel: #4a3839;\n\t\t\t--noise2-primary-channel: #9c6b6e;\n\t\t\t--noise2-secondary-note: #4a3839;\n\t\t\t--noise2-primary-note: #c18b8f;\n\t\t\t--noise3-secondary-channel: #2d3c4a;\n\t\t\t--noise3-primary-channel: #536e86;\n\t\t\t--noise3-secondary-note: #2d3c4a;\n\t\t\t--noise3-primary-note: #8fa8c0;\n\t\t\t--noise4-secondary-channel: #273f3a;\n\t\t\t--noise4-primary-channel: #4e8377;\n\t\t\t--noise4-secondary-note: #273f3a;\n\t\t\t--noise4-primary-note: #87baae;\n\t\t\t--noise5-secondary-channel: #372730;\n\t\t\t--noise5-primary-channel: #7f5e70;\n\t\t\t--noise5-secondary-note: #372730;\n\t\t\t--noise5-primary-note: #cc96b3;\n\t\t\t--mod1-secondary-channel: #783f1f;\n\t\t\t--mod1-primary-channel: #dc6d2c;\n\t\t\t--mod1-secondary-note: #783f1f;\n\t\t\t--mod1-primary-note: #dc6d2c;\n\t\t\t--mod2-secondary-channel: #0b3153;\n\t\t\t--mod2-primary-channel: #1464ac;\n\t\t\t--mod2-secondary-note: #0b3153;\n\t\t\t--mod2-primary-note: #1464ac;\n\t\t\t--mod3-secondary-channel: #075040;\n\t\t\t--mod3-primary-channel: #08a17f;\n\t\t\t--mod3-secondary-note: #075040;\n\t\t\t--mod3-primary-note: #08a17f;\n\t\t\t--mod4-secondary-channel: #631640;\n\t\t\t--mod4-primary-channel: #b4186d;\n\t\t\t--mod4-secondary-note: #631640;\n\t\t\t--mod4-primary-note: #b4186d;\n\t\t\t--mod-label-primary: #000;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n    \"fruit\": `\n\t\t:root {\n\t\t\t--page-margin: #040507;\n\t\t\t--editor-background: #040507;\n\t\t\t--text-selection: rgb(115 103 76);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #22222c;\n\t\t\t--ui-widget-focus: #39394c;\n\t\t\t--pitch-background: #101010;\n\t\t\t--tonic: #2c2d34;\n\t\t\t--fifth-note: #191a20;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--track-editor-bg-pitch: #2b2d40;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #3c3644;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #322a2a;\n\t\t\t--track-editor-bg-mod-dim: #191515;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #EAAC9D;\n\t\t\t--indicator-secondary: #5e413a;\n\t\t\t--select2-opt-group: #191920;\n\t\t\t--input-box-outline: #191920;\n\t\t\t--mute-button-normal: #798FA7;\n\t\t\t--mute-button-mod: #354457;\n\t\t\t--pitch1-secondary-channel: #91655a;\n\t\t\t--pitch1-primary-channel: #EAAC9D;\n\t\t\t--pitch1-secondary-note: #91655a;\n\t\t\t--pitch1-primary-note: #EAAC9D;\n\t\t\t--pitch2-secondary-channel: #8f6513;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #8f6513;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #212f46;\n\t\t\t--pitch3-primary-channel: #34558B;\n\t\t\t--pitch3-secondary-note: #212f46;\n\t\t\t--pitch3-primary-note: #34558B;\n\t\t\t--pitch4-secondary-channel: #2e6b5b;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #2e6b5b;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #555D46;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #555D46;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #A2553B;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #A2553B;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #7b4021;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #7b4021;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #847753;\n\t\t\t--pitch8-primary-channel: #EFDAA3;\n\t\t\t--pitch8-secondary-note: #847753;\n\t\t\t--pitch8-primary-note: #EFDAA3;\n\t\t\t--pitch9-secondary-channel: #2c3642;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #2c3642;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #0d4453;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #0d4453;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #3B3D4A;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #3B3D4A;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #625f5e;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #625f5e;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n    \"sunset\": `\n\t\t:root {\n\t\t\t--page-margin: #040300;\n\t\t\t--editor-background: #040300;\n\t\t\t--text-selection: rgb(94 0 157);\n\t\t\t--box-selection-fill: rgb(174 173 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #241b24;\n\t\t\t--ui-widget-focus: #3a2e39;\n\t\t\t--pitch-background: #141414;\n\t\t\t--tonic: #2C212B;\n\t\t\t--fifth-note: #2E2A15;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--track-editor-bg-pitch: #2d2e42;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #393340;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #232a2c;\n\t\t\t--track-editor-bg-mod-dim: #151819;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #F28891;\n\t\t\t--indicator-secondary: #601d23;\n\t\t\t--select2-opt-group: #151015;\n\t\t\t--input-box-outline: #151015;\n\t\t\t--mute-button-normal: #E4739D;\n\t\t\t--mute-button-mod: #9650A6;\n\t\t\t--pitch1-secondary-channel: #7F7721;\n\t\t\t--pitch1-primary-channel: #F3E79A;\n\t\t\t--pitch1-secondary-note: #7F7721;\n\t\t\t--pitch1-primary-note: #F3E79A;\n\t\t\t--pitch2-secondary-channel: #785E20;\n\t\t\t--pitch2-primary-channel: #F7D086;\n\t\t\t--pitch2-secondary-note: #785E20;\n\t\t\t--pitch2-primary-note: #F7D086;\n\t\t\t--pitch3-secondary-channel: #6E4219;\n\t\t\t--pitch3-primary-channel: #F9B881;\n\t\t\t--pitch3-secondary-note: #6E4219;\n\t\t\t--pitch3-primary-note: #F9B881;\n\t\t\t--pitch4-secondary-channel: #79351F;\n\t\t\t--pitch4-primary-channel: #F7A086;\n\t\t\t--pitch4-secondary-note: #79351F;\n\t\t\t--pitch4-primary-note: #F7A086;\n\t\t\t--pitch5-secondary-channel: #81272F;\n\t\t\t--pitch5-primary-channel: #F28891;\n\t\t\t--pitch5-secondary-note: #81272F;\n\t\t\t--pitch5-primary-note: #F28891;\n\t\t\t--pitch6-secondary-channel: #8F224D;\n\t\t\t--pitch6-primary-channel: #E4739D;\n\t\t\t--pitch6-secondary-note: #8F224D;\n\t\t\t--pitch6-primary-note: #E4739D;\n\t\t\t--pitch7-secondary-channel: #611548;\n\t\t\t--pitch7-primary-channel: #CF63A6;\n\t\t\t--pitch7-secondary-note: #611548;\n\t\t\t--pitch7-primary-note: #CF63A6;\n\t\t\t--pitch8-secondary-channel: #561253;\n\t\t\t--pitch8-primary-channel: #B557A9;\n\t\t\t--pitch8-secondary-note: #4D104A;\n\t\t\t--pitch8-primary-note: #B557A9;\n\t\t\t--pitch9-secondary-channel: #4c1260;\n\t\t\t--pitch9-primary-channel: #9650A6;\n\t\t\t--pitch9-secondary-note: #3C0F4C;\n\t\t\t--pitch9-primary-note: #9650A6;\n\t\t\t--pitch10-secondary-channel: #3e1d78;\n\t\t\t--pitch10-primary-channel: #704D9E;\n\t\t\t--pitch10-secondary-note: #27124C;\n\t\t\t--pitch10-primary-note: #704D9E;\n\t\t\t--noise1-secondary-channel: #A7A578;\n\t\t\t--noise1-primary-channel: #EFE9AC;\n\t\t\t--noise1-secondary-note: #A7A578;\n\t\t\t--noise1-primary-note: #EFE9AC;\n\t\t\t--noise2-secondary-channel: #947A5F;\n\t\t\t--noise2-primary-channel: #FBCEA8;\n\t\t\t--noise2-secondary-note: #947A5F;\n\t\t\t--noise2-primary-note: #FBCEA8;\n\t\t\t--noise3-secondary-channel: #A3635D;\n\t\t\t--noise3-primary-channel: #F4A5AB;\n\t\t\t--noise3-secondary-note: #A3635D;\n\t\t\t--noise3-primary-note: #F4A5AB;\n\t\t\t--noise4-secondary-channel: #724D60;\n\t\t\t--noise4-primary-channel: #CD90B6;\n\t\t\t--noise4-secondary-note: #724D60;\n\t\t\t--noise4-primary-note: #CD90B6;\n\t\t\t--noise5-secondary-channel: #503F5C;\n\t\t\t--noise5-primary-channel: #7C6A9E;\n\t\t\t--noise5-secondary-note: #503F5C;\n\t\t\t--noise5-primary-note: #7C6A9E;\n\t\t\t--mod1-secondary-channel: #371883;\n\t\t\t--mod1-primary-channel: #6416C6;\n\t\t\t--mod1-secondary-note: #1F0A52;\n\t\t\t--mod1-primary-note: #6416C6;\n\t\t\t--mod2-secondary-channel: #690645;\n\t\t\t--mod2-primary-channel: #E52FA2;\n\t\t\t--mod2-secondary-note: #690645;\n\t\t\t--mod2-primary-note: #E52FA2;\n\t\t\t--mod3-secondary-channel: #943618;\n\t\t\t--mod3-primary-channel: #eb5b2c;\n\t\t\t--mod3-secondary-note: #943618;\n\t\t\t--mod3-primary-note: #eb5b2c;\n\t\t\t--mod4-secondary-channel: #928409;\n\t\t\t--mod4-primary-channel: #ecd50e;\n\t\t\t--mod4-secondary-note: #928409;\n\t\t\t--mod4-primary-note: #ecd50e;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n    \"toxic\": `\n\t\t:root {\n\t\t\t--page-margin: #010003;\n\t\t\t--editor-background: #010003;\n\t\t\t--text-selection: rgb(147 195 0);\n\t\t\t--box-selection-fill: rgb(145 174 73 / 49%);\n\t\t\t--loop-accent: #BCDE2C;\n\t\t\t--link-accent: #edff9f;\n\t\t\t--ui-widget-background: #261e2e;\n\t\t\t--ui-widget-focus: #322042;\n\t\t\t--pitch-background: #141c15;\n\t\t\t--tonic: #282c21;\n\t\t\t--fifth-note: #18221a;\n\t\t\t--white-piano-key: #e3e3e3;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--track-editor-bg-pitch: #38293e;\n\t\t\t--track-editor-bg-pitch-dim: #251c29;\n\t\t\t--track-editor-bg-noise: #2c304c;\n\t\t\t--track-editor-bg-noise-dim: #191b2b;\n\t\t\t--track-editor-bg-mod: #311b32;\n\t\t\t--track-editor-bg-mod-dim: #1d101e;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #aae9ff;\n\t\t\t--indicator-secondary: #253e46;\n\t\t\t--select2-opt-group: #110d15;\n\t\t\t--input-box-outline: #110d15;\n\t\t\t--mute-button-normal: #8f5ad1;\n\t\t\t--mute-button-mod: #482574;\n\t\t\t--pitch1-secondary-channel: #6b7f19;\n\t\t\t--pitch1-primary-channel: #BCDE2C;\n\t\t\t--pitch1-secondary-note: #6b7f19;\n\t\t\t--pitch1-primary-note: #BCDE2C;\n\t\t\t--pitch2-secondary-channel: #497a31;\n\t\t\t--pitch2-primary-channel: #7BD152;\n\t\t\t--pitch2-secondary-note: #497a31;\n\t\t\t--pitch2-primary-note: #7BD152;\n\t\t\t--pitch3-secondary-channel: #286b40;\n\t\t\t--pitch3-primary-channel: #45BE71;\n\t\t\t--pitch3-secondary-note: #286b40;\n\t\t\t--pitch3-primary-note: #45BE71;\n\t\t\t--pitch4-secondary-channel: #125140;\n\t\t\t--pitch4-primary-channel: #25A884;\n\t\t\t--pitch4-secondary-note: #125140;\n\t\t\t--pitch4-primary-note: #25A884;\n\t\t\t--pitch5-secondary-channel: #114c49;\n\t\t\t--pitch5-primary-channel: #21908C;\n\t\t\t--pitch5-secondary-note: #114c49;\n\t\t\t--pitch5-primary-note: #21908C;\n\t\t\t--pitch6-secondary-channel: #143843;\n\t\t\t--pitch6-primary-channel: #2B788E;\n\t\t\t--pitch6-secondary-note: #143843;\n\t\t\t--pitch6-primary-note: #2B788E;\n\t\t\t--pitch7-secondary-channel: #1d354e;\n\t\t\t--pitch7-primary-channel: #355F8D;\n\t\t\t--pitch7-secondary-note: #1a2f46;\n\t\t\t--pitch7-primary-note: #355F8D;\n\t\t\t--pitch8-secondary-channel: #2c2e5a;\n\t\t\t--pitch8-primary-channel: #414486;\n\t\t\t--pitch8-secondary-note: #1e1f3d;\n\t\t\t--pitch8-primary-note: #414486;\n\t\t\t--pitch9-secondary-channel: #3c1f5e;\n\t\t\t--pitch9-primary-channel: #5e3b89;\n\t\t\t--pitch9-secondary-note: #25133b;\n\t\t\t--pitch9-primary-note: #5e3b89;\n\t\t\t--pitch10-secondary-channel: #510264;\n\t\t\t--pitch10-primary-channel: #720d8a;\n\t\t\t--pitch10-secondary-note: #440154;\n\t\t\t--pitch10-primary-note: #720d8a;\n\t\t\t--noise1-secondary-channel: #BCDE2C;\n\t\t\t--noise1-primary-channel: #edff9f;\n\t\t\t--noise1-secondary-note: #BCDE2C;\n\t\t\t--noise1-primary-note: #edff9f;\n\t\t\t--noise2-secondary-channel: #45BE71;\n\t\t\t--noise2-primary-channel: #89ffb4;\n\t\t\t--noise2-secondary-note: #45BE71;\n\t\t\t--noise2-primary-note: #89ffb4;\n\t\t\t--noise3-secondary-channel: #21908C;\n\t\t\t--noise3-primary-channel: #72fffa;\n\t\t\t--noise3-secondary-note: #21908C;\n\t\t\t--noise3-primary-note: #72fffa;\n\t\t\t--noise4-secondary-channel: #355F8D;\n\t\t\t--noise4-primary-channel: #7cb6f5;\n\t\t\t--noise4-secondary-note: #355F8D;\n\t\t\t--noise4-primary-note: #7cb6f5;\n\t\t\t--noise5-secondary-channel: #482574;\n\t\t\t--noise5-primary-channel: #8f5ad1;\n\t\t\t--noise5-secondary-note: #48257A;\n\t\t\t--noise5-primary-note: #8f5ad1;\n\t\t\t--mod1-secondary-channel: #815a16;\n\t\t\t--mod1-primary-channel: #F5AB29;\n\t\t\t--mod1-secondary-note: #815a16;\n\t\t\t--mod1-primary-note: #F5AB29;\n\t\t\t--mod2-secondary-channel: #4d341a;\n\t\t\t--mod2-primary-channel: #C98540;\n\t\t\t--mod2-secondary-note: #4d341a;\n\t\t\t--mod2-primary-note: #C98540;\n\t\t\t--mod3-secondary-channel: #643734;\n\t\t\t--mod3-primary-channel: #A75D58;\n\t\t\t--mod3-secondary-note: #643734;\n\t\t\t--mod3-primary-note: #A75D58;\n\t\t\t--mod4-secondary-channel: #461430;\n\t\t\t--mod4-primary-channel: #812359;\n\t\t\t--mod4-secondary-note: #3f112b;\n\t\t\t--mod4-primary-note: #812359;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n    \"violet verdant\": `\n\t\t:root {\n\t\t\t--page-margin: #0e031a;\n\t\t\t--editor-background: #0e031a;\n\t\t\t--hover-preview: #e5ffea;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #f0e0ff;\n\t\t\t--secondary-text: #706087;\n\t\t\t--box-selection-fill: #225835;\n\t\t\t--loop-accent: #8f00fb;\n\t\t\t--link-accent: #82dd5d;\n\t\t\t--ui-widget-background: #303c66;\n\t\t\t--ui-widget-focus: #62559b;\n\t\t\t--pitch-background: #293b52;\n\t\t\t--tonic: #5b46ad;\n\t\t\t--fifth-note: #42604d;\n\t\t\t--white-piano-key: #f6e8ff;\n\t\t\t--black-piano-key: #5a4972;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #392a46;\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t--track-editor-bg-noise: #403150;\n\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t--track-editor-bg-mod: #253c25;\n\t\t\t--track-editor-bg-mod-dim: #0c1811;\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #403150;\n\t\t\t--mute-button-normal: #82dd5d;\n\t\t\t--mute-button-mod: #945de5;\n\t\t\t--mod-label-primary: #312840;\n\t\t\t--mod-label-secondary-text: rgb(88 70 104);\n\t\t\t--mod-label-primary-text: #82dd5d;\n\t\t\t--pitch-secondary-channel-hue: 64;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t--pitch-secondary-channel-sat: 63.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 64;\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 32;\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t--pitch-secondary-note-sat: 87.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 64;\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 192;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 45;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 32;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 192;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 43.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 45;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 192;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 132;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 132;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 100;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 132;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #91879f;\n\t\t\t--disabled-note-secondary: #6a677a;\n\t\t}`,\n    \"portal\": `\n\t\t:root {\n\t\t\t--page-margin: #04081a;\n\t\t\t--editor-background: #04081a;\n\t\t\t--box-selection-fill: rgb(0 72 181);\n\t\t\t--loop-accent: #44d4ff;\n\t\t\t--link-accent: #ffa500;\n\t\t\t--ui-widget-background: #212c4a;\n\t\t\t--ui-widget-focus: #121f42;\n\t\t\t--pitch-background: #1b263e;\n\t\t\t--tonic: #995d00;\n\t\t\t--fifth-note: #0898a1;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #516d7a;\n\t\t\t--track-editor-bg-pitch: #213352;\n\t\t\t--track-editor-bg-pitch-dim: #152032;\n\t\t\t--track-editor-bg-noise: #403524;\n\t\t\t--track-editor-bg-noise-dim: #2a1f0e;\n\t\t\t--indicator-primary: #5490ff;\n\t\t\t--mute-button-normal: #3372ff;\n\t\t\t--mute-button-mod: #dd872f;\n\t\t\t--pitch1-primary-channel: #77f7ff;\n\t\t\t--pitch2-secondary-channel: #0083a1;\n\t\t\t--pitch2-primary-channel: #35d9ff;\n\t\t\t--pitch2-secondary-note: #0083a1;\n\t\t\t--pitch2-primary-note: #a4eeff;\n\t\t\t--pitch3-secondary-channel: #0074c7;\n\t\t\t--pitch3-primary-channel: #3caeff;\n\t\t\t--pitch3-secondary-note: #00477a;\n\t\t\t--pitch3-primary-note: #aadcff;\n\t\t\t--pitch4-secondary-channel: #0039a1;\n\t\t\t--pitch4-primary-channel: #2673ff;\n\t\t\t--pitch4-secondary-note: #001f56;\n\t\t\t--pitch4-primary-note: #9bbeff;\n\t\t\t--pitch5-secondary-channel: #31148b;\n\t\t\t--pitch5-primary-channel: #7042ff;\n\t\t\t--pitch5-secondary-note: #190656;\n\t\t\t--pitch5-primary-note: #b79fff;\n\t\t\t--pitch6-secondary-channel: #979934;\n\t\t\t--pitch6-primary-channel: #fbff2f;\n\t\t\t--pitch6-secondary-note: #5d5e0a;\n\t\t\t--pitch6-primary-note: #fdff9a;\n\t\t\t--pitch7-secondary-channel: #b78f00;\n\t\t\t--pitch7-primary-channel: #ffd747;\n\t\t\t--pitch7-secondary-note: #5e3d00;\n\t\t\t--pitch7-primary-note: #ffe381;\n\t\t\t--pitch8-secondary-channel: #9d6500;\n\t\t\t--pitch8-primary-channel: #ffa400;\n\t\t\t--pitch8-secondary-note: #583900;\n\t\t\t--pitch8-primary-note: #ffd07c;\n\t\t\t--pitch9-secondary-channel: #744203;\n\t\t\t--pitch9-primary-channel: #ff8e00;\n\t\t\t--pitch9-secondary-note: #502d00;\n\t\t\t--pitch9-primary-note: #ffcb89;\n\t\t\t--pitch10-secondary-channel: #a32d00;\n\t\t\t--pitch10-primary-channel: #ff885b;\n\t\t\t--pitch10-secondary-note: #521700;\n\t\t\t--pitch10-primary-note: #ffb397;\n\t\t\t--noise1-secondary-channel: #6e2210;\n\t\t\t--noise1-primary-channel: #ff4600;\n\t\t\t--noise1-secondary-note: #4c1a08;\n\t\t\t--noise1-primary-note: #ffc9b4;\n\t\t\t--noise2-secondary-channel: #6a3110;\n\t\t\t--noise2-primary-channel: #ff782a;\n\t\t\t--noise2-secondary-note: #4c1f05;\n\t\t\t--noise2-primary-note: #ffb488;\n\t\t\t--noise3-secondary-channel: #72460e;\n\t\t\t--noise3-primary-channel: #d9871f;\n\t\t\t--noise3-secondary-note: #442905;\n\t\t\t--noise3-primary-note: #ffdcae;\n\t\t\t--noise4-secondary-channel: #837a0f;\n\t\t\t--noise4-primary-channel: #f7ea55;\n\t\t\t--noise4-secondary-note: #605906;\n\t\t\t--noise4-primary-note: #fff9ab;\n\t\t\t--noise5-secondary-channel: #8c8f00;\n\t\t\t--noise5-primary-channel: #fdff90;\n\t\t\t--noise5-secondary-note: #606200;\n\t\t\t--noise5-primary-note: #feffbc;\n\t\t\t--mod1-secondary-channel: #561b97;\n\t\t\t--mod1-primary-channel: #aa66f5;\n\t\t\t--mod1-secondary-note: #30075c;\n\t\t\t--mod1-primary-note: #cd9fff;\n\t\t\t--mod2-secondary-channel: #5116df;\n\t\t\t--mod2-primary-channel: #6b2dff;\n\t\t\t--mod2-secondary-note: #36138b;\n\t\t\t--mod2-primary-note: #bea3ff;\n\t\t\t--mod3-secondary-channel: #2535a1;\n\t\t\t--mod3-primary-channel: #3f57ff;\n\t\t\t--mod3-secondary-note: #0e185c;\n\t\t\t--mod3-primary-note: #8494ff;\n\t\t\t--mod4-secondary-channel: #1b5883;\n\t\t\t--mod4-primary-channel: #5eb7f5;\n\t\t\t--mod4-secondary-note: #072f4a;\n\t\t\t--mod4-primary-note: #63beff;\n\t\t\t--mod-label-primary: #24293a;\n\t\t\t--mod-label-secondary-text: #454d4e;\n\t\t\t--mod-label-primary-text: #7bd4ff;\n\t\t\t--disabled-note-primary: #072f4a;\n\t\t\t--disabled-note-secondary: #6585a7;\n\t\t}`,\n    \"fusion\": `:root {\n\t\t\t--page-margin: #0c0306;\n\t\t\t--editor-background: #0c0306;\n\t\t\t--primary-text: #26d9cd;\n\t\t\t--secondary-text: #ff6666;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ffffff;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #ff6666;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: hsl(61deg 100% 70% / 25%);\n\t\t\t--tonic: #66a3ff40;\n\t\t\t--fifth-note: #ff666640;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--track-editor-bg-pitch: #404040bf;\n\t\t\t--track-editor-bg-pitch-dim: #151515;\n\t\t\t--track-editor-bg-noise: #404040bf;\n\t\t\t--track-editor-bg-noise-dim: #151515;\n\t\t\t--track-editor-bg-mod: #404040bf;\n\t\t\t--track-editor-bg-mod-dim: #151515;\n\t\t\t--multiplicative-mod-slider: #ef7692;\n\t\t\t--overwriting-mod-slider: #f43e69;\n\t\t\t--indicator-primary: #26d9cd;\n\t\t\t--indicator-secondary: hsl(176deg 70% 25%);\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #26d9cd;\n\t\t\t--mute-button-mod: hsl(346deg 70% 50%);\n\t\t\t--pitch1-secondary-channel: #bf4040;\n\t\t\t--pitch1-primary-channel: #ff6666;\n\t\t\t--pitch1-secondary-note: #bf4040;\n\t\t\t--pitch1-primary-note: #ff6666;\n\t\t\t--pitch2-secondary-channel: #bf5b40;\n\t\t\t--pitch2-primary-channel: #ff8766;\n\t\t\t--pitch2-secondary-note: #bf5b40;\n\t\t\t--pitch2-primary-note: #ff8766;\n\t\t\t--pitch3-secondary-channel: #bf7940;\n\t\t\t--pitch3-primary-channel: #ffab66;\n\t\t\t--pitch3-secondary-note: #bf7940;\n\t\t\t--pitch3-primary-note: #ffab66;\n\t\t\t--pitch4-secondary-channel: #bf9b40;\n\t\t\t--pitch4-primary-channel: #ffd466;\n\t\t\t--pitch4-secondary-note: #bf9b40;\n\t\t\t--pitch4-primary-note: #ffd466;\n\t\t\t--pitch5-secondary-channel: #bdbf40;\n\t\t\t--pitch5-primary-channel: #fcff66;\n\t\t\t--pitch5-secondary-note: #bdbf40;\n\t\t\t--pitch5-primary-note: #fcff66;\n\t\t\t--pitch6-secondary-channel: #9dbf40;\n\t\t\t--pitch6-primary-channel: #d6ff66;\n\t\t\t--pitch6-secondary-note: #9dbf40;\n\t\t\t--pitch6-primary-note: #d6ff66;\n\t\t\t--pitch7-secondary-channel: #9dbf40;\n\t\t\t--pitch7-primary-channel: #fcff66;\n\t\t\t--pitch7-secondary-note: #9dbf40;\n\t\t\t--pitch7-primary-note: #fcff66;\n\t\t\t--pitch8-secondary-channel: #bf9b40;\n\t\t\t--pitch8-primary-channel: #ffd466;\n\t\t\t--pitch8-secondary-note: #bf9b40;\n\t\t\t--pitch8-primary-note: #ffd466;\n\t\t\t--pitch9-secondary-channel: #bf5b40;\n\t\t\t--pitch9-primary-channel: #ffab66;\n\t\t\t--pitch9-secondary-note: #bf5b40;\n\t\t\t--pitch9-primary-note: #ffab66;\n\t\t\t--pitch10-secondary-channel: #d15a1f;\n\t\t\t--pitch10-primary-channel: #ff8766;\n\t\t\t--pitch10-secondary-note: #d15a1f;\n\t\t\t--pitch10-primary-note: #ff8766;\n\t\t\t--noise1-secondary-channel: #4073bf;\n\t\t\t--noise1-primary-channel: #66a3ff;\n\t\t\t--noise1-secondary-note: #4073bf;\n\t\t\t--noise1-primary-note: #66a3ff;\n\t\t\t--noise2-secondary-channel: #405dbf;\n\t\t\t--noise2-primary-channel: #668aff;\n\t\t\t--noise2-secondary-note: #405dbf;\n\t\t\t--noise2-primary-note: #668aff;\n\t\t\t--noise3-secondary-channel: #4f40bf;\n\t\t\t--noise3-primary-channel: #7866ff;\n\t\t\t--noise3-secondary-note: #4f40bf;\n\t\t\t--noise3-primary-note: #7866ff;\n\t\t\t--noise4-secondary-channel: #8840bf;\n\t\t\t--noise4-primary-channel: #bd66ff;\n\t\t\t--noise4-secondary-note: #8840bf;\n\t\t\t--noise4-primary-note: #bd66ff;\n\t\t\t--noise5-secondary-channel: #bf40b5;\n\t\t\t--noise5-primary-channel: #ff66f2;\n\t\t\t--noise5-secondary-note: #bf40b5;\n\t\t\t--noise5-primary-note: #ff66f2;\n\t\t\t--mod1-secondary-channel: #cc6666;\n\t\t\t--mod1-primary-channel: #ff9999;\n\t\t\t--mod1-secondary-note: #cc6666;\n\t\t\t--mod1-primary-note: #ff9999;\n\t\t\t--mod2-secondary-channel: #cc7766;\n\t\t\t--mod2-primary-channel: #ffaa99;\n\t\t\t--mod2-secondary-note: #bf5540;\n\t\t\t--mod2-primary-note: #ffaa99;\n\t\t\t--mod3-secondary-channel: #cc8866;\n\t\t\t--mod3-primary-channel: #ffbb99;\n\t\t\t--mod3-secondary-note: #cc8866;\n\t\t\t--mod3-primary-note: #ffbb99;\n\t\t\t--mod4-secondary-channel: #cc9966;\n\t\t\t--mod4-primary-channel: #ffcc99;\n\t\t\t--mod4-secondary-note: #cc9966;\n\t\t\t--mod4-primary-note: #ffcc99;\n\t\t\t--disabled-note-primary: #696969;\n\t\t\t--disabled-note-secondary: #232323;\n\t\t}`,\n    \"inverse\": `:root {\n\t\t\t--page-margin: #c4c8e3;\n\t\t\t--editor-background: #c4c8e3;\n\t\t\t--hover-preview: #000000;\n\t\t\t--playhead: #243953;\n\t\t\t--primary-text: black;\n\t\t\t--secondary-text: #855b95;\n\t\t\t--text-selection: rgb(132 125 255);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 65%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #4e00c8;\n\t\t\t--ui-widget-background: #e7e7ff;\n\t\t\t--ui-widget-focus: #d0d3e9;\n\t\t\t--pitch-background: #ffffff;\n\t\t\t--tonic: #bbbbbb;\n\t\t\t--fifth-note: #dcdcdc;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #615f66;\n\t\t\t--track-editor-bg-pitch: #e9ebff;\n\t\t\t--track-editor-bg-pitch-dim: #e9ebff;\n\t\t\t--track-editor-bg-noise: #fdf2fe;\n\t\t\t--track-editor-bg-noise-dim: #fdf2fe;\n\t\t\t--track-editor-bg-mod: #dbdefe;\n\t\t\t--track-editor-bg-mod-dim: #dbdefe;\n\t\t\t--multiplicative-mod-slider: #6900b3;\n\t\t\t--overwriting-mod-slider: #004b9d;\n\t\t\t--indicator-primary: #ff633d;\n\t\t\t--indicator-secondary: #933822;\n\t\t\t--select2-opt-group: #e7e7ff;\n\t\t\t--input-box-outline: #e7e7ff;\n\t\t\t--mute-button-normal: #0072ef;\n\t\t\t--mute-button-mod: #002e67;\n\t\t\t--pitch1-secondary-channel: #b77d6e;\n\t\t\t--pitch1-primary-channel: #ff9d85;\n\t\t\t--pitch1-secondary-note: #b77d6e;\n\t\t\t--pitch1-primary-note: #ff9d85;\n\t\t\t--pitch2-secondary-channel: #be8821;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #be8821;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #3a62a4;\n\t\t\t--pitch3-primary-channel: #528ae6;\n\t\t\t--pitch3-secondary-note: #3a62a4;\n\t\t\t--pitch3-primary-note: #528ae6;\n\t\t\t--pitch4-secondary-channel: #3e8d78;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #3e8d78;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #84906d;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #84906d;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #bd6345;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #bd6345;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #aa592f;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #aa592f;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #b2a171;\n\t\t\t--pitch8-primary-channel: #ffd76d;\n\t\t\t--pitch8-secondary-note: #b2a171;\n\t\t\t--pitch8-primary-note: #ffd76d;\n\t\t\t--pitch9-secondary-channel: #4f6177;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #4f6177;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #165162;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #165162;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #4a4c5b;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #4a4c5b;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #817c7b;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #817c7b;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #e9e9e9;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--disabled-note-primary: #959595;\n\t\t\t--disabled-note-secondary: #6e6e6e;\n\t\t\t}`,\n    \"nebula\": `\n\t\t:root {\n\t\t\t--page-margin: #040410;\n\t\t\t--editor-background: #150e1f;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--secondary-text: #8C849A;\n\t\t\t--text-selection: rgba(141,79,201,0.99);\n\t\t\t--box-selection-fill: #311E44;\n\t\t\t--loop-accent: #CC688C;\n\t\t\t--link-accent: #817DC9;\n\t\t\t--ui-widget-background: #44394F;\n\t\t\t--ui-widget-focus: #7A6386;\n\t\t\t--pitch-background: #393e4f40;\n\t\t\t--tonic: #7D5C9EC0;\n\t\t\t--fifth-note: #ab77bd50;\n\t\t\t--white-piano-key: #EEEEEE;\n\t\t\t--black-piano-key: #5F5566;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #46374C;\n\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\n\t\t\t--track-editor-bg-noise: #3D353B;\n\t\t\t--track-editor-bg-noise-dim: #16131550;\n\t\t\t--track-editor-bg-mod: #623F4C;\n\t\t\t--track-editor-bg-mod-dim: #361A2450;\n\t\t\t--multiplicative-mod-slider: #9F6E6A;\n\t\t\t--overwriting-mod-slider: #A664B5;\n\t\t\t--indicator-primary: #CC6B8E;\n\t\t\t--indicator-secondary: #44394F;\n\t\t\t--select2-opt-group: #6A576F;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #BF91DC;\n\t\t\t--mute-button-mod: #DC8C9A;\n\t\t\t--mod-label-primary: #3A2840;\n\t\t\t--mod-label-secondary-text: #62485E;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--pitch-secondary-channel-hue: -96;\n\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\n\t\t\t--pitch-secondary-channel-sat: 50.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: -96;\n\t\t\t--pitch-primary-channel-hue-scale: 4.2;\n\t\t\t--pitch-primary-channel-sat: 70;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: -96;\n\t\t\t--pitch-secondary-note-hue-scale: 4.2;\n\t\t\t--pitch-secondary-note-sat: 70.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: -96;\n\t\t\t--pitch-primary-note-hue-scale: 4.2;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 16;\n\t\t\t--noise-secondary-channel-hue-scale: -1.33;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 16;\n\t\t\t--noise-primary-channel-hue-scale: -1.33;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 12;\n\t\t\t--noise-secondary-note-hue-scale: -1.33;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 12;\n\t\t\t--noise-primary-note-hue-scale: -1.33;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 12;\n\t\t\t--mod-secondary-channel-hue-scale: -.75;\n\t\t\t--mod-secondary-channel-sat: 50;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 12;\n\t\t\t--mod-primary-channel-hue-scale: -.75;\n\t\t\t--mod-primary-channel-sat: 70;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 12;\n\t\t\t--mod-secondary-note-hue-scale: -.75;\n\t\t\t--mod-secondary-note-sat: 75;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 12;\n\t\t\t--mod-primary-note-hue-scale: -.75;\n\t\t\t--mod-primary-note-sat: 85;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #aaa;\n\t\t}`,\n    \"roe light\": `\n\t\t:root {\n\t\t\t--page-margin: #fff5f5;\n\t\t\t--editor-background: #fff5f5;\n\t\t\t--hover-preview: #0e8bf1;\n\t\t\t--playhead: 000;\n\t\t\t--primary-text: #0e8bf1;\n\t\t\t--secondary-text: #f10e0e;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ff4444fc;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #9a75ff;\n\t\t\t--link-accent: #ff7070;\n\t\t\t--ui-widget-background: #bdc9e5;\n\t\t\t--ui-widget-focus: #a3b7e5;\n\t\t\t--pitch-background: #d0c7db;\n\t\t\t--tonic: #bed3e4;\n\t\t\t--fifth-note: #e7c6c6;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--track-editor-bg-pitch: #e5e1ea;\n\t\t\t--track-editor-bg-pitch-dim: #cbc4d4;\n\t\t\t--track-editor-bg-noise: #e0ddee;\n\t\t\t--track-editor-bg-noise-dim: #c1bade;\n\t\t\t--track-editor-bg-mod: #d8e6f3;\n\t\t\t--track-editor-bg-mod-dim: #b1cce7;\n\t\t\t--multiplicative-mod-slider: #8097cb;\n\t\t\t--overwriting-mod-slider: #8097cb;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #92a6d3;\n\t\t\t--select2-opt-group: #b6c4e2;\n\t\t\t--input-box-outline: #bdc9e5;\n\t\t\t--mute-button-normal: #66baff;\n\t\t\t--mute-button-mod: #1a98ff;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #336bdb;\n\t\t\t--noise1-primary-channel: #4281FF;\n\t\t\t--noise1-secondary-note: #336bdb;\n\t\t\t--noise1-primary-note: #4281FF;\n\t\t\t--noise2-secondary-channel: #5e38dc;\n\t\t\t--noise2-primary-channel: #7347FF;\n\t\t\t--noise2-secondary-note: #5e38dc;\n\t\t\t--noise2-primary-note: #7347FF;\n\t\t\t--noise3-secondary-channel: #7d3097;\n\t\t\t--noise3-primary-channel: #9F3CBF;\n\t\t\t--noise3-secondary-note: #7d3097;\n\t\t\t--noise3-primary-note: #9F3CBF;\n\t\t\t--noise4-secondary-channel: #ad2559;\n\t\t\t--noise4-primary-channel: #D3326F;\n\t\t\t--noise4-secondary-note: #ad2559;\n\t\t\t--noise4-primary-note: #D3326F;\n\t\t\t--noise5-secondary-channel: #d02525;\n\t\t\t--noise5-primary-channel: #FF2A2A;\n\t\t\t--noise5-secondary-note: #d02525;\n\t\t\t--noise5-primary-note: #FF2A2A;\n\t\t\t--mod1-secondary-channel: #35415a;\n\t\t\t--mod1-primary-channel: #47587a;\n\t\t\t--mod1-secondary-note: #35415a;\n\t\t\t--mod1-primary-note: #47587a;\n\t\t\t--mod2-secondary-channel: #5a5374;\n\t\t\t--mod2-primary-channel: #716791;\n\t\t\t--mod2-secondary-note: #5a5374;\n\t\t\t--mod2-primary-note: #716791;\n\t\t\t--mod3-secondary-channel: #53385c;\n\t\t\t--mod3-primary-channel: #6f4c7b;\n\t\t\t--mod3-secondary-note: #53385c;\n\t\t\t--mod3-primary-note: #6f4c7b;\n\t\t\t--mod4-secondary-channel: #7e4e60;\n\t\t\t--mod4-primary-channel: #9e6279;\n\t\t\t--mod4-secondary-note: #7e4e60;\n\t\t\t--mod4-primary-note: #9e6279;\n\t\t\t--mod-label-primary: #d0c7db;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--disabled-note-primary: #616161;\n\t\t\t--disabled-note-secondary: #474747;\n\t\t}\n\t\t.promptContainerBG::before {\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t}`,\n    \"energized\": `\n\t\t:root {\n\t\t\t--page-margin: #000a08;\n\t\t\t--editor-background: #000a08;\n\t\t\t--hover-preview: #ffffcc;\n\t\t\t--playhead: #ccfff5;\n\t\t\t--secondary-text: #d9d98c;\n\t\t\t--text-selection: #ffff6659;\n\t\t\t--box-selection-fill: #ffffff33;\n\t\t\t--loop-accent: #ffff00;\n\t\t\t--link-accent: #00ffcc;\n\t\t\t--ui-widget-background: #141f1d;\n\t\t\t--ui-widget-focus: #24423d;\n\t\t\t--pitch-background: #001410;\n\t\t\t--tonic: #00241d;\n\t\t\t--fifth-note: #ffff6633;\n\t\t\t--white-piano-key: #66998f;\n\t\t\t--black-piano-key: #141f1d;\n\t\t\t--track-editor-bg-pitch: #66998f40;\n\t\t\t--track-editor-bg-pitch-dim: #293d3940;\n\t\t\t--track-editor-bg-noise: #66998f40;\n\t\t\t--track-editor-bg-noise-dim: #293d3940;\n\t\t\t--track-editor-bg-mod: #99996640;\n\t\t\t--track-editor-bg-mod-dim: #3d3d2940;\n\t\t\t--multiplicative-mod-slider: #ffff00;\n\t\t\t--overwriting-mod-slider: #00ffcc;\n\t\t\t--indicator-primary: #ffff00;\n\t\t\t--indicator-secondary: #141f1d;\n\t\t\t--select2-opt-group: #1b312e;\n\t\t\t--input-box-outline: #141f1d;\n\t\t\t--mute-button-normal: #00ffcc;\n\t\t\t--mute-button-mod: #00997a;\n\t\t\t--pitch1-secondary-channel: #bfbf40;\n\t\t\t--pitch1-primary-channel: #ffff64;\n\t\t\t--pitch1-secondary-note: #bfbf40;\n\t\t\t--pitch1-primary-note: #ffff64;\n\t\t\t--pitch2-secondary-channel: #a2bf40;\n\t\t\t--pitch2-primary-channel: #e0ff7d;\n\t\t\t--pitch2-secondary-note: #a2bf40;\n\t\t\t--pitch2-primary-note: #e0ff7d;\n\t\t\t--pitch3-secondary-channel: #75bf40;\n\t\t\t--pitch3-primary-channel: #c1ff96;\n\t\t\t--pitch3-secondary-note: #75bf40;\n\t\t\t--pitch3-primary-note: #c1ff96;\n\t\t\t--pitch4-secondary-channel: #40bf51;\n\t\t\t--pitch4-primary-channel: #a2ffaf;\n\t\t\t--pitch4-secondary-note: #40bf51;\n\t\t\t--pitch4-primary-note: #a2ffaf;\n\t\t\t--pitch5-secondary-channel: #40bf86;\n\t\t\t--pitch5-primary-channel: #83ffc8;\n\t\t\t--pitch5-secondary-note: #40bf86;\n\t\t\t--pitch5-primary-note: #83ffc8;\n\t\t\t--pitch6-secondary-channel: #40bfa6;\n\t\t\t--pitch6-primary-channel: #64ffe1;\n\t\t\t--pitch6-secondary-note: #40bfa6;\n\t\t\t--pitch6-primary-note: #64ffe1;\n\t\t\t--pitch7-secondary-channel: #40bf86;\n\t\t\t--pitch7-primary-channel: #83ffc8;\n\t\t\t--pitch7-secondary-note: #40bf86;\n\t\t\t--pitch7-primary-note: #83ffc8;\n\t\t\t--pitch8-secondary-channel: #40bf51;\n\t\t\t--pitch8-primary-channel: #a2ffaf;\n\t\t\t--pitch8-secondary-note: #40bf51;\n\t\t\t--pitch8-primary-note: #a2ffaf;\n\t\t\t--pitch9-secondary-channel: #75bf40;\n\t\t\t--pitch9-primary-channel: #c1ff96;\n\t\t\t--pitch9-secondary-note: #75bf40;\n\t\t\t--pitch9-primary-note: #c1ff96;\n\t\t\t--pitch10-secondary-channel: #a2bf40;\n\t\t\t--pitch10-primary-channel: #e0ff7d;\n\t\t\t--pitch10-secondary-note: #a2bf40;\n\t\t\t--pitch10-primary-note: #e0ff7d;\n\t\t\t--noise1-secondary-channel: #a6a659;\n\t\t\t--noise1-primary-channel: #ffffcc;\n\t\t\t--noise1-secondary-note: #a6a659;\n\t\t\t--noise1-primary-note: #ffffcc;\n\t\t\t--noise2-secondary-channel: #94a659;\n\t\t\t--noise2-primary-channel: #f3ffcc;\n\t\t\t--noise2-secondary-note: #94a659;\n\t\t\t--noise2-primary-note: #f3ffcc;\n\t\t\t--noise3-secondary-channel: #79a659;\n\t\t\t--noise3-primary-channel: #e1ffcc;\n\t\t\t--noise3-secondary-note: #79a659;\n\t\t\t--noise3-primary-note: #e1ffcc;\n\t\t\t--noise4-secondary-channel: #94a659;\n\t\t\t--noise4-primary-channel: #f3ffcc;\n\t\t\t--noise4-secondary-note: #94a659;\n\t\t\t--noise4-primary-note: #f3ffcc;\n\t\t\t--noise5-secondary-channel: #a6a659;\n\t\t\t--noise5-primary-channel: #ffffcc;\n\t\t\t--noise5-secondary-note: #a6a659;\n\t\t\t--noise5-primary-note: #ffffcc;\n\t\t\t--mod1-secondary-channel: #a3a329;\n\t\t\t--mod1-primary-channel: #ffff00;\n\t\t\t--mod1-secondary-note: #a3a329;\n\t\t\t--mod1-primary-note: #ffff00;\n\t\t\t--mod2-secondary-channel: #a38529;\n\t\t\t--mod2-primary-channel: #ffbf00;\n\t\t\t--mod2-secondary-note: #a38529;\n\t\t\t--mod2-primary-note: #ffbf00;\n\t\t\t--mod3-secondary-channel: #a36629;\n\t\t\t--mod3-primary-channel: #ff7f00;\n\t\t\t--mod3-secondary-note: #a36629;\n\t\t\t--mod3-primary-note: #ff7f00;\n\t\t\t--mod4-secondary-channel: #a38529;\n\t\t\t--mod4-primary-channel: #ffbf00;\n\t\t\t--mod4-secondary-note: #a38529;\n\t\t\t--mod4-primary-note: #ffbf00;\n\t\t\t--mod-label-primary: #141f1d;\n\t\t\t--mod-label-secondary-text: #d9d98c;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #808080;\n\t\t\t--disabled-note-secondary: #666666;\n\t\t}`,\n    \"neapolitan\": `:root {\n\t\t\t--page-margin: #120807;\n\t\t\t--editor-background: #120807;\n\t\t\t--hover-preview: #e79a82;\n\t\t\t--playhead: #e79a82;\n\t\t\t--primary-text: #decdbf;\n\t\t\t--secondary-text: #fa99bb;\n\t\t\t--text-selection: #990036;\n\t\t\t--loop-accent: #f6377a;\n\t\t\t--link-accent: #f6377a;\n\t\t\t--ui-widget-background: #24160f;\n\t\t\t--ui-widget-focus: #362217;\n\t\t\t--pitch-background: #1e1106;\n\t\t\t--tonic: #382414;\n\t\t\t--fifth-note: #41240c;\n\t\t\t--white-piano-key: #e1c5b7;\n\t\t\t--black-piano-key: #482c1e;\n\t\t\t--white-piano-key-text: black;\n\t\t\t--black-piano-key-text: white;\n\t\t\t--track-editor-bg-pitch: #4d2a19;\n\t\t\t--track-editor-bg-pitch-dim: #27150c;\n\t\t\t--track-editor-bg-noise: #4d2a19;\n\t\t\t--track-editor-bg-noise-dim: #27150c;\n\t\t\t--track-editor-bg-mod: #4d2a19;\n\t\t\t--track-editor-bg-mod-dim: #27150c;\n\t\t\t--multiplicative-mod-slider: #decdbf;\n\t\t\t--overwriting-mod-slider: #decdbf;\n\t\t\t--indicator-primary: #decdbf;\n\t\t\t--indicator-secondary: #362217;\n\t\t\t--select2-opt-group: #24160f;\n\t\t\t--input-box-outline: #24160f;\n\t\t\t--mute-button-normal: #ff66a1;\n\t\t\t--mute-button-mod: #e61968;\n\t\t\t--pitch1-secondary-channel: #680029;\n\t\t\t--pitch1-primary-channel: #cc0052;\n\t\t\t--pitch1-secondary-note: #660029;\n\t\t\t--pitch1-primary-note: #cc0052;\n\t\t\t--pitch2-secondary-channel: #7e1b43;\n\t\t\t--pitch2-primary-channel: #d32e71;\n\t\t\t--pitch2-secondary-note: #7e1b43;\n\t\t\t--pitch2-primary-note: #d32e71;\n\t\t\t--pitch3-secondary-channel: #aa275e;\n\t\t\t--pitch3-primary-channel: #da5d91;\n\t\t\t--pitch3-secondary-note: #aa275e;\n\t\t\t--pitch3-primary-note: #da5d91;\n\t\t\t--pitch4-secondary-channel: #cc3878;\n\t\t\t--pitch4-primary-channel: #e18bb0;\n\t\t\t--pitch4-secondary-note: #cc3878;\n\t\t\t--pitch4-primary-note: #e18bb0;\n\t\t\t--pitch5-secondary-channel: #d06c9b;\n\t\t\t--pitch5-primary-channel: #e9bad0;\n\t\t\t--pitch5-secondary-note: #d06c9b;\n\t\t\t--pitch5-primary-note: #e9bad0;\n\t\t\t--pitch6-secondary-channel: #c9acc5;\n\t\t\t--pitch6-primary-channel: #f0e8ef;\n\t\t\t--pitch6-secondary-note: #c9acc5;\n\t\t\t--pitch6-primary-note: #f0e8ef;\n\t\t\t--pitch7-secondary-channel: #d06c9b;\n\t\t\t--pitch7-primary-channel: #e9bad0;\n\t\t\t--pitch7-secondary-note: #d06c9b;\n\t\t\t--pitch7-primary-note: #e9bad0;\n\t\t\t--pitch8-secondary-channel: #cc3878;\n\t\t\t--pitch8-primary-channel: #e18bb0;\n\t\t\t--pitch8-secondary-note: #cc3878;\n\t\t\t--pitch8-primary-note: #e18bb0;\n\t\t\t--pitch9-secondary-channel: #aa275e;\n\t\t\t--pitch9-primary-channel: #da5d91;\n\t\t\t--pitch9-secondary-note: #aa275e;\n\t\t\t--pitch9-primary-note: #da5d91;\n\t\t\t--pitch10-secondary-channel: #7e1b43;\n\t\t\t--pitch10-primary-channel: #d32e71;\n\t\t\t--pitch10-secondary-note: #7e1b43;\n\t\t\t--pitch10-primary-note: #d32e71;\n\t\t\t--noise1-secondary-channel: #683a37;\n\t\t\t--noise1-primary-channel: #A85F5A;\n\t\t\t--noise1-secondary-note: #683a37;\n\t\t\t--noise1-primary-note: #A85F5A;\n\t\t\t--noise2-secondary-channel: #7c4a41;\n\t\t\t--noise2-primary-channel: #B47A70;\n\t\t\t--noise2-secondary-note: #7c4a41;\n\t\t\t--noise2-primary-note: #B47A70;\n\t\t\t--noise3-secondary-channel: #935f4d;\n\t\t\t--noise3-primary-channel: #c09587;\n\t\t\t--noise3-secondary-note: #935f4d;\n\t\t\t--noise3-primary-note: #C09587;\n\t\t\t--noise4-secondary-channel: #aa795a;\n\t\t\t--noise4-primary-channel: #cdb09d;\n\t\t\t--noise4-secondary-note: #aa795a;\n\t\t\t--noise4-primary-note: #CDAF9D;\n\t\t\t--noise5-secondary-channel: #bb987c;\n\t\t\t--noise5-primary-channel: #decdbf;\n\t\t\t--noise5-secondary-note: #bb987c;\n\t\t\t--noise5-primary-note: #decdbf;\n\t\t\t--mod1-secondary-channel: #6ca784;\n\t\t\t--mod1-primary-channel: #accdb9;\n\t\t\t--mod1-secondary-note: #6ca784;\n\t\t\t--mod1-primary-note: #accdb9;\n\t\t\t--mod2-secondary-channel: #7daa9f;\n\t\t\t--mod2-primary-channel: #bbd3cd;\n\t\t\t--mod2-secondary-note: #7daa9f;\n\t\t\t--mod2-primary-note: #bbd3cd;\n\t\t\t--mod3-secondary-channel: #70a3a9;\n\t\t\t--mod3-primary-channel: #afcccf;\n\t\t\t--mod3-secondary-note: #70a3a9;\n\t\t\t--mod3-primary-note: #afcccf;\n\t\t\t--mod4-secondary-channel: #5698b8;\n\t\t\t--mod4-primary-channel: #9ec3d6;\n\t\t\t--mod4-secondary-note: #5698b8;\n\t\t\t--mod4-primary-note: #9ec3d6;\n\t\t\t--mod-label-primary: #24160f;\n\t\t\t--mod-label-secondary-text: #E5AFC2;\n\t\t\t--mod-label-primary-text: #decdbf;\n\t\t\t--disabled-note-primary: #bababa;\n\t\t\t--disabled-note-secondary: #878787;\n\t\t}`,\n    \"poly\": `:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #808080;\n\t\t\t--playhead: #808080;\n\t\t\t--secondary-text: #cccccc;\n\t\t\t--text-selection: #696969;\n\t\t\t--box-selection-fill: #cccccc40;\n\t\t\t--loop-accent: #808080;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: #1a1a1a;\n\t\t\t--tonic: #262626;\n\t\t\t--fifth-note: #0d0d0d;\n\t\t\t--white-piano-key: #808080;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #262626;\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\n\t\t\t--track-editor-bg-noise: #262626;\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\n\t\t\t--track-editor-bg-mod: #262626;\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\n\t\t\t--multiplicative-mod-slider: #808080;\n\t\t\t--overwriting-mod-slider: #808080;\n\t\t\t--indicator-primary: #808080;\n\t\t\t--indicator-secondary: #333333;\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #808080;\n\t\t\t--mute-button-mod: #808080;\n\t\t\t--mod-label-primary: #232323;\n\t\t\t--mod-label-secondary-text: #696969;\n\t\t\t--mod-label-primary-text: #cdcdcd;\n\t\t\t--pitch-secondary-channel-hue: 208;\n\t\t\t--pitch-secondary-channel-hue-scale: 10;\n\t\t\t--pitch-secondary-channel-sat: 100;\n\t\t\t--pitch-secondary-channel-sat-scale: 0;\n\t\t\t--pitch-secondary-channel-lum: 88;\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\n\t\t\t--pitch-primary-channel-hue: 207;\n\t\t\t--pitch-primary-channel-hue-scale: 10;\n\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t--pitch-primary-channel-sat-scale: 0;\n\t\t\t--pitch-primary-channel-lum: 910;\n\t\t\t--pitch-primary-channel-lum-scale: 0;\n\t\t\t--pitch-secondary-note-hue: 208;\n\t\t\t--pitch-secondary-note-hue-scale: 10;\n\t\t\t--pitch-secondary-note-sat: 100;\n\t\t\t--pitch-secondary-note-sat-scale: 0;\n\t\t\t--pitch-secondary-note-lum: 88;\n\t\t\t--pitch-secondary-note-lum-scale: 0;\n\t\t\t--pitch-primary-note-hue: 208;\n\t\t\t--pitch-primary-note-hue-scale: 10;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0;\n\t\t\t--pitch-primary-note-lum: 910;\n\t\t\t--pitch-primary-note-lum-scale: 0;\n\t\t\t--noise-secondary-channel-hue: 328;\n\t\t\t--noise-secondary-channel-hue-scale: 10;\n\t\t\t--noise-secondary-channel-sat: 100;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 88;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 327;\n\t\t\t--noise-primary-channel-hue-scale: 10;\n\t\t\t--noise-primary-channel-sat: 100;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 910;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 328;\n\t\t\t--noise-secondary-note-hue-scale: 10;\n\t\t\t--noise-secondary-note-sat: 100;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 88;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 327;\n\t\t\t--noise-primary-note-hue-scale: 10;\n\t\t\t--noise-primary-note-sat: 100;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 910;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 87;\n\t\t\t--mod-secondary-channel-hue-scale: 10;\n\t\t\t--mod-secondary-channel-sat: 100;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 88;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 88;\n\t\t\t--mod-primary-channel-hue-scale: 10;\n\t\t\t--mod-primary-channel-sat: 100;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 910;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 87;\n\t\t\t--mod-secondary-note-hue-scale: 10;\n\t\t\t--mod-secondary-note-sat: 100;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 88;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 88;\n\t\t\t--mod-primary-note-hue-scale: 10;\n\t\t\t--mod-primary-note-sat: 100;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 910;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t--disabled-note-secondary: #8c8c8c;\n\t\t}`,\n    \"greyscale\": `:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #808080;\n\t\t\t--playhead: #808080;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #cccccc;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #696969;\n\t\t\t--box-selection-fill: #cccccc40;\n\t\t\t--loop-accent: #808080;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: #1a1a1a;\n\t\t\t--tonic: #262626;\n\t\t\t--fifth-note: #0d0d0d;\n\t\t\t--white-piano-key: #808080;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #262626;\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\n\t\t\t--track-editor-bg-noise: #262626;\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\n\t\t\t--track-editor-bg-mod: #262626;\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\n\t\t\t--multiplicative-mod-slider: #808080;\n\t\t\t--overwriting-mod-slider: #808080;\n\t\t\t--indicator-primary: #808080;\n\t\t\t--indicator-secondary: #333333;\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #808080;\n\t\t\t--mute-button-mod: #808080;\n\t\t\t--mod-label-primary: #232323;\n\t\t\t--mod-label-secondary-text: #696969;\n\t\t\t--mod-label-primary-text: #cdcdcd;\n\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t--pitch-secondary-channel-hue-scale: 25;\n\t\t\t--pitch-secondary-channel-sat: 10;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 70;\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\n\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t--pitch-primary-channel-hue-scale: 25;\n\t\t\t--pitch-primary-channel-sat: 50;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 95;\n\t\t\t--pitch-primary-channel-lum-scale: 0;\n\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t--pitch-secondary-note-hue-scale: 25;\n\t\t\t--pitch-secondary-note-sat: 10;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 70;\n\t\t\t--pitch-secondary-note-lum-scale: 0;\n\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t--pitch-primary-note-hue-scale: 25;\n\t\t\t--pitch-primary-note-sat: 50;\n\t\t\t--pitch-primary-note-sat-scale: 0.1;\n\t\t\t--pitch-primary-note-lum: 95;\n\t\t\t--pitch-primary-note-lum-scale: 0;\n\t\t\t--noise-secondary-channel-hue: 125;\n\t\t\t--noise-secondary-channel-hue-scale: 50;\n\t\t\t--noise-secondary-channel-sat: 10;\n\t\t\t--noise-secondary-channel-sat-scale: 0.1;\n\t\t\t--noise-secondary-channel-lum: 70;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 125;\n\t\t\t--noise-primary-channel-hue-scale: 50;\n\t\t\t--noise-primary-channel-sat: 50;\n\t\t\t--noise-primary-channel-sat-scale: 0.1;\n\t\t\t--noise-primary-channel-lum: 95;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 125;\n\t\t\t--noise-secondary-note-hue-scale: 50;\n\t\t\t--noise-secondary-note-sat: 10;\n\t\t\t--noise-secondary-note-sat-scale: 0.1;\n\t\t\t--noise-secondary-note-lum: 70;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 125;\n\t\t\t--noise-primary-note-hue-scale: 50;\n\t\t\t--noise-primary-note-sat: 50;\n\t\t\t--noise-primary-note-sat-scale: 0.1;\n\t\t\t--noise-primary-note-lum: 95;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 255;\n\t\t\t--mod-secondary-channel-hue-scale: 75;\n\t\t\t--mod-secondary-channel-sat: 10;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 70;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 255;\n\t\t\t--mod-primary-channel-hue-scale: 75;\n\t\t\t--mod-primary-channel-sat: 50;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 95;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 255;\n\t\t\t--mod-secondary-note-hue-scale: 75;\n\t\t\t--mod-secondary-note-sat: 10;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 70;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 255;\n\t\t\t--mod-primary-note-hue-scale: 75;\n\t\t\t--mod-primary-note-sat: 50;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 95;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t--disabled-note-secondary: #8c8c8c;\n\t\t}`,\n    \"blutonium\": `:root {\n\t\t\t--page-margin: #02070D;\n\t\t\t--editor-background: #02070D;\n\t\t\t--primary-text: #9bd1ee;\n\t\t\t--secondary-text: #5a6da8;\n\t\t\t--text-selection: rgb(68 68 255 / 99%);\n\t\t\t--box-selection-fill: rgb(0 0 255 / 30%);\n\t\t\t--loop-accent: #024aca;\n\t\t\t--link-accent: #024aca;\n\t\t\t--ui-widget-background: #161c2e;\n\t\t\t--ui-widget-focus: #262c3e;\n\t\t\t--pitch-background: #22272D;\n\t\t\t--tonic: #1b3056;\n\t\t\t--fifth-note: #344051;\n\t\t\t--white-piano-key: #a6c6ed;\n\t\t\t--black-piano-key: #2f4687;\n\t\t\t--track-editor-bg-pitch: #25284c;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #024aca;\n\t\t\t--indicator-secondary: #00177d;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #273b9d;\n\t\t\t--mute-button-mod: #27989d;\n\t\t\t--pitch1-secondary-channel: hsl(200, 100%, 40%);\n\t\t\t--pitch1-primary-channel: #99ddff;\n\t\t\t--pitch1-secondary-note: hsl(200, 100%, 40%);\n\t\t\t--pitch1-primary-note: #99ddff;\n\t\t\t--pitch2-secondary-channel: \thsl(212, 100%, 34%);\n\t\t\t--pitch2-primary-channel: #5BA8FF;\n\t\t\t--pitch2-secondary-note: hsl(212, 100%, 34%);\n\t\t\t--pitch2-primary-note: #5BA8FF;\n\t\t\t--pitch3-secondary-channel: #024ACA;\n\t\t\t--pitch3-primary-channel: #0A89FF;\n\t\t\t--pitch3-secondary-note: #024ACA;\n\t\t\t--pitch3-primary-note: #0A89FF;\n\t\t\t--pitch4-secondary-channel: #00177D;\n\t\t\t--pitch4-primary-channel: #024ACA;\n\t\t\t--pitch4-secondary-note: #00177D;\n\t\t\t--pitch4-primary-note: #024ACA;\n\t\t\t--pitch5-secondary-channel: #000e4e;\n\t\t\t--pitch5-primary-channel: #0023bf;\n\t\t\t--pitch5-secondary-note: #000e4e;\n\t\t\t--pitch5-primary-note: #0023bf;\n\t\t\t--pitch6-secondary-channel: #8990FE;\n\t\t\t--pitch6-primary-channel: #C2C6FF;\n\t\t\t--pitch6-secondary-note: #8990FE;\n\t\t\t--pitch6-primary-note: #C2C6FF;\n\t\t\t--pitch7-secondary-channel: #5E65D3;\n\t\t\t--pitch7-primary-channel: #8990FE;\n\t\t\t--pitch7-secondary-note: #5E65D3;\n\t\t\t--pitch7-primary-note: #8990FE;\n\t\t\t--pitch8-secondary-channel: #3138A6;\n\t\t\t--pitch8-primary-channel: #5E65D3;\n\t\t\t--pitch8-secondary-note: #3138A6;\n\t\t\t--pitch8-primary-note: #5E65D3;\n\t\t\t--pitch9-secondary-channel: #1B0B7F;\n\t\t\t--pitch9-primary-channel: #3138A6;\n\t\t\t--pitch9-secondary-note: #1B0B7F;\n\t\t\t--pitch9-primary-note: #3138A6;\n\t\t\t--pitch10-secondary-channel: #13015D;\n\t\t\t--pitch10-primary-channel: #1c02bd;\n\t\t\t--pitch10-secondary-note: #13015D;\n\t\t\t--pitch10-primary-note: #1c02bd;\n\t\t\t--noise1-secondary-channel: #A675FE;\n\t\t\t--noise1-primary-channel: #E2C9FF;\n\t\t\t--noise1-secondary-note: #A675FE;\n\t\t\t--noise1-primary-note: #E2C9FF;\n\t\t\t--noise2-secondary-channel: #6A31CA;\n\t\t\t--noise2-primary-channel: #A675FE;\n\t\t\t--noise2-secondary-note: #6A31CA;\n\t\t\t--noise2-primary-note: #A675FE;\n\t\t\t--noise3-secondary-channel: #5A1991;\n\t\t\t--noise3-primary-channel: #6A31CA;\n\t\t\t--noise3-secondary-note: #5A1991;\n\t\t\t--noise3-primary-note: #6A31CA;\n\t\t\t--noise4-secondary-channel: #2f1a68;\n\t\t\t--noise4-primary-channel: #5A1991;\n\t\t\t--noise4-secondary-note: #2f1a68;\n\t\t\t--noise4-primary-note: #5A1991;\n\t\t\t--noise5-secondary-channel: #211640;\n\t\t\t--noise5-primary-channel: #391b8d;\n\t\t\t--noise5-secondary-note: #211640;\n\t\t\t--noise5-primary-note: #391b8d;\n\t\t\t--mod1-secondary-channel: #25E2CD;\n\t\t\t--mod1-primary-channel: #BDFFCA;\n\t\t\t--mod1-secondary-note: #25E2CD;\n\t\t\t--mod1-primary-note: #BDFFCA;\n\t\t\t--mod2-secondary-channel: #0A98AC;\n\t\t\t--mod2-primary-channel: #25E2CD;\n\t\t\t--mod2-secondary-note: #0A98AC;\n\t\t\t--mod2-primary-note: #25E2CC;\n\t\t\t--mod3-secondary-channel: #005280;\n\t\t\t--mod3-primary-channel: #0A98AC;\n\t\t\t--mod3-secondary-note: #005280;\n\t\t\t--mod3-primary-note: #0A98AC;\n\t\t\t--mod4-secondary-channel: #0f3670;\n\t\t\t--mod4-primary-channel: #1369c1;\n\t\t\t--mod4-secondary-note: #0f3670;\n\t\t\t--mod4-primary-note: #1369c1;\n\t\t\t--mod-label-primary: #191d26;\n\t\t\t--mod-label-secondary-text: #024aca;\n\t\t\t--mod-label-primary-text: #ffffffa6;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\t}`,\n    \"slushie\": `\n\t:root {\n\t\t--page-margin: #040814;\n\t\t--editor-background: #040814;\n\t\t--hover-preview: #c6f7ff;\n\t\t--primary-text: #d3f3ff;\n\t\t--secondary-text: #6f72b5;\n\t\t--inverted-text: black;\n\t\t--box-selection-fill: rgb(43 70 171 / 62%);\n\t\t--loop-accent: #573ebb;\n\t\t--ui-widget-background: #2e2f44;\n\t\t--ui-widget-focus: #2b2c46;\n\t\t--pitch-background: #353654;\n\t\t--tonic: #716fe3;\n\t\t--fifth-note: #76469b;\n\t\t--white-piano-key: #abbce3;\n\t\t--black-piano-key: #2f235e;\n\t\t--track-editor-bg-pitch: #3a3b5c;\n\t\t--track-editor-bg-pitch-dim: #1f2036;\n\t\t--track-editor-bg-noise: #3c3554;\n\t\t--track-editor-bg-noise-dim: #1e1834;\n\t\t--track-editor-bg-mod: #30335e;\n\t\t--track-editor-bg-mod-dim: #161938;\n\t\t--multiplicative-mod-slider: #e29cff;\n\t\t--overwriting-mod-slider: #495789;\n\t\t--indicator-primary: #e1a6ff;\n\t\t--indicator-secondary: #415187;\n\t\t--select2-opt-group: #22223a;\n\t\t--input-box-outline: #2d2648;\n\t\t--mute-button-normal: #7aceff;\n\t\t--pitch1-secondary-channel: #5f3ea5;\n\t\t--pitch1-primary-channel: #c1a4ff;\n\t\t--pitch1-secondary-note: #794fd3;\n\t\t--pitch1-primary-note: #d8c6ff;\n\t\t--pitch2-secondary-channel: #4f44bf;\n\t\t--pitch2-primary-channel: #9287ff;\n\t\t--pitch2-secondary-note: #5e51d9;\n\t\t--pitch2-primary-note: #b6afff;\n\t\t--pitch3-secondary-channel: #374eb9;\n\t\t--pitch3-primary-channel: #8097ff;\n\t\t--pitch3-secondary-note: #445cc9;\n\t\t--pitch3-primary-note: #a0b2ff;\n\t\t--pitch4-secondary-channel: #2867cf;\n\t\t--pitch4-primary-channel: #6fa5ff;\n\t\t--pitch4-secondary-note: #2e6ed7;\n\t\t--pitch4-primary-note: #a6c7ff;\n\t\t--pitch5-secondary-channel: #3175a7;\n\t\t--pitch5-primary-channel: #7ec9ff;\n\t\t--pitch5-secondary-note: #367eb3;\n\t\t--pitch5-primary-note: #9fd7ff;\n\t\t--pitch6-secondary-channel: #3993a9;\n\t\t--pitch6-primary-channel: #8ce9ff;\n\t\t--pitch6-secondary-note: #386da3;\n\t\t--pitch6-primary-note: #9eecff;\n\t\t--pitch7-secondary-channel: #369d8a;\n\t\t--pitch7-primary-channel: #8bfce7;\n\t\t--pitch7-secondary-note: #1c93a7;\n\t\t--pitch7-primary-note: #abffef;\n\t\t--pitch8-secondary-channel: #00A170;\n\t\t--pitch8-primary-channel: #50FFC9;\n\t\t--pitch8-secondary-note: #00C78A;\n\t\t--pitch8-primary-note: #83FFD9;\n\t\t--pitch9-secondary-channel: #49b374;\n\t\t--pitch9-primary-channel: #8affa9;\n\t\t--pitch9-secondary-note: #26815f;\n\t\t--pitch9-primary-note: #c8ffde;\n\t\t--pitch10-secondary-channel: #58a747;\n\t\t--pitch10-primary-channel: #bbffaa;\n\t\t--pitch10-secondary-note: #1d7c48;\n\t\t--pitch10-primary-note: #c7ffbc;\n\t\t--noise1-secondary-channel: #42829b;\n\t\t--noise1-primary-channel: #97d3fc;\n\t\t--noise1-secondary-note: #3f53b3;\n\t\t--noise1-primary-note: #97d3fc;\n\t\t--noise2-secondary-channel: #6354bb;\n\t\t--noise2-primary-channel: #9a89ff;\n\t\t--noise2-secondary-note: #5f4dcd;\n\t\t--noise2-primary-note: #c6bcff;\n\t\t--noise3-secondary-channel: #704a95;\n\t\t--noise3-primary-channel: #c285ff;\n\t\t--noise3-secondary-note: #ad5aff;\n\t\t--noise3-primary-note: #d3a6ff;\n\t\t--noise4-secondary-channel: #a53c65;\n\t\t--noise4-primary-channel: #f794bb;\n\t\t--noise4-secondary-note: #cb5080;\n\t\t--noise4-primary-note: #f794bb;\n\t\t--noise5-secondary-channel: #9b2d2d;\n\t\t--noise5-primary-channel: #ff7676;\n\t\t--noise5-secondary-note: #cb4444;\n\t\t--noise5-primary-note: #ff9999;\n\t\t--mod1-secondary-channel: #b7613c;\n\t\t--mod1-primary-channel: #ff9f76;\n\t\t--mod1-secondary-note: #e77e52;\n\t\t--mod1-primary-note: #ffb99b;\n\t\t--mod2-secondary-channel: #916d34;\n\t\t--mod2-primary-channel: #fece80;\n\t\t--mod2-secondary-note: #c58b35;\n\t\t--mod2-primary-note: #ffdda5;\n\t\t--mod3-secondary-channel: #83761a;\n\t\t--mod3-primary-channel: #fdf68c;\n\t\t--mod3-secondary-note: #c18e00;\n\t\t--mod3-primary-note: #fdf68c;\n\t\t--mod4-secondary-channel: #a86436;\n\t\t--mod4-primary-channel: #c8a825;\n\t\t--mod4-secondary-note: #e8ba46;\n\t\t--mod4-primary-note: #c8a825;\n\t\t--mod-label-primary: #37325e;\n\t\t--mod-label-secondary-text: #6e8aa7;\n\t\t--mod-label-primary-text: #c1ffff;\n}`,\n    \"ultrabox dark\": `\n:root {\n/*--mod-title: #CCCCCC;*/\n--loop-accent: #CCCCCC;\n--playhead: #CCCCCC;\n/*--primary-text: #CCCCCC;\n--hover-preview: #CCCCCC;*/\n--link-accent: #FF8EC5;\n--indicator-primary: #FF8EC5;\n/*--indicator-primary: #CCCCCC;*/\n/*--indicator-secondary: #E856B2;*/\n--white-piano-key: #CCCCCC;\n/*--black-piano-key: #444;*/\n--text-selection: #932253;\n--oscilloscope-line-L: #CCCCCC;\n--oscilloscope-line-R: #932253;\n--pitch-channel-limit: 8;\n--pitch1-secondary-channel: #A83030;\n--pitch1-primary-channel:   #FF7C7C;\n--pitch1-secondary-note:    #B51532;\n--pitch1-primary-note:      #FFA3A3;\n\n--pitch2-secondary-channel: #C75000;\n--pitch2-primary-channel:   #FF9752;\n--pitch2-secondary-note:    #FF771C;\n--pitch2-primary-note:      #FFCDAB;\n\n--pitch3-secondary-channel: #A1A100;\n--pitch3-primary-channel: #FFFF25;\n--pitch3-secondary-note: #C7C700;\n--pitch3-primary-note: #FFFF92;\n\n--pitch4-secondary-channel: #139620;\n--pitch4-primary-channel:   #25ff3a;\n--pitch4-secondary-note:    #21FF33;\n--pitch4-primary-note:      #C0FFB5;\n\n--pitch5-secondary-channel: #0099A1;\n--pitch5-primary-channel:   #25F3FF;\n--pitch5-secondary-note:    #00BDC7;\n--pitch5-primary-note:      #92F9FF;\n\n--pitch6-secondary-channel: #58599E;\n--pitch6-primary-channel:   #5EA3FF;\n--pitch6-secondary-note:    #183AC7;\n--pitch6-primary-note:      #9EC8FF;\n\n--pitch7-secondary-channel: #6038a5;\n--pitch7-primary-channel:   #C760FF;\n--pitch7-secondary-note:    #5433A0;\n--pitch7-primary-note:      #D99EFF;\n\n--pitch8-secondary-channel: #932253;\n--pitch8-primary-channel:   #FF60A5;\n--pitch8-secondary-note:    #8E1C4E;\n--pitch8-primary-note:      #FF8EC5;\n\n/*--track-editor-bg-mod: #632D45;\n--track-editor-bg-mod-dim: #3F1D2C;*/\n}`,\n    \"modbox classic\": `\n\t\t\t:root {\n\t\t\t\t--loop-accent: #9900cc;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t\t--text-disabled-icon: ✗ ;\n\t\t\t\t}\n\t\t\t`,\n    \"zefbox\": `\n\t\t\t:root {\n\t\t\t\t--loop-accent: #C3593D;\n\t\t\t\t--pitch1-secondary-channel: #06c400;\n\t\t\t\t--pitch1-primary-channel:   #08ff00;\n\t\t\t\t--pitch1-secondary-note:    #06c400;\n\t\t\t\t--pitch1-primary-note:      #06e000;\n\t\t\t\t--pitch2-secondary-channel: #00bf97;\n\t\t\t\t--pitch2-primary-channel:   #00ffcb;\n\t\t\t\t--pitch2-secondary-note:    #00bf97;\n\t\t\t\t--pitch2-primary-note:      #00edbc;\n\t\t\t\t--pitch3-secondary-channel: #b5b000;\n\t\t\t\t--pitch3-primary-channel:   #fffa00;\n\t\t\t\t--pitch3-secondary-note:    #b5b000;\n\t\t\t\t--pitch3-primary-note:      #e0db00;\n\t\t\t\t--pitch4-secondary-channel: #c90000;\n\t\t\t\t--pitch4-primary-channel:   #e20000;\n\t\t\t\t--pitch4-secondary-note:    #c90000;\n\t\t\t\t--pitch4-primary-note:      #e20000;\n\t\t\t\t--pitch5-secondary-channel: #d17d12;\n\t\t\t\t--pitch5-primary-channel:   #ff9e21;\n\t\t\t\t--pitch5-secondary-note:    #d17d12;\n\t\t\t\t--pitch5-primary-note:      #ef9017;\n\t\t\t\t--pitch6-secondary-channel: #d35bc8;\n\t\t\t\t--pitch6-primary-channel:   #ffa5f7;\n\t\t\t\t--pitch6-secondary-note:    #d35bc8;\n\t\t\t\t--pitch6-primary-note:      #fc64ee;\n\t\t\t\t--pitch7-secondary-channel: #D00000;\n\t\t\t\t--pitch7-primary-channel:   #FF4444;\n\t\t\t\t--pitch7-secondary-note:    #D00000;\n\t\t\t\t--pitch7-primary-note:      #FF4444;\n\t\t\t\t--pitch8-secondary-channel: #00C700;\n\t\t\t\t--pitch8-primary-channel:   #A0FFA0;\n\t\t\t\t--pitch8-secondary-note:    #00C700;\n\t\t\t\t--pitch8-primary-note:      #A0FFA0;\n\t\t\t\t--pitch9-secondary-channel: #A88981;\n\t\t\t\t--pitch9-primary-channel:   #F1C3B7;\n\t\t\t\t--pitch9-secondary-note:    #A88981;\n\t\t\t\t--pitch9-primary-note:      #F1C3B7;\n\t\t\t\t--pitch10-secondary-channel:#0C0A99;\n\t\t\t\t--pitch10-primary-channel:  #0000EE;\n\t\t\t\t--pitch10-secondary-note:   #0C0A99;\n\t\t\t\t--pitch10-primary-note:     #0000EE;\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\n\t\t\t\t--noise2-secondary-channel: #A18F51;\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\n\t\t\t\t--noise2-secondary-note:    #A18F51;\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768DFC;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768DFC;\n\t\t\t\t--noise4-secondary-channel: #8888D0;\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\n\t\t\t\t--noise4-secondary-note:    #8888D0;\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\n\t\t\t\t--noise5-secondary-channel: #B7148E;\n\t\t\t\t--noise5-primary-channel:   #E819B4;\n\t\t\t\t--noise5-secondary-note:    #B7148E;\n\t\t\t\t--noise5-primary-note:      #E819B4;\n       --mod1-secondary-channel: #06c400;\n\t\t\t\t--mod1-primary-channel:   #08ff00;\n\t\t\t\t--mod1-secondary-note:    #06c400;\n\t\t\t\t--mod1-primary-note:      #06e000;\n\t\t\t\t--mod2-secondary-channel: #00bf97;\n\t\t\t\t--mod2-primary-channel:   #00ffcb;\n\t\t\t\t--mod2-secondary-note:    #00bf97;\n\t\t\t\t--mod2-primary-note:      #00edbc;\n\t\t\t\t--mod3-secondary-channel: #b5b000;\n\t\t\t\t--mod3-primary-channel:   #fffa00;\n\t\t\t\t--mod3-secondary-note:    #b5b000;\n\t\t\t\t--mod3-primary-note:      #e0db00;\n\t\t\t\t--mod4-secondary-channel: #c90000;\n\t\t\t\t--mod4-primary-channel:   #e20000;\n\t\t\t\t--mod4-secondary-note:    #c90000;\n\t\t\t\t--mod4-primary-note:      #e20000;\n\t\t\t\t}\n\t\t\t`,\n    \"sandbox classic\": `\n\t\t\t:root {\n\t\t\t\t--loop-accent: #198195;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #539999;\n\t\t\t\t--pitch1-primary-channel:   #5EB1B1;\n\t\t\t\t--pitch1-secondary-note:    #539999;\n\t\t\t\t--pitch1-primary-note:      #5EB1B1;\n\t\t\t\t--pitch2-secondary-channel: #95933C;\n\t\t\t\t--pitch2-primary-channel:   #B0AD44;\n\t\t\t\t--pitch2-secondary-note:    #95933C;\n\t\t\t\t--pitch2-primary-note:      #B0AD44;\n\t\t\t\t--pitch3-secondary-channel: #E75566;\n\t\t\t\t--pitch3-primary-channel:   #FF9AA6;\n\t\t\t\t--pitch3-secondary-note:    #E75566;\n\t\t\t\t--pitch3-primary-note:      #FF9AA6;\n\t\t\t\t--pitch4-secondary-channel: #8B4343;\n\t\t\t\t--pitch4-primary-channel:   #FF8844;\n\t\t\t\t--pitch4-secondary-note:    #8B4343;\n\t\t\t\t--pitch4-primary-note:      #FF8844;\n\t\t\t\t--pitch5-secondary-channel: #888888;\n\t\t\t\t--pitch5-primary-channel:   #BBBBBB;\n\t\t\t\t--pitch5-secondary-note:    #888888;\n\t\t\t\t--pitch5-primary-note:      #BBBBBB;\n\t\t\t\t--pitch6-secondary-channel: #BB6906;\n\t\t\t\t--pitch6-primary-channel:   #FE8D00;\n\t\t\t\t--pitch6-secondary-note:    #BB6906;\n\t\t\t\t--pitch6-primary-note:      #FE8D00;\n\t\t\t\t--pitch7-secondary-channel: #539999;\n\t\t\t\t--pitch7-primary-channel:   #5EB1B1;\n\t\t\t\t--pitch7-secondary-note:    #539999;\n\t\t\t\t--pitch7-primary-note:      #5EB1B1;\n\t\t\t\t--pitch8-secondary-channel: #95933C;\n\t\t\t\t--pitch8-primary-channel:   #B0AD44;\n\t\t\t\t--pitch8-secondary-note:    #95933C;\n\t\t\t\t--pitch8-primary-note:      #B0AD44;\n\t\t\t\t--pitch9-secondary-channel: #E75566;\n\t\t\t\t--pitch9-primary-channel:   #FF9AA6;\n\t\t\t\t--pitch9-secondary-note:    #E75566;\n\t\t\t\t--pitch9-primary-note:      #FF9AA6;\n\t\t\t\t--pitch10-secondary-channel: #8B4343;\n\t\t\t\t--pitch10-primary-channel:   #FF8844;\n\t\t\t\t--pitch10-secondary-note:    #8B4343;\n\t\t\t\t--pitch10-primary-note:      #FF8844;\t\t\t\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\n\t\t\t\t--noise2-secondary-channel: #A18F51;\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\n\t\t\t\t--noise2-secondary-note:    #A18F51;\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768DFC;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768DFC;\n\t\t\t\t--noise4-secondary-channel: #8888D0;\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\n\t\t\t\t--noise4-secondary-note:    #8888D0;\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\n\t\t\t\t--noise5-secondary-channel: #A18F51;\n\t\t\t\t--noise5-primary-channel:   #F6BB6A;\n\t\t\t\t--noise5-secondary-note:    #A18F51;\n\t\t\t\t--noise5-primary-note:      #F6BB6A;\t\t\t\n         \t--mod1-secondary-channel: #539999;\n\t\t\t\t--mod1-primary-channel:   #5EB1B1;\n\t\t\t\t--mod1-secondary-note:    #539999;\n\t\t\t\t--mod1-primary-note:      #5EB1B1;\n\t\t\t\t--mod2-secondary-channel: #95933C;\n\t\t\t\t--mod2-primary-channel:   #B0AD44;\n\t\t\t\t--mod2-secondary-note:    #95933C;\n\t\t\t\t--mod2-primary-note:      #B0AD44;\n\t\t\t\t--mod3-secondary-channel: #E75566;\n\t\t\t\t--mod3-primary-channel:   #FF9AA6;\n\t\t\t\t--mod3-secondary-note:    #E75566;\n\t\t\t\t--mod3-primary-note:      #FF9AA6;\n\t\t\t\t--mod4-secondary-channel: #8B4343;\n\t\t\t\t--mod4-primary-channel:   #FF8844;\n\t\t\t\t--mod4-secondary-note:    #8B4343;\n\t\t\t\t--mod4-primary-note:      #FF8844;\n\t\t\t\t}\n\t\t\t`,\n    \"harrybox\": `\n\t\t\t:root {\n\t\t\t\t--loop-accent: #9900cc;\n\t\t\t\t\t--noise-channel-limit: 2;\n\t\t\t\t--pitch1-secondary-channel: #00ffff;\n\t\t\t\t--pitch1-primary-channel:   #00ffff;\n\t\t\t\t--pitch1-secondary-note:    #00ffff;\n\t\t\t\t--pitch1-primary-note:      #00ffff;\n\t\t\t\t--pitch2-secondary-channel: #00d8d8;\n\t\t\t\t--pitch2-primary-channel:   #00d8d8;\n\t\t\t\t--pitch2-secondary-note:    #00d8d8;\n\t\t\t\t--pitch2-primary-note:      #00d8d8;\n\t\t\t\t--pitch3-secondary-channel: #00adad;\n\t\t\t\t--pitch3-primary-channel:   #00adad;\n\t\t\t\t--pitch3-secondary-note:    #00adad;\n\t\t\t\t--pitch3-primary-note:      #00adad;\n\t\t\t\t-pitch4-secondary-channel: #008c8c;\n\t\t\t\t--pitch4-primary-channel:   #008c8c;\n\t\t\t\t--pitch4-secondary-note:    #008c8c;\n\t\t\t\t--pitch4-primary-note:      #008c8c;\n\t\t\t\t--pitch5-secondary-channel: #005b5b;\n\t\t\t\t--pitch5-primary-channel:   #005b5b;\n\t\t\t\t--pitch5-secondary-note:    #005b5b;\n\t\t\t\t--pitch5-primary-note:      #005b5b;\n\t\t\t\t--pitch6-secondary-channel: #003333;\n\t\t\t\t--pitch6-primary-channel:   #003333;\n\t\t\t\t--pitch6-secondary-note:    #003333;\n\t\t\t\t--pitch6-primary-note:      #003333;\n\t\t\t\t--pitch7-secondary-channel: #00ffff;\n\t\t\t\t--pitch7-primary-channel:   #00ffff;\n\t\t\t\t--pitch7-secondary-note:    #00ffff;\n\t\t\t\t--pitch7-primary-note:      #00ffff;\n\t\t\t\t--pitch8-secondary-channel: #00ffff;\n\t\t\t\t--pitch8-primary-channel:   #00ffff;\n\t\t\t\t--pitch8-secondary-note:    #00ffff;\n\t\t\t\t--pitch8-primary-note:      #00ffff;\n\t\t\t\t--pitch9-secondary-channel: #00ffff;\n\t\t\t\t--pitch9-primary-channel:   #00ffff;\n\t\t\t\t--pitch9-secondary-note:    #00ffff;\n\t\t\t\t--pitch9-primary-note:      #00ffff;\n\t\t\t\t--pitch10-secondary-channel:#00ffff;\n\t\t\t\t--pitch10-primary-channel:  #00ffff;\n\t\t\t\t--pitch10-secondary-note:   #00ffff;\n\t\t\t\t--pitch10-primary-note:     #00ffff;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #991010;\n\t\t\t\t--noise3-primary-channel:   #ff1616;\n\t\t\t\t--noise3-secondary-note:    #991010;\n\t\t\t\t--noise3-primary-note:      #ff1616;\n\t\t\t\t--noise4-secondary-channel: #aaaaaa;\n\t\t\t\t--noise4-primary-channel:   #ffffff;\n\t\t\t\t--noise4-secondary-note:    #aaaaaa;\n\t\t\t\t--noise4-primary-note:      #ffffff;\n\t\t\t\t--noise5-secondary-channel: #991010;\n\t\t\t\t--noise5-primary-channel:   #ff1616;\n\t\t\t\t--noise5-secondary-note:    #991010;\n\t\t\t\t--noise5-primary-note:      #ff1616;\n         \t--mod1-secondary-channel: #00ffff;\n\t\t\t\t--mod1-primary-channel:   #00ffff;\n\t\t\t\t--mod1-secondary-note:    #00ffff;\n\t\t\t\t--mod1-primary-note:      #00ffff;\n\t\t\t\t--mod2-secondary-channel: #00d8d8;\n\t\t\t\t--mod2-primary-channel:   #00d8d8;\n\t\t\t\t--mod2-secondary-note:    #00d8d8;\n\t\t\t\t--mod2-primary-note:      #00d8d8;\n\t\t\t\t--mod3-secondary-channel: #00adad;\n\t\t\t\t--mod3-primary-channel:   #00adad;\n\t\t\t\t--mod3-secondary-note:    #00adad;\n\t\t\t\t--mod3-primary-note:      #00adad;\n\t\t\t\t-mod4-secondary-channel: #008c8c;\n\t\t\t\t--mod4-primary-channel:   #008c8c;\n\t\t\t\t--mod4-secondary-note:    #008c8c;\n\t\t\t\t--mod4-primary-note:      #008c8c;\n\t\t\t\t}\n\t\t\t`,\n    \"brucebox\": `\n\t\t:root {\n\t\t\t\tfont: 16px/2 cursive;\n\t\t\t\t--page-margin: #4667CE;\n\t\t\t\t--editor-background: #4667CE;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #444;\n\t\t\t\t\t--pitch-channel-limit: 3;\n\t\t\t\t\t--noise-channel-limit: 1;\n\t\t\t\t--pitch1-secondary-channel: #bda822;\n\t\t\t\t--pitch1-primary-channel:   #fcdb00;\n\t\t\t\t--pitch1-secondary-note:    #bda822;\n\t\t\t\t--pitch1-primary-note:      #fcdb00;\n\t\t\t\t--pitch2-secondary-channel: #612278;\n\t\t\t\t--pitch2-primary-channel:   #bb00ff;\n\t\t\t\t--pitch2-secondary-note:    #612278;\n\t\t\t\t--pitch2-primary-note:      #bb00ff;\n\t\t\t\t--pitch3-secondary-channel: #8b4343;\n\t\t\t\t--pitch3-primary-channel:   #ff8844;\n\t\t\t\t--pitch3-secondary-note:    #8b4343;\n\t\t\t\t--pitch3-primary-note:      #ff8844;\n\t\t\t\t--pitch4-secondary-channel: #bda822;\n\t\t\t\t--pitch4-primary-channel:   #fcdb00;\n\t\t\t\t--pitch4-secondary-note:    #bda822;\n\t\t\t\t--pitch4-primary-note:      #fcdb00;\n\t\t\t\t--pitch5-secondary-channel: #612278;\n\t\t\t\t--pitch5-primary-channel:   #bb00ff;\n\t\t\t\t--pitch5-secondary-note:    #612278;\n\t\t\t\t--pitch5-primary-note:      #bb00ff;\n\t\t\t\t--pitch6-secondary-channel: #8b4343;\n\t\t\t\t--pitch6-primary-channel:   #ff8844;\n\t\t\t\t--pitch6-secondary-note:    #8b4343;\n\t\t\t\t--pitch6-primary-note:      #ff8844;\n\t\t\t\t--pitch7-secondary-channel: #bda822;\n\t\t\t\t--pitch7-primary-channel:   #fcdb00;\n\t\t\t\t--pitch7-secondary-note:    #bda822;\n\t\t\t\t--pitch7-primary-note:      #fcdb00;\n\t\t\t\t--pitch8-secondary-channel: #612278;\n\t\t\t\t--pitch8-primary-channel:   #bb00ff;\n\t\t\t\t--pitch8-secondary-note:    #612278;\n\t\t\t\t--pitch8-primary-note:      #bb00ff;\n\t\t\t\t--pitch9-secondary-channel: #8b4343;\n\t\t\t\t--pitch9-primary-channel:   #ff8844;\n\t\t\t\t--pitch9-secondary-note:    #8b4343;\n\t\t\t\t--pitch9-primary-note:      #ff8844;\n\t\t\t\t--pitch10-secondary-channel: #bda822;\n\t\t\t\t--pitch10-primary-channel:   #fcdb00;\n\t\t\t\t--pitch10-secondary-note:    #bda822;\n\t\t\t\t--pitch10-primary-note:      #fcdb00;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t}\n\n\t\t\t\t.trackContainer .noSelection {\n\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\tspan input, \n\t\t\t\tdiv.harmonics svg,\n\t\t\t\tdiv.spectrum svg,\n\t\t\t\tdiv.filterEditor svg,\n\t\t\t\tdiv.fadeInOut svg,\n\t\t\t\tdiv.loopEditor svg,\n\t\t\t\tsvg#firstImage,\n\t\t\t\tdiv.trackContainer div.noSelection\n\t\t\t\t{\n\t\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\tinput, textarea {\n\t\t\t\t\tbackground-color: black !important;\n\t\t\t\t}\n\n\t\t\t\t#text-content > section > h1 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\n\t\t\t`,\n    \"shitbox 2.0\": `\n\t\t\t:root {\n\t\t\t--page-margin: maroon;\n\t\t\t\t\t--playhead: firebrick;\n\t\t\t\t\t--primary-text: silver;\n\t\t\t\t--text-selection: rgba(139,69,19,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(220,20,60,0.2);\n\t\t\t\t\t--loop-accent: #841;\n\t\t\t\t\t--link-accent: #841;\n\t\t\t\t\t--ui-widget-background: #800;\n\t\t\t\t\t--ui-widget-focus: #a00;\n\t\t\t\t\t--pitch-background: #700;\n\t\t\t\t\t--tonic: #522;\n\t\t\t\t\t--fifth-note: #f75;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #7e4a35;\n\t\t\t\t\t--pitch1-primary-channel:   #c27251;\n\t\t\t\t\t--pitch1-secondary-note:    #7e4a35;\n\t\t\t\t\t--pitch1-primary-note:      #f09571;\n\t\t\t\t\t--pitch2-secondary-channel: #998a5c;\n\t\t\t\t\t--pitch2-primary-channel:   #d9c27c;\n\t\t\t\t\t--pitch2-secondary-note:    #998a5c;\n\t\t\t\t\t--pitch2-primary-note:      #fae196;\n\t\t\t\t\t--pitch3-secondary-channel: #9c927c;\n\t\t\t\t\t--pitch3-primary-channel:   #dbceb0;\n\t\t\t\t\t--pitch3-secondary-note:    #9c927c;\n\t\t\t\t\t--pitch3-primary-note:      #eddebb;\n\t\t\t\t\t--pitch4-secondary-channel: #838060;\n\t\t\t\t\t--pitch4-primary-channel:   #ccc795;\n\t\t\t\t\t--pitch4-secondary-note:    #838060;\n\t\t\t\t\t--pitch4-primary-note:      #f2ecb1;\n\t\t\t\t\t--pitch5-secondary-channel: #8b6f47;\n\t\t\t\t\t--pitch5-primary-channel:   #d1a76b;\n\t\t\t\t\t--pitch5-secondary-note:    #8b6f47;\n\t\t\t\t\t--pitch5-primary-note:      #ffcc82;\n\t\t\t\t\t--pitch6-secondary-channel: #a96e5b;\n\t\t\t\t\t--pitch6-primary-channel:   #e3967d;\n\t\t\t\t\t--pitch6-secondary-note:    #a96e5b;\n\t\t\t\t\t--pitch6-primary-note:      #ffa68a;\n\t\t\t\t\t\t--pitch7-secondary-channel: #7e4a35;\n\t\t\t\t\t--pitch7-primary-channel:   #c27251;\n\t\t\t\t\t--pitch7-secondary-note:    #7e4a35;\n\t\t\t\t\t--pitch7-primary-note:      #f09571;\n\t\t\t\t\t--pitch8-secondary-channel: #998a5c;\n\t\t\t\t\t--pitch8-primary-channel:   #d9c27c;\n\t\t\t\t\t--pitch8-secondary-note:    #998a5c;\n\t\t\t\t\t--pitch8-primary-note:      #fae196;\n\t\t\t\t\t--pitch9-secondary-channel: #9c927c;\n\t\t\t\t\t--pitch9-primary-channel:   #dbceb0;\n\t\t\t\t\t--pitch9-secondary-note:    #9c927c;\n\t\t\t\t\t--pitch9-primary-note:      #eddebb;\n\t\t\t\t\t--pitch10-secondary-channel: #838060;\n\t\t\t\t\t--pitch10-primary-channel:   #ccc795;\n\t\t\t\t\t--pitch10-secondary-note:    #838060;\n\t\t\t\t\t--pitch10-primary-note:      #f2ecb1;\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise5-secondary-channel: #996633;\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\n         --mod1-secondary-channel: #7e4a35;\n\t\t\t\t\t--mod1-primary-channel:   #c27251;\n\t\t\t\t\t--mod1-secondary-note:    #7e4a35;\n\t\t\t\t\t--mod1-primary-note:      #f09571;\n\t\t\t\t\t--mod2-secondary-channel: #998a5c;\n\t\t\t\t\t--mod2-primary-channel:   #d9c27c;\n\t\t\t\t\t--mod2-secondary-note:    #998a5c;\n\t\t\t\t\t--mod2-primary-note:      #fae196;\n\t\t\t\t\t--mod3-secondary-channel: #9c927c;\n\t\t\t\t\t--mod3-primary-channel:   #dbceb0;\n\t\t\t\t\t--mod3-secondary-note:    #9c927c;\n\t\t\t\t\t--mod3-primary-note:      #eddebb;\n\t\t\t\t\t--mod4-secondary-channel: #838060;\n\t\t\t\t\t--mod4-primary-channel:   #ccc795;\n\t\t\t\t\t--mod4-secondary-note:    #838060;\n\t\t\t\t\t--mod4-primary-note:      #f2ecb1;\n\t\t\t\t\t--note-flash: firebrick;\n  \t\t\t\t\t--note-flash-secondary: firebrick;\n\t\t\t\t}\n\t\t\t`,\n    \"shitbox 3.0\": `\n\t\t\t\n\t\t\t:root {\n\t\t\t\tfont: 20px/2 monospace;\n\t\t\t\t--page-margin: #252525;\n\t\t\t\t--editor-background: #252525;\n\t\t\t\t--primary-text: #C8C8C8;\n\t\t\t\t--link-accent: #945800;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #444;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--text-disabled-icon: ✗ ;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\t\t\twidth: 8px !important;\n\t\t\t\t  }\n\n\t\t\t\tbutton.playButton {\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t\t\tbutton.prevBarButton {\n\t\t\t\t\twidth: 40px;\n\t\t\t\t\tleft:-5px;\n\t\t\t\t}\n\t\t\t\tbutton.nextBarButton {\n\t\t\t\t\twidth: 40px;\n\t\t\t\t}\n\n\t\t\t\t.trackContainer .noSelection {\n\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\tspan input, \n\t\t\t\tdiv.harmonics svg,\n\t\t\t\tdiv.spectrum svg,\n\t\t\t\tdiv.filterEditor svg,\n\t\t\t\tdiv.fadeInOut svg,\n\t\t\t\tdiv.loopEditor svg,\n\t\t\t\tsvg#firstImage \n\t\t\t\t{\n\t\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\tline-height: 1.25;\n\t\t\t\t}\n\n\t\t\t\t#text-content {\n\t\t\t\t\tfont-size: 32px;\n\t\t\t\t\tline-height: 40px;\n\t\t\t\t}\n\n\t\t\t\t#text-content > section > h1 {\n\t\t\t\t\tcolor: #C8C8C8;\n\t\t\t\t\t}\n\t\t\t`,\n    \"nerdbox\": `\n\t\t\t:root {\n\t\t\t\t\t--pitch-channel-limit: 9;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #139620;\n\t\t\t\t--pitch1-primary-channel:   #25ff3a;\n\t\t\t\t--pitch1-secondary-note:    #139620;\n\t\t\t\t--pitch1-primary-note:      #25ff3a;\n\t\t\t\t--pitch2-secondary-channel: #109986;\n\t\t\t\t--pitch2-primary-channel:   #1cffe0;\n\t\t\t\t--pitch2-secondary-note:    #109986;\n\t\t\t\t--pitch2-primary-note:      #1cffe0;\n\t\t\t\t--pitch3-secondary-channel: #127296;\n\t\t\t\t--pitch3-primary-channel:   #21c3ff;\n\t\t\t\t--pitch3-secondary-note:    #127296;\n\t\t\t\t--pitch3-primary-note:      #21c3ff;\n\t\t\t\t--pitch4-secondary-channel: #6038a5;\n\t\t\t\t--pitch4-primary-channel:   #9456ff;\n\t\t\t\t--pitch4-secondary-note:    #6038a5;\n\t\t\t\t--pitch4-primary-note:      #ff35e0;\n\t\t\t\t--pitch5-secondary-channel: #a52491;\n\t\t\t\t--pitch5-primary-channel:   #ff35e0;\n\t\t\t\t--pitch5-secondary-note:    #a52491;\n\t\t\t\t--pitch5-primary-note:      #af3221;\n\t\t\t\t--pitch6-secondary-channel: #af3221;\n\t\t\t\t--pitch6-primary-channel:   #ff4a32;\n\t\t\t\t--pitch6-secondary-note:    #af3221;\n\t\t\t\t--pitch6-primary-note:      #ff4a32;\n\t\t\t\t--pitch7-secondary-channel: #ad6e0f;\n\t\t\t\t--pitch7-primary-channel:   #ffa216;\n\t\t\t\t--pitch7-secondary-note:    #ad6e0f;\n\t\t\t\t--pitch7-primary-note:      #ffa216;\n\t\t\t\t--pitch8-secondary-channel: #ad6e0f;\n\t\t\t\t--pitch8-primary-channel:   #ffa216;\n\t\t\t\t--pitch8-secondary-note:    #ad6e0f;\n\t\t\t\t--pitch8-primary-note:      #ffa216;\n\t\t\t\t--pitch9-secondary-channel: #a7b512;\n\t\t\t\t--pitch9-primary-channel:   #ebff19;\n\t\t\t\t--pitch9-secondary-note:    #a7b512;\n\t\t\t\t--pitch9-primary-note:      #ebff19;\n\t\t\t\t--pitch10-secondary-channel:#70ad1b;\n\t\t\t\t--pitch10-primary-channel:  #a4ff26;\n\t\t\t\t--pitch10-secondary-note:   #70ad1b;\n\t\t\t\t--pitch10-primary-note:     #a4ff26;\n\t\t\t\t--noise1-secondary-channel: #68706f;\n\t\t\t\t--noise1-primary-channel:   #a6b2b1;\n\t\t\t\t--noise1-secondary-note:    #68706f;\n\t\t\t\t--noise1-primary-note:      #a6b2b1;\n\t\t\t\t--noise2-secondary-channel: #665c64;\n\t\t\t\t--noise2-primary-channel:   #a396a1;\n\t\t\t\t--noise2-secondary-note:    #665c64;\n\t\t\t\t--noise2-primary-note:      #a396a1;\n\t\t\t\t--noise3-secondary-channel: #60605a;\n\t\t\t\t--noise3-primary-channel:   #afaea3;\n\t\t\t\t--noise3-secondary-note:    #60605a;\n\t\t\t\t--noise3-primary-note:      #afaea3;\n\t\t\t--noise4-secondary-channel: #665c64;\n\t\t\t--noise4-primary-channel:   #a396a1;\n\t\t\t\t--noise4-secondary-note:    #665c64;\n\t\t\t\t--noise4-primary-note:      #a396a1;\n\t\t\t\t--noise5-secondary-channel: #60605a;\n\t\t\t\t--noise5-primary-channel:   #afaea3;\n\t\t\t\t--noise5-secondary-note:    #60605a;\n\t\t\t\t--noise5-primary-note:      #afaea3;\n         --mod1-secondary-channel: #139620;\n\t\t\t\t--mod1-primary-channel:   #25ff3a;\n\t\t\t\t--mod1-secondary-note:    #139620;\n\t\t\t\t--mod1-primary-note:      #25ff3a;\n\t\t\t\t--mod2-secondary-channel: #109986;\n\t\t\t\t--mod2-primary-channel:   #1cffe0;\n\t\t\t\t--mod2-secondary-note:    #109986;\n\t\t\t\t--mod2-primary-note:      #1cffe0;\n\t\t\t\t--mod3-secondary-channel: #127296;\n\t\t\t\t--mod3-primary-channel:   #21c3ff;\n\t\t\t\t--mod3-secondary-note:    #127296;\n\t\t\t\t--mod3-primary-note:      #21c3ff;\n\t\t\t\t--mod4-secondary-channel: #6038a5;\n\t\t\t\t--mod4-primary-channel:   #9456ff;\n\t\t\t\t--mod4-secondary-note:    #6038a5;\n\t\t\t\t--mod4-primary-note:      #ff35e0;\n\t\t\t\t}\n\t\t\t`,\n    \"nepbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000;\n\t\t\t\t--editor-background: #060606;\n\t\t\t\t--hover-preview: #fff;\n\t\t\t\t--playhead: rgb(0, 242, 255);\n\t\t\t\t--primary-text: #00fff5;\n\t\t\t\t--secondary-text: #a82f2f;\n\t\t\t\t--inverted-text: #000;\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\n\t\t\t\t--box-selection-fill: #b74a4a;\n\t\t\t\t--loop-accent: #7744FF;\n\t\t\t\t--link-accent: #ff00e1;\n\t\t\t\t--ui-widget-background: #484848;\n\t\t\t\t--ui-widget-focus: #3e3e3e;\n\t\t\t\t--pitch-background: #0a2d44;\n\t\t\t\t--tonic: #9150ff;\n\t\t\t\t--fifth-note: #900;\n\t\t\t\t--white-piano-key: #353535;\n\t\t\t\t--black-piano-key: #fff;\n\t\t\t\t--white-piano-key-text: #fff;\n\t\t\t\t--black-piano-key-text: #000;\n\t\t\t\t--track-editor-bg-pitch: #424242;\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\n\t\t\t\t--track-editor-bg-noise: #424242;\n\t\t\t\t--track-editor-bg-noise-dim: #000;\n\t\t\t\t--track-editor-bg-mod: #3c3c3c;\n\t\t\t\t--track-editor-bg-mod-dim: #000;\n\t\t\t\t--multiplicative-mod-slider: #fff;\n\t\t\t\t--overwriting-mod-slider: #9d9d9d;\n\t\t\t\t--indicator-primary: #f00;\n\t\t\t\t--indicator-secondary: #919191;\n\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t--input-box-outline: #626262;\n\t\t\t\t--mute-button-normal: #9a00ff;\n\t\t\t\t--mute-button-mod: #00fff7;\n\t\t\t\t--mod-label-primary: #2b2b2b;\n\t\t\t\t--pitch-channel-limit: 4;\n\t\t\t\t--noise-channel-limit: 2;\n\n\t\t\t\t--pitch1-secondary-channel: #c13cbf;\n\t\t\t\t--pitch1-primary-channel: #f75dff;\n\t\t\t\t--pitch1-secondary-note: #b930a2;\n\t\t\t\t--pitch1-primary-note: #fca5ff;\n\t\t\t\t--pitch2-secondary-channel: #800000;\n\t\t\t\t--pitch2-primary-channel: #f00;\n\t\t\t\t--pitch2-secondary-note: #8c2121;\n\t\t\t\t--pitch2-primary-note: #ff5252;\n\t\t\t\t--pitch3-secondary-channel: #004bb3;\n\t\t\t\t--pitch3-primary-channel: #1792ff;\n\t\t\t\t--pitch3-secondary-note: #005cb3;\n\t\t\t\t--pitch3-primary-note: #00ffe9;\n\t\t\t\t--pitch4-secondary-channel: #a48800;\n\t\t\t\t--pitch4-primary-channel: #fb0;\n\t\t\t\t--pitch4-secondary-note: #9c4100;\n\t\t\t\t--pitch4-primary-note: #ffd84e;\n\t\t\t\t--noise1-secondary-channel: #868686;\n\t\t\t\t--noise1-primary-channel: #fff;\n\t\t\t\t--noise1-secondary-note: #868686;\n\t\t\t\t--noise1-primary-note: #fff;\n\t\t\t\t--noise2-secondary-channel: #805300;\n\t\t\t\t--noise2-primary-channel: #ff8c00;\n\t\t\t\t--noise2-secondary-note: #6a3500;\n\t\t\t\t--noise2-primary-note: #a85400;\n\t\t\t\t--mod1-secondary-channel: #6c0000;\n\t\t\t\t--mod1-primary-channel: #ff3e3e;\n\t\t\t\t--mod1-secondary-note: #6c0000;\n\t\t\t\t--mod1-primary-note: #ff3e3e;\n\t\t\t\t--mod2-secondary-channel: #d25a00;\n\t\t\t\t--mod2-primary-channel: #fdff00;\n\t\t\t\t--mod2-secondary-note: #d25a00;\n\t\t\t\t--mod2-primary-note: #fdff00;\n\t\t\t\t--mod3-secondary-channel: #046000;\n\t\t\t\t--mod3-primary-channel: #23ff1b;\n\t\t\t\t--mod3-secondary-note: #046000;\n\t\t\t\t--mod3-primary-note: #23ff1b;\n\t\t\t\t--mod4-secondary-channel: #3b2bae;\n\t\t\t\t--mod4-primary-channel: #0c79ff;\n\t\t\t\t--mod4-secondary-note: #3b2bae;\n\t\t\t\t--mod4-primary-note: #0c79ff;\n\t\t\t\t--disabled-note-secondary: #696969;\n\t\t\t\t}\n\t\t\t`,\n    \"cardboardbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0f0700;\n--editor-background: #0f0700;\n--hover-preview: #75461d;\n--playhead: #75461d;\n--primary-text: #ddd;\n--secondary-text: #8e695b;\n--text-selection: #75461d;\n--box-selection-fill: rgba(117, 70, 29,0.5);\n--loop-accent: #75461d;\n--link-accent: #75461d;\n--ui-widget-background: #574a3e;\n--ui-widget-focus: #756453;\n--pitch-background: #361900;\n--tonic: #fdba9a;\n--fifth-note: #7f78d2;\n--pitch1-secondary-channel: #798566;\n--pitch1-primary-channel: #9dab86;\n--pitch1-secondary-note: #798566;\n--pitch1-primary-note: #9dab86;\n--pitch2-secondary-channel: #a6733d;\n--pitch2-primary-channel: #e6a157;\n--pitch2-secondary-note: #a6733d;\n--pitch2-primary-note: #e6a157;\n--pitch3-secondary-channel: #874c27;\n--pitch3-primary-channel: #eb8242;\n--pitch3-secondary-note: #874c27;\n--pitch3-primary-note: #eb8242;\n--pitch4-secondary-channel: #395866;\n--pitch4-primary-channel: #537d91;\n--pitch4-secondary-note: #395866;\n--pitch4-primary-note: #537d91;\n--pitch5-secondary-channel: #779992;\n--pitch5-primary-channel: #a4d1c8;\n--pitch5-secondary-note: #779992;\n--pitch5-primary-note: #a4d1c8;\n--pitch7-secondary-channel: #300707;\n--pitch7-primary-channel: #560d0d;\n--pitch7-secondary-note: #300707;\n--pitch7-primary-note: #560d0d;\n--pitch8-secondary-channel: #486312;\n--pitch8-primary-channel: #76a21e;\n--pitch8-secondary-note: #486312;\n--pitch8-primary-note: #76a21e;\n--pitch9-secondary-channel: #4a1242;\n--pitch9-primary-channel: #721b65;\n--pitch9-secondary-note: #4a1242;\n--pitch9-primary-note: #721b65;\n--pitch10-secondary-channel: #7a312d;\n--pitch10-primary-channel: #f8615a;\n--pitch10-secondary-note: #7a312d;\n--pitch10-primary-note: #f8615a;\n--noise1-secondary-channel: #5f6582;\n--noise1-primary-channel: #a6b1e1;\n--noise1-secondary-note: #5f6582;\n--noise1-primary-note: #a6b1e1;\n--noise4-secondary-channel: #6B3E8E;\n--noise5-secondary-channel: #996633;\n--noise5-primary-channel: #ddaa77;\n--noise5-secondary-note: #cc9966;\n--noise5-primary-note: #f0d0bb;\n--mod1-secondary-channel: #339955;\n\t\t\t\t}\n\t\t\t`,\n    \"blubox classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--link-accent: #024ACA;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #886eae;\n\t\t\t\t\t--pitch1-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch1-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch1-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch1-primary-note:      #024ACA;\n\t\t\t\t\t--pitch2-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch2-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch2-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch2-primary-note:      #024ACA;\n\t\t\t\t\t--pitch3-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch3-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch3-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch3-primary-note:      #024ACA;\n\t\t\t\t\t--pitch4-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch4-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch4-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch4-primary-note:      #024ACA;\n\t\t\t\t\t--pitch5-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch5-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch5-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch5-primary-note:      #024ACA;\n\t\t\t\t\t--pitch6-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch6-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch6-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch6-primary-note:      #024ACA;\n\t\t\t\t\t--pitch7-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch7-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch7-secondary-note:\t  #0A89FF;\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#024ACA;\n\t\t\t\t\t--pitch8-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch8-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch8-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch8-primary-note:      #024ACA;\n\t\t\t\t\t--pitch9-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch9-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch9-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#024ACA;\n\t\t\t\t\t--pitch10-secondary-channel:#0A89FF;\n\t\t\t\t\t--pitch10-primary-channel:  #024ACA;\n\t\t\t\t\t--pitch10-secondary-note:   #0A89FF;\n\t\t\t\t\t--pitch10-primary-note:     #024ACA;\n\t\t\t\t\t--noise1-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise1-primary-channel:   #024ACA;\n\t\t\t\t\t--noise1-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise1-primary-note:      #024ACA;\n\t\t\t\t\t--noise2-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise2-primary-channel:   #024ACA;\n\t\t\t\t\t--noise2-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise2-primary-note:      #024ACA;\n\t\t\t\t\t--noise3-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise3-primary-channel:   #024ACA;\n\t\t\t\t\t--noise3-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise3-primary-note:      #024ACA;\n\t\t\t\t\t--noise4-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise4-primary-channel:   #024ACA;\n\t\t\t\t\t--noise4-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise4-primary-note:      #024ACA;\n\t\t\t\t\t--mod1-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod1-primary-channel:     #024ACA;\n\t\t\t\t\t--mod1-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod1-primary-note:        #024ACA;\n\t\t\t\t\t--mod2-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod2-primary-channel:     #024ACA;\n\t\t\t\t\t--mod2-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod2-primary-note:        #024ACA;\n\t\t\t\t\t--mod3-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod3-primary-channel:     #024ACA;\n\t\t\t\t\t--mod3-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #024ACA;\n\t\t\t\t\t--mod4-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod4-primary-channel:     #024ACA;\n\t\t\t\t\t--mod4-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod4-primary-note:        #024ACA;\n\t\t\t\t\t--mod-label-primary:        #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text:   white;\n\t\t\t\t}\n\t\t\t`,\n    \"dogebox classic\": `\n\t\t\t\t:root {\n\t\t\t--page-margin: #0d0063;\n\t\t\t--editor-background: #0D0063;\n\t\t\t--pitch-background: #322c59;\n\t\t\t--tonic: #1c1933;\n\t\t\t--fifth-note: #7b74ad;\n\t\t\t--pitch-channel-limit: 6;\n\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #c7ac00;\n\t\t\t--pitch1-primary-channel: #fcf403;\n\t\t\t--pitch1-secondary-note: #c7c700;\n\t\t\t--pitch1-primary-note: #fcf403;\n\t\t\t--pitch2-secondary-channel: #9400b5;\n\t\t\t--pitch2-primary-channel: #ff00ee;\n\t\t\t--pitch2-secondary-note: #9400b5;\n\t\t\t--pitch2-primary-note: #ff00ee;\n\t\t\t--pitch3-secondary-channel: #b37466;\n\t\t\t--pitch3-primary-channel: #ffc6a1;\n\t\t\t--pitch3-secondary-note: #b37466;\n\t\t\t--pitch3-primary-note: #ffc6a1;\n\t\t\t--pitch7-secondary-channel: #c7ac00;\n\t\t\t--pitch7-primary-channel: #fcf403;\n\t\t\t--pitch7-secondary-note: #c7c700;\n\t\t\t--pitch7-primary-note: #fcf403;\n\t\t\t--pitch8-secondary-channel: #9400b5;\n\t\t\t--pitch8-primary-channel: #ff00ee;\n\t\t\t--pitch8-secondary-note: #9400b5;\n\t\t\t--pitch8-primary-note: #ff00ee;\n\t\t\t--pitch9-secondary-channel: #b37466;\n\t\t\t--pitch9-primary-channel: #ffc6a1;\n\t\t\t--pitch9-secondary-note: #b37466;\n\t\t\t--pitch9-primary-note: #ffc6a1;\n\t\t\t--pitch10-secondary-channel: #00a100;\n\t\t\t--pitch10-primary-channel: #50ff50;\n\t\t\t--pitch10-secondary-note: #00c700;\n\t\t\t--pitch10-primary-note: #a0ffa0;\n\t\t\t--noise1-secondary-channel: #95acad;\n\t\t\t--noise1-primary-channel: #cee9eb;\n\t\t\t--noise1-secondary-note: #95acad;\n\t\t\t--noise1-primary-note: #cee9eb;\n\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t--noise5-secondary-channel: #7c9b42;\n      \t \t--mod1-secondary-channel: #c7ac00;\n\t\t\t--mod1-primary-channel: #fcf403;\n\t\t\t--mod1-secondary-note: #c7c700;\n\t\t\t--mod1-primary-note: #fcf403;\n\t\t\t--mod2-secondary-channel: #9400b5;\n\t\t\t--mod2-primary-channel: #ff00ee;\n\t\t\t--mod2-secondary-note: #9400b5;\n\t\t\t--mod2-primary-note: #ff00ee;\n\t\t\t--mod3-secondary-channel: #b37466;\n\t\t\t--mod3-primary-channel: #ffc6a1;\n\t\t\t--mod3-secondary-note: #b37466;\n\t\t\t--mod3-primary-note: #ffc6a1;\n\t\t\t--mod4-secondary-channel: #00a100;\n\t\t\t--mod4-primary-channel: #50ff50;\n\t\t\t--mod4-secondary-note: #00c700;\n\t\t\t--mod4-primary-note: #a0ffa0;\n\t\t\t\t}\n\t\t\t`,\n    \"dogebox dark\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0d0063;\n\t\t\t\t\t--editor-background: #0D0063;\n\t\t\t\t\t--pitch-background: #322c59;\n\t\t\t\t\t--tonic: #1c1933;\n\t\t\t\t\t--fifth-note: #7b74ad;\n\t\t\t\t\t--pitch1-secondary-channel: #c7ac00;\n\t\t\t\t\t--pitch1-primary-channel:   #fcf403;\n\t\t\t\t\t--pitch1-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch1-primary-note:      #fcf403;\n\t\t\t\t\t--pitch2-secondary-channel: #9400b5;\n\t\t\t\t\t--pitch2-primary-channel:   #ff00ee;\n\t\t\t\t\t--pitch2-secondary-note:    #9400b5;\n\t\t\t\t\t--pitch2-primary-note:      #ff00ee;\n\t\t\t\t\t--pitch3-secondary-channel: #b37466;\n\t\t\t\t\t--pitch3-primary-channel:   #ffc6a1;\n\t\t\t\t\t--pitch3-secondary-note:    #b37466;\n\t\t\t\t\t--pitch3-primary-note:      #ffc6a1;\n\t\t\t\t\t--noise1-secondary-channel: #95acad;\n\t\t\t\t\t--noise1-primary-channel:   #cee9eb;\n\t\t\t\t\t--noise1-secondary-note:    #95acad;\n\t\t\t\t\t--noise1-primary-note:      #cee9eb;\n\t\t\t\t}\n\t\t\t`,\n    \"todbox dark mode\": `\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--hover-preview: #999999;\n\t\t\t\t\t--playhead: #999999;\n\t\t\t\t\t--primary-text: #999999;\n\t\t\t\t\t--secondary-text: #444444;\n\t\t\t\t--text-selection: #999999;\n\t\t\t\t\t--box-selection-fill: #999999;\n\t\t\t\t\t--loop-accent: #999999;\n\t\t\t\t\t--link-accent: #999999;\n\t\t\t\t\t--ui-widget-background: #222222;\n\t\t\t\t\t--ui-widget-focus: #444444;\n\t\t\t\t--pitch-background: #101010;\n\t\t\t\t\t--tonic: #404040;\n\t\t\t\t\t--fifth-note: #202020;\n\t\t\t\t\t--white-piano-key: #999999;\n\t\t\t\t\t--black-piano-key: #101010;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #004444;\n\t\t\t\t\t--pitch1-primary-channel:   #009999;\n\t\t\t\t\t--pitch1-secondary-note:    #004444;\n\t\t\t\t\t--pitch1-primary-note:      #009999;\n\t\t\t\t\t--pitch2-secondary-channel: #444400;\n\t\t\t\t\t--pitch2-primary-channel:   #999900;\n\t\t\t\t\t--pitch2-secondary-note:    #444400;\n\t\t\t\t\t--pitch2-primary-note:      #999900;\n\t\t\t\t\t--pitch3-secondary-channel: #443300;\n\t\t\t\t\t--pitch3-primary-channel:   #996600;\n\t\t\t\t\t--pitch3-secondary-note:    #443300;\n\t\t\t\t\t--pitch3-primary-note:      #996600;\n\t\t\t\t\t--pitch4-secondary-channel: #004400;\n\t\t\t\t\t--pitch4-primary-channel:   #009900;\n\t\t\t\t\t--pitch4-secondary-note:    #004400;\n\t\t\t\t\t--pitch4-primary-note:      #009900;\n\t\t\t\t\t--pitch5-secondary-channel: #440044;\n\t\t\t\t\t--pitch5-primary-channel:   #990099;\n\t\t\t\t\t--pitch5-secondary-note:    #440044;\n\t\t\t\t\t--pitch5-primary-note:      #990099;\n\t\t\t\t\t--pitch6-secondary-channel: #333344;\n\t\t\t\t\t--pitch6-primary-channel:   #666699;\n\t\t\t\t\t--pitch6-secondary-note:    #333344;\n\t\t\t\t\t--pitch6-primary-note:      #666699;\n\t\t\t\t\t--pitch7-secondary-channel: #444400;\n\t\t\t\t\t--pitch7-primary-channel:   #999900;\n\t\t\t\t\t--pitch7-secondary-note:    #444400;\n\t\t\t\t\t--pitch7-primary-note:      #999900;\n\t\t\t\t\t--pitch8-secondary-channel: #824E54;\n\t\t\t\t\t--pitch8-primary-channel:   #C4757E;\n\t\t\t\t\t--pitch8-secondary-note:    #824E54;\n\t\t\t\t\t--pitch8-primary-note:      #C4757E;\n\t\t\t\t\t--pitch9-secondary-channel: #006342;\n\t\t\t\t\t--pitch9-primary-channel:   #008E5F;\n\t\t\t\t\t--pitch9-secondary-note:    #006342;\n\t\t\t\t\t--pitch9-primary-note:      #008E5F;\n\t\t\t\t\t--pitch10-secondary-channel: #561291;\n\t\t\t\t\t--pitch10-primary-channel:   #7819C1;\n\t\t\t\t\t--pitch10-secondary-note:    #561291;\n\t\t\t\t\t--pitch10-primary-note:      #7819C1;\n\t\t\t\t\t--noise1-secondary-channel: #444444;\n\t\t\t\t\t--noise1-primary-channel:   #999999;\n\t\t\t\t\t--noise1-secondary-note:    #444444;\n\t\t\t\t\t--noise1-primary-note:      #999999;\n\t\t\t\t\t--noise2-secondary-channel: #443311;\n\t\t\t\t\t--noise2-primary-channel:   #996633;\n\t\t\t\t\t--noise2-secondary-note:    #443311;\n\t\t\t\t\t--noise2-primary-note:      #996633;\n\t\t\t\t\t--noise3-secondary-channel: #113344;\n\t\t\t\t\t--noise3-primary-channel:   #336699;\n\t\t\t\t\t--noise3-secondary-note:    #113344;\n\t\t\t\t\t--noise3-primary-note:      #336699;\n\t\t\t\t\t--noise4-secondary-channel: #444444;\n\t\t\t\t\t--noise4-primary-channel:   #999999;\n\t\t\t\t\t--noise4-secondary-note:    #444444;\n\t\t\t\t\t--noise4-primary-note:      #999999;\n\t\t\t\t\t--noise5-secondary-channel: #443311;\n\t\t\t\t\t--noise5-primary-channel:   #996633;\n\t\t\t\t\t--noise5-secondary-note:    #443311;\n\t\t\t\t\t--noise5-primary-note:      #996633;\n          --mod1-secondary-channel: #004444;\n\t\t\t\t\t--mod1-primary-channel:   #009999;\n\t\t\t\t\t--mod1-secondary-note:    #004444;\n\t\t\t\t\t--mod1-primary-note:      #009999;\n\t\t\t\t\t--mod2-secondary-channel: #444400;\n\t\t\t\t\t--mod2-primary-channel:   #999900;\n\t\t\t\t\t--mod2-secondary-note:    #444400;\n\t\t\t\t\t--mod2-primary-note:      #999900;\n\t\t\t\t\t--mod3-secondary-channel: #443300;\n\t\t\t\t\t--mod3-primary-channel:   #996600;\n\t\t\t\t\t--mod3-secondary-note:    #443300;\n\t\t\t\t\t--mod3-primary-note:      #996600;\n\t\t\t\t\t--mod4-secondary-channel: #004400;\n\t\t\t\t\t--mod4-primary-channel:   #009900;\n\t\t\t\t\t--mod4-secondary-note:    #004400;\n\t\t\t\t\t--mod4-primary-note:      #009900;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t\t`,\n    \"mainbox 1.0\": `\n\t\t\t:root {\n\t\t\t\t--loop-accent: #2F1C40;\n\t\t\t\t--link-accent: #543873;\n\t\t\t\t--ui-widget-background: #2F1C40;\n\t\t\t\t--ui-widget-focus: #543873;\n\t\t\t\t--pitch-background: #2F1C40;\n\t\t\t\t--tonic: #42286D;\n\t\t\t\t--fifth-note: #37416B;\n\t\t\t\t--white-piano-key: #156CB6;\n\t\t\t\t--black-piano-key: #130D14;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #156C99;\n\t\t\t\t\t--pitch1-primary-channel:   #00CFDF;\n\t\t\t\t\t--pitch1-secondary-note:    #0080A8;\n\t\t\t\t\t--pitch1-primary-note:      #009FC6;\n\t\t\t\t\t--pitch2-secondary-channel: #AD923A;\n\t\t\t\t\t--pitch2-primary-channel:   #FFD552;\n\t\t\t\t\t--pitch2-secondary-note:    #C49736;\n\t\t\t\t\t--pitch2-primary-note:      #EFC742;\n\t\t\t\t\t--pitch3-secondary-channel: #7A401E;\n\t\t\t\t\t--pitch3-primary-channel:   #C14E30;\n\t\t\t\t\t--pitch3-secondary-note:    #89381B;\n\t\t\t\t\t--pitch3-primary-note:      #E15427;\n\t\t\t\t\t--pitch4-secondary-channel: #0B6030;\n\t\t\t\t\t--pitch4-primary-channel:   #00915C;\n\t\t\t\t\t--pitch4-secondary-note:    #004337;\n\t\t\t\t\t--pitch4-primary-note:      #00915E;\n\t\t\t\t\t--pitch5-secondary-channel: #543873;\n\t\t\t\t\t--pitch5-primary-channel:   #695B95;\n\t\t\t\t\t--pitch5-secondary-note:    #8188BE;\n\t\t\t\t\t--pitch5-primary-note:      #848ED8;\n\t\t\t\t\t--pitch6-secondary-channel: #585882;\n\t\t\t\t\t--pitch6-primary-channel:   #5A72DD;\n\t\t\t\t\t--pitch7-secondary-channel: #7D7C2E;\n\t\t\t\t\t--pitch7-primary-channel:   #B0C952;\n\t\t\t\t\t--pitch7-secondary-note:    #7D7C2E;\n\t\t\t\t\t--pitch7-primary-note:      #B0C952;\n\t\t\t\t\t--pitch8-secondary-channel: #7F426A;\n\t\t\t\t\t--pitch8-primary-channel:   #B75297;\n\t\t\t\t\t--pitch8-secondary-note:    #7F426A;\n\t\t\t\t\t--pitch8-primary-note:      #B75297;\n\t\t\t\t\t--pitch9-secondary-channel: #2A6B65;\n\t\t\t\t\t--pitch9-primary-channel:   #3BA590;\n\t\t\t\t\t--pitch9-secondary-note:    #2A6B65;\n\t\t\t\t\t--pitch9-primary-note:      #3BA590;\n\t\t\t\t\t--pitch10-secondary-channel: #713EA0;\n\t\t\t\t\t--pitch10-primary-channel:   #925EC9;\n\t\t\t\t\t--pitch10-secondary-note:    #713EA0;\n\t\t\t\t\t--pitch10-primary-note:      #925EC9;\n\t\t\t\t\t--noise1-secondary-channel: #6C6C8E;\n\t\t\t\t\t--noise1-primary-channel:   #8A7F96;\n\t\t\t\t\t--noise1-secondary-note:    #A1A3B7;\n\t\t\t\t\t--noise1-primary-note:      #DDBADD;\n\t\t\t\t\t--noise2-secondary-channel: #865E40;\n\t\t\t\t\t--noise2-secondary-note:    #C7B47A;\n\t\t\t\t\t--noise2-primary-note:      #CFC587;\n\t\t\t\t\t--noise3-secondary-channel: #7E7068;\n\t\t\t\t\t--noise3-primary-channel:   #B19998;\n\t\t\t\t\t--noise3-secondary-note:    #BAA6BC;\n\t\t\t\t\t--noise3-primary-note:      #EDDCEC;\n          --mod1-secondary-channel: #156C99;\n\t\t\t\t\t--mod1-primary-channel:   #00CFDF;\n\t\t\t\t\t--mod1-secondary-note:    #0080A8;\n\t\t\t\t\t--mod1-primary-note:      #009FC6;\n\t\t\t\t\t--mod2-secondary-channel: #AD923A;\n\t\t\t\t\t--mod2-primary-channel:   #FFD552;\n\t\t\t\t\t--mod2-secondary-note:    #C49736;\n\t\t\t\t\t--mod2-primary-note:      #EFC742;\n\t\t\t\t\t--mod3-secondary-channel: #7A401E;\n\t\t\t\t\t--mod3-primary-channel:   #C14E30;\n\t\t\t\t\t--mod3-secondary-note:    #89381B;\n\t\t\t\t\t--mod3-primary-note:      #E15427;\n\t\t\t\t\t--mod4-secondary-channel: #0B6030;\n\t\t\t\t\t--mod4-primary-channel:   #00915C;\n\t\t\t\t\t--mod4-secondary-note:    #004337;\n\t\t\t\t\t--mod4-primary-note:      #00915E;\n\t\t\t\t}\n\t\t\t`,\n    \"fogbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #252525;\n\t\t\t\t--editor-background: #252525;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n    \"foxbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #ADD8E6;\n\t\t\t\t}\n\t\t\t`,\n    \"wackybox\": `\n\t\t\t\n\t\t\t:root {\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t}\n\n\t\t\t\t* {\n\t\t\t\t\tcursor: url(\"theme_resources/wackybox_cursor.png\"), auto !important;\n\t\t\t\t}\n\n\t\t\t`,\n    \"microbox\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000000;\n\t\t\t\t\t--editor-background: #000000;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--secondary-text: #93B6AD;\n\t\t\t\t\t--text-selection: rgba(47,255,250,0.99);\n\t\t\t\t\t--box-selection-fill: #03B068;\n\t\t\t\t\t--loop-accent: #FF0061;\n\t\t\t\t\t--link-accent: #FFC800;\n\t\t\t\t\t--ui-widget-background: #38554E;\n\t\t\t\t\t--ui-widget-focus: #2A7E69;\n\t\t\t\t\t--pitch-background: #281F23;\n\t\t\t\t\t--tonic: #004634;\n\t\t\t\t\t--fifth-note: #463400;\n\t\t\t\t\t--white-piano-key: #edc;\n\t\t\t\t\t--black-piano-key: #456;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #333333;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000000;\n\t\t\t\t\t--track-editor-bg-noise: #463400;\n\t\t\t\t\t--track-editor-bg-noise-dim: #000000;\n\t\t\t\t\t--track-editor-bg-mod: #004634;\n\t\t\t\t\t--track-editor-bg-mod-dim: #000000;\n\t\t\t\t\t--multiplicative-mod-slider: #FFC800;\n\t\t\t\t\t--overwriting-mod-slider: #00ffc0;\n\t\t\t\t\t--indicator-primary: #00ffc0;\n\t\t\t\t\t--indicator-secondary: #333333;\n\t\t\t\t\t--select2-opt-group: #2B2B2B;\n\t\t\t\t\t--input-box-outline: #69BFC6;\n\t\t\t\t\t--mute-button-normal: #00ffc0;\n\t\t\t\t\t--mute-button-mod: #FFC800;\n\t\t\t\t\t--mod-label-primary: #38554E;\n\t\t\t\t\t--mod-label-secondary-text: rgb(0, 43, 45);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t}\n\t\t\t`,\n    \"paandorasbox\": `\n\t\t\t:root {\n\t\t\t --page-margin: #200000;\n\t\t\t  --editor-background: #200000;\n\t\t\t  --text-selection: #FF5100;\n\t\t\t  --loop-accent: #FF5100;\n\t\t\t  --link-accent: #0F0;\n\t\t\t  --ui-widget-background: #562334;\n\t\t\t  --ui-widget-focus: #6D1B36;\n\t\t\t  --pitch-background: #6D1B36;\n\t\t\t  --tonic: #FF5100;\n\t\t\t  --fifth-note: #00B6FF;\n\t\t\t  --track-editor-bg-pitch: #380C14;\n\t\t\t  --track-editor-bg-pitch-dim: #200000;\n\t\t\t  --track-editor-bg-noise: #233323;\n\t\t\t  --track-editor-bg-noise-dim: #101A0F;\n\t\t\t  --track-editor-bg-mod: #234C82;\n\t\t\t  --track-editor-bg-mod-dim: #0D1D33;\n\t\t\t  --indicator-primary: #FF5100;\n\t\t\t  --pitch1-secondary-channel: #00B200;\n\t\t\t  --pitch1-primary-channel: #0F0;\n\t\t\t  --pitch1-secondary-note: #00B200;\n\t\t\t  --pitch1-primary-note: #0F0;\n\t\t\t  --pitch2-secondary-channel: #00B282;\n\t\t\t  --pitch2-primary-channel: #00FFBF;\n\t\t\t  --pitch2-secondary-note: #00B282;\n\t\t\t  --pitch2-primary-note: #00FFBF;\n\t\t\t  --pitch3-secondary-channel: #00B2B2;\n\t\t\t  --pitch3-primary-channel: #0FF;\n\t\t\t  --pitch3-secondary-note: #00B2B2;\n\t\t\t  --pitch3-primary-note: #0FF;\n\t\t\t  --pitch4-secondary-channel: #2623B2;\n\t\t\t  --pitch4-primary-channel: #3631FF;\n\t\t\t  --pitch4-secondary-note: #2623B2;\n\t\t\t  --pitch4-primary-note: #3631FF;\n\t\t\t  --pitch5-secondary-channel: #7700B2;\n\t\t\t  --pitch5-primary-channel: #A0F;\n\t\t\t  --pitch5-secondary-note: #7700B2;\n\t\t\t  --pitch5-primary-note: #A0F;\n\t\t\t  --pitch6-secondary-channel: #B200B2;\n\t\t\t  --pitch6-primary-channel: #F0F;\n\t\t\t  --pitch6-secondary-note: #B200B2;\n\t\t\t  --pitch6-primary-note: #F0F;\n\t\t\t  --pitch7-secondary-channel: #B20000;\n\t\t\t  --pitch7-primary-channel: #F00;\n\t\t\t  --pitch7-secondary-note: #B20000;\n\t\t\t  --pitch7-primary-note: #F00;\n\t\t\t  --pitch8-secondary-channel: #00B200;\n\t\t\t  --pitch8-primary-channel: #0F0;\n\t\t\t  --pitch8-secondary-note: #00B200;\n\t\t\t  --pitch8-primary-note: #0F0;\n\t\t\t  --pitch9-secondary-channel: #00B282;\n\t\t\t  --pitch9-primary-channel: #0FF;\n\t\t\t  --pitch9-secondary-note: #00B282;\n\t\t\t  --pitch9-primary-note: #0FF;\n\t\t\t  --pitch10-secondary-channel: #0071B2;\n\t\t\t  --pitch10-primary-channel: #009EFF;\n\t\t\t  --pitch10-secondary-note: #0071B2;\n\t\t\t  --pitch10-primary-note: #009EFF;\n\t\t\t  --noise1-secondary-channel: #32B221;\n\t\t\t  --noise1-primary-channel: #44FF2F;\n\t\t\t  --noise1-secondary-note: #32B221;\n\t\t\t  --noise1-primary-note: #44FF2F;\n\t\t\t  --noise2-secondary-channel: #216FB2;\n\t\t\t  --noise2-primary-channel: #2F9DFF;\n\t\t\t  --noise2-secondary-note: #216FB2;\n\t\t\t  --noise2-primary-note: #2F9DFF;\n\t\t\t  --noise3-secondary-channel: #2623B2;\n\t\t\t  --noise3-primary-channel: #3631FF;\n\t\t\t  --noise3-secondary-note: #2623B2;\n\t\t\t  --noise3-primary-note: #3631FF;\n\t\t\t  --noise4-secondary-channel: #7223B2;\n\t\t\t  --noise4-primary-channel: #A531FF;\n\t\t\t  --noise4-secondary-note: #7223B2;\n\t\t\t  --noise4-primary-note: #A531FF;\n\t\t\t  --noise5-secondary-channel: #B2235A;\n\t\t\t  --noise5-primary-channel: #FF317E;\n\t\t\t  --noise5-secondary-note: #B2235A;\n\t\t\t  --noise5-primary-note: #FF317E;\n\t\t\t  --mod1-secondary-channel: #17B274;\n\t\t\t  --mod1-primary-channel: #21FFA8;\n\t\t\t  --mod1-secondary-note: #17B274;\n\t\t\t  --mod1-primary-note: #21FFA8;\n\t\t\t  --mod2-secondary-channel: #1783B2;\n\t\t\t  --mod2-primary-channel: #1FBAFF;\n\t\t\t  --mod2-secondary-note: #1783B2;\n\t\t\t  --mod2-primary-note: #1FBAFF;\n\t\t\t  --mod4-secondary-channel: #B20E6B;\n\t\t\t  --mod4-primary-channel: #FF1291;\n\t\t\t  --mod4-secondary-note: #B20E6B;\n\t\t\t  --mod4-primary-note: #FF1291;\n\t\t\t  --mod-label-primary: #994038;\n\t\t\t  --mod-label-secondary-text: #331512;\n\t\t\t  --mod-label-primary-text: #331512;\n\t\t\t  --disabled-note-primary: #994038;\n\t\t\t  --disabled-note-secondary: #331512;\n\t\t\t}\n\t\t\t`,\n    \"midbox\": `:root {\n\t\t\t--page-margin: #010a1e;\n\t\t\t--editor-background: #010a1e;\n\t\t\t--hover-preview: #dfe9fe;\n\t\t\t--playhead: #e7f5f6;\n\t\t\t--primary-text: #f0fdff;\n\t\t\t--secondary-text: #c4c7d7;\n\t\t\t--inverted-text: #0f0623;\n\t\t\t--text-selection: #3f0ab4;\n\t\t\t--box-selection-fill: #32afb3;\n\t\t\t--loop-accent: #1719ff;\n\t\t\t--link-accent: #83a6ed;\n\t\t\t--ui-widget-background: #222856;\n\t\t\t--ui-widget-focus: #21417c;\n\t\t\t--pitch-background: #10264a;\n\t\t\t--tonic: #0797ce;\n\t\t\t--fifth-note: #3e2fb5;\n\t\t\t--white-piano-key: #ebf3f4;\n\t\t\t--black-piano-key: #253353;\n\t\t\t--white-piano-key-text: black;\n\t\t\t--black-piano-key-text: white;\n\t\t\t--oscilloscope-line-L: #72dcfc;\n\t\t\t--oscilloscope-line-R: #304eff;\n\t\t\t--mod-title: #1b2fff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #183b65; \n\t\t\t--track-editor-bg-pitch-dim: #1f2c3d;\n\t\t\t--track-editor-bg-noise: #2e196d;\n\t\t\t--track-editor-bg-noise-dim: #212038;\n\t\t\t--track-editor-bg-mod: #066433;\n\t\t\t--track-editor-bg-mod-dim: #152b1f;\n\t\t\t--multiplicative-mod-slider: #1242a4;\n\t\t\t--overwriting-mod-slider: #2218db;\n\t\t\t--indicator-primary: #1698d3;\n\t\t\t--indicator-secondary: #1b478e;\n\t\t\t--select2-opt-group: #312f6d;\n\t\t\t--input-box-outline: #788b96;\n\t\t\t--mute-button-normal: #1d34f2;\n\t\t\t--mute-button-mod: #06bad6;\n\t\t\t--mod-label-primary: #14383f;\n\t\t\t--mod-label-secondary-text: #1d7080;\n\t\t\t--mod-label-primary-text: #b7e9f2;\n\t\t\t--pitch-secondary-channel-hue: 190;\n\t\t\t--pitch-secondary-channel-hue-scale: 2.5;\n\t\t\t--pitch-secondary-channel-sat: 80;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 190;\n\t\t\t--pitch-primary-channel-hue-scale: 2.5;\n\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 76.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 190;\n\t\t\t--pitch-secondary-note-hue-scale: 2.5;\n\t\t\t--pitch-secondary-note-sat: 90;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 30;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 190;\n\t\t\t--pitch-primary-note-hue-scale: 2.5;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 200;\n\t\t\t--noise-secondary-channel-hue-scale: 2.5;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 200;\n\t\t\t--noise-primary-channel-hue-scale: 2.5;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 200;\n\t\t\t--noise-secondary-note-hue-scale: 2.5;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 200;\n\t\t\t--noise-primary-note-hue-scale: 2.5;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 140;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 90;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 55;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 140;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 100;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 85;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 140;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 95;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 50;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 140;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 100;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 90;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #53527b;\n\t\t\t--disabled-note-secondary:  #1c1b30;\n\t\t}\n\t\t`,\n    \"dogebox2\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000015;\n\t\t\t\t--editor-background: #000015;\n\t\t\t\t--hover-preview: #00ffff;\n\t\t\t\t--playhead: #00ffff;\n\t\t\t\t--text-selection: rgba(255, 127, 80, 0.99);\n\t\t\t\t--box-selection-fill: rgba(255, 255, 255, 0.2);\n\t\t\t\t--loop-accent: #ff00ff;\n\t\t\t\t--link-accent: #00ffff;\n\t\t\t\t--ui-widget-background: #222222;\n\t\t\t\t--ui-widget-focus: #444444;\n\t\t\t\t--pitch-background: #222222;\n\t\t\t\t--tonic: #ab382c;\n\t\t\t\t--fifth-note: #2a76a8;\n\t\t\t\t--white-piano-key: #ffffff;\n\t\t\t\t--black-piano-key: #222222;\n\t\t\t\t--white-piano-key-text: #000000;\n\t\t\t\t--track-editor-bg-pitch: #222222;\n\t\t\t\t--track-editor-bg-pitch-dim: #111111;\n\t\t\t\t--track-editor-bg-noise: #222222;\n\t\t\t\t--track-editor-bg-noise-dim: #111111;\n\t\t\t\t--track-editor-bg-mod: #333333;\n\t\t\t\t--track-editor-bg-mod-dim: #111111;\n\t\t\t\t--multiplicative-mod-slider: #666666;\n\t\t\t\t--overwriting-mod-slider: #666666;\n\t\t\t\t--indicator-primary: #ff00ff;\n\t\t\t\t--indicator-secondary: #00ffff;\n\t\t\t\t--select2-opt-group: #333333;\n\t\t\t\t--input-box-outline: #444444;\n\t\t\t\t--mute-button-normal: #ff00ff;\n\t\t\t\t--mute-button-mod: #00ffff;\n\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t--pitch1-secondary-channel: #bd9909;\n\t\t\t\t--pitch1-primary-channel: #fbff8e;\n\t\t\t\t--pitch1-secondary-note: #c79d3a;\n\t\t\t\t--pitch1-primary-note: #fdffb2;\n\t\t\t\t--pitch2-secondary-channel: #b86e0d;\n\t\t\t\t--pitch2-primary-channel: #ffb28e;\n\t\t\t\t--pitch2-secondary-note: #ba643a;\n\t\t\t\t--pitch2-primary-note: #fbac92;\n\t\t\t\t--pitch3-secondary-channel: #a81b08;\n\t\t\t\t--pitch3-primary-channel: #f56c67;\n\t\t\t\t--pitch3-secondary-note: #94352b;\n\t\t\t\t--pitch3-primary-note: #f56147;\n\t\t\t\t--pitch4-secondary-channel: #2a7722;\n\t\t\t\t--pitch4-primary-channel: #6ebf5e;\n\t\t\t\t--pitch4-secondary-note: #1c5c18;\n\t\t\t\t--pitch4-primary-note: #88cf82;\n\t\t\t\t--pitch5-secondary-channel: #8c8b3c;\n\t\t\t\t--pitch5-primary-channel: #c3c168;\n\t\t\t\t--pitch5-secondary-note: #747330;\n\t\t\t\t--pitch5-primary-note: #d4d394;\n\t\t\t\t--pitch6-secondary-channel: #3f9577;\n\t\t\t\t--pitch6-primary-channel: #6fc4b4;\n\t\t\t\t--pitch6-secondary-note: #2c6a5c;\n\t\t\t\t--pitch6-primary-note: #8fdad0;\n\t\t\t\t--pitch7-secondary-channel: #204a80;\n\t\t\t\t--pitch7-primary-channel: #6d9fc2;\n\t\t\t\t--pitch7-secondary-note: #132f5a;\n\t\t\t\t--pitch7-primary-note: #9dbed8;\n\t\t\t\t--pitch8-secondary-channel: #a531ad;\n\t\t\t\t--pitch8-primary-channel: #db68e3;\n\t\t\t\t--pitch8-secondary-note: #8d2f94;\n\t\t\t\t--pitch8-primary-note: #e66cbf;\n\t\t\t\t--pitch9-secondary-channel: #03a1a1;\n\t\t\t\t--pitch9-primary-channel: #52fffb;\n\t\t\t\t--pitch9-secondary-note: #34baba;\n\t\t\t\t--pitch9-primary-note: #60fbfb;\n\t\t\t\t--pitch10-secondary-channel: #4208a1;\n\t\t\t\t--pitch10-primary-channel: #9282ff;\n\t\t\t\t--pitch10-secondary-note: #5735b5;\n\t\t\t\t--pitch10-primary-note: #ab52fb;\n\t\t\t\t--noise1-secondary-channel: #2a5555;\n\t\t\t\t--noise1-primary-channel: #4c7878;\n\t\t\t\t--noise1-secondary-note: #6e9a9a;\n\t\t\t\t--noise1-primary-note: #90bcbc;\n\t\t\t\t--noise2-secondary-channel: #553355;\n\t\t\t\t--noise2-primary-channel: #775577;\n\t\t\t\t--noise2-secondary-note: #997799;\n\t\t\t\t--noise2-primary-note: #bbaa99;\n\t\t\t\t--noise3-secondary-channel: #2a6622;\n\t\t\t\t--noise3-primary-channel: #4c8844;\n\t\t\t\t--noise3-secondary-note: #6eaa66;\n\t\t\t\t--noise3-primary-note: #90cc88;\n\t\t\t\t--noise4-secondary-channel: #664400;\n\t\t\t\t--noise4-primary-channel: #886600;\n\t\t\t\t--noise4-secondary-note: #aa8800;\n\t\t\t\t--noise4-primary-note: #cccc00;\n\t\t\t\t--noise5-secondary-channel: #006633;\n\t\t\t\t--noise5-primary-channel: #008855;\n\t\t\t\t--noise5-secondary-note: #00aa77;\n\t\t\t\t--noise5-primary-note: #00cc99;\n\t\t\t\t--mod1-secondary-channel: #fe00ff;\n\t\t\t\t--mod1-primary-channel: #ff72ff;\n\t\t\t\t--mod1-secondary-note: #ff92ff;\n\t\t\t\t--mod1-primary-note: #ffb2fb;\n\t\t\t\t--mod2-secondary-channel: #00fe00;\n\t\t\t\t--mod2-primary-channel: #8eff8e;\n\t\t\t\t--mod2-secondary-note: #92ff92;\n\t\t\t\t--mod2-primary-note: #b2ffb2;\n\t\t\t\t--mod3-secondary-channel: #feff00;\n\t\t\t\t--mod3-primary-channel: #fffb8e;\n\t\t\t\t--mod3-secondary-note: #fffd92;\n\t\t\t\t--mod3-primary-note: #fffe92;\n\t\t\t\t--mod4-secondary-channel: #00fffe;\n\t\t\t\t--mod4-primary-channel: #82fffb;\n\t\t\t\t--mod4-secondary-note: #92ffff;\n\t\t\t\t--mod4-primary-note: #b2fffb;\n\t\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t\t--disabled-note-secondary: #8c8c8c;\n\t\t\t\t--note-flash: #ffffff;\n\t\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t\t}`,\n    \"abyssbox classic\": `\n\t\t\t\t:root {\t\t\n\t\t\t\t--page-margin: #1e0915; \t\t\n\t\t\t\t--editor-background: #1e0915; \t\t\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t\t--secondary-text: #ffcedd; \t\t\n\t\t\t\t--box-selection-fill: #1e0915; \t\t\n\t\t\t\t--loop-accent: #873a51; \t\t\n\t\t\t\t--link-accent: #df88ff; \t\t\n\t\t\t\t--ui-widget-background: #581b3e; \t\t\n\t\t\t\t--ui-widget-focus: #762b4c; \t\t\n\t\t\t\t--pitch-background: #381d24; \t\t\n\t\t\t\t--tonic: #873a51; \t\t\n\t\t\t\t--fifth-note: #75001e; \t\t\n\t\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t\t--black-piano-key: #402f2f;\n\t\t\t\t--use-color-formula: true; \t\t\n\t\t\t\t--track-editor-bg-pitch: #571c40; \t\t\n\t\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\n\t\t\t\t--track-editor-bg-noise: #571131; \t\t\n\t\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\n\t\t\t\t--track-editor-bg-mod: #54083c; \t\t\n\t\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\n\t\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t\t--mod-label-primary-text: gray; \n\t\t\t\n\t\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t\t--pitch-secondary-channel-hue-scale 0; \t\t\n\t\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-secondary-channel-lum: 40; \t\t\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\t\n\t\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\t\n\t\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-secondary-note-lum: 25; \t\t\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\t\n\t\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\t\n\t\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\t\n\t\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\t\n\t\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t\t--mod-primary-note-lum-scale: 0; \t\n\t\n\t\t\t\t--note-flash: #ffffff;\n\t\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t\t\n\t\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\n\t\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\t\t\t\t--text-spacing-icon: > ;\n\t\t\t\t--scrollbar-color: #bf2c5d;\n\t\t\t\t\n\t\t\t\t--file-page-symbol: url(\"theme_resources/icon-file.png\");\n\t\t\t\t--edit-pencil-symbol: url(\"theme_resources/icon-edit.png\");\n\t\t\t\t--preferences-gear-symbol: url(\"theme_resources/icon-preferences.png\");\n\t\t\t\t--instrument-copy-symbol: url(\"theme_resources/icon-copy.png\");\n\t\t\t\t--instrument-paste-symbol: url(\"theme_resources/icon-paste.png\");\n\t\t\t\t--play-symbol: url(\"theme_resources/icon-play.png\");\n\t\t\t\t--pause-symbol: url(\"theme_resources/icon-pause.png\");\n\t\t\t\t--record-symbol: url(\"theme_resources/icon-record.png\");\n\t\t\t\t--stop-symbol: url(\"theme_resources/icon-stop.png\");\n\t\t\t\t--prev-bar-symbol: url(\"theme_resources/icon-prev.png\");\n\t\t\t\t--next-bar-symbol: url(\"theme_resources/icon-next.png\");\n\t\t\t\t--muted-symbol: url(\"theme_resources/icon-speakerMuted.png\");\n\t\t\t\t--unmuted-symbol: url(\"theme_resources/icon-speaker.png\");\n\t\t\t\t--volume-symbol: url(\"theme_resources/icon-speaker.png\");\n\t\t\t\t--zoom-in-symbol: url(\"theme_resources/icon-zoomIn.png\");\n\t\t\t\t--zoom-out-symbol: url(\"theme_resources/icon-zoomOut.png\");\n\t\t\t\t--export-symbol: url(\"theme_resources/icon-export.png\");\n\t\t\t\t\t}\n\t\t\t* {\n\t\t\tcursor: url(\"theme_resources/abyssbox_cursor.png\"), auto;\n\t\t\t}\n\t\t\t\n\t\t\t\t@font-face {\n\t\t\t   font-family: \"AbyssType\";\n\t\t\t   src:\n\t\t\t\turl(\"theme_resources/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t}\n\t\n\t\t\t\t/* sets background image */\n\t\t\t\tbody {\n\t\t\t\tbackground-image: url(\"theme_resources/stripesbg.gif\") !important;\n\t\t\t\tbackground-position: center;\n\t\t\t\tbackground-repeat: repeat;\n\t\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t}\n\t\n\t\t\t\t#text-content {\n\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border.png\");\n\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t   border-image-width: 8px; \n\t\t\t\t\tborder-image-repeat: stretch; \n\t\t\t\t\t\tpadding: 12px; \n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t}\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border.png\");\n\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t   \tborder-image-width: 8px; \n\t\t\t\t\t\tborder-image-repeat: stretch;\n\t\t\t\t\t\tpadding: 12px;\n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t}\n\t\t\t\t.beepboxEditor button,\n\t\t\t\tbutton.playButton,\n\t\t\t\tbutton.pauseButton, \n\t\t\t\tbutton.recordButton, \n\t\t\t\tbutton.stopButton,\n\t\t\t\tbutton.nextBarButton, \n\t\t\t\tbutton.prevBarButton, \n\t\t\t\tbutton.copyButton, \n\t\t\t\tbutton.pasteButton, \n\t\t\t\tbutton.exportInstrumentButton, \n\t\t\t\tbutton.importInstrumentButton, \n\t\t\t\t.beepboxEditor select, \n\t\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border.png\") !important;\n\t\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\tpadding: 4px !important; \n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\n\t\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\n\t\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t--ui-widget-background: #1e0915 !important;\n\t\t\t\t\tborder-image-source:none !important;\n\t\t\t\t}\n\t\n\t\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\t\tborder-image: none !important;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t@font-face {\n\t\t\t   font-family: \"AbyssType_small\";\n\t\t\t   src:\n\t\t\t\turl(\"theme_resources/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t}\n\t\n\t\t\t\thtml {\n\t\t\t\t\tfont-family: 'AbyssType';\n\t\t\t\t}\n\t\n\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t\t}\n\t\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\n\t\t\t\tdiv.selectRow span {\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\n\t\t\t\t`,\n    \"abyssbox light\": `\n\t\t\t:root { \t\t\n\t\t\t\t--page-margin: #e0adbc; \t\t\n\t\t\t\t--editor-background: #e0adbc; \t\t\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t\t--primary-text: #6110d9; \t\t\n\t\t\t\t--secondary-text: #cc1338;\t\n\t\t\t\t--inverted-text:  #e8bcc9;\t \t\t\n\t\t\t\t--box-selection-fill: #bf2c5d; \t\t\n\t\t\t\t--loop-accent: #8c346a; \t\t\n\t\t\t\t--link-accent: #8c346a; \t\t\n\t\t\t\t--ui-widget-background: #f5e9f0;\t\t\n\t\t\t\t--ui-widget-focus: #f5e9f0; \t\t\n\t\t\t\t--pitch-background: #eddadf; \t\t\n\t\t\t\t--tonic: #f5f0f1; \t\t\n\t\t\t\t--fifth-note: #ffb5c9; \t\t\n\t\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t\t--black-piano-key: #402f2f;\n\t\t\t\t--use-color-formula: true; \t\t\n\t\t\t\t--track-editor-bg-pitch: #edbecc; \t\t\n\t\t\t\t--track-editor-bg-pitch-dim: #e0adbc; \t\t\n\t\t\t\t--track-editor-bg-noise: #edbecc; \t\t\n\t\t\t\t--track-editor-bg-noise-dim: #e0adbc; \t\t\n\t\t\t\t--track-editor-bg-mod: #edbecc; \t\t\n\t\t\t\t--track-editor-bg-mod-dim: #e0adbc; \t\t\n\t\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t\t--mod-label-primary-text: gray;\n\t\t\t\t--mod-title: #cc1338; \n\t\t\t\n\t\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t\t--pitch-secondary-channel-hue-scale 0; \t\t\n\t\t\t\t--pitch-secondary-channel-sat: 255; \t\t\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-secondary-channel-lum: 30; \t\t\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\t\n\t\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-primary-channel-sat: 255; \t\t\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-primary-channel-lum: 60; \t\t\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\t\n\t\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-secondary-note-sat: 255; \t\t\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-secondary-note-lum: 30; \t\t\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\t\n\t\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-primary-note-sat: 255; \t\t\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t\t--pitch-primary-note-lum: 60; \t\t\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\t\n\t\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t\t--noise-secondary-channel-sat: 255; \t\t\n\t\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t\t--noise-secondary-channel-lum: 30; \t\t\n\t\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t\t--noise-primary-channel-sat: 255; \t\t\n\t\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t\t--noise-primary-channel-lum: 60; \t\t\n\t\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t\t--noise-secondary-note-sat: 255; \t\t\n\t\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t\t--noise-secondary-note-lum: 30; \t\t\n\t\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\t\n\t\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t\t--noise-primary-note-sat: 255; \t\t\n\t\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\t\n\t\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-secondary-channel-sat: 255; \t\t\n\t\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t\t--mod-secondary-channel-lum: 30; \t\t\n\t\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-primary-channel-sat: 255; \t\t\n\t\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t\t--mod-primary-channel-lum: 60; \t\t\n\t\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-secondary-note-sat: 255; \t\t\n\t\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t\t--mod-secondary-note-lum: 30; \t\t\n\t\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-primary-note-sat: 255; \t\t\n\t\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t\t--mod-primary-note-lum: 60; \t\t\n\t\t\t\t--mod-primary-note-lum-scale: 0; \n\n\t\t\t\t--note-flash: #ffffff;\n\t\t\t\t--note-flash-secondary: #ffffff77;\n\n\t\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\n\t\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\t\t\t\t--text-spacing-icon: > ;\n\t\t\t\t--scrollbar-color: #bf2c5d;\n\n\t\t\t\t--file-page-symbol: url(\"theme_resources/icon-file.png\");\n\t\t\t\t--edit-pencil-symbol: url(\"theme_resources/icon-edit.png\");\n\t\t\t\t--preferences-gear-symbol: url(\"theme_resources/icon-preferences.png\");\n\t\t\t\t--instrument-copy-symbol: url(\"theme_resources/icon-copy.png\");\n\t\t\t\t--instrument-paste-symbol: url(\"theme_resources/icon-paste.png\");\n\t\t\t\t--play-symbol: url(\"theme_resources/icon-play.png\");\n\t\t\t\t--pause-symbol: url(\"theme_resources/icon-pause.png\");\n\t\t\t\t--record-symbol: url(\"theme_resources/icon-record.png\");\n\t\t\t\t--stop-symbol: url(\"theme_resources/icon-stop.png\");\n\t\t\t\t--prev-bar-symbol: url(\"theme_resources/icon-prev.png\");\n\t\t\t\t--next-bar-symbol: url(\"theme_resources/icon-next.png\");\n\t\t\t\t--muted-symbol: url(\"theme_resources/icon-speakerMuted.png\");\n\t\t\t\t--unmuted-symbol: url(\"theme_resources/icon-speaker.png\");\n\t\t\t\t--volume-symbol: url(\"theme_resources/icon-speaker.png\");\n\t\t\t\t--zoom-in-symbol: url(\"theme_resources/icon-zoomIn.png\");\n\t\t\t\t--zoom-out-symbol: url(\"theme_resources/icon-zoomOut.png\");\n\t\t\t\t--export-symbol: url(\"theme_resources/icon-export.png\");\n\t\t\t}\n\t\t\t\t\t/* sets background image */\n\t\t\t\t\tbody {\n\t\t\t\t\tbackground-image: url(\"theme_resources/stripesbg_light.gif\") !important;\n\t\t\t\t\tbackground-position: center;\n\t\t\t\t\tbackground-repeat: repeat;\n\t\t\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t\t}\t\t\n\t\t\t\t#text-content {\n\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border_light.png\");\n\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t   border-image-width: 8px; \n\t\t\t\t\tborder-image-repeat: stretch; \n\t\t\t\t\t\tpadding: 12px; \n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t}\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border_light.png\");\n\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t   border-image-width: 8px; \n\t\t\t\t\tborder-image-repeat: stretch;\n\t\t\t\t\t\tpadding: 12px;\n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t}\n\t\t\t\t\t.beepboxEditor button,\n\t\t\t\t\tbutton.playButton,\n\t\t\t\t\tbutton.pauseButton, \n\t\t\t\t\tbutton.recordButton, \n\t\t\t\t\tbutton.stopButton,\n\t\t\t\t\tbutton.nextBarButton, \n\t\t\t\t\tbutton.prevBarButton, \n\t\t\t\t\tbutton.copyButton, \n\t\t\t\t\tbutton.pasteButton, \n\t\t\t\t\tbutton.exportInstrumentButton, \n\t\t\t\t\tbutton.importInstrumentButton, \n\t\t\t\t\t.beepboxEditor select, \n\t\t\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border_light.png\") !important;\n\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\t\tpadding: 4px !important; \n\t\t\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\n\t\t\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\t\tborder-image-source:none !important;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\t\tborder-image: none !important;\n\t\t\t\t\t}\n\t\n\t\t\t/* sets cursor */ \n\t\t\t* {\n\t\t\tcursor: url(\"theme_resources/abyssbox_cursor.png\"), auto !important;\n\t\t\t}\n\t\t\t\t@font-face {\n\t\t\t   font-family: \"AbyssType\";\n\t\t\t   src:\n\t\t\t\turl(\"theme_resources/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t}\n\t\n\t\t\t\t@font-face {\n\t\t\t   font-family: \"AbyssType_small\";\n\t\t\t   src:\n\t\t\t\turl(\"theme_resources/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t}\n\t\n\t\t\t\thtml {\n\t\t\t\tfont-family: 'AbyssType';\n\t\t\t\t}\n\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t\t}\n\t\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\n\t\t\t\tdiv.selectRow span {\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\n\t\t\t\t`,\n    \"slarmoosbox\": `\n\t\t:root {\n\t\t\t--page-margin: #14051a;\n\t\t\t--editor-background: #14051a;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #71eee5;\n\t\t\t--secondary-text: #3abbb2;\n\t\t\t--inverted-text: #13695e;\n\t\t\t--box-selection-fill: #36c71c;\n\t\t\t--loop-accent: #36c71c;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #183d05;\n\t\t\t--ui-widget-focus: #247d0d;\n\t\t\t--pitch-background: #2e0e51;\n\t\t\t--tonic: #247d0d;\n\t\t\t--fifth-note: #3abbb2;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #061705;\n\t\t\t--white-piano-key-text: #061705;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #09382b;\n\t\t\t--track-editor-bg-pitch-dim: #14051a;\n\t\t\t--track-editor-bg-noise: #40400b;\n\t\t\t--track-editor-bg-noise-dim: #14051a;\n\t\t\t--track-editor-bg-mod: #0a2c08;\n\t\t\t--track-editor-bg-mod-dim: #14051a;\n\t\t\t--multiplicative-mod-slider: #3abb22;\n\t\t\t--overwriting-mod-slider: #71eee5;\n\t\t\t--indicator-primary: #a773e5;\n\t\t\t--indicator-secondary: #4c1c89;\n\t\t\t--select2-opt-group: #183d05;\n\t\t\t--input-box-outline: #18040a;\n\t\t\t--mute-button-normal: #36c71c;\n\t\t\t--mute-button-mod: #a773e5;\n\t\t\t--mod-label-primary: #a773e5;\n\t\t\t--mod-label-secondary-text: #6b29bf;\n\t\t\t--mod-label-primary-text: #14051a;\n\t\t\t--mod-title: #247d1d;\n\t\t\t--pitch-secondary-channel-hue: 100;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t--pitch-secondary-channel-sat: 100.0;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.15;\n\t\t\t--pitch-secondary-channel-lum: 60.0;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 100;\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t--pitch-primary-channel-sat-scale: 0.15;\n\t\t\t--pitch-primary-channel-lum: 75.0;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 100;\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t--pitch-secondary-note-sat: 95.0;\n\t\t\t--pitch-secondary-note-sat-scale: 0.15;\n\t\t\t--pitch-secondary-note-lum: 40;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 100;\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0.15;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 65;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 55;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 65;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 66;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 65;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 66;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 65;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 70;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 192;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--oscilloscope-line-R: white;\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\t\t}`,\n    \"voxonium\": `:root {\n\t\t\t--page-margin: #02070D;\n\t\t\t--editor-background: #02070D;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #9bd1ee;\n\t\t\t--secondary-text: #5a6da8;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(68 68 255 / 99%);\n\t\t\t--box-selection-fill: rgb(0 0 255 / 30%);\n\t\t\t--loop-accent: #024aca;\n\t\t\t--link-accent: #024aca;\n\t\t\t--ui-widget-background: #161c2e;\n\t\t\t--ui-widget-focus: #262c3e;\n\t\t\t--pitch-background: #22272D;\n\t\t\t--tonic: #1b3056;\n\t\t\t--fifth-note: #344051;\n\t\t\t--white-piano-key: #a6c6ed;\n\t\t\t--black-piano-key: #2f4687;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #25284c;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #024aca;\n\t\t\t--indicator-secondary: #00177d;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #273b9d;\n\t\t\t--mute-button-mod: #27989d;\n\t\t\t--pitch1-secondary-channel: hsl(200, 100%, 40%);\n\t\t\t--pitch1-primary-channel: #6ecfff;\n\t\t\t--pitch1-secondary-note: hsl(200, 100%, 40%);\n\t\t\t--pitch1-primary-note: #6ecfff;\n\t\t\t--pitch2-secondary-channel: \thsl(212, 100%, 34%);\n\t\t\t--pitch2-primary-channel: #5BA8FF;\n\t\t\t--pitch2-secondary-note: hsl(212, 100%, 34%);\n\t\t\t--pitch2-primary-note: #5BA8FF;\n\t\t\t--pitch3-secondary-channel: #024ACA;\n\t\t\t--pitch3-primary-channel: #0A89FF;\n\t\t\t--pitch3-secondary-note: #024ACA;\n\t\t\t--pitch3-primary-note: #0A89FF;\n\t\t\t--pitch4-secondary-channel: #00177D;\n\t\t\t--pitch4-primary-channel: #024ACA;\n\t\t\t--pitch4-secondary-note: #00177D;\n\t\t\t--pitch4-primary-note: #024ACA;\n\t\t\t--pitch5-secondary-channel: #000e4e;\n\t\t\t--pitch5-primary-channel: #0023bf;\n\t\t\t--pitch5-secondary-note: #000e4e;\n\t\t\t--pitch5-primary-note: #0023bf;\n\t\t\t--pitch6-secondary-channel: #8990FE;\n\t\t\t--pitch6-primary-channel: #C2C6FF;\n\t\t\t--pitch6-secondary-note: #8990FE;\n\t\t\t--pitch6-primary-note: #C2C6FF;\n\t\t\t--pitch7-secondary-channel: #5E65D3;\n\t\t\t--pitch7-primary-channel: #8990FE;\n\t\t\t--pitch7-secondary-note: #5E65D3;\n\t\t\t--pitch7-primary-note: #8990FE;\n\t\t\t--pitch8-secondary-channel: #3138A6;\n\t\t\t--pitch8-primary-channel: #5E65D3;\n\t\t\t--pitch8-secondary-note: #3138A6;\n\t\t\t--pitch8-primary-note: #5E65D3;\n\t\t\t--pitch9-secondary-channel: #1B0B7F;\n\t\t\t--pitch9-primary-channel: #3138A6;\n\t\t\t--pitch9-secondary-note: #1B0B7F;\n\t\t\t--pitch9-primary-note: #3138A6;\n\t\t\t--pitch10-secondary-channel: #13015D;\n\t\t\t--pitch10-primary-channel: #1c02bd;\n\t\t\t--pitch10-secondary-note: #13015D;\n\t\t\t--pitch10-primary-note: #1c02bd;\n\t\t\t--noise1-secondary-channel: #A675FE;\n\t\t\t--noise1-primary-channel: #E2C9FF;\n\t\t\t--noise1-secondary-note: #A675FE;\n\t\t\t--noise1-primary-note: #E2C9FF;\n\t\t\t--noise2-secondary-channel: #6A31CA;\n\t\t\t--noise2-primary-channel: #A675FE;\n\t\t\t--noise2-secondary-note: #6A31CA;\n\t\t\t--noise2-primary-note: #A675FE;\n\t\t\t--noise3-secondary-channel: #5A1991;\n\t\t\t--noise3-primary-channel: #6A31CA;\n\t\t\t--noise3-secondary-note: #5A1991;\n\t\t\t--noise3-primary-note: #6A31CA;\n\t\t\t--noise4-secondary-channel: #2f1a68;\n\t\t\t--noise4-primary-channel: #5A1991;\n\t\t\t--noise4-secondary-note: #2f1a68;\n\t\t\t--noise4-primary-note: #5A1991;\n\t\t\t--noise5-secondary-channel: #211640;\n\t\t\t--noise5-primary-channel: #391b8d;\n\t\t\t--noise5-secondary-note: #211640;\n\t\t\t--noise5-primary-note: #391b8d;\n\t\t\t--mod1-secondary-channel: #25E2CD;\n\t\t\t--mod1-primary-channel: #BDFFCA;\n\t\t\t--mod1-secondary-note: #25E2CD;\n\t\t\t--mod1-primary-note: #BDFFCA;\n\t\t\t--mod2-secondary-channel: #0A98AC;\n\t\t\t--mod2-primary-channel: #25E2CD;\n\t\t\t--mod2-secondary-note: #0A98AC;\n\t\t\t--mod2-primary-note: #25E2CC;\n\t\t\t--mod3-secondary-channel: #005280;\n\t\t\t--mod3-primary-channel: #0A98AC;\n\t\t\t--mod3-secondary-note: #005280;\n\t\t\t--mod3-primary-note: #0A98AC;\n\t\t\t--mod4-secondary-channel: #0f3670;\n\t\t\t--mod4-primary-channel: #1369c1;\n\t\t\t--mod4-secondary-note: #0f3670;\n\t\t\t--mod4-primary-note: #1369c1;\n\t\t\t--mod-label-primary: #191d26;\n\t\t\t--mod-label-secondary-text: #024aca;\n\t\t\t--mod-label-primary-text: #ffffffa6;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\t}`,\n    \"axobox\": `\n\t\t:root {\n\t\t\t--page-margin: #000e1c;\n\t\t\t--editor-background: #000e1c;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--secondary-text: #84859a;\n\t\t\t--box-selection-fill: #044b94;\n\t\t\t--ui-widget-background: #2a3045;\n\t\t\t--ui-widget-focus: #4f4a68;\n\t\t\t--pitch-background: #3c5773;\n\t\t\t--tonic: #453e80;\n\t\t\t--fifth-note: #545498;\n\t\t\t--white-piano-key: #eee;\n\t\t\t--black-piano-key: #666;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #1E90FF;\n\t\t\t--indicator-secondary: #1560BD;\n\t\t\t--select2-opt-group: #3f3951;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #dda85d;\n\t\t\t--mute-button-mod: #886eae;\n\t\t\t--mod-label-primary: #282840;\n\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--pitch-secondary-channel-hue: 210;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.5;\n\t\t\t--pitch-secondary-channel-sat: 100;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 205;\n\t\t\t--pitch-primary-channel-hue-scale: 6.5;\n\t\t\t--pitch-primary-channel-sat: 39;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 60;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 225;\n\t\t\t--pitch-secondary-note-hue-scale: 6.5;\n\t\t\t--pitch-secondary-note-sat: 55;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 37;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 204;\n\t\t\t--pitch-primary-note-hue-scale: 6.5;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 37;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 138;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 97;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 38;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 74;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 100;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 36;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 175;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 98;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 24;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 149;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 100;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 32;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 44;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 100;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 45;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 90;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 57;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 33;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 100;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 47;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 45;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 100;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 60;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #9187d1;\n\t\t\t--disabled-note-secondary:  #6a67ac;\n\t\t}`,\n    \"lemmbox dark\": `\n\t\t:root {\n\t\t\t--page-margin: #020009;\n\t\t\t--editor-background: #020009;\n\t\t\t--secondary-text: white;\n\t\t\t--text-selection: #c2a855;\n\t\t\t--loop-accent: #fff570;\n\t\t\t--link-accent: #fff570;\n\t\t\t--ui-widget-background: #191721;\n\t\t\t--ui-widget-focus: #2d293b;\n\t\t\t--pitch-background: #44444A;\n\t\t\t--tonic: #c2a855;\n\t\t\t--white-piano-key-text: #131200;\n\t\t\t--black-piano-key-text: #fff;\n\t\t\t--use-color-formula: false;\n\t\t\t--pitch-channel-limit: 10;\n\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t--track-editor-bg-noise: #444;\n\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #6a38ff;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #403b4f;\n\t\t\t--mute-button-normal: #ffa033;\n\t\t\t--mute-button-mod: #8066cc;\n\n\t\t\t--pitch1-secondary-channel: #e64951;\n\t\t\t--pitch1-primary-channel: #f0565e;\n\t\t\t--pitch1-secondary-note: #f34149;\n\t\t\t--pitch1-primary-note: #f99ca9;\n\n\t\t\t--pitch2-secondary-channel: #de6f2f;\n\t\t\t--pitch2-primary-channel: #f18e55;\n\t\t\t--pitch2-secondary-note: #ef7d3b;\n\t\t\t--pitch2-primary-note: #f6ad92;\n\n\t\t\t--pitch3-secondary-channel: #e1d30e;\n\t\t\t--pitch3-primary-channel: #faec29;\n\t\t\t--pitch3-secondary-note: #d9cd23;\n\t\t\t--pitch3-primary-note: #fff570;\n\n\t\t\t--pitch4-secondary-channel: #78c25a;\n\t\t\t--pitch4-primary-channel: #85d947;\n\t\t\t--pitch4-secondary-note: #8de02d;\n\t\t\t--pitch4-primary-note: #bdff70;\n\n\t\t\t--pitch5-secondary-channel: #2190eb;\n\t\t\t--pitch5-primary-channel: #45a5f5;\n\t\t\t--pitch5-secondary-note: #399bea;\n\t\t\t--pitch5-primary-note: #70bfff;\n\n\t\t\t--pitch6-secondary-channel: #7e3af2;\n\t\t\t--pitch6-primary-channel: #8b4df7;\n\t\t\t--pitch6-secondary-note: #752fed;\n\t\t\t--pitch6-primary-note: #965cfa;\n\n\t\t\t--pitch7-secondary-channel: #7e05f7;\n\t\t\t--pitch7-primary-channel: #922df7;\n\t\t\t--pitch7-secondary-note: #7c29cf;\n\t\t\t--pitch7-primary-note: #9443e6;\n\n\t\t\t--pitch8-secondary-channel: #94249e;\n\t\t\t--pitch8-primary-channel: #cf2cde;\n\t\t\t--pitch8-secondary-note: #b326bf;\n\t\t\t--pitch8-primary-note: #c53fd1;\n\n\t\t\t--pitch9-secondary-channel: #c42f6b;\n\t\t\t--pitch9-primary-channel: #fc5d9d;\n\t\t\t--pitch9-secondary-note: #cf3b77;\n\t\t\t--pitch9-primary-note: #e36f9e;\n\n\t\t\t--pitch10-secondary-channel: #d53c5e;\n\t\t\t--pitch10-primary-channel: #f65a7e;\n\t\t\t--pitch10-secondary-note: #e13e60;\n\t\t\t--pitch10-primary-note: #ed8090;\n\n\t\t\t--mod1-secondary-channel: #339955;\n\t\t\t--mod1-primary-channel: #77fc55;\n\t\t\t--mod1-secondary-note: #77ff8a;\n\t\t\t--mod1-primary-note: #cdffee;\n\n\t\t\t--mod2-secondary-channel: #993355;\n\t\t\t--mod2-primary-channel: #f04960;\n\t\t\t--mod2-secondary-note: #f057a0;\n\t\t\t--mod2-primary-note: #ffb8de;\n\n\t\t\t--mod3-secondary-channel: #553399;\n\t\t\t--mod3-primary-channel: #8855fc;\n\t\t\t--mod3-secondary-note: #aa64ff;\n\t\t\t--mod3-primary-note: #f8ddff;\n\n\t\t\t--mod4-secondary-channel: #a86436;\n\t\t\t--mod4-primary-channel: #c8a825;\n\t\t\t--mod4-secondary-note: #e8ba46;\n\t\t\t--mod4-primary-note: #fff6d3;\n\n\t\t\t--mod-label-primary: #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #999;\n\t\t\t--disabled-note-secondary: #666;\n\n\t\t\t--pitch1-background: #777;\n\t\t}`,\n    \"azur lane\": `\n\t\t:root {\n\t\t\t--page-margin: #19337e;\n\t\t\t--editor-background: #000333cf;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #9af9ff;\n\t\t\t--secondary-text: #4072dd;\n\t\t\t--box-selection-fill: #044b94;\n\t\t\t--loop-accent: #950d0d;\n\t\t\t--link-accent: #0072ff;\n\t\t\t--ui-widget-background: #255bb3;\n\t\t\t--ui-widget-focus: #757575;\n\t\t\t--pitch-background: #20468b73;\n\t\t\t--tonic: #c9c9c9;\n\t\t\t--fifth-note: #731d1d;\n\t\t\t--white-piano-key: #eee;\n\t\t\t--black-piano-key: #000;\n\t\t\t--track-editor-bg-pitch: #535a73;\n\t\t\t--track-editor-bg-pitch-dim: #353643;\n\t\t\t--track-editor-bg-noise: #770000;\n\t\t\t--track-editor-bg-noise-dim: #430000;\n\t\t\t--track-editor-bg-mod: #5d1d06;\n\t\t\t--track-editor-bg-mod-dim: #270000;\n\t\t\t--multiplicative-mod-slider: #bb0000;\n\t\t\t--overwriting-mod-slider: #ad0000;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #002957;\n\t\t\t--mute-button-normal: #ffffff;\n\t\t\t--mute-button-mod: #4f4f4f;\n\t\t\t--mod-label-primary: #531313;\n\t\t\t--pitch1-secondary-channel: #80858d;\n\t\t  --pitch1-primary-channel: #f2f7ff;\n\t\t  --pitch1-secondary-note: #80858d;\n\t\t  --pitch1-primary-note: #f2f7ff;\n\t\t  --pitch2-secondary-channel: #7392ad;\n\t\t  --pitch2-primary-channel: #a8d6ff;\n\t\t  --pitch2-secondary-note: #7392ad;\n\t\t  --pitch2-primary-note: #a8d6ff;\n\t\t  --pitch3-secondary-channel: #4b7eaa;\n\t\t  --pitch3-primary-channel: #71bdff;\n\t\t  --pitch3-secondary-note: #4b7eaa;\n\t\t  --pitch3-primary-note: #71bdff;\n\t\t  --pitch4-secondary-channel: #3594b1;\n\t\t  --pitch4-primary-channel: #48d4ff;\n\t\t  --pitch4-secondary-note: #3594b1;\n\t\t  --pitch4-primary-note: #48d4ff;\n\t\t  --pitch5-secondary-channel: #1b98b1;\n\t\t  --pitch5-primary-channel: #30f1ff;\n\t\t  --pitch5-secondary-note: #1b98b1;\n\t\t  --pitch5-primary-note: #30f1ff;\n\t\t  --pitch6-secondary-channel: #9e0000;\n\t\t  --pitch6-primary-channel: #db0000;\n\t\t  --pitch6-secondary-note: #9e0000;\n\t\t  --pitch6-primary-note: #db0000;\n\t\t  --pitch7-secondary-channel: #7c1717;\n\t\t  --pitch7-primary-channel: #9e0000;\n\t\t  --pitch7-secondary-note: #7c1717;\n\t\t  --pitch7-primary-note: #9e0000;\n\t\t  --pitch8-secondary-channel: #5c1f1f;\n\t\t  --pitch8-primary-channel: #7c1717;\n\t\t  --pitch8-secondary-note: #5c1f1f;\n\t\t  --pitch8-primary-note: #7c1717;\n\t\t  --pitch9-secondary-channel: #3e2020;\n\t\t  --pitch9-primary-channel: #5c1f1f;\n\t\t  --pitch9-secondary-note: #3e2020;\n\t\t  --pitch9-primary-note: #5c1f1f;\n\t\t  --pitch10-secondary-channel: #2f1c1c;\n\t\t  --pitch10-primary-channel: #5c1f1f;\n\t\t  --pitch10-secondary-note: #2f1c1c;\n\t\t  --pitch10-primary-note: #5c1f1f;\n\t\t  --noise1-secondary-channel: #828282;\n\t\t  --noise1-primary-channel: #cacaca;\n\t\t  --noise1-secondary-note: #828282;\n\t\t  --noise1-primary-note: #cacaca;\n\t\t  --noise2-secondary-channel: #2f8baf;\n\t\t  --noise2-primary-channel: #3de2ff;\n\t\t  --noise2-secondary-note: #2f8baf;\n\t\t  --noise2-primary-note: #3de2ff;\n\t\t  --noise3-secondary-channel: #6f50b1;\n\t\t  --noise3-primary-channel: #8567ff;\n\t\t  --noise3-secondary-note: #6f50b1;\n\t\t  --noise3-primary-note: #8567ff;\n\t\t  --noise4-secondary-channel: #d38900;\n\t\t  --noise4-primary-channel: #ffb500;\n\t\t  --noise4-secondary-note: #d38900;\n\t\t  --noise4-primary-note: #ffb500;\n\t\t  --noise5-secondary-channel: #af0008;\n\t\t  --noise5-primary-channel: #00d70e;\n\t\t  --noise5-secondary-note: #29b700;\n\t\t  --noise5-primary-note: #00f7ff;\n\t\t  --mod1-secondary-channel: #9d5bb9;\n\t\t  --mod1-primary-channel: #e16bff;\n\t\t  --mod1-secondary-note: #3a3ea4;\n\t\t  --mod1-primary-note: #fff;\n\t\t  --mod2-secondary-channel: #3a8d58;\n\t\t  --mod2-primary-channel: #42ffff;\n\t\t  --mod2-secondary-note: #3a8d58;\n\t\t  --mod2-primary-note: #42ffff;\n\t\t  --mod3-secondary-channel: #af6c00;\n\t\t  --mod3-primary-channel: #fa0;\n\t\t  --mod3-secondary-note: #0001a2;\n\t\t  --mod3-primary-note: #970000;\n\t\t  --mod4-secondary-channel: #d3d3d3;\n\t\t  --mod4-primary-channel: #759bff;\n\t\t  --mod4-secondary-note: #a00000;\n\t\t  --mod4-primary-note: #fff;\n\t\t  --disabled-note-primary: #3a3a3a;\n\t\t  --disabled-note-secondary: #000;\n\t\t\t}\n\t\t/* replaces hotdog with an image of the girls using the same scratch sprites from the 404 page*/\n\t\t#Hotdog {\n\t\t\tdisplay: inline !important;\n\t\t\tcontent: url(\"theme_resources/AzurLaneThemeStarterSquad.png\") !important;\n\t\t\twidth: 75%;\n\t\t\theight: 75%;\n\t\t\ttext-align: center;\n\t\t\tmargin-top: 25px;\n\t\t}\n\t\t/* sets cursor */\n\t\t* {\n\t\tcursor: url(\"theme_resources/AzurLaneThemeMouse.png\"), auto !important;\n\t\t}\n\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"theme_resources/AzurLaneThemeMemoryTaskBackground.png\") !important;\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\tbackground: #0400257d !important;\n\t\t}\n\t\t\t#text-content > section > h1 > font {\n\t\tdisplay: none;\n\t\t}\n\t\t#text-content > section > h1 {\n\t\tmargin: auto;\n\t\tcontent: url(\"theme_resources/AzurLaneThemeLogo.png\");\n\t\t}\n\t\t.promptContainerBG::before {\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t}\n\t\t}`,\n    \"custom\": `${localStorage.getItem(\"customColors\") || `:root {  }`}`,\n};\nColorConfig.pageMargin = \"var(--page-margin, black)\";\nColorConfig.editorBackground = \"var(--editor-background, black)\";\nColorConfig.hoverPreview = \"var(--hover-preview, white)\";\nColorConfig.playhead = \"var(--playhead, white)\";\nColorConfig.primaryText = \"var(--primary-text, white)\";\nColorConfig.secondaryText = \"var(--secondary-text, #999)\";\nColorConfig.invertedText = \"var(--inverted-text, black)\";\nColorConfig.textSelection = \"var(--text-selection, rgba(119,68,255,0.99))\";\nColorConfig.boxSelectionFill = \"var(--box-selection-fill, rgba(255,255,255,0.2))\";\nColorConfig.loopAccent = \"var(--loop-accent, #74f)\";\nColorConfig.linkAccent = \"var(--link-accent, #98f)\";\nColorConfig.uiWidgetBackground = \"var(--ui-widget-background, #444)\";\nColorConfig.uiWidgetFocus = \"var(--ui-widget-focus, #777)\";\nColorConfig.pitchBackground = \"var(--pitch-background, #444)\";\nColorConfig.tonic = \"var(--tonic, #864)\";\nColorConfig.fifthNote = \"var(--fifth-note, #468)\";\nColorConfig.whitePianoKey = \"var(--white-piano-key, #bbb)\";\nColorConfig.blackPianoKey = \"var(--black-piano-key, #444)\";\nColorConfig.whitePianoKeyText = \"var(--white-piano-key-text, #131200)\";\nColorConfig.blackPianoKeyText = \"var(--black-piano-key-text, #fff)\";\nColorConfig.useColorFormula = \"var(--use-color-formula, false)\";\nColorConfig.pitchSecondaryChannelHue = \"var(--pitch-secondary-channel-hue)\";\nColorConfig.pitchSecondaryChannelHueScale = \"var(--pitch-secondary-channel-hue-scale)\";\nColorConfig.pitchSecondaryChannelSat = \"var(--pitch-secondary-channel-sat)\";\nColorConfig.pitchSecondaryChannelSatScale = \"var(--pitch-secondary-channel-sat-scale)\";\nColorConfig.pitchSecondaryChannelLum = \"var(--pitch-secondary-channel-lum)\";\nColorConfig.pitchSecondaryChannelLumScale = \"var(--pitch-secondary-channel-lum-scale)\";\nColorConfig.pitchPrimaryChannelHue = \"var(--pitch-primary-channel-hue)\";\nColorConfig.pitchPrimaryChannelHueScale = \"var(--pitch-primary-channel-hue-scale)\";\nColorConfig.pitchPrimaryChannelSat = \"var(--pitch-primary-channel-sat)\";\nColorConfig.pitchPrimaryChannelSatScale = \"var(--pitch-primary-channel-sat-scale)\";\nColorConfig.pitchPrimaryChannelLum = \"var(--pitch-primary-channel-lum)\";\nColorConfig.pitchPrimaryChannelLumScale = \"var(--pitch-primary-channel-lum-scale)\";\nColorConfig.pitchSecondaryNoteHue = \"var(--pitch-secondary-note-hue)\";\nColorConfig.pitchSecondaryNoteHueScale = \"var(--pitch-secondary-note-hue-scale)\";\nColorConfig.pitchSecondaryNoteSat = \"var(--pitch-secondary-note-sat)\";\nColorConfig.pitchSecondaryNoteSatScale = \"var(--pitch-secondary-note-sat-scale)\";\nColorConfig.pitchSecondaryNoteLum = \"var(--pitch-secondary-note-lum)\";\nColorConfig.pitchSecondaryNoteLumScale = \"var(--pitch-secondary-note-lum-scale)\";\nColorConfig.pitchPrimaryNoteHue = \"var(--pitch-primary-note-hue)\";\nColorConfig.pitchPrimaryNoteHueScale = \"var(--pitch-primary-note-hue-scale)\";\nColorConfig.pitchPrimaryNoteSat = \"var(--pitch-primary-note-sat)\";\nColorConfig.pitchPrimaryNoteSatScale = \"var(--pitch-primary-note-sat-scale)\";\nColorConfig.pitchPrimaryNoteLum = \"var(--pitch-primary-note-lum)\";\nColorConfig.pitchPrimaryNoteLumScale = \"var(--pitch-primary-note-lum-scale)\";\nColorConfig.modSecondaryChannelHue = \"var(--mod-secondary-channel-hue)\";\nColorConfig.modSecondaryChannelHueScale = \"var(--mod-secondary-channel-hue-scale)\";\nColorConfig.modSecondaryChannelSat = \"var(--mod-secondary-channel-sat)\";\nColorConfig.modSecondaryChannelSatScale = \"var(--mod-secondary-channel-sat-scale)\";\nColorConfig.modSecondaryChannelLum = \"var(--mod-secondary-channel-lum)\";\nColorConfig.modSecondaryChannelLumScale = \"var(--mod-secondary-channel-lum-scale)\";\nColorConfig.modPrimaryChannelHue = \"var(--mod-primary-channel-hue)\";\nColorConfig.modPrimaryChannelHueScale = \"var(--mod-primary-channel-hue-scale)\";\nColorConfig.modPrimaryChannelSat = \"var(--mod-primary-channel-sat)\";\nColorConfig.modPrimaryChannelSatScale = \"var(--mod-primary-channel-sat-scale)\";\nColorConfig.modPrimaryChannelLum = \"var(--mod-primary-channel-lum)\";\nColorConfig.modPrimaryChannelLumScale = \"var(--mod-primary-channel-lum-scale)\";\nColorConfig.modSecondaryNoteHue = \"var(--mod-secondary-note-hue)\";\nColorConfig.modSecondaryNoteHueScale = \"var(--mod-secondary-note-hue-scale)\";\nColorConfig.modSecondaryNoteSat = \"var(--mod-secondary-note-sat)\";\nColorConfig.modSecondaryNoteSatScale = \"var(--mod-secondary-note-sat-scale)\";\nColorConfig.modSecondaryNoteLum = \"var(--mod-secondary-note-lum)\";\nColorConfig.modSecondaryNoteLumScale = \"var(--mod-secondary-note-lum-scale)\";\nColorConfig.modPrimaryNoteHue = \"var(--mod-primary-note-hue)\";\nColorConfig.modPrimaryNoteHueScale = \"var(--mod-primary-note-hue-scale)\";\nColorConfig.modPrimaryNoteSat = \"var(--mod-primary-note-sat)\";\nColorConfig.modPrimaryNoteSatScale = \"var(--mod-primary-note-sat-scale)\";\nColorConfig.modPrimaryNoteLum = \"var(--mod-primary-note-lum)\";\nColorConfig.modPrimaryNoteLumScale = \"var(--mod-primary-note-lum-scale)\";\nColorConfig.noiseSecondaryChannelHue = \"var(--noise-secondary-channel-hue)\";\nColorConfig.noiseSecondaryChannelHueScale = \"var(--noise-secondary-channel-hue-scale)\";\nColorConfig.noiseSecondaryChannelSat = \"var(--noise-secondary-channel-sat)\";\nColorConfig.noiseSecondaryChannelSatScale = \"var(--noise-secondary-channel-sat-scale)\";\nColorConfig.noiseSecondaryChannelLum = \"var(--noise-secondary-channel-lum)\";\nColorConfig.noiseSecondaryChannelLumScale = \"var(--noise-secondary-channel-lum-scale)\";\nColorConfig.noisePrimaryChannelHue = \"var(--noise-primary-channel-hue)\";\nColorConfig.noisePrimaryChannelHueScale = \"var(--noise-primary-channel-hue-scale)\";\nColorConfig.noisePrimaryChannelSat = \"var(--noise-primary-channel-sat)\";\nColorConfig.noisePrimaryChannelSatScale = \"var(--noise-primary-channel-sat-scale)\";\nColorConfig.noisePrimaryChannelLum = \"var(--noise-primary-channel-lum)\";\nColorConfig.noisePrimaryChannelLumScale = \"var(--noise-primary-channel-lum-scale)\";\nColorConfig.noiseSecondaryNoteHue = \"var(--noise-secondary-note-hue)\";\nColorConfig.noiseSecondaryNoteHueScale = \"var(--noise-secondary-note-hue-scale)\";\nColorConfig.noiseSecondaryNoteSat = \"var(--noise-secondary-note-sat)\";\nColorConfig.noiseSecondaryNoteSatScale = \"var(--noise-secondary-note-sat-scale)\";\nColorConfig.noiseSecondaryNoteLum = \"var(--noise-secondary-note-lum)\";\nColorConfig.noiseSecondaryNoteLumScale = \"var(--noise-secondary-note-lum-scale)\";\nColorConfig.noisePrimaryNoteHue = \"var(--noise-primary-note-hue)\";\nColorConfig.noisePrimaryNoteHueScale = \"var(--noise-primary-note-hue-scale)\";\nColorConfig.noisePrimaryNoteSat = \"var(--noise-primary-note-sat)\";\nColorConfig.noisePrimaryNoteSatScale = \"var(--noise-primary-note-sat-scale)\";\nColorConfig.noisePrimaryNoteLum = \"var(--noise-primary-note-lum)\";\nColorConfig.noisePrimaryNoteLumScale = \"var(--noise-primary-note-lum-scale)\";\nColorConfig.trackEditorBgPitch = \"var(--track-editor-bg-pitch, #444)\";\nColorConfig.trackEditorBgPitchDim = \"var(--track-editor-bg-pitch-dim, #333)\";\nColorConfig.trackEditorBgNoise = \"var(--track-editor-bg-noise, #444)\";\nColorConfig.trackEditorBgNoiseDim = \"var(--track-editor-bg-noise-dim, #333)\";\nColorConfig.trackEditorBgMod = \"var(--track-editor-bg-mod, #234)\";\nColorConfig.trackEditorBgModDim = \"var(--track-editor-bg-mod-dim, #123)\";\nColorConfig.multiplicativeModSlider = \"var(--multiplicative-mod-slider, #456;)\";\nColorConfig.overwritingModSlider = \"var(--overwriting-mod-slider, #654)\";\nColorConfig.indicatorPrimary = \"var(--indicator-primary, #74f)\";\nColorConfig.indicatorSecondary = \"var(--indicator-secondary, #444)\";\nColorConfig.select2OptGroup = \"var(--select2-opt-group, #585858)\";\nColorConfig.inputBoxOutline = \"var(--input-box-outline, #333)\";\nColorConfig.muteButtonNormal = \"var(--mute-button-normal, #ffa033)\";\nColorConfig.muteButtonMod = \"var(--mute-button-mod, #9a6bff)\";\nColorConfig.modLabelPrimary = \"var(--mod-label-primary, #999)\";\nColorConfig.modLabelSecondaryText = \"var(--mod-label-secondary-text, #333)\";\nColorConfig.modLabelPrimaryText = \"var(--mod-label-primary-text, black)\";\nColorConfig.disabledNotePrimary = \"var(--disabled-note-primary, #999)\";\nColorConfig.disabledNoteSecondary = \"var(--disabled-note-secondary, #666)\";\nColorConfig.c_pitchSecondaryChannelHue = 0;\nColorConfig.c_pitchSecondaryChannelHueScale = 0;\nColorConfig.c_pitchSecondaryChannelSat = 0;\nColorConfig.c_pitchSecondaryChannelSatScale = 0;\nColorConfig.c_pitchSecondaryChannelLum = 0;\nColorConfig.c_pitchSecondaryChannelLumScale = 0;\nColorConfig.c_pitchPrimaryChannelHue = 0;\nColorConfig.c_pitchPrimaryChannelHueScale = 0;\nColorConfig.c_pitchPrimaryChannelSat = 0;\nColorConfig.c_pitchPrimaryChannelSatScale = 0;\nColorConfig.c_pitchPrimaryChannelLum = 0;\nColorConfig.c_pitchPrimaryChannelLumScale = 0;\nColorConfig.c_pitchSecondaryNoteHue = 0;\nColorConfig.c_pitchSecondaryNoteHueScale = 0;\nColorConfig.c_pitchSecondaryNoteSat = 0;\nColorConfig.c_pitchSecondaryNoteSatScale = 0;\nColorConfig.c_pitchSecondaryNoteLum = 0;\nColorConfig.c_pitchSecondaryNoteLumScale = 0;\nColorConfig.c_pitchPrimaryNoteHue = 0;\nColorConfig.c_pitchPrimaryNoteHueScale = 0;\nColorConfig.c_pitchPrimaryNoteSat = 0;\nColorConfig.c_pitchPrimaryNoteSatScale = 0;\nColorConfig.c_pitchPrimaryNoteLum = 0;\nColorConfig.c_pitchPrimaryNoteLumScale = 0;\nColorConfig.c_modSecondaryChannelHue = 0;\nColorConfig.c_modSecondaryChannelHueScale = 0;\nColorConfig.c_modSecondaryChannelSat = 0;\nColorConfig.c_modSecondaryChannelSatScale = 0;\nColorConfig.c_modSecondaryChannelLum = 0;\nColorConfig.c_modSecondaryChannelLumScale = 0;\nColorConfig.c_modPrimaryChannelHue = 0;\nColorConfig.c_modPrimaryChannelHueScale = 0;\nColorConfig.c_modPrimaryChannelSat = 0;\nColorConfig.c_modPrimaryChannelSatScale = 0;\nColorConfig.c_modPrimaryChannelLum = 0;\nColorConfig.c_modPrimaryChannelLumScale = 0;\nColorConfig.c_modSecondaryNoteHue = 0;\nColorConfig.c_modSecondaryNoteHueScale = 0;\nColorConfig.c_modSecondaryNoteSat = 0;\nColorConfig.c_modSecondaryNoteSatScale = 0;\nColorConfig.c_modSecondaryNoteLum = 0;\nColorConfig.c_modSecondaryNoteLumScale = 0;\nColorConfig.c_modPrimaryNoteHue = 0;\nColorConfig.c_modPrimaryNoteHueScale = 0;\nColorConfig.c_modPrimaryNoteSat = 0;\nColorConfig.c_modPrimaryNoteSatScale = 0;\nColorConfig.c_modPrimaryNoteLum = 0;\nColorConfig.c_modPrimaryNoteLumScale = 0;\nColorConfig.c_noiseSecondaryChannelHue = 0;\nColorConfig.c_noiseSecondaryChannelHueScale = 0;\nColorConfig.c_noiseSecondaryChannelSat = 0;\nColorConfig.c_noiseSecondaryChannelSatScale = 0;\nColorConfig.c_noiseSecondaryChannelLum = 0;\nColorConfig.c_noiseSecondaryChannelLumScale = 0;\nColorConfig.c_noisePrimaryChannelHue = 0;\nColorConfig.c_noisePrimaryChannelHueScale = 0;\nColorConfig.c_noisePrimaryChannelSat = 0;\nColorConfig.c_noisePrimaryChannelSatScale = 0;\nColorConfig.c_noisePrimaryChannelLum = 0;\nColorConfig.c_noisePrimaryChannelLumScale = 0;\nColorConfig.c_noiseSecondaryNoteHue = 0;\nColorConfig.c_noiseSecondaryNoteHueScale = 0;\nColorConfig.c_noiseSecondaryNoteSat = 0;\nColorConfig.c_noiseSecondaryNoteSatScale = 0;\nColorConfig.c_noiseSecondaryNoteLum = 0;\nColorConfig.c_noiseSecondaryNoteLumScale = 0;\nColorConfig.c_noisePrimaryNoteHue = 0;\nColorConfig.c_noisePrimaryNoteHueScale = 0;\nColorConfig.c_noisePrimaryNoteSat = 0;\nColorConfig.c_noisePrimaryNoteSatScale = 0;\nColorConfig.c_noisePrimaryNoteLum = 0;\nColorConfig.c_noisePrimaryNoteLumScale = 0;\nColorConfig.c_pitchChannelCountOverride = 40;\nColorConfig.c_noiseChannelCountOverride = 16;\nColorConfig.c_modChannelCountOverride = 12;\nColorConfig.c_pitchLimit = 1;\nColorConfig.c_noiseLimit = 1;\nColorConfig.c_modLimit = 1;\nColorConfig.c_colorFormulaPitchLimit = 1;\nColorConfig.c_colorFormulaNoiseLimit = 1;\nColorConfig.c_colorFormulaModLimit = 1;\nColorConfig.c_invertedText = \"\";\nColorConfig.c_trackEditorBgNoiseDim = \"\";\nColorConfig.c_trackEditorBgNoise = \"\";\nColorConfig.c_trackEditorBgModDim = \"\";\nColorConfig.c_trackEditorBgMod = \"\";\nColorConfig.c_trackEditorBgPitchDim = \"\";\nColorConfig.c_trackEditorBgPitch = \"\";\nColorConfig.pitchChannels = toNameMap([\n    {\n        name: \"pitch1\",\n        secondaryChannel: \"var(--pitch1-secondary-channel, #0099A1)\",\n        primaryChannel: \"var(--pitch1-primary-channel, #25F3FF)\",\n        secondaryNote: \"var(--pitch1-secondary-note, #00BDC7)\",\n        primaryNote: \"var(--pitch1-primary-note, #92F9FF)\",\n    }, {\n        name: \"pitch2\",\n        secondaryChannel: \"var(--pitch2-secondary-channel, #A1A100)\",\n        primaryChannel: \"var(--pitch2-primary-channel, #FFFF25)\",\n        secondaryNote: \"var(--pitch2-secondary-note, #C7C700)\",\n        primaryNote: \"var(--pitch2-primary-note, #FFFF92)\",\n    }, {\n        name: \"pitch3\",\n        secondaryChannel: \"var(--pitch3-secondary-channel, #C75000)\",\n        primaryChannel: \"var(--pitch3-primary-channel, #FF9752)\",\n        secondaryNote: \"var(--pitch3-secondary-note, #FF771C)\",\n        primaryNote: \"var(--pitch3-primary-note, #FFCDAB)\",\n    }, {\n        name: \"pitch4\",\n        secondaryChannel: \"var(--pitch4-secondary-channel, #00A100)\",\n        primaryChannel: \"var(--pitch4-primary-channel, #50FF50)\",\n        secondaryNote: \"var(--pitch4-secondary-note, #00C700)\",\n        primaryNote: \"var(--pitch4-primary-note, #A0FFA0)\",\n    }, {\n        name: \"pitch5\",\n        secondaryChannel: \"var(--pitch5-secondary-channel, #D020D0)\",\n        primaryChannel: \"var(--pitch5-primary-channel, #FF90FF)\",\n        secondaryNote: \"var(--pitch5-secondary-note, #E040E0)\",\n        primaryNote: \"var(--pitch5-primary-note, #FFC0FF)\",\n    }, {\n        name: \"pitch6\",\n        secondaryChannel: \"var(--pitch6-secondary-channel, #7777B0)\",\n        primaryChannel: \"var(--pitch6-primary-channel, #A0A0FF)\",\n        secondaryNote: \"var(--pitch6-secondary-note, #8888D0)\",\n        primaryNote: \"var(--pitch6-primary-note, #D0D0FF)\",\n    }, {\n        name: \"pitch7\",\n        secondaryChannel: \"var(--pitch7-secondary-channel, #8AA100)\",\n        primaryChannel: \"var(--pitch7-primary-channel, #DEFF25)\",\n        secondaryNote: \"var(--pitch7-secondary-note, #AAC700)\",\n        primaryNote: \"var(--pitch7-primary-note, #E6FF92)\",\n    }, {\n        name: \"pitch8\",\n        secondaryChannel: \"var(--pitch8-secondary-channel, #DF0019)\",\n        primaryChannel: \"var(--pitch8-primary-channel, #FF98A4)\",\n        secondaryNote: \"var(--pitch8-secondary-note, #FF4E63)\",\n        primaryNote: \"var(--pitch8-primary-note, #FFB2BB)\",\n    }, {\n        name: \"pitch9\",\n        secondaryChannel: \"var(--pitch9-secondary-channel, #00A170)\",\n        primaryChannel: \"var(--pitch9-primary-channel, #50FFC9)\",\n        secondaryNote: \"var(--pitch9-secondary-note, #00C78A)\",\n        primaryNote: \"var(--pitch9-primary-note, #83FFD9)\",\n    }, {\n        name: \"pitch10\",\n        secondaryChannel: \"var(--pitch10-secondary-channel, #A11FFF)\",\n        primaryChannel: \"var(--pitch10-primary-channel, #CE8BFF)\",\n        secondaryNote: \"var(--pitch10-secondary-note, #B757FF)\",\n        primaryNote: \"var(--pitch10-primary-note, #DFACFF)\",\n    },\n]);\nColorConfig.noiseChannels = toNameMap([\n    {\n        name: \"noise1\",\n        secondaryChannel: \"var(--noise1-secondary-channel, #6F6F6F)\",\n        primaryChannel: \"var(--noise1-primary-channel, #AAAAAA)\",\n        secondaryNote: \"var(--noise1-secondary-note, #A7A7A7)\",\n        primaryNote: \"var(--noise1-primary-note, #E0E0E0)\",\n    }, {\n        name: \"noise2\",\n        secondaryChannel: \"var(--noise2-secondary-channel, #996633)\",\n        primaryChannel: \"var(--noise2-primary-channel, #DDAA77)\",\n        secondaryNote: \"var(--noise2-secondary-note, #CC9966)\",\n        primaryNote: \"var(--noise2-primary-note, #F0D0BB)\",\n    }, {\n        name: \"noise3\",\n        secondaryChannel: \"var(--noise3-secondary-channel, #4A6D8F)\",\n        primaryChannel: \"var(--noise3-primary-channel, #77AADD)\",\n        secondaryNote: \"var(--noise3-secondary-note, #6F9FCF)\",\n        primaryNote: \"var(--noise3-primary-note, #BBD7FF)\",\n    }, {\n        name: \"noise4\",\n        secondaryChannel: \"var(--noise4-secondary-channel, #7A4F9A)\",\n        primaryChannel: \"var(--noise4-primary-channel, #AF82D2)\",\n        secondaryNote: \"var(--noise4-secondary-note, #9E71C1)\",\n        primaryNote: \"var(--noise4-primary-note, #D4C1EA)\",\n    }, {\n        name: \"noise5\",\n        secondaryChannel: \"var(--noise5-secondary-channel, #607837)\",\n        primaryChannel: \"var(--noise5-primary-channel, #A2BB77)\",\n        secondaryNote: \"var(--noise5-secondary-note, #91AA66)\",\n        primaryNote: \"var(--noise5-primary-note, #C5E2B2)\",\n    },\n]);\nColorConfig.modChannels = toNameMap([\n    {\n        name: \"mod1\",\n        secondaryChannel: \"var(--mod1-secondary-channel, #339955)\",\n        primaryChannel: \"var(--mod1-primary-channel, #77fc55)\",\n        secondaryNote: \"var(--mod1-secondary-note, #77ff8a)\",\n        primaryNote: \"var(--mod1-primary-note, #cdffee)\",\n    }, {\n        name: \"mod2\",\n        secondaryChannel: \"var(--mod2-secondary-channel, #993355)\",\n        primaryChannel: \"var(--mod2-primary-channel, #f04960)\",\n        secondaryNote: \"var(--mod2-secondary-note, #f057a0)\",\n        primaryNote: \"var(--mod2-primary-note, #ffb8de)\",\n    }, {\n        name: \"mod3\",\n        secondaryChannel: \"var(--mod3-secondary-channel, #553399)\",\n        primaryChannel: \"var(--mod3-primary-channel, #8855fc)\",\n        secondaryNote: \"var(--mod3-secondary-note, #aa64ff)\",\n        primaryNote: \"var(--mod3-primary-note, #f8ddff)\",\n    }, {\n        name: \"mod4\",\n        secondaryChannel: \"var(--mod4-secondary-channel, #a86436)\",\n        primaryChannel: \"var(--mod4-primary-channel, #c8a825)\",\n        secondaryNote: \"var(--mod4-secondary-note, #e8ba46)\",\n        primaryNote: \"var(--mod4-primary-note, #fff6d3)\",\n    },\n]);\nColorConfig._styleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\n//# sourceMappingURL=ColorConfig.js.map","import { toNameMap, TypePresets } from \"../synth/SynthConfig\";\nexport const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\nexport function prettyNumber(value) {\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\n}\nexport class EditorConfig {\n    static valueToPreset(presetValue) {\n        var _a;\n        const categoryIndex = presetValue >> 6;\n        const presetIndex = presetValue & 0x3F;\n        return (_a = EditorConfig.presetCategories[categoryIndex]) === null || _a === void 0 ? void 0 : _a.presets[presetIndex];\n    }\n    static midiProgramToPresetValue(program) {\n        for (let categoryIndex = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset = category.presets[presetIndex];\n                if (preset.generalMidi && preset.midiProgram == program)\n                    return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n    static nameToPresetValue(presetName) {\n        for (let categoryIndex = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset = category.presets[presetIndex];\n                if (preset.name == presetName)\n                    return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n    static instrumentToPreset(instrument) {\n        var _a;\n        return (_a = EditorConfig.presetCategories[0].presets.dictionary) === null || _a === void 0 ? void 0 : _a[TypePresets === null || TypePresets === void 0 ? void 0 : TypePresets[instrument]];\n    }\n}\nEditorConfig.version = \"1.4.7\";\nEditorConfig.versionDisplayName = \"Slarmoo's Box \" + EditorConfig.version;\nEditorConfig.releaseNotesURL = \"./patch_notes.html\";\nEditorConfig.isOnMac = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\nEditorConfig.ctrlSymbol = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\nEditorConfig.ctrlName = EditorConfig.isOnMac ? \"command\" : \"control\";\nEditorConfig.presetCategories = toNameMap([\n    {\n        name: \"Custom Instruments\", presets: toNameMap([\n            { name: TypePresets[0], customType: 0 },\n            { name: TypePresets[1], customType: 1 },\n            { name: TypePresets[2], customType: 2 },\n            { name: TypePresets[3], customType: 3 },\n            { name: TypePresets[4], customType: 4 },\n            { name: TypePresets[5], customType: 5 },\n            { name: TypePresets[6], customType: 6 },\n            { name: TypePresets[7], customType: 7 },\n            { name: TypePresets[8], customType: 8 },\n            { name: TypePresets[9], customType: 9 },\n            { name: TypePresets[11], customType: 11 },\n        ])\n    },\n    {\n        name: \"Retro Presets\", presets: toNameMap([\n            { name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"triangle\", \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"hum\", \"envelopes\": [] } },\n            { name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"shimmer\", \"envelopes\": [] } },\n            { name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }], \"effects\": [\"vibrato\", \"aliasing\"], \"vibrato\": \"light\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [] } },\n            { name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": [\"aliasing\"], \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\n            { name: \"supersaw lead\", midiProgram: 81, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 67, \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"pulseWidth\": 50, \"dynamism\": 100, \"spread\": 58, \"shape\": 0, \"envelopes\": [] } },\n            { name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n            { name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"20×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\n            { name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n            { name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"2×\", \"amplitude\": 11 }], \"envelopes\": [] } },\n            { name: \"FM sine\", midiProgram: 55, settings: { \"type\": \"FM\", \"eqFilter\": [], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"effects\": [], \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }], \"envelopes\": [] } },\n            { name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"vibrato\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\n            { name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\n            { name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\n            { name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\n            { name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\n            { name: \"Sunsoft Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [24, 24, 15, 15, 9, 9, -4, -4, 0, 0, -13, -13, -19, -19, -24, -24, -24, -24, -10, -10, 0, 0, -7, -7, -7, -7, 0, 0, 6, 6, -4, -4, 3, 3, -4, -4, 3, 3, 3, 3, 9, 9, 15, 15, 15, 15, 6, 6, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 12, 12, 24, 24] } },\n        ])\n    },\n    {\n        name: \"Keyboard Presets\", presets: toNameMap([\n            { name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n            { name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 1.4142 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 71, 71, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"envelopes\": [] } },\n            { name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"1/8 pulse\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n            { name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 43, 57, 57, 57, 43, 43, 43, 43], \"unison\": \"honky tonk\", \"stringSustain\": 71, \"envelopes\": [] } },\n            { name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n            { name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"16×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n            { name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 100, 86, 57, 86, 86, 86, 86, 57, 57, 71, 71, 86, 86, 71, 71, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71], \"unison\": \"none\", \"stringSustain\": 79, \"envelopes\": [] } },\n            { name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.3536 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"8×\", \"amplitude\": 4 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 2\" }] } },\n            { name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [] } },\n            { name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n            { name: \"grand piano 3\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 4 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 125, \"linearGain\": 0.0884 }], \"reverb\": 67, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 71, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"stringSustainType\": \"acoustic\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 1 }] } },\n        ])\n    },\n    {\n        name: \"Idiophone Presets\", presets: toNameMap([\n            { name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\n            { name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 193, \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"20×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0], \"unison\": \"none\", \"stringSustain\": 64, \"envelopes\": [] } },\n            { name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.7071 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"stringSustain\": 29, \"envelopes\": [] } },\n            { name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n            { name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 197, \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }], \"isDrum\": false } },\n            { name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 198, \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 7, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"20×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }], \"isDrum\": false } },\n            { name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\n            { name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"chord\": \"strum\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14], \"unison\": \"shimmer\", \"stringSustain\": 86, \"envelopes\": [] } },\n            { name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\n            { name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\n            { name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\n            { name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 205, \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 8, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Guitar Presets\", presets: toNameMap([\n            { name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n            { name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [] } },\n            { name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n            { name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\n            { name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\n        ])\n    },\n    {\n        name: \"Picked Bass Presets\", presets: toNameMap([\n            { name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\n            { name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\n            { name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\n            { name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\n            { name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\n            { name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n            { name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\n            { name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\n            { name: \"dubstep yoi yoi\", midiProgram: 87, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.7071 }], \"effects\": [\"note filter\", \"bitcrusher\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 594.6, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 1.5, \"bitcrusherQuantization\": 0, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"wave\": \"sawtooth\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"flare 2\", \"index\": 0 }] } },\n        ])\n    },\n    {\n        name: \"Picked String Presets\", presets: toNameMap([\n            { name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\n            { name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\n            { name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\n            { name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n            { name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n            { name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\n            { name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\n        ])\n    },\n    {\n        name: \"Distortion Presets\", presets: toNameMap([\n            { name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"distortion\": 71, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n            { name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 1 }], \"distortion\": 86, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n            { name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 1 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13 }, { \"frequency\": \"~1×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6 }, { \"frequency\": \"3×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12 }, { \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2 }, { \"frequency\": \"~1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 3 }] } },\n            { name: \"PWM overdrive\", midiProgram: 29, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1.4142 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 17.67767, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"punch\" }] } },\n            { name: \"PWM distortion\", midiProgram: 30, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 50, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"swell 1\" }] } },\n            { name: \"FM overdrive\", midiProgram: 29, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"~2×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"punch\" }] } },\n            { name: \"FM distortion\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"~2×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }] } },\n        ])\n    },\n    {\n        name: \"Bellows Presets\", presets: toNameMap([\n            { name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\n            { name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 515, \"effects\": [\"vibrato\", \"note filter\", \"chorus\", \"reverb\"], \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": true, \"noteSimpleCut\": 8, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.5 }], \"chorus\": 100, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"6×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n            { name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n            { name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\n            { name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\n            { name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\n            { name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\n        ])\n    },\n    {\n        name: \"String Presets\", presets: toNameMap([\n            { name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9 }, { \"frequency\": \"3×\", \"amplitude\": 9 }, { \"frequency\": \"2×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n            { name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.0884 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"6×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }] } },\n            { name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n            { name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n            { name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.1768 }], \"chorus\": 100, \"reverb\": 0, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"7×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 4, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n            { name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\n            { name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\n            { name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n            { name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\n            { name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\n            { name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 588, \"effects\": [\"vibrato\", \"note filter\", \"chorus\", \"reverb\"], \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": true, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"chorus\": 100, \"reverb\": 0, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"supersaw string\", midiProgram: 41, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }, { \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 500, \"linearGain\": 0.1768 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 6, \"pulseWidth\": 35.35534, \"dynamism\": 83, \"spread\": 8, \"shape\": 50, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }] } },\n            { name: \"supersaw string 2\", midiProgram: 41, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"chorus\": 57, \"reverb\": 42, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"pulseWidth\": 50, \"dynamism\": 67, \"spread\": 58, \"shape\": 0, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"pulseWidth\", \"envelope\": \"flare 2\" }] } },\n        ])\n    },\n    {\n        name: \"Vocal Presets\", presets: toNameMap([\n            { name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 24, \"harmonics\": [100, 100, 86, 57, 29, 29, 57, 71, 57, 29, 14, 14, 14, 29, 43, 57, 43, 29, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 8 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1.4142 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\n            { name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n            { name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 33, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"~1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"effects\": [\"note filter\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 6, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 4 }], \"reverb\": 0, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n            { name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\n            { name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\n            { name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\n        ])\n    },\n    {\n        name: \"Brass Presets\", presets: toNameMap([\n            { name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 5 }, { \"frequency\": \"9×\", \"amplitude\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n            { name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 1\" }] } },\n            { name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\n            { name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\n            { name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\n            { name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\n        ])\n    },\n    {\n        name: \"Reed Presets\", presets: toNameMap([\n            { name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n            { name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\n            { name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n            { name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n            { name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\n            { name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n            { name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n            { name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 778, \"effects\": [\"note filter\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"tremolo2\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Flute Presets\", presets: toNameMap([\n            { name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9656.85, \"linearGain\": 0.5 }], \"eqFilterType\": true, \"eqSimpleCut\": 9, \"eqSimplePeak\": 1, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 832, \"eqSubFilters1\": [], \"effects\": [\"reverb\"], \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 4, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 7, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n            { name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\n            { name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\n            { name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14], \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\n            { name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\n            { name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\n            { name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\n            { name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }], \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }] } },\n            { name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n        ])\n    },\n    {\n        name: \"Pad Presets\", presets: toNameMap([\n            { name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 4 }, { \"frequency\": \"6×\", \"amplitude\": 3 }, { \"frequency\": \"13×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 3\" }] } },\n            { name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }] } },\n            { name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"honky tonk\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n            { name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.1768 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 2 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n            { name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }] } },\n            { name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 9 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n            { name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 100, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n            { name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14], \"unison\": \"octave\", \"stringSustain\": 86, \"envelopes\": [] } },\n            { name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 3\" }] } },\n            { name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13 }, { \"frequency\": \"2×\", \"amplitude\": 10 }, { \"frequency\": \"5×\", \"amplitude\": 5 }, { \"frequency\": \"11×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo5\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }] } },\n            { name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 8 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"custom interval\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 15 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n            { name: \"supersaw pad\", midiProgram: 93, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }], \"effects\": [\"reverb\"], \"reverb\": 100, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 24, \"pulseWidth\": 50, \"dynamism\": 100, \"spread\": 58, \"shape\": 0, \"envelopes\": [] } },\n        ])\n    },\n    {\n        name: \"Drum Presets\", presets: toNameMap([\n            { name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\n            { name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"chorus\": 67, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14 }, { \"frequency\": \"7×\", \"amplitude\": 3 }, { \"frequency\": \"3×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 3 }] } },\n            { name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12 }, { \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\n            { name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"effects\": [\"pitch shift\", \"note filter\", \"reverb\"], \"pitchShiftSemitones\": 15, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }] } },\n            { name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n            { name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\n            { name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\n            { name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n            { name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n            { name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\n            { name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\n            { name: \"synth kick\", midiProgram: 47, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n        ])\n    },\n    {\n        name: \"Novelty Presets\", presets: toNameMap([\n            { name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n            { name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n            { name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }] } },\n            { name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n            { name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\n            { name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\n            { name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"chord type\", \"vibrato\", \"reverb\"], \"chord\": \"strum\", \"vibrato\": \"heavy\", \"reverb\": 67, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay 1\" }] } },\n            { name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 4 }, { \"frequency\": \"20×\", \"amplitude\": 1 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo4\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 1 }] } },\n            { name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\n            { name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\n            { name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\n            { name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"double saw\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }] } },\n            { name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"11×\", \"amplitude\": 12 }], \"envelopes\": [] } },\n            { name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"shaky\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"pulseWidth\": 4.41942, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"tremolo6\" }] } },\n            { name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\n            { name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\n            { name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.7071 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"heavy\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n        ])\n    },\n    {\n        name: \"UltraBox Presets\", presets: toNameMap([\n            { name: \"nes white\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [], \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit white\", \"envelopes\": [] } },\n            { name: \"nes ping\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [], \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit metallic\", \"envelopes\": [] } },\n            { name: \"distorted pulse vocal\", generalMidi: false, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }], \"effects\": [\"transition type\", \"pitch shift\", \"vibrato\", \"note filter\", \"bitcrusher\", \"echo\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"echoSustain\": 14, \"echoDelayBeats\": 0.167, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"1/8 pulse\", \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"dubstep bwah\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"transition type\", \"chord type\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }] } },\n            { name: \"FM cool bass\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 }], \"effects\": [\"transition type\", \"note filter\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\n            { name: \"FM funky bass\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.1768 }], \"eqFilterType\": true, \"eqSimpleCut\": 5, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" }] } },\n            { name: \"talking bass\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chord type\"], \"chord\": \"custom interval\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"2×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"note size\" }] } },\n            { name: \"synth marimba\", generalMidi: false, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 176.78, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"echo\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 }], \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"harmonics\": [86, 100, 29, 29, 0, 0, 0, 100, 0, 0, 0, 86, 29, 0, 14, 100, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 86], \"unison\": \"fifth\", \"stringSustain\": 7, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }] } },\n            { name: \"italian accordian\", generalMidi: false, settings: { \"type\": \"custom chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6000, \"linearGain\": 0.5 }], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 1, \"eqSubFilters1\": [], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 71, \"reverb\": 45, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"honky tonk\", \"customChipWave\": { \"0\": -24, \"1\": -24, \"2\": -24, \"3\": -24, \"4\": -24, \"5\": -24, \"6\": -24, \"7\": -24, \"8\": -24, \"9\": -24, \"10\": -24, \"11\": -24, \"12\": -24, \"13\": -24, \"14\": -24, \"15\": -24, \"16\": 24, \"17\": 24, \"18\": 24, \"19\": 24, \"20\": 24, \"21\": 24, \"22\": 24, \"23\": 24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": -24, \"32\": -24, \"33\": -24, \"34\": -24, \"35\": -24, \"36\": -24, \"37\": -24, \"38\": -24, \"39\": -24, \"40\": 24, \"41\": 24, \"42\": 24, \"43\": 24, \"44\": 24, \"45\": 24, \"46\": 24, \"47\": 24, \"48\": -24, \"49\": -24, \"50\": -24, \"51\": -24, \"52\": -24, \"53\": -24, \"54\": -24, \"55\": -24, \"56\": -24, \"57\": -24, \"58\": -24, \"59\": -24, \"60\": -24, \"61\": -24, \"62\": -24, \"63\": -24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n            { name: \"chip supersaw\", generalMidi: false, settings: { \"type\": \"custom chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"vibrato\", \"chorus\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"chorus\": 29, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"dissonant\", \"customChipWave\": { \"0\": 22, \"1\": 22, \"2\": 16, \"3\": 6, \"4\": 0, \"5\": -3, \"6\": -8, \"7\": -10, \"8\": -13, \"9\": -16, \"10\": -19, \"11\": -19, \"12\": -20, \"13\": -22, \"14\": -22, \"15\": -24, \"16\": -24, \"17\": -24, \"18\": -24, \"19\": -24, \"20\": -24, \"21\": -24, \"22\": -24, \"23\": -24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": 24, \"32\": 24, \"33\": 16, \"34\": 9, \"35\": 6, \"36\": 4, \"37\": 2, \"38\": 0, \"39\": -1, \"40\": -3, \"41\": -4, \"42\": -4, \"43\": -6, \"44\": -6, \"45\": -6, \"46\": -6, \"47\": -5, \"48\": -5, \"49\": -4, \"50\": -2, \"51\": -2, \"52\": 1, \"53\": 4, \"54\": 6, \"55\": 8, \"56\": 10, \"57\": 12, \"58\": 14, \"59\": 16, \"60\": 18, \"61\": 19, \"62\": 22, \"63\": 24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n            { name: \"fm supersaw\", generalMidi: false, settings: { \"type\": \"FM6op\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }], \"effects\": [\"transition type\", \"pitch shift\", \"note filter\", \"chorus\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"chorus\": 71, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4 5 6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 10, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 7, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 6, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }], \"envelopes\": [] } },\n            { name: \"wind\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 250.03, \"linearGain\": 11.3137 }], \"eqFilterType\": true, \"eqSimpleCut\": 0, \"eqSimplePeak\": 7, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [] } },\n            { name: \"mrow\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [], \"effects\": [\"chord type\", \"reverb\"], \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"reverb\": 35, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\n            { name: \"vocal why\", generalMidi: false, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"harmonics\": [100, 86, 29, 29, 14, 14, 0, 14, 14, 43, 71, 100, 100, 86, 71, 71, 57, 57, 43, 43, 43, 43, 43, 0, 0, 0, 0, 0], \"unison\": \"octave\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Presets\", presets: toNameMap([\n            { name: \"radio fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.3536 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.3536 }], \"effects\": [\"detune\", \"vibrato\", \"bitcrusher\", \"reverb\"], \"detuneCents\": 0, \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 43, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 6, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.12×\", \"amplitude\": 7, \"waveform\": \"trapezoid\", \"pulseWidth\": 5 }, { \"frequency\": \"0.5×\", \"amplitude\": 10, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"anguished underworld\", generalMidi: false, settings: { \"type\": \"FM6op\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\", \"bitcrusher\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"distortion\": 43, \"aliases\": false, \"bitcrusherOctave\": 4.5, \"bitcrusherQuantization\": 43, \"reverb\": 0, \"fadeInSeconds\": 0.075, \"fadeOutTicks\": 6, \"algorithm\": \"1 2←4 3←(5 6)\", \"feedbackType\": \"1→5 2→6 3→4\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"0.25×\", \"amplitude\": 14, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"0.5×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12, \"waveform\": \"trapezoid\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.75×\", \"amplitude\": 3, \"waveform\": \"ramp\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"decay -1\", \"index\": 5 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"wibble 3\" }], \"isDrum\": false } },\n            { name: \"faint sorrow\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4240.89, \"linearGain\": 2 }], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 4, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"detune\", \"vibrato\", \"echo\", \"reverb\"], \"detuneCents\": 22, \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"echoSustain\": 100, \"echoDelayBeats\": 0.667, \"reverb\": 87, \"fadeInSeconds\": 0.075, \"fadeOutTicks\": 48, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"bright sorrow fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [], \"effects\": [\"chord type\", \"note filter\", \"echo\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 1.4142 }], \"echoSustain\": 71, \"echoDelayBeats\": 1.333, \"reverb\": 61, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"wet sorrow fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"reverb\": 23, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"decay 3\", \"index\": 2 }], \"isDrum\": false } },\n            { name: \"scream fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.7071 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.7071 }], \"effects\": [\"detune\", \"note filter\", \"distortion\", \"reverb\"], \"detuneCents\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.125 }, { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 11.3137 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.125 }, { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 11.3137 }], \"distortion\": 0, \"aliases\": false, \"reverb\": 87, \"fadeInSeconds\": 0.135, \"fadeOutTicks\": -3, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 11, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"7×\", \"amplitude\": 5, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"swell 1\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"tremolo4\" }], \"isDrum\": false } },\n            { name: \"anguished radio fm pad\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }], \"eqSubFilters4\": [], \"effects\": [\"detune\", \"note filter\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"detuneCents\": -16, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 11.3137 }], \"noteSubFilters2\": [{ \"type\": \"low-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 11.3137 }], \"noteSubFilters4\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 43, \"chorus\": 29, \"echoSustain\": 43, \"echoDelayBeats\": 1, \"reverb\": 58, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1→3\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"juicy kick\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"effects\": [], \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"20×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }], \"isDrum\": false } },\n            { name: \"good vibes supersaw\", generalMidi: false, settings: { \"type\": \"supersaw\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 6, \"discreteEnvelope\": false, \"pitchEnvelopeStart\": 37, \"pitchEnvelopeEnd\": 96, \"pitchEnvelopeInverse\": true, \"eqSubFilters0\": [], \"effects\": [\"transition type\", \"detune\", \"chorus\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"detuneCents\": 30, \"chorus\": 14, \"reverb\": 23, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"pulseWidth\": 26, \"decimalOffset\": 0, \"dynamism\": 33, \"spread\": 33, \"shape\": 17, \"envelopes\": [{ \"target\": \"supersawShape\", \"envelope\": \"pitch\" }, { \"target\": \"detune\", \"envelope\": \"tremolo2\" }], \"isDrum\": false } },\n            { name: \"ethereal\", generalMidi: false, isNoise: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1.4142 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 4, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1.4142 }], \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"chord type\", \"pitch shift\", \"detune\", \"vibrato\", \"note filter\", \"bitcrusher\", \"chorus\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"chord\": \"simultaneous\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pitchShiftSemitones\": 12, \"detuneCents\": 36, \"vibrato\": \"custom\", \"vibratoDepth\": 0.12, \"vibratoDelay\": 36, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.7071 }], \"noteSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.7071 }], \"bitcrusherOctave\": 4.5, \"bitcrusherQuantization\": 43, \"chorus\": 71, \"reverb\": 100, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"spectrum\": [43, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 57, 0, 43, 0, 43, 0, 0, 29, 0, 29, 0, 14, 14, 14, 0, 0], \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"pitchEnvelopeStart2\": 0, \"pitchEnvelopeEnd2\": 96, \"envelopeInverse2\": false, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"detune\", \"envelope\": \"tremolo3\" }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\" }], \"isDrum\": false } },\n            { name: \"walrus wuh\", generalMidi: false, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"pitchEnvelopeInverse\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"bitcrusher\", \"chorus\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.125 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.125 }], \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 71, \"chorus\": 86, \"reverb\": 32, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 48, \"pulseWidth\": 50, \"decimalOffset\": 0, \"dynamism\": 100, \"spread\": 50, \"shape\": 0, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"decay 3\" }], \"isDrum\": false } },\n            { name: \"saturnic\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4240.89, \"linearGain\": 2 }], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 4, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"vibrato\", \"chorus\", \"echo\", \"reverb\"], \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"chorus\": 100, \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"reverb\": 45, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"glassy harmonics\", generalMidi: false, settings: { \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"detune\", \"note filter\", \"chorus\", \"reverb\"], \"detuneCents\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"chorus\": 14, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"harmonics\": [100, 0, 43, 29, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 14, 29, 14, 0, 14, 0, 0, 0, 0, 100, 0, 0, 14, 0], \"unison\": \"none\", \"envelopes\": [], \"isDrum\": false } },\n            { name: \"plucked\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }], \"effects\": [\"transition type\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"echoSustain\": 100, \"echoDelayBeats\": 1.333, \"reverb\": 26, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"harmonics\": [100, 86, 57, 0, 0, 57, 57, 57, 86, 57, 57, 43, 43, 43, 29, 29, 14, 14, 29, 14, 14, 14, 29, 100, 57, 43, 14, 14], \"unison\": \"none\", \"stringSustain\": 14, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"spectrum wind\", generalMidi: false, isNoise: true, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 1.4142 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 1.4142 }], \"reverb\": 87, \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"spectrum\": [29, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 14, 57, 14, 0, 57, 57, 0, 0, 57, 0, 71, 14, 29, 100, 71, 0, 100, 14, 86], \"unison\": \"none\", \"envelopes\": [], \"isDrum\": true } },\n            { name: \"hi-hat\", generalMidi: false, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqSubFilters2\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqSubFilters3\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"effects\": [], \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"white\", \"unison\": \"none\", \"envelopes\": [], \"isDrum\": true } },\n            { name: \"jungle bass\", generalMidi: false, isNoise: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 0.0884 }], \"effects\": [\"vibrato\", \"note filter\", \"chorus\", \"reverb\"], \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 0.0884 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 0.0884 }], \"chorus\": 14, \"reverb\": 3, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1↔2 3↔4\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"pitchEnvelopeStart2\": 12, \"pitchEnvelopeEnd2\": 28, \"envelopeInverse2\": false, \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"swell 3\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"pitch\", \"index\": 0 }], \"isDrum\": false } },\n            { name: \"beach tide\", generalMidi: false, isNoise: false, settings: { \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 0.0884 }], \"effects\": [\"transition type\", \"chord type\", \"note filter\", \"chorus\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"chord\": \"simultaneous\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.1768 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.1768 }], \"chorus\": 14, \"reverb\": 32, \"fadeInSeconds\": 0.0938, \"fadeOutTicks\": 72, \"harmonics\": [86, 86, 71, 57, 57, 43, 43, 43, 29, 29, 14, 14, 14, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"pitch\" }], \"isDrum\": false } },\n            { name: \"starlight\", generalMidi: false, isNoise: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }], \"effects\": [\"transition type\", \"vibrato\", \"bitcrusher\", \"echo\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 29, \"echoSustain\": 29, \"echoDelayBeats\": 1, \"reverb\": 13, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"distant monument\", generalMidi: false, isNoise: false, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 210.22, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 5.6569 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 210.22, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 5.6569 }], \"effects\": [\"transition type\", \"chord type\", \"detune\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"chord\": \"strum\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"detuneCents\": 24, \"bitcrusherOctave\": 2.5, \"bitcrusherQuantization\": 14, \"chorus\": 86, \"echoSustain\": 71, \"echoDelayBeats\": 1, \"reverb\": 35, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"wave\": \"modbox pnryshk a (u5)\", \"unison\": \"detune\", \"isUsingAdvancedLoopControls\": false, \"chipWaveLoopStart\": 0, \"chipWaveLoopEnd\": 11, \"chipWaveLoopMode\": 0, \"chipWavePlayBackwards\": false, \"chipWaveStartOffset\": 0, \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 1\" }], \"isDrum\": false } },\n            { name: \"mercurial\", generalMidi: false, isNoise: false, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.1768 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.1768 }], \"eqSubFilters1\": [], \"effects\": [\"distortion\", \"chorus\"], \"distortion\": 43, \"aliases\": false, \"chorus\": 43, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"Custom\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 8, \"customAlgorithm\": { \"mods\": [[3], [5], [4], [], [6], []], \"carrierCount\": 2 }, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.5×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorFrequency\", \"envelope\": \"linear\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"distortion\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 20, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"air hiss\", generalMidi: false, isNoise: true, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"eqFilterType\": true, \"eqSimpleCut\": 7, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.3536 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.3536 }], \"distortion\": 71, \"aliases\": false, \"reverb\": 6, \"fadeInSeconds\": 0, \"fadeOutTicks\": -24, \"spectrum\": [57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 57, 71, 86, 100, 100, 100, 100, 86, 71, 71, 43], \"unison\": \"none\", \"envelopes\": [], \"isDrum\": true } },\n            { name: \"spectral phaser\", generalMidi: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 10, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"note filter\", \"distortion\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 0.1768 }], \"noteSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 0.1768 }], \"distortion\": 14, \"aliases\": false, \"bitcrusherOctave\": 6, \"bitcrusherQuantization\": 14, \"chorus\": 100, \"echoSustain\": 86, \"echoDelayBeats\": 1, \"reverb\": 32, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"spectrum\": [86, 0, 0, 0, 57, 0, 0, 71, 0, 0, 0, 86, 0, 0, 57, 0, 43, 0, 43, 0, 0, 43, 0, 29, 0, 29, 14, 14, 29, 14], \"unison\": \"piano\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.07, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.06, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.05, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.04, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.09, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 4 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.08, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 5 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 6 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.03, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 7 }, { \"target\": \"distortion\", \"envelope\": \"none\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 0.3 }], \"isDrum\": false } },\n            { name: \"shaker\", generalMidi: false, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4000, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 6, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4000, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 0.25 }], \"effects\": [\"transition type\", \"detune\", \"distortion\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"detuneCents\": 30, \"distortion\": 43, \"aliases\": false, \"bitcrusherOctave\": 2.5, \"bitcrusherQuantization\": 43, \"chorus\": 43, \"echoSustain\": 29, \"echoDelayBeats\": 1, \"reverb\": 23, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 96, \"wave\": \"deep\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"tremolo2\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"flare\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 12, \"inverse\": false, \"perEnvelopeSpeed\": 64, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": true } },\n            { name: \"distant sorrow\", generalMidi: false, settings: { \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.5 }], \"effects\": [\"transition type\", \"detune\", \"vibrato\", \"note filter\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"detuneCents\": 0, \"vibrato\": \"custom\", \"vibratoDepth\": 0.2, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }], \"echoSustain\": 100, \"echoDelayBeats\": 1, \"reverb\": 74, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"harmonics\": [86, 71, 57, 43, 43, 29, 57, 0, 14, 0, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 57, 57, 57, 0, 57, 57, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"fall\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2.5, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 2 }], \"isDrum\": false } },\n            { name: \"metallic kick\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 28, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"effects\": [], \"panDelay\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"256x\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"128x\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"256x\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 16, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 3.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }], \"isDrum\": false } },\n            { name: \"chimes\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }], \"effects\": [\"chord type\", \"detune\", \"note filter\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"detuneCents\": 24, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 1 }], \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 29, \"panDelay\": 0, \"chorus\": 29, \"echoSustain\": 86, \"echoDelayBeats\": 0.667, \"reverb\": 84, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"harmonics\": [0, 100, 71, 71, 29, 0, 57, 86, 0, 0, 0, 0, 71, 29, 0, 0, 57, 0, 0, 86, 0, 0, 0, 100, 0, 100, 0, 57], \"unison\": \"none\", \"stringSustain\": 36, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 4.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"stringSustain\", \"envelope\": \"random\", \"inverse\": false, \"perEnvelopeSpeed\": 16, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 1, \"steps\": 14, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"detune\", \"envelope\": \"pitch\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96 }], \"isDrum\": false } },\n            { name: \"supersaw bass\", generalMidi: false, settings: { \"type\": \"supersaw\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\", \"chorus\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"distortion\": 14, \"aliases\": false, \"chorus\": 29, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"pulseWidth\": 50, \"decimalOffset\": 0, \"dynamism\": 100, \"spread\": 67, \"shape\": 0, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"ascension\", generalMidi: false, isNoise: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }], \"eqSubFilters1\": [], \"effects\": [\"granular\", \"chorus\", \"reverb\"], \"granular\": 7, \"grainSize\": 44, \"grainAmounts\": 9, \"grainRange\": 37, \"chorus\": 71, \"reverb\": 19, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"spectrum\": [43, 0, 0, 57, 0, 0, 14, 100, 29, 0, 0, 100, 29, 0, 100, 0, 57, 29, 86, 14, 14, 100, 14, 0, 14, 14, 0, 0, 43, 0], \"unison\": \"voiced\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 0.7, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"panning\", \"envelope\": \"lfo\", \"inverse\": false, \"perEnvelopeSpeed\": 0.3, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false, \"waveform\": 2, \"steps\": 6 }], \"isDrum\": false } },\n            { name: \"liminal\", generalMidi: false, isNoise: false, settings: { \"type\": \"supersaw\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"detune\", \"vibrato\", \"note filter\", \"granular\", \"distortion\", \"bitcrusher\", \"chorus\", \"reverb\"], \"detuneCents\": 8, \"vibrato\": \"custom\", \"vibratoDepth\": 0.48, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2196.8, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2196.8, \"linearGain\": 1 }], \"granular\": 6, \"grainSize\": 49, \"grainAmounts\": 10, \"grainRange\": 40, \"distortion\": 57, \"aliases\": false, \"bitcrusherOctave\": 5, \"bitcrusherQuantization\": 0, \"chorus\": 29, \"reverb\": 48, \"fadeInSeconds\": 0, \"fadeOutTicks\": 72, \"pulseWidth\": 30, \"decimalOffset\": 0, \"dynamism\": 17, \"spread\": 83, \"shape\": 67, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 17, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"pulseWidth\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 1.3333, \"perEnvelopeLowerBound\": 0.1, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"distortion\", \"envelope\": \"random\", \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0.2, \"perEnvelopeUpperBound\": 1, \"discrete\": true, \"steps\": 8, \"seed\": 2, \"waveform\": 2 }, { \"target\": \"panning\", \"envelope\": \"lfo\", \"inverse\": false, \"perEnvelopeSpeed\": 0.3333, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false, \"waveform\": 2, \"steps\": 2 }, { \"target\": \"noteVolume\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 18, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"granular\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Chip Presets\", presets: toNameMap([\n            { name: \"Slarmoo's Pulse\", midiProgram: 80, settings: { \"type\": \"PWM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [], \"effects\": [\"transition type\", \"chord type\", \"detune\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 8, \"detuneCents\": 24, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"pulseWidth\": 50, \"decimalOffset\": 0, \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"pitch\" }], \"isDrum\": false } },\n            { name: \"discovery square\", midiProgram: 80, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"bitcrusher\"], \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 57, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"octave\", \"isUsingAdvancedLoopControls\": false, \"chipWaveLoopStart\": 0, \"chipWaveLoopEnd\": 2, \"chipWaveLoopMode\": 0, \"chipWavePlayBackwards\": false, \"chipWaveStartOffset\": 0, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"VRC6 Sawtooth alt\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.5 }], \"effects\": [\"transition type\", \"chord type\", \"pitch shift\", \"detune\", \"vibrato\", \"distortion\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"pitchShiftSemitones\": 12, \"detuneCents\": 0, \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"distortion\": 0, \"aliases\": false, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"none\", \"customChipWave\": { \"0\": -1, \"1\": -1, \"2\": -1, \"3\": -1, \"4\": -1, \"5\": -1, \"6\": -1, \"7\": -1, \"8\": -1, \"9\": -5, \"10\": -5, \"11\": -5, \"12\": -4, \"13\": -4, \"14\": -4, \"15\": -3, \"16\": -3, \"17\": -3, \"18\": -7, \"19\": -7, \"20\": -6, \"21\": -6, \"22\": -5, \"23\": -5, \"24\": -4, \"25\": -4, \"26\": -4, \"27\": -7, \"28\": -7, \"29\": -6, \"30\": -6, \"31\": -5, \"32\": -5, \"33\": -4, \"34\": -4, \"35\": -4, \"36\": -8, \"37\": -8, \"38\": -7, \"39\": -7, \"40\": -6, \"41\": -6, \"42\": -5, \"43\": -5, \"44\": -4, \"45\": -4, \"46\": 21, \"47\": 20, \"48\": 18, \"49\": 17, \"50\": 16, \"51\": 14, \"52\": 13, \"53\": 12, \"54\": 11, \"55\": 7, \"56\": 6, \"57\": 6, \"58\": 5, \"59\": 5, \"60\": 5, \"61\": 4, \"62\": 4, \"63\": 4 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"pulse arps\", midiProgram: 80, settings: { \"type\": \"PWM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.125 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 7, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.125 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"effects\": [\"transition type\", \"chord type\", \"detune\", \"chorus\", \"echo\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 8, \"detuneCents\": 64, \"chorus\": 43, \"echoSustain\": 71, \"echoDelayBeats\": 0.333, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"pulseWidth\": 50, \"decimalOffset\": 0, \"unison\": \"none\", \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"pitch\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96 }, { \"target\": \"pulseWidth\", \"envelope\": \"pitch\", \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"pitchEnvelopeStart\": 24, \"pitchEnvelopeEnd\": 83 }, { \"target\": \"panning\", \"envelope\": \"lfo\", \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"waveform\": 0, \"steps\": 2 }, { \"target\": \"noteVolume\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"chorus\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Instrumental Presets\", presets: toNameMap([\n            { name: \"rusty flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 13454.34, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 13454.34, \"linearGain\": 2.8284 }], \"effects\": [\"transition type\", \"detune\", \"distortion\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"detuneCents\": -7, \"distortion\": 14, \"aliases\": false, \"reverb\": 100, \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 4, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"20×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"bitcrushed piano\", midiProgram: 4, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.5 }], \"effects\": [\"transition type\", \"detune\", \"distortion\", \"bitcrusher\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"detuneCents\": 0, \"distortion\": 29, \"aliases\": true, \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 43, \"panDelay\": 0, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"triangle\", \"unison\": \"none\", \"isUsingAdvancedLoopControls\": true, \"chipWaveLoopStart\": 0, \"chipWaveLoopEnd\": 32, \"chipWaveLoopMode\": 0, \"chipWavePlayBackwards\": false, \"chipWaveStartOffset\": 0, \"envelopes\": [{ \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0.6, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n            { name: \"detuned piano\", midiProgram: 3, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }], \"effects\": [\"transition type\", \"detune\", \"vibrato\", \"note filter\", \"bitcrusher\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"detuneCents\": 44, \"vibrato\": \"custom\", \"vibratoDepth\": 0.04, \"vibratoDelay\": 13, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }], \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 14, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"harmonics\": [86, 86, 71, 71, 57, 57, 43, 29, 14, 29, 29, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 14, 14, 0, 0, 0], \"unison\": \"custom\", \"unisonVoices\": 2, \"unisonSpread\": 0.26, \"unisonOffset\": 0, \"unisonExpression\": 1, \"unisonSign\": 1, \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"random\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 49, \"waveform\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1.6667, \"perEnvelopeLowerBound\": 0.4, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"unison\", \"envelope\": \"random\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 20, \"waveform\": 1 }, { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"pitch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }], \"isDrum\": false } },\n            { name: \"pan flute 2\", midiProgram: 75, isNoise: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"effects\": [\"transition type\", \"note filter\", \"bitcrusher\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"bitcrusherOctave\": 6, \"bitcrusherQuantization\": 57, \"reverb\": 16, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -6, \"spectrum\": [100, 29, 14, 14, 57, 0, 0, 71, 0, 86, 57, 43, 57, 71, 14, 29, 14, 14, 14, 100, 71, 14, 14, 14, 14, 86, 43, 14, 0, 0], \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"pitchEnvelopeStart2\": 0, \"pitchEnvelopeEnd2\": 96, \"envelopeInverse2\": false, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" }], \"isDrum\": false } },\n            { name: \"trumpet 2\", midiProgram: 56, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3049.17, \"linearGain\": 1.4142 }], \"eqFilterType\": true, \"eqSimpleCut\": 7, \"eqSimplePeak\": 3, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"detune\", \"vibrato\", \"note filter\", \"distortion\", \"chorus\", \"reverb\"], \"detuneCents\": -64, \"vibrato\": \"custom\", \"vibratoDepth\": 0.68, \"vibratoDelay\": 17, \"vibratoSpeed\": 12, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"distortion\": 29, \"aliases\": false, \"chorus\": 14, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"0.75×\", \"amplitude\": 14, \"waveform\": \"pulse width\", \"pulseWidth\": 2 }, { \"frequency\": \"1×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"flare\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorFrequency\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 128, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"detune\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"harp 2\", midiProgram: 46, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"eqSubFilters1\": [], \"effects\": [\"detune\", \"note filter\", \"echo\", \"reverb\"], \"detuneCents\": -23, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 105.11, \"linearGain\": 2.8284 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 105.11, \"linearGain\": 2.8284 }], \"echoSustain\": 29, \"echoDelayBeats\": 1.083, \"reverb\": 74, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←4 2←5 3←6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"6×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 4, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorFrequency\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"detune\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 7, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo2\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 4 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0.4, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"electric guitar 1\", midiProgram: 30, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"effects\": [\"chord type\", \"vibrato\", \"note filter\", \"distortion\", \"reverb\"], \"chord\": \"monophonic\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"monoChordTone\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 4 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 4 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 1 }], \"distortion\": 100, \"aliases\": false, \"panDelay\": 0, \"reverb\": 6, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 0, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.25×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"vibratoDepth\", \"envelope\": \"rise\", \"inverse\": false, \"perEnvelopeSpeed\": 9, \"perEnvelopeLowerBound\": 1, \"perEnvelopeUpperBound\": 2, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"distortion\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n            { name: \"electric guitar 2\", midiProgram: 30, settings: { \"type\": \"PWM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 2 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 2 }], \"effects\": [\"chord type\", \"vibrato\", \"note filter\", \"distortion\", \"bitcrusher\", \"chorus\", \"reverb\"], \"chord\": \"monophonic\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"monoChordTone\": 0, \"vibrato\": \"custom\", \"vibratoDepth\": 0.68, \"vibratoDelay\": 22, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }], \"distortion\": 43, \"aliases\": false, \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"panDelay\": 0, \"chorus\": 14, \"reverb\": 13, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"pulseWidth\": 50, \"decimalOffset\": 0, \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"rise\", \"inverse\": false, \"perEnvelopeSpeed\": 0.3333, \"perEnvelopeLowerBound\": 0.8, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"pulseWidth\", \"envelope\": \"twang\", \"inverse\": true, \"perEnvelopeSpeed\": 2.25, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 0.9, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Novelty Presets\", presets: toNameMap([\n            { name: \"bitcrushed artifacts\", generalMidi: false, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9656.85, \"linearGain\": 0.5 }], \"eqFilterType\": true, \"eqSimpleCut\": 9, \"eqSimplePeak\": 1, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"distortion\", \"bitcrusher\", \"echo\"], \"distortion\": 71, \"aliases\": false, \"bitcrusherOctave\": 2, \"bitcrusherQuantization\": 86, \"echoSustain\": 0, \"echoDelayBeats\": 1, \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 100, 43, 0, 0, 14, 86, 0, 14, 0, 0, 0, 0, 0, 86], \"unison\": \"none\", \"stringSustain\": 14, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"whistle 2\", midiProgram: 78, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2110.37, \"linearGain\": 1.4142 }], \"eqFilterType\": true, \"eqSimpleCut\": 6, \"eqSimplePeak\": 3, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"pitch shift\", \"note filter\", \"distortion\", \"echo\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 11, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 4 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 4 }], \"distortion\": 43, \"aliases\": false, \"echoSustain\": 57, \"echoDelayBeats\": 1.083, \"reverb\": 87, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -1, \"harmonics\": [57, 0, 0, 0, 0, 0, 0, 0, 0, 86, 57, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 57, 29, 0, 29, 100, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"pitchShift\", \"envelope\": \"decay 1\" }], \"isDrum\": false } },\n            { name: \"frog wuh\", generalMidi: false, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 8 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.125 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 8 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.125 }], \"eqSubFilters1\": [], \"effects\": [\"pitch shift\", \"note filter\"], \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 1 }], \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"spectrum\": [100, 29, 14, 29, 0, 14, 0, 71, 0, 43, 14, 71, 0, 0, 71, 14, 100, 0, 71, 0, 43, 86, 43, 0, 43, 0, 0, 43, 29, 29], \"envelopes\": [{ \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }, { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }], \"isDrum\": false } },\n            { name: \"stationary harmonics\", generalMidi: false, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.5 }], \"effects\": [\"transition type\", \"chord type\", \"vibrato\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"chord\": \"simultaneous\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"vibrato\": \"shaky\", \"vibratoDepth\": 0.1, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 1, \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"harmonics\": [100, 0, 57, 29, 14, 57, 29, 29, 14, 14, 29, 43, 14, 14, 14, 0, 14, 29, 29, 14, 0, 0, 14, 0, 0, 29, 14, 14], \"unison\": \"stationary\", \"envelopes\": [], \"isDrum\": false } },\n            { name: \"dead souls\", generalMidi: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 1.4142 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": true, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 1.4142 }], \"effects\": [\"transition type\", \"chord type\", \"pitch shift\", \"detune\", \"distortion\", \"chorus\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pitchShiftSemitones\": 24, \"detuneCents\": -200, \"distortion\": 100, \"aliases\": false, \"chorus\": 14, \"reverb\": 35, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"spectrum\": [100, 71, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 14, 14, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"pitchShift\", \"envelope\": \"random\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 24, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1.2, \"steps\": 16, \"seed\": 37, \"waveform\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"detune\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"distortion\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }], \"isDrum\": false } },\n            { name: \"flutter\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 2.8284 }], \"effects\": [\"transition type\", \"chorus\", \"reverb\", \"ring mod\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"ringMod\": 100, \"ringModHz\": 100, \"ringModWaveformIndex\": 0, \"panDelay\": 0, \"chorus\": 14, \"reverb\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"ringModulationHz\", \"envelope\": \"fall\", \"inverse\": false, \"perEnvelopeSpeed\": 1.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1.9 }, { \"target\": \"noteVolume\", \"envelope\": \"blip\", \"inverse\": false, \"perEnvelopeSpeed\": 0.25, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"vinyl\", generalMidi: false, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 0.25 }], \"effects\": [\"transition type\", \"note filter\", \"distortion\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.5 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.5 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"distortion\": 14, \"aliases\": false, \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 14, \"chorus\": 29, \"echoSustain\": 14, \"echoDelayBeats\": 0.083, \"reverb\": 32, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"wave\": \"crackling\", \"unison\": \"none\", \"envelopes\": [], \"isDrum\": false } },\n        ])\n    }\n]);\n//# sourceMappingURL=EditorConfig.js.map","export function scaleElementsByFactor(array, factor) {\n    for (let i = 0; i < array.length; i++) {\n        array[i] *= factor;\n    }\n}\nfunction isPowerOf2(n) {\n    return !!n && !(n & (n - 1));\n}\nfunction countBits(n) {\n    if (!isPowerOf2(n))\n        throw new Error(\"FFT array length must be a power of 2.\");\n    return Math.round(Math.log(n) / Math.log(2));\n}\nfunction reverseIndexBits(array, fullArrayLength) {\n    const bitCount = countBits(fullArrayLength);\n    if (bitCount > 16)\n        throw new Error(\"FFT array length must not be greater than 2^16.\");\n    const finalShift = 16 - bitCount;\n    for (let i = 0; i < fullArrayLength; i++) {\n        let j;\n        j = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\n        j = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\n        j = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\n        j = ((j >> 8) | ((j & 0xff) << 8)) >> finalShift;\n        if (j > i) {\n            let temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    }\n}\nexport function discreteFourierTransform(realArray, imagArray) {\n    const fullArrayLength = realArray.length;\n    if (fullArrayLength != imagArray.length)\n        throw new Error(\"FFT arrays must be the same length.\");\n    const realOut = [];\n    const imagOut = [];\n    for (let i = 0; i < fullArrayLength; i++) {\n        realOut[i] = 0.0;\n        imagOut[i] = 0.0;\n        for (let j = 0; j < fullArrayLength; j++) {\n            const radians = -6.2831853 * j * i / fullArrayLength;\n            const c = Math.cos(radians);\n            const s = Math.sin(radians);\n            realOut[i] += realArray[j] * c - imagArray[j] * s;\n            imagOut[i] += realArray[j] * s + imagArray[j] * c;\n        }\n    }\n    return [realOut, imagOut];\n}\nexport function fastFourierTransform(realArray, imagArray) {\n    const fullArrayLength = realArray.length;\n    if (!isPowerOf2(fullArrayLength))\n        throw new Error(\"FFT array length must be a power of 2.\");\n    if (fullArrayLength < 4)\n        throw new Error(\"FFT array length must be at least 4.\");\n    if (fullArrayLength != imagArray.length)\n        throw new Error(\"FFT arrays must be the same length.\");\n    reverseIndexBits(realArray, fullArrayLength);\n    reverseIndexBits(imagArray, fullArrayLength);\n    for (let startIndex = 0; startIndex < fullArrayLength; startIndex += 4) {\n        const startIndex1 = startIndex + 1;\n        const startIndex2 = startIndex + 2;\n        const startIndex3 = startIndex + 3;\n        const real0 = realArray[startIndex];\n        const real1 = realArray[startIndex1];\n        const real2 = realArray[startIndex2];\n        const real3 = realArray[startIndex3];\n        const imag0 = imagArray[startIndex];\n        const imag1 = imagArray[startIndex1];\n        const imag2 = imagArray[startIndex2];\n        const imag3 = imagArray[startIndex3];\n        const realTemp0 = real0 + real1;\n        const realTemp1 = real0 - real1;\n        const realTemp2 = real2 + real3;\n        const realTemp3 = real2 - real3;\n        const imagTemp0 = imag0 + imag1;\n        const imagTemp1 = imag0 - imag1;\n        const imagTemp2 = imag2 + imag3;\n        const imagTemp3 = imag2 - imag3;\n        realArray[startIndex] = realTemp0 + realTemp2;\n        realArray[startIndex1] = realTemp1 + imagTemp3;\n        realArray[startIndex2] = realTemp0 - realTemp2;\n        realArray[startIndex3] = realTemp1 - imagTemp3;\n        imagArray[startIndex] = imagTemp0 + imagTemp2;\n        imagArray[startIndex1] = imagTemp1 - realTemp3;\n        imagArray[startIndex2] = imagTemp0 - imagTemp2;\n        imagArray[startIndex3] = imagTemp1 + realTemp3;\n    }\n    for (let stride = 8; stride <= fullArrayLength; stride += stride) {\n        const halfLength = stride >>> 1;\n        const radiansIncrement = Math.PI * 2.0 / stride;\n        const cosIncrement = Math.cos(radiansIncrement);\n        const sinIncrement = Math.sin(radiansIncrement);\n        const oscillatorMultiplier = 2.0 * cosIncrement;\n        for (let startIndex = 0; startIndex < fullArrayLength; startIndex += stride) {\n            let c = 1.0;\n            let s = 0.0;\n            let cPrev = cosIncrement;\n            let sPrev = sinIncrement;\n            const secondHalf = startIndex + halfLength;\n            for (let i = startIndex; i < secondHalf; i++) {\n                const j = i + halfLength;\n                const real0 = realArray[i];\n                const imag0 = imagArray[i];\n                const real1 = realArray[j] * c - imagArray[j] * s;\n                const imag1 = realArray[j] * s + imagArray[j] * c;\n                realArray[i] = real0 + real1;\n                imagArray[i] = imag0 + imag1;\n                realArray[j] = real0 - real1;\n                imagArray[j] = imag0 - imag1;\n                const cTemp = oscillatorMultiplier * c - cPrev;\n                const sTemp = oscillatorMultiplier * s - sPrev;\n                cPrev = c;\n                sPrev = s;\n                c = cTemp;\n                s = sTemp;\n            }\n        }\n    }\n}\nexport function forwardRealFourierTransform(array) {\n    const fullArrayLength = array.length;\n    const totalPasses = countBits(fullArrayLength);\n    if (fullArrayLength < 4)\n        throw new Error(\"FFT array length must be at least 4.\");\n    reverseIndexBits(array, fullArrayLength);\n    for (let index = 0; index < fullArrayLength; index += 4) {\n        const index1 = index + 1;\n        const index2 = index + 2;\n        const index3 = index + 3;\n        const real0 = array[index];\n        const real1 = array[index1];\n        const real2 = array[index2];\n        const real3 = array[index3];\n        const tempA = real0 + real1;\n        const tempB = real2 + real3;\n        array[index] = tempA + tempB;\n        array[index1] = real0 - real1;\n        array[index2] = tempA - tempB;\n        array[index3] = real2 - real3;\n    }\n    const sqrt2over2 = Math.sqrt(2.0) / 2.0;\n    for (let index = 0; index < fullArrayLength; index += 8) {\n        const index1 = index + 1;\n        const index3 = index + 3;\n        const index4 = index + 4;\n        const index5 = index + 5;\n        const index7 = index + 7;\n        const real0 = array[index];\n        const real1 = array[index1];\n        const imag3 = array[index3];\n        const real4 = array[index4];\n        const real5 = array[index5];\n        const imag7 = array[index7];\n        const tempA = (real5 - imag7) * sqrt2over2;\n        const tempB = (real5 + imag7) * sqrt2over2;\n        array[index] = real0 + real4;\n        array[index1] = real1 + tempA;\n        array[index3] = real1 - tempA;\n        array[index4] = real0 - real4;\n        array[index5] = tempB - imag3;\n        array[index7] = tempB + imag3;\n    }\n    for (let pass = 3; pass < totalPasses; pass++) {\n        const subStride = 1 << pass;\n        const midSubStride = subStride >> 1;\n        const stride = subStride << 1;\n        const radiansIncrement = Math.PI * 2.0 / stride;\n        const cosIncrement = Math.cos(radiansIncrement);\n        const sinIncrement = Math.sin(radiansIncrement);\n        const oscillatorMultiplier = 2.0 * cosIncrement;\n        for (let startIndex = 0; startIndex < fullArrayLength; startIndex += stride) {\n            const startIndexA = startIndex;\n            const startIndexB = startIndexA + subStride;\n            const stopIndex = startIndexB + subStride;\n            const realStartA = array[startIndexA];\n            const realStartB = array[startIndexB];\n            array[startIndexA] = realStartA + realStartB;\n            array[startIndexB] = realStartA - realStartB;\n            let c = cosIncrement;\n            let s = -sinIncrement;\n            let cPrev = 1.0;\n            let sPrev = 0.0;\n            for (let index = 1; index < midSubStride; index++) {\n                const indexA0 = startIndexA + index;\n                const indexA1 = startIndexB - index;\n                const indexB0 = startIndexB + index;\n                const indexB1 = stopIndex - index;\n                const real0 = array[indexA0];\n                const imag0 = array[indexA1];\n                const real1 = array[indexB0];\n                const imag1 = array[indexB1];\n                const tempA = real1 * c + imag1 * s;\n                const tempB = real1 * s - imag1 * c;\n                array[indexA0] = real0 + tempA;\n                array[indexA1] = real0 - tempA;\n                array[indexB0] = -imag0 - tempB;\n                array[indexB1] = imag0 - tempB;\n                const cTemp = oscillatorMultiplier * c - cPrev;\n                const sTemp = oscillatorMultiplier * s - sPrev;\n                cPrev = c;\n                sPrev = s;\n                c = cTemp;\n                s = sTemp;\n            }\n        }\n    }\n}\nexport function inverseRealFourierTransform(array, fullArrayLength) {\n    const totalPasses = countBits(fullArrayLength);\n    if (fullArrayLength < 4)\n        throw new Error(\"FFT array length must be at least 4.\");\n    for (let pass = totalPasses - 1; pass >= 2; pass--) {\n        const subStride = 1 << pass;\n        const midSubStride = subStride >> 1;\n        const stride = subStride << 1;\n        const radiansIncrement = Math.PI * 2.0 / stride;\n        const cosIncrement = Math.cos(radiansIncrement);\n        const sinIncrement = Math.sin(radiansIncrement);\n        const oscillatorMultiplier = 2.0 * cosIncrement;\n        for (let startIndex = 0; startIndex < fullArrayLength; startIndex += stride) {\n            const startIndexA = startIndex;\n            const midIndexA = startIndexA + midSubStride;\n            const startIndexB = startIndexA + subStride;\n            const midIndexB = startIndexB + midSubStride;\n            const stopIndex = startIndexB + subStride;\n            const realStartA = array[startIndexA];\n            const imagStartB = array[startIndexB];\n            array[startIndexA] = realStartA + imagStartB;\n            array[midIndexA] *= 2;\n            array[startIndexB] = realStartA - imagStartB;\n            array[midIndexB] *= 2;\n            let c = cosIncrement;\n            let s = -sinIncrement;\n            let cPrev = 1.0;\n            let sPrev = 0.0;\n            for (let index = 1; index < midSubStride; index++) {\n                const indexA0 = startIndexA + index;\n                const indexA1 = startIndexB - index;\n                const indexB0 = startIndexB + index;\n                const indexB1 = stopIndex - index;\n                const real0 = array[indexA0];\n                const real1 = array[indexA1];\n                const imag0 = array[indexB0];\n                const imag1 = array[indexB1];\n                const tempA = real0 - real1;\n                const tempB = imag0 + imag1;\n                array[indexA0] = real0 + real1;\n                array[indexA1] = imag1 - imag0;\n                array[indexB0] = tempA * c - tempB * s;\n                array[indexB1] = tempB * c + tempA * s;\n                const cTemp = oscillatorMultiplier * c - cPrev;\n                const sTemp = oscillatorMultiplier * s - sPrev;\n                cPrev = c;\n                sPrev = s;\n                c = cTemp;\n                s = sTemp;\n            }\n        }\n    }\n    for (let index = 0; index < fullArrayLength; index += 4) {\n        const index1 = index + 1;\n        const index2 = index + 2;\n        const index3 = index + 3;\n        const real0 = array[index];\n        const real1 = array[index1] * 2;\n        const imag2 = array[index2];\n        const imag3 = array[index3] * 2;\n        const tempA = real0 + imag2;\n        const tempB = real0 - imag2;\n        array[index] = tempA + real1;\n        array[index1] = tempA - real1;\n        array[index2] = tempB + imag3;\n        array[index3] = tempB - imag3;\n    }\n    reverseIndexBits(array, fullArrayLength);\n}\n//# sourceMappingURL=FFT.js.map","export class Deque {\n    constructor() {\n        this._capacity = 1;\n        this._buffer = [undefined];\n        this._mask = 0;\n        this._offset = 0;\n        this._count = 0;\n    }\n    pushFront(element) {\n        if (this._count >= this._capacity)\n            this._expandCapacity();\n        this._offset = (this._offset - 1) & this._mask;\n        this._buffer[this._offset] = element;\n        this._count++;\n    }\n    pushBack(element) {\n        if (this._count >= this._capacity)\n            this._expandCapacity();\n        this._buffer[(this._offset + this._count) & this._mask] = element;\n        this._count++;\n    }\n    popFront() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        const element = this._buffer[this._offset];\n        this._buffer[this._offset] = undefined;\n        this._offset = (this._offset + 1) & this._mask;\n        this._count--;\n        return element;\n    }\n    popBack() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        this._count--;\n        const index = (this._offset + this._count) & this._mask;\n        const element = this._buffer[index];\n        this._buffer[index] = undefined;\n        return element;\n    }\n    peakFront() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        return this._buffer[this._offset];\n    }\n    peakBack() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        return this._buffer[(this._offset + this._count - 1) & this._mask];\n    }\n    count() {\n        return this._count;\n    }\n    set(index, element) {\n        if (index < 0 || index >= this._count)\n            throw new Error(\"Invalid index\");\n        this._buffer[(this._offset + index) & this._mask] = element;\n    }\n    get(index) {\n        if (index < 0 || index >= this._count)\n            throw new Error(\"Invalid index\");\n        return this._buffer[(this._offset + index) & this._mask];\n    }\n    remove(index) {\n        if (index < 0 || index >= this._count)\n            throw new Error(\"Invalid index\");\n        if (index <= (this._count >> 1)) {\n            while (index > 0) {\n                this.set(index, this.get(index - 1));\n                index--;\n            }\n            this.popFront();\n        }\n        else {\n            index++;\n            while (index < this._count) {\n                this.set(index - 1, this.get(index));\n                index++;\n            }\n            this.popBack();\n        }\n    }\n    _expandCapacity() {\n        if (this._capacity >= 0x40000000)\n            throw new Error(\"Capacity too big.\");\n        this._capacity = this._capacity << 1;\n        const oldBuffer = this._buffer;\n        const newBuffer = new Array(this._capacity);\n        const size = this._count | 0;\n        const offset = this._offset | 0;\n        for (let i = 0; i < size; i++) {\n            newBuffer[i] = oldBuffer[(offset + i) & this._mask];\n        }\n        for (let i = size; i < this._capacity; i++) {\n            newBuffer[i] = undefined;\n        }\n        this._offset = 0;\n        this._buffer = newBuffer;\n        this._mask = this._capacity - 1;\n    }\n}\n//# sourceMappingURL=Deque.js.map","class EventManager {\n    constructor() {\n        this.activeEvents = [];\n        this.listeners = {};\n        this.activeEvents = [];\n        this.listeners = {};\n    }\n    raise(eventType, eventData, extraEventData) {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.activeEvents.push(eventType);\n        for (let i = 0; i < this.listeners[eventType].length; i++) {\n            this.listeners[eventType][i](eventData, extraEventData);\n        }\n        this.activeEvents.pop();\n    }\n    listen(eventType, callback) {\n        if (this.listeners[eventType] == undefined) {\n            this.listeners[eventType] = [];\n        }\n        this.listeners[eventType].push(callback);\n    }\n    unlisten(eventType, callback) {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        const lisen = this.listeners[eventType].indexOf(callback);\n        if (lisen != -1) {\n            this.listeners[eventType].splice(lisen, 1);\n        }\n    }\n    unlistenAll(eventType) {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.listeners[eventType] = [];\n    }\n}\nexport const events = new EventManager();\n//# sourceMappingURL=Events.js.map","export class FilterCoefficients {\n    constructor() {\n        this.a = [1.0];\n        this.b = [1.0];\n        this.order = 0;\n    }\n    linearGain0thOrder(linearGain) {\n        this.b[0] = linearGain;\n        this.order = 0;\n    }\n    lowPass1stOrderButterworth(cornerRadiansPerSample) {\n        const g = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n        const a0 = 1.0 + g;\n        this.a[1] = (1.0 - g) / a0;\n        this.b[1] = this.b[0] = 1 / a0;\n        this.order = 1;\n    }\n    lowPass1stOrderSimplified(cornerRadiansPerSample) {\n        const g = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n        this.a[1] = g - 1.0;\n        this.b[0] = g;\n        this.b[1] = 0.0;\n        this.order = 1;\n    }\n    highPass1stOrderButterworth(cornerRadiansPerSample) {\n        const g = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n        const a0 = 1.0 + g;\n        this.a[1] = (1.0 - g) / a0;\n        this.b[0] = g / a0;\n        this.b[1] = -g / a0;\n        this.order = 1;\n    }\n    highShelf1stOrder(cornerRadiansPerSample, shelfLinearGain) {\n        const tan = Math.tan(cornerRadiansPerSample * 0.5);\n        const sqrtGain = Math.sqrt(shelfLinearGain);\n        const g = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\n        const a0 = 1.0;\n        this.a[1] = g / a0;\n        this.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n        this.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n        this.order = 1;\n    }\n    allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample) {\n        const g = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n        this.a[1] = g;\n        this.b[0] = g;\n        this.b[1] = 1.0;\n        this.order = 1;\n    }\n    allPass1stOrderFractionalDelay(delay) {\n        const g = (1.0 - delay) / (1.0 + delay);\n        this.a[1] = g;\n        this.b[0] = g;\n        this.b[1] = 1.0;\n        this.order = 1;\n    }\n    lowPass2ndOrderButterworth(cornerRadiansPerSample, peakLinearGain) {\n        const alpha = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\n        const cos = Math.cos(cornerRadiansPerSample);\n        const a0 = 1.0 + alpha;\n        this.a[1] = -2.0 * cos / a0;\n        this.a[2] = (1 - alpha) / a0;\n        this.b[2] = this.b[0] = (1 - cos) / (2.0 * a0);\n        this.b[1] = (1 - cos) / a0;\n        this.order = 2;\n    }\n    lowPass2ndOrderSimplified(cornerRadiansPerSample, peakLinearGain) {\n        const g = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\n        const filterResonance = 1.0 - 1.0 / (2.0 * peakLinearGain);\n        const feedback = filterResonance + filterResonance / (1.0 - g);\n        this.a[1] = 2.0 * g + (g - 1.0) * g * feedback - 2.0;\n        this.a[2] = (g - 1.0) * (g - g * feedback - 1.0);\n        this.b[0] = g * g;\n        this.b[1] = 0;\n        this.b[2] = 0;\n        this.order = 2;\n    }\n    highPass2ndOrderButterworth(cornerRadiansPerSample, peakLinearGain) {\n        const alpha = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\n        const cos = Math.cos(cornerRadiansPerSample);\n        const a0 = 1.0 + alpha;\n        this.a[1] = -2.0 * cos / a0;\n        this.a[2] = (1.0 - alpha) / a0;\n        this.b[2] = this.b[0] = (1.0 + cos) / (2.0 * a0);\n        this.b[1] = -(1.0 + cos) / a0;\n        this.order = 2;\n    }\n    highShelf2ndOrder(cornerRadiansPerSample, shelfLinearGain, slope) {\n        const A = Math.sqrt(shelfLinearGain);\n        const c = Math.cos(cornerRadiansPerSample);\n        const Aplus = A + 1.0;\n        const Aminus = A - 1.0;\n        const alpha = Math.sin(cornerRadiansPerSample) * 0.5 * Math.sqrt((Aplus / A) * (1.0 / slope - 1.0) + 2.0);\n        const sqrtA2Alpha = 2.0 * Math.sqrt(A) * alpha;\n        const a0 = (Aplus - Aminus * c + sqrtA2Alpha);\n        this.a[1] = 2 * (Aminus - Aplus * c) / a0;\n        this.a[2] = (Aplus - Aminus * c - sqrtA2Alpha) / a0;\n        this.b[0] = A * (Aplus + Aminus * c + sqrtA2Alpha) / a0;\n        this.b[1] = -2 * A * (Aminus + Aplus * c) / a0;\n        this.b[2] = A * (Aplus + Aminus * c - sqrtA2Alpha) / a0;\n        this.order = 2;\n    }\n    peak2ndOrder(cornerRadiansPerSample, peakLinearGain, bandWidthScale) {\n        const sqrtGain = Math.sqrt(peakLinearGain);\n        const bandWidth = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1 / sqrtGain);\n        const alpha = Math.tan(bandWidth * 0.5);\n        const a0 = 1.0 + alpha / sqrtGain;\n        this.b[0] = (1.0 + alpha * sqrtGain) / a0;\n        this.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\n        this.b[2] = (1.0 - alpha * sqrtGain) / a0;\n        this.a[2] = (1.0 - alpha / sqrtGain) / a0;\n        this.order = 2;\n    }\n}\nexport class FrequencyResponse {\n    constructor() {\n        this.real = 0.0;\n        this.imag = 0.0;\n        this.denom = 1.0;\n    }\n    analyze(filter, radiansPerSample) {\n        this.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\n    }\n    analyzeComplex(filter, real, imag) {\n        const a = filter.a;\n        const b = filter.b;\n        const realZ1 = real;\n        const imagZ1 = -imag;\n        let realNum = b[0] + b[1] * realZ1;\n        let imagNum = b[1] * imagZ1;\n        let realDenom = 1.0 + a[1] * realZ1;\n        let imagDenom = a[1] * imagZ1;\n        let realZ = realZ1;\n        let imagZ = imagZ1;\n        for (let i = 2; i <= filter.order; i++) {\n            const realTemp = realZ * realZ1 - imagZ * imagZ1;\n            const imagTemp = realZ * imagZ1 + imagZ * realZ1;\n            realZ = realTemp;\n            imagZ = imagTemp;\n            realNum += b[i] * realZ;\n            imagNum += b[i] * imagZ;\n            realDenom += a[i] * realZ;\n            imagDenom += a[i] * imagZ;\n        }\n        this.denom = realDenom * realDenom + imagDenom * imagDenom;\n        this.real = realNum * realDenom + imagNum * imagDenom;\n        this.imag = imagNum * realDenom - realNum * imagDenom;\n    }\n    magnitude() {\n        return Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\n    }\n    angle() {\n        return Math.atan2(this.imag, this.real);\n    }\n}\nexport class DynamicBiquadFilter {\n    constructor() {\n        this.a1 = 0.0;\n        this.a2 = 0.0;\n        this.b0 = 1.0;\n        this.b1 = 0.0;\n        this.b2 = 0.0;\n        this.a1Delta = 0.0;\n        this.a2Delta = 0.0;\n        this.b0Delta = 0.0;\n        this.b1Delta = 0.0;\n        this.b2Delta = 0.0;\n        this.output1 = 0.0;\n        this.output2 = 0.0;\n        this.useMultiplicativeInputCoefficients = false;\n    }\n    resetOutput() {\n        this.output1 = 0.0;\n        this.output2 = 0.0;\n    }\n    loadCoefficientsWithGradient(start, end, deltaRate, useMultiplicativeInputCoefficients) {\n        if (start.order != 2 || end.order != 2)\n            throw new Error();\n        this.a1 = start.a[1];\n        this.a2 = start.a[2];\n        this.b0 = start.b[0];\n        this.b1 = start.b[1];\n        this.b2 = start.b[2];\n        this.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\n        this.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\n        if (useMultiplicativeInputCoefficients) {\n            this.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\n            this.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\n            this.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\n        }\n        else {\n            this.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\n            this.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\n            this.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\n        }\n        this.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\n    }\n}\nexport function warpNyquistToInfinity(radians) {\n    return 2.0 * Math.tan(radians * 0.5);\n}\nexport function warpInfinityToNyquist(radians) {\n    return 2.0 * Math.atan(radians * 0.5);\n}\n//# sourceMappingURL=filtering.js.map","const PRIME32_1 = 2654435761;\nconst PRIME32_2 = 2246822519;\nconst PRIME32_3 = 3266489917;\nconst PRIME32_4 = 668265263;\nconst PRIME32_5 = 374761393;\nlet encoder;\n/**\n *\n * @param input - byte array or string\n * @param seed - optional seed (32-bit unsigned);\n */\nexport function xxHash32(input, seed = 0) {\n    const buffer = typeof input === 'string' ? (encoder ??= new TextEncoder()).encode(input) : input;\n    const b = buffer;\n    /*\n        Step 1. Initialize internal accumulators\n        Each accumulator gets an initial value based on optional seed input. Since the seed is optional, it can be 0.\n\n        ```\n            u32 acc1 = seed + PRIME32_1 + PRIME32_2;\n            u32 acc2 = seed + PRIME32_2;\n            u32 acc3 = seed + 0;\n            u32 acc4 = seed - PRIME32_1;\n        ```\n        Special case : input is less than 16 bytes\n        When input is too small (< 16 bytes), the algorithm will not process any stripe. Consequently, it will not\n        make use of parallel accumulators.\n\n        In which case, a simplified initialization is performed, using a single accumulator :\n\n        u32 acc  = seed + PRIME32_5;\n        The algorithm then proceeds directly to step 4.\n    */\n    let acc = (seed + PRIME32_5) & 0xffffffff;\n    let offset = 0;\n    if (b.length >= 16) {\n        const accN = [\n            (seed + PRIME32_1 + PRIME32_2) & 0xffffffff,\n            (seed + PRIME32_2) & 0xffffffff,\n            (seed + 0) & 0xffffffff,\n            (seed - PRIME32_1) & 0xffffffff,\n        ];\n        /*\n            Step 2. Process stripes\n            A stripe is a contiguous segment of 16 bytes. It is evenly divided into 4 lanes, of 4 bytes each.\n            The first lane is used to update accumulator 1, the second lane is used to update accumulator 2, and so on.\n\n            Each lane read its associated 32-bit value using little-endian convention.\n\n            For each {lane, accumulator}, the update process is called a round, and applies the following formula :\n\n            ```\n            accN = accN + (laneN * PRIME32_2);\n            accN = accN <<< 13;\n            accN = accN * PRIME32_1;\n            ```\n\n            This shuffles the bits so that any bit from input lane impacts several bits in output accumulator.\n            All operations are performed modulo 2^32.\n\n            Input is consumed one full stripe at a time. Step 2 is looped as many times as necessary to consume\n            the whole input, except the last remaining bytes which cannot form a stripe (< 16 bytes). When that\n            happens, move to step 3.\n        */\n        const b = buffer;\n        const limit = b.length - 16;\n        let lane = 0;\n        for (offset = 0; (offset & 0xfffffff0) <= limit; offset += 4) {\n            const i = offset;\n            const laneN0 = b[i + 0] + (b[i + 1] << 8);\n            const laneN1 = b[i + 2] + (b[i + 3] << 8);\n            const laneNP = laneN0 * PRIME32_2 + ((laneN1 * PRIME32_2) << 16);\n            let acc = (accN[lane] + laneNP) & 0xffffffff;\n            acc = (acc << 13) | (acc >>> 19);\n            const acc0 = acc & 0xffff;\n            const acc1 = acc >>> 16;\n            accN[lane] = (acc0 * PRIME32_1 + ((acc1 * PRIME32_1) << 16)) & 0xffffffff;\n            lane = (lane + 1) & 0x3;\n        }\n        /*\n            Step 3. Accumulator convergence\n            All 4 lane accumulators from previous steps are merged to produce a single remaining accumulator\n            of same width (32-bit). The associated formula is as follows :\n\n            ```\n            acc = (acc1 <<< 1) + (acc2 <<< 7) + (acc3 <<< 12) + (acc4 <<< 18);\n            ```\n        */\n        acc =\n            (((accN[0] << 1) | (accN[0] >>> 31)) +\n                ((accN[1] << 7) | (accN[1] >>> 25)) +\n                ((accN[2] << 12) | (accN[2] >>> 20)) +\n                ((accN[3] << 18) | (accN[3] >>> 14))) &\n                0xffffffff;\n    }\n    /*\n        Step 4. Add input length\n        The input total length is presumed known at this stage. This step is just about adding the length to\n        accumulator, so that it participates to final mixing.\n\n        ```\n        acc = acc + (u32)inputLength;\n        ```\n    */\n    acc = (acc + buffer.length) & 0xffffffff;\n    /*\n        Step 5. Consume remaining input\n        There may be up to 15 bytes remaining to consume from the input. The final stage will digest them according\n        to following pseudo-code :\n        ```\n        while (remainingLength >= 4) {\n            lane = read_32bit_little_endian(input_ptr);\n            acc = acc + lane * PRIME32_3;\n            acc = (acc <<< 17) * PRIME32_4;\n            input_ptr += 4; remainingLength -= 4;\n        }\n        ```\n        This process ensures that all input bytes are present in the final mix.\n    */\n    const limit = buffer.length - 4;\n    for (; offset <= limit; offset += 4) {\n        const i = offset;\n        const laneN0 = b[i + 0] + (b[i + 1] << 8);\n        const laneN1 = b[i + 2] + (b[i + 3] << 8);\n        const laneP = laneN0 * PRIME32_3 + ((laneN1 * PRIME32_3) << 16);\n        acc = (acc + laneP) & 0xffffffff;\n        acc = (acc << 17) | (acc >>> 15);\n        acc = ((acc & 0xffff) * PRIME32_4 + (((acc >>> 16) * PRIME32_4) << 16)) & 0xffffffff;\n    }\n    /*\n        ```\n        while (remainingLength >= 1) {\n            lane = read_byte(input_ptr);\n            acc = acc + lane * PRIME32_5;\n            acc = (acc <<< 11) * PRIME32_1;\n            input_ptr += 1; remainingLength -= 1;\n        }\n        ```\n    */\n    for (; offset < b.length; ++offset) {\n        const lane = b[offset];\n        acc = acc + lane * PRIME32_5;\n        acc = (acc << 11) | (acc >>> 21);\n        acc = ((acc & 0xffff) * PRIME32_1 + (((acc >>> 16) * PRIME32_1) << 16)) & 0xffffffff;\n    }\n    /*\n        Step 6. Final mix (avalanche)\n        The final mix ensures that all input bits have a chance to impact any bit in the output digest,\n        resulting in an unbiased distribution. This is also called avalanche effect.\n        ```\n        acc = acc xor (acc >> 15);\n        acc = acc * PRIME32_2;\n        acc = acc xor (acc >> 13);\n        acc = acc * PRIME32_3;\n        acc = acc xor (acc >> 16);\n        ```\n    */\n    acc = acc ^ (acc >>> 15);\n    acc = (((acc & 0xffff) * PRIME32_2) & 0xffffffff) + (((acc >>> 16) * PRIME32_2) << 16);\n    acc = acc ^ (acc >>> 13);\n    acc = (((acc & 0xffff) * PRIME32_3) & 0xffffffff) + (((acc >>> 16) * PRIME32_3) << 16);\n    acc = acc ^ (acc >>> 16);\n    // turn any negatives back into a positive number;\n    return acc < 0 ? acc + 4294967296 : acc;\n}\n//# sourceMappingURL=xxHash32.js.map","import { startLoadingSample, sampleLoadingState, sampleLoadEvents, SampleLoadedEvent, loadBuiltInSamples, toNameMap, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegralOld, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, effectsIncludeRingModulation, effectsIncludeGranular, calculateRingModHertz } from \"./SynthConfig\";\nimport { EditorConfig } from \"../editor/EditorConfig\";\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\nimport { Deque } from \"./Deque\";\nimport { events } from \"../global/Events\";\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter, warpInfinityToNyquist } from \"./filtering\";\nimport { xxHash32 } from \"js-xxhash\";\nconst epsilon = (1.0e-24);\nexport function clamp(min, max, val) {\n    max = max - 1;\n    if (val <= max) {\n        if (val >= min)\n            return val;\n        else\n            return min;\n    }\n    else {\n        return max;\n    }\n}\nfunction validateRange(min, max, val) {\n    if (min <= val && val <= max)\n        return val;\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\n}\nexport function parseFloatWithDefault(s, defaultValue) {\n    let result = parseFloat(s);\n    if (Number.isNaN(result))\n        result = defaultValue;\n    return result;\n}\nexport function parseIntWithDefault(s, defaultValue) {\n    let result = parseInt(s);\n    if (Number.isNaN(result))\n        result = defaultValue;\n    return result;\n}\nfunction encode32BitNumber(buffer, x) {\n    buffer.push(base64IntToCharCode[(x >>> (6 * 5)) & 0x3]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 4)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 3)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 2)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 1)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 0)) & 0x3f]);\n}\nfunction decode32BitNumber(compressed, charIndex) {\n    let x = 0;\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0);\n    return x;\n}\nfunction encodeUnisonSettings(buffer, v, s, o, e, i) {\n    buffer.push(base64IntToCharCode[v]);\n    buffer.push(base64IntToCharCode[Number((s > 0))]);\n    let cleanS = Math.round(Math.abs(s) * 1000);\n    let cleanSDivided = Math.floor(cleanS / 63);\n    buffer.push(base64IntToCharCode[cleanS % 63], base64IntToCharCode[cleanSDivided % 63], base64IntToCharCode[Math.floor(cleanSDivided / 63)]);\n    buffer.push(base64IntToCharCode[Number((o > 0))]);\n    let cleanO = Math.round(Math.abs(o) * 1000);\n    let cleanODivided = Math.floor(cleanO / 63);\n    buffer.push(base64IntToCharCode[cleanO % 63], base64IntToCharCode[cleanODivided % 63], base64IntToCharCode[Math.floor(cleanODivided / 63)]);\n    buffer.push(base64IntToCharCode[Number((e > 0))]);\n    let cleanE = Math.round(Math.abs(e) * 1000);\n    buffer.push(base64IntToCharCode[cleanE % 63], base64IntToCharCode[Math.floor(cleanE / 63)]);\n    buffer.push(base64IntToCharCode[Number((i > 0))]);\n    let cleanI = Math.round(Math.abs(i) * 1000);\n    buffer.push(base64IntToCharCode[cleanI % 63], base64IntToCharCode[Math.floor(cleanI / 63)]);\n}\nfunction convertLegacyKeyToKeyAndOctave(rawKeyIndex) {\n    let key = clamp(0, Config.keys.length, rawKeyIndex);\n    let octave = 0;\n    if (rawKeyIndex === 12) {\n        key = 0;\n        octave = 1;\n    }\n    else if (rawKeyIndex === 13) {\n        key = 6;\n        octave = -1;\n    }\n    else if (rawKeyIndex === 14) {\n        key = 0;\n        octave = -1;\n    }\n    else if (rawKeyIndex === 15) {\n        key = 5;\n        octave = -1;\n    }\n    return [key, octave];\n}\nconst base64IntToCharCode = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\nconst base64CharCodeToInt = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0];\nclass BitFieldReader {\n    constructor(source, startIndex, stopIndex) {\n        this._bits = [];\n        this._readIndex = 0;\n        for (let i = startIndex; i < stopIndex; i++) {\n            const value = base64CharCodeToInt[source.charCodeAt(i)];\n            this._bits.push((value >> 5) & 0x1);\n            this._bits.push((value >> 4) & 0x1);\n            this._bits.push((value >> 3) & 0x1);\n            this._bits.push((value >> 2) & 0x1);\n            this._bits.push((value >> 1) & 0x1);\n            this._bits.push(value & 0x1);\n        }\n    }\n    read(bitCount) {\n        let result = 0;\n        while (bitCount > 0) {\n            result = result << 1;\n            result += this._bits[this._readIndex++];\n            bitCount--;\n        }\n        return result;\n    }\n    readLongTail(minValue, minBits) {\n        let result = minValue;\n        let numBits = minBits;\n        while (this._bits[this._readIndex++]) {\n            result += 1 << numBits;\n            numBits++;\n        }\n        while (numBits > 0) {\n            numBits--;\n            if (this._bits[this._readIndex++]) {\n                result += 1 << numBits;\n            }\n        }\n        return result;\n    }\n    readPartDuration() {\n        return this.readLongTail(1, 3);\n    }\n    readLegacyPartDuration() {\n        return this.readLongTail(1, 2);\n    }\n    readPinCount() {\n        return this.readLongTail(1, 0);\n    }\n    readPitchInterval() {\n        if (this.read(1)) {\n            return -this.readLongTail(1, 3);\n        }\n        else {\n            return this.readLongTail(1, 3);\n        }\n    }\n}\nclass BitFieldWriter {\n    constructor() {\n        this._index = 0;\n        this._bits = [];\n    }\n    clear() {\n        this._index = 0;\n    }\n    write(bitCount, value) {\n        bitCount--;\n        while (bitCount >= 0) {\n            this._bits[this._index++] = (value >>> bitCount) & 1;\n            bitCount--;\n        }\n    }\n    writeLongTail(minValue, minBits, value) {\n        if (value < minValue)\n            throw new Error(\"value out of bounds\");\n        value -= minValue;\n        let numBits = minBits;\n        while (value >= (1 << numBits)) {\n            this._bits[this._index++] = 1;\n            value -= 1 << numBits;\n            numBits++;\n        }\n        this._bits[this._index++] = 0;\n        while (numBits > 0) {\n            numBits--;\n            this._bits[this._index++] = (value >>> numBits) & 1;\n        }\n    }\n    writePartDuration(value) {\n        this.writeLongTail(1, 3, value);\n    }\n    writePinCount(value) {\n        this.writeLongTail(1, 0, value);\n    }\n    writePitchInterval(value) {\n        if (value < 0) {\n            this.write(1, 1);\n            this.writeLongTail(1, 3, -value);\n        }\n        else {\n            this.write(1, 0);\n            this.writeLongTail(1, 3, value);\n        }\n    }\n    concat(other) {\n        for (let i = 0; i < other._index; i++) {\n            this._bits[this._index++] = other._bits[i];\n        }\n    }\n    encodeBase64(buffer) {\n        for (let i = 0; i < this._index; i += 6) {\n            const value = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\n            buffer.push(base64IntToCharCode[value]);\n        }\n        return buffer;\n    }\n    lengthBase64() {\n        return Math.ceil(this._index / 6);\n    }\n}\nexport function makeNotePin(interval, time, size) {\n    return { interval: interval, time: time, size: size };\n}\nexport class Note {\n    constructor(pitch, start, end, size, fadeout = false) {\n        this.pitches = [pitch];\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\n        this.start = start;\n        this.end = end;\n        this.continuesLastPattern = false;\n    }\n    pickMainInterval() {\n        let longestFlatIntervalDuration = 0;\n        let mainInterval = 0;\n        for (let pinIndex = 1; pinIndex < this.pins.length; pinIndex++) {\n            const pinA = this.pins[pinIndex - 1];\n            const pinB = this.pins[pinIndex];\n            if (pinA.interval == pinB.interval) {\n                const duration = pinB.time - pinA.time;\n                if (longestFlatIntervalDuration < duration) {\n                    longestFlatIntervalDuration = duration;\n                    mainInterval = pinA.interval;\n                }\n            }\n        }\n        if (longestFlatIntervalDuration == 0) {\n            let loudestSize = 0;\n            for (let pinIndex = 0; pinIndex < this.pins.length; pinIndex++) {\n                const pin = this.pins[pinIndex];\n                if (loudestSize < pin.size) {\n                    loudestSize = pin.size;\n                    mainInterval = pin.interval;\n                }\n            }\n        }\n        return mainInterval;\n    }\n    clone() {\n        const newNote = new Note(-1, this.start, this.end, 3);\n        newNote.pitches = this.pitches.concat();\n        newNote.pins = [];\n        for (const pin of this.pins) {\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n        }\n        newNote.continuesLastPattern = this.continuesLastPattern;\n        return newNote;\n    }\n    getEndPinIndex(part) {\n        let endPinIndex;\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\n            if (this.pins[endPinIndex].time + this.start > part)\n                break;\n        }\n        return endPinIndex;\n    }\n}\nexport class Pattern {\n    constructor() {\n        this.notes = [];\n        this.instruments = [0];\n    }\n    cloneNotes() {\n        const result = [];\n        for (const note of this.notes) {\n            result.push(note.clone());\n        }\n        return result;\n    }\n    reset() {\n        this.notes.length = 0;\n        this.instruments[0] = 0;\n        this.instruments.length = 1;\n    }\n    toJsonObject(song, channel, isModChannel) {\n        const noteArray = [];\n        for (const note of this.notes) {\n            let instrument = channel.instruments[this.instruments[0]];\n            let mod = Math.max(0, Config.modCount - note.pitches[0] - 1);\n            let volumeCap = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n            const pointArray = [];\n            for (const pin of note.pins) {\n                let useVol = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\n                pointArray.push({\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\n                    \"pitchBend\": pin.interval,\n                    \"volume\": useVol,\n                    \"forMod\": isModChannel,\n                });\n            }\n            const noteObject = {\n                \"pitches\": note.pitches,\n                \"points\": pointArray,\n            };\n            if (note.start == 0) {\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\n            }\n            noteArray.push(noteObject);\n        }\n        const patternObject = { \"notes\": noteArray };\n        if (song.patternInstruments) {\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\n        }\n        return patternObject;\n    }\n    fromJsonObject(patternObject, song, channel, importedPartsPerBeat, isNoiseChannel, isModChannel, jsonFormat = \"auto\") {\n        const format = jsonFormat.toLowerCase();\n        if (song.patternInstruments) {\n            if (Array.isArray(patternObject[\"instruments\"])) {\n                const instruments = patternObject[\"instruments\"];\n                const instrumentCount = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\n                for (let j = 0; j < instrumentCount; j++) {\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\n                }\n                this.instruments.length = instrumentCount;\n            }\n            else {\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\n                this.instruments.length = 1;\n            }\n        }\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\n            const maxNoteCount = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\n            for (let j = 0; j < patternObject[\"notes\"].length; j++) {\n                if (j >= maxNoteCount)\n                    break;\n                const noteObject = patternObject[\"notes\"][j];\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\n                    continue;\n                }\n                const note = new Note(0, 0, 0, 0);\n                note.pitches = [];\n                note.pins = [];\n                for (let k = 0; k < noteObject[\"pitches\"].length; k++) {\n                    const pitch = noteObject[\"pitches\"][k] | 0;\n                    if (note.pitches.indexOf(pitch) != -1)\n                        continue;\n                    note.pitches.push(pitch);\n                    if (note.pitches.length >= Config.maxChordSize)\n                        break;\n                }\n                if (note.pitches.length < 1)\n                    continue;\n                let startInterval = 0;\n                let instrument = channel.instruments[this.instruments[0]];\n                let mod = Math.max(0, Config.modCount - note.pitches[0] - 1);\n                for (let k = 0; k < noteObject[\"points\"].length; k++) {\n                    const pointObject = noteObject[\"points\"][k];\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined)\n                        continue;\n                    const interval = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\n                    const time = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\n                    let volumeCap = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n                    let size;\n                    if (pointObject[\"volume\"] == undefined) {\n                        size = volumeCap;\n                    }\n                    else if (pointObject[\"forMod\"] == undefined) {\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n                    else {\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n                    if (time > song.beatsPerBar * Config.partsPerBeat)\n                        continue;\n                    if (note.pins.length == 0) {\n                        note.start = time;\n                        startInterval = interval;\n                    }\n                    else {\n                    }\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\n                }\n                if (note.pins.length < 2)\n                    continue;\n                note.end = note.pins[note.pins.length - 1].time + note.start;\n                const maxPitch = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n                let lowestPitch = maxPitch;\n                let highestPitch = 0;\n                for (let k = 0; k < note.pitches.length; k++) {\n                    note.pitches[k] += startInterval;\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\n                        note.pitches.splice(k, 1);\n                        k--;\n                    }\n                    if (note.pitches[k] < lowestPitch)\n                        lowestPitch = note.pitches[k];\n                    if (note.pitches[k] > highestPitch)\n                        highestPitch = note.pitches[k];\n                }\n                if (note.pitches.length < 1)\n                    continue;\n                for (let k = 0; k < note.pins.length; k++) {\n                    const pin = note.pins[k];\n                    if (pin.interval + lowestPitch < 0)\n                        pin.interval = -lowestPitch;\n                    if (pin.interval + highestPitch > maxPitch)\n                        pin.interval = maxPitch - highestPitch;\n                    if (k >= 2) {\n                        if (pin.interval == note.pins[k - 1].interval &&\n                            pin.interval == note.pins[k - 2].interval &&\n                            pin.size == note.pins[k - 1].size &&\n                            pin.size == note.pins[k - 2].size) {\n                            note.pins.splice(k - 1, 1);\n                            k--;\n                        }\n                    }\n                }\n                if (note.start == 0) {\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\n                }\n                else {\n                    note.continuesLastPattern = false;\n                }\n                if ((format != \"ultrabox\" && format != \"slarmoosbox\") && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                    for (const pin of note.pins) {\n                        const oldMin = 30;\n                        const newMin = 1;\n                        const old = pin.size + oldMin;\n                        pin.size = old - newMin;\n                    }\n                }\n                this.notes.push(note);\n            }\n        }\n    }\n}\nexport class Operator {\n    constructor(index) {\n        this.frequency = 4;\n        this.amplitude = 0;\n        this.waveform = 0;\n        this.pulseWidth = 0.5;\n        this.reset(index);\n    }\n    reset(index) {\n        this.frequency = 4;\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\n        this.waveform = 0;\n        this.pulseWidth = 5;\n    }\n    copy(other) {\n        this.frequency = other.frequency;\n        this.amplitude = other.amplitude;\n        this.waveform = other.waveform;\n        this.pulseWidth = other.pulseWidth;\n    }\n}\nexport class CustomAlgorithm {\n    constructor() {\n        this.name = \"\";\n        this.carrierCount = 0;\n        this.modulatedBy = [[], [], [], [], [], []];\n        this.associatedCarrier = [];\n        this.fromPreset(1);\n    }\n    set(carriers, modulation) {\n        this.reset();\n        this.carrierCount = carriers;\n        for (let i = 0; i < this.modulatedBy.length; i++) {\n            this.modulatedBy[i] = modulation[i];\n            if (i < carriers) {\n                this.associatedCarrier[i] = i + 1;\n            }\n            this.name += (i + 1);\n            for (let j = 0; j < modulation[i].length; j++) {\n                this.name += modulation[i][j];\n                if (modulation[i][j] > carriers - 1) {\n                    this.associatedCarrier[modulation[i][j] - 1] = i + 1;\n                }\n                this.name += \",\";\n            }\n            if (i < carriers) {\n                this.name += \"|\";\n            }\n            else {\n                this.name += \".\";\n            }\n        }\n    }\n    reset() {\n        this.name = \"\";\n        this.carrierCount = 1;\n        this.modulatedBy = [[2, 3, 4, 5, 6], [], [], [], [], []];\n        this.associatedCarrier = [1, 1, 1, 1, 1, 1];\n    }\n    copy(other) {\n        this.name = other.name;\n        this.carrierCount = other.carrierCount;\n        this.modulatedBy = other.modulatedBy;\n        this.associatedCarrier = other.associatedCarrier;\n    }\n    fromPreset(other) {\n        this.reset();\n        let preset = Config.algorithms6Op[other];\n        this.name = preset.name;\n        this.carrierCount = preset.carrierCount;\n        for (var i = 0; i < preset.modulatedBy.length; i++) {\n            this.modulatedBy[i] = Array.from(preset.modulatedBy[i]);\n            this.associatedCarrier[i] = preset.associatedCarrier[i];\n        }\n    }\n}\nexport class CustomFeedBack {\n    constructor() {\n        this.name = \"\";\n        this.indices = [[], [], [], [], [], []];\n        this.fromPreset(1);\n    }\n    set(inIndices) {\n        this.reset();\n        for (let i = 0; i < this.indices.length; i++) {\n            this.indices[i] = inIndices[i];\n            for (let j = 0; j < inIndices[i].length; j++) {\n                this.name += inIndices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n    reset() {\n        this.reset;\n        this.name = \"\";\n        this.indices = [[1], [], [], [], [], []];\n    }\n    copy(other) {\n        this.name = other.name;\n        this.indices = other.indices;\n    }\n    fromPreset(other) {\n        this.reset();\n        let preset = Config.feedbacks6Op[other];\n        for (var i = 0; i < preset.indices.length; i++) {\n            this.indices[i] = Array.from(preset.indices[i]);\n            for (let j = 0; j < preset.indices[i].length; j++) {\n                this.name += preset.indices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n}\nexport class SpectrumWave {\n    constructor(isNoiseChannel) {\n        this.spectrum = [];\n        this.hash = -1;\n        this.reset(isNoiseChannel);\n    }\n    reset(isNoiseChannel) {\n        for (let i = 0; i < Config.spectrumControlPoints; i++) {\n            if (isNoiseChannel) {\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\n            }\n            else {\n                const isHarmonic = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\n            }\n        }\n        this.markCustomWaveDirty();\n    }\n    markCustomWaveDirty() {\n        const hashMult = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\n        let hash = 0;\n        for (const point of this.spectrum)\n            hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\nclass SpectrumWaveState {\n    constructor() {\n        this.wave = null;\n        this._hash = -1;\n    }\n    getCustomWave(settings, lowestOctave) {\n        if (this._hash == settings.hash)\n            return this.wave;\n        this._hash = settings.hash;\n        const waveLength = Config.spectrumNoiseLength;\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave = this.wave;\n        for (let i = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n        const highestOctave = 14;\n        const falloffRatio = 0.25;\n        const pitchTweak = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\n        function controlPointToOctave(point) {\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\n        }\n        let combinedAmplitude = 1;\n        for (let i = 0; i < Config.spectrumControlPoints + 1; i++) {\n            const value1 = (i <= 0) ? 0 : settings.spectrum[i - 1];\n            const value2 = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\n            const octave1 = controlPointToOctave(i - 1);\n            let octave2 = controlPointToOctave(i);\n            if (i >= Config.spectrumControlPoints)\n                octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\n            if (value1 == 0 && value2 == 0)\n                continue;\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\n        }\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\n        }\n        inverseRealFourierTransform(wave, waveLength);\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\n        wave[waveLength] = wave[0];\n        return wave;\n    }\n}\nexport class HarmonicsWave {\n    constructor() {\n        this.harmonics = [];\n        this.hash = -1;\n        this.reset();\n    }\n    reset() {\n        for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n            this.harmonics[i] = 0;\n        }\n        this.harmonics[0] = Config.harmonicsMax;\n        this.harmonics[3] = Config.harmonicsMax;\n        this.harmonics[6] = Config.harmonicsMax;\n        this.markCustomWaveDirty();\n    }\n    markCustomWaveDirty() {\n        const hashMult = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\n        let hash = 0;\n        for (const point of this.harmonics)\n            hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\nclass HarmonicsWaveState {\n    constructor() {\n        this.wave = null;\n        this._hash = -1;\n    }\n    getCustomWave(settings, instrumentType) {\n        if (this._hash == settings.hash && this._generatedForType == instrumentType)\n            return this.wave;\n        this._hash = settings.hash;\n        this._generatedForType = instrumentType;\n        const harmonicsRendered = (instrumentType == 7) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\n        const waveLength = Config.harmonicsWavelength;\n        const retroWave = getDrumWave(0, null, null);\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave = this.wave;\n        for (let i = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n        const overallSlope = -0.25;\n        let combinedControlPointAmplitude = 1;\n        for (let harmonicIndex = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\n            const harmonicFreq = harmonicIndex + 1;\n            let controlValue = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\n            }\n            const normalizedValue = controlValue / Config.harmonicsMax;\n            let amplitude = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\n            if (harmonicIndex < Config.harmonicsControlPoints) {\n                combinedControlPointAmplitude += amplitude;\n            }\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\n            amplitude *= retroWave[harmonicIndex + 589];\n            wave[waveLength - harmonicFreq] = amplitude;\n        }\n        inverseRealFourierTransform(wave, waveLength);\n        const mult = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\n        for (let i = 0; i < wave.length; i++)\n            wave[i] *= mult;\n        performIntegralOld(wave);\n        wave[waveLength] = wave[0];\n        return wave;\n    }\n}\nclass Grain {\n    constructor() {\n        this.delayLinePosition = 0;\n        this.ageInSamples = 0;\n        this.maxAgeInSamples = 0;\n        this.delay = 0;\n        this.parabolicEnvelopeAmplitude = 0;\n        this.parabolicEnvelopeSlope = 0;\n        this.parabolicEnvelopeCurve = 0;\n        this.rcbEnvelopeAmplitude = 0;\n        this.rcbEnvelopeAttackIndex = 0;\n        this.rcbEnvelopeReleaseIndex = 0;\n        this.rcbEnvelopeSustain = 0;\n    }\n    initializeParabolicEnvelope(durationInSamples, amplitude) {\n        this.parabolicEnvelopeAmplitude = 0;\n        const invDuration = 1.0 / durationInSamples;\n        const invDurationSquared = invDuration * invDuration;\n        this.parabolicEnvelopeSlope = 4.0 * amplitude * (invDuration - invDurationSquared);\n        this.parabolicEnvelopeCurve = -8.0 * amplitude * invDurationSquared;\n    }\n    updateParabolicEnvelope() {\n        this.parabolicEnvelopeAmplitude += this.parabolicEnvelopeSlope;\n        this.parabolicEnvelopeSlope += this.parabolicEnvelopeCurve;\n    }\n    initializeRCBEnvelope(durationInSamples, amplitude) {\n        this.rcbEnvelopeAttackIndex = Math.floor(durationInSamples / 6);\n        this.rcbEnvelopeSustain = amplitude;\n        this.rcbEnvelopeReleaseIndex = Math.floor(durationInSamples * 5 / 6);\n    }\n    updateRCBEnvelope() {\n        if (this.ageInSamples < this.rcbEnvelopeAttackIndex) {\n            this.rcbEnvelopeAmplitude = (1.0 + Math.cos(Math.PI + (Math.PI * (this.ageInSamples / this.rcbEnvelopeAttackIndex) * (this.rcbEnvelopeSustain / 2.0))));\n        }\n        else if (this.ageInSamples > this.rcbEnvelopeReleaseIndex) {\n            this.rcbEnvelopeAmplitude = (1.0 + Math.cos(Math.PI * ((this.ageInSamples - this.rcbEnvelopeReleaseIndex) / this.rcbEnvelopeAttackIndex)) * (this.rcbEnvelopeSustain / 2.0));\n        }\n    }\n    addDelay(delay) {\n        this.delay = delay;\n    }\n}\nexport class FilterControlPoint {\n    constructor() {\n        this.freq = 0;\n        this.gain = Config.filterGainCenter;\n        this.type = 2;\n    }\n    set(freqSetting, gainSetting) {\n        this.freq = freqSetting;\n        this.gain = gainSetting;\n    }\n    getHz() {\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\n    }\n    static getHzFromSettingValue(value) {\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\n    }\n    static getSettingValueFromHz(hz) {\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\n    }\n    static getRoundedSettingValueFromHz(hz) {\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\n    }\n    getLinearGain(peakMult = 1.0) {\n        const power = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        const neutral = (this.type == 2) ? 0.0 : -0.5;\n        const interpolatedPower = neutral + (power - neutral) * peakMult;\n        return Math.pow(2.0, interpolatedPower);\n    }\n    static getRoundedSettingValueFromLinearGain(linearGain) {\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\n    }\n    toCoefficients(filter, sampleRate, freqMult = 1.0, peakMult = 1.0) {\n        const cornerRadiansPerSample = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\n        const linearGain = this.getLinearGain(peakMult);\n        switch (this.type) {\n            case 0:\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case 1:\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case 2:\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\n                break;\n            default:\n                throw new Error();\n        }\n    }\n    getVolumeCompensationMult() {\n        const octave = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\n        const gainPow = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        switch (this.type) {\n            case 0:\n                const freqRelativeTo8khz = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\n                const warpedFreq = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\n                const warpedOctave = Math.log2(warpedFreq);\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\n            case 1:\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\n            case 2:\n                const distanceFromCenter = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\n                const freqLoudness = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\n            default:\n                throw new Error();\n        }\n    }\n}\nexport class FilterSettings {\n    constructor() {\n        this.controlPoints = [];\n        this.controlPointCount = 0;\n        this.reset();\n    }\n    reset() {\n        this.controlPointCount = 0;\n    }\n    addPoint(type, freqSetting, gainSetting) {\n        let controlPoint;\n        if (this.controlPoints.length <= this.controlPointCount) {\n            controlPoint = new FilterControlPoint();\n            this.controlPoints[this.controlPointCount] = controlPoint;\n        }\n        else {\n            controlPoint = this.controlPoints[this.controlPointCount];\n        }\n        this.controlPointCount++;\n        controlPoint.type = type;\n        controlPoint.set(freqSetting, gainSetting);\n    }\n    toJsonObject() {\n        const filterArray = [];\n        for (let i = 0; i < this.controlPointCount; i++) {\n            const point = this.controlPoints[i];\n            filterArray.push({\n                \"type\": Config.filterTypeNames[point.type],\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\n            });\n        }\n        return filterArray;\n    }\n    fromJsonObject(filterObject) {\n        this.controlPoints.length = 0;\n        if (filterObject) {\n            for (const pointObject of filterObject) {\n                const point = new FilterControlPoint();\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\n                if (point.type == -1)\n                    point.type = 2;\n                if (pointObject[\"cutoffHz\"] != undefined) {\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\n                }\n                else {\n                    point.freq = 0;\n                }\n                if (pointObject[\"linearGain\"] != undefined) {\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\n                }\n                else {\n                    point.gain = Config.filterGainCenter;\n                }\n                this.controlPoints.push(point);\n            }\n        }\n        this.controlPointCount = this.controlPoints.length;\n    }\n    static filtersCanMorph(filterA, filterB) {\n        if (filterA.controlPointCount != filterB.controlPointCount)\n            return false;\n        for (let i = 0; i < filterA.controlPointCount; i++) {\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\n                return false;\n        }\n        return true;\n    }\n    static lerpFilters(filterA, filterB, pos) {\n        let lerpedFilter = new FilterSettings();\n        if (filterA == null) {\n            return filterA;\n        }\n        if (filterB == null) {\n            return filterB;\n        }\n        pos = Math.max(0, Math.min(1, pos));\n        if (this.filtersCanMorph(filterA, filterB)) {\n            for (let i = 0; i < filterA.controlPointCount; i++) {\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\n            }\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\n            return lerpedFilter;\n        }\n        else {\n            return (pos >= 1) ? filterB : filterA;\n        }\n    }\n    convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyEnv) {\n        this.reset();\n        const legacyFilterCutoffMaxHz = 8000;\n        const legacyFilterMax = 0.95;\n        const legacyFilterMaxRadians = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance = 0.95;\n        const legacyFilterCutoffRange = 11;\n        const legacyFilterResonanceRange = 8;\n        const resonant = (legacyResonanceSetting > 1);\n        const firstOrder = (legacyResonanceSetting == 0);\n        const cutoffAtMax = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        const envDecays = (legacyEnv.type == 5 || legacyEnv.type == 6 || legacyEnv.type == 10 || legacyEnv.type == 1);\n        const standardSampleRate = 48000;\n        const legacyHz = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n        if (legacyEnv.type == 0 && !resonant && cutoffAtMax) {\n        }\n        else if (firstOrder) {\n            const extraOctaves = 3.5;\n            const targetRadians = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians = 2.0 * Math.PI * finalHz / standardSampleRate;\n            const legacyFilter = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians = response.magnitude();\n            let logGain = Math.log2(legacyFilterGainAtNewRadians);\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            if (envDecays)\n                logGain = Math.min(logGain, -1.0);\n            const convertedGain = Math.pow(2.0, logGain);\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n        else {\n            const intendedGain = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain = 0.5 / intendedGain;\n            const maxRadians = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio = legacyRadians / maxRadians;\n            const targetRadians = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz;\n            if (envDecays) {\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\n            }\n            else {\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            }\n            const freqSetting = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            let legacyFilterGain;\n            if (envDecays) {\n                legacyFilterGain = intendedGain;\n            }\n            else {\n                const legacyFilter = new FilterCoefficients();\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n                const response = new FrequencyResponse();\n                response.analyze(legacyFilter, curvedRadians);\n                legacyFilterGain = response.magnitude();\n            }\n            if (!resonant)\n                legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n        this.controlPoints.length = this.controlPointCount;\n    }\n    convertLegacySettingsForSynth(legacyCutoffSetting, legacyResonanceSetting, allowFirstOrder = false) {\n        this.reset();\n        const legacyFilterCutoffMaxHz = 8000;\n        const legacyFilterMax = 0.95;\n        const legacyFilterMaxRadians = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance = 0.95;\n        const legacyFilterCutoffRange = 11;\n        const legacyFilterResonanceRange = 8;\n        const firstOrder = (legacyResonanceSetting == 0 && allowFirstOrder);\n        const standardSampleRate = 48000;\n        const legacyHz = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n        if (firstOrder) {\n            const extraOctaves = 3.5;\n            const targetRadians = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians = 2.0 * Math.PI * finalHz / standardSampleRate;\n            const legacyFilter = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians = response.magnitude();\n            let logGain = Math.log2(legacyFilterGainAtNewRadians);\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            const convertedGain = Math.pow(2.0, logGain);\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n        else {\n            const intendedGain = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain = 0.5 / intendedGain;\n            const maxRadians = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio = legacyRadians / maxRadians;\n            const targetRadians = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz;\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting = FilterControlPoint.getSettingValueFromHz(curvedHz);\n            let legacyFilterGain;\n            const legacyFilter = new FilterCoefficients();\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n            const response = new FrequencyResponse();\n            response.analyze(legacyFilter, curvedRadians);\n            legacyFilterGain = response.magnitude();\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n    }\n}\nexport class EnvelopeSettings {\n    constructor(isNoiseEnvelope) {\n        this.isNoiseEnvelope = isNoiseEnvelope;\n        this.target = 0;\n        this.index = 0;\n        this.envelope = 0;\n        this.perEnvelopeSpeed = Config.envelopes[this.envelope].speed;\n        this.perEnvelopeLowerBound = 0;\n        this.perEnvelopeUpperBound = 1;\n        this.tempEnvelopeSpeed = null;\n        this.tempEnvelopeLowerBound = null;\n        this.tempEnvelopeUpperBound = null;\n        this.steps = 2;\n        this.seed = 2;\n        this.waveform = 0;\n        this.discrete = false;\n        this.reset();\n    }\n    reset() {\n        this.target = 0;\n        this.index = 0;\n        this.envelope = 0;\n        this.pitchEnvelopeStart = 0;\n        this.pitchEnvelopeEnd = this.isNoiseEnvelope ? Config.drumCount - 1 : Config.maxPitch;\n        this.inverse = false;\n        this.isNoiseEnvelope = false;\n        this.perEnvelopeSpeed = Config.envelopes[this.envelope].speed;\n        this.perEnvelopeLowerBound = 0;\n        this.perEnvelopeUpperBound = 1;\n        this.tempEnvelopeSpeed = null;\n        this.tempEnvelopeLowerBound = null;\n        this.tempEnvelopeUpperBound = null;\n        this.steps = 2;\n        this.seed = 2;\n        this.waveform = 0;\n        this.discrete = false;\n    }\n    toJsonObject() {\n        const envelopeObject = {\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\n            \"envelope\": Config.newEnvelopes[this.envelope].name,\n            \"inverse\": this.inverse,\n            \"perEnvelopeSpeed\": this.perEnvelopeSpeed,\n            \"perEnvelopeLowerBound\": this.perEnvelopeLowerBound,\n            \"perEnvelopeUpperBound\": this.perEnvelopeUpperBound,\n            \"discrete\": this.discrete,\n        };\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\n            envelopeObject[\"index\"] = this.index;\n        }\n        if (Config.newEnvelopes[this.envelope].name == \"pitch\") {\n            envelopeObject[\"pitchEnvelopeStart\"] = this.pitchEnvelopeStart;\n            envelopeObject[\"pitchEnvelopeEnd\"] = this.pitchEnvelopeEnd;\n        }\n        else if (Config.newEnvelopes[this.envelope].name == \"random\") {\n            envelopeObject[\"steps\"] = this.steps;\n            envelopeObject[\"seed\"] = this.seed;\n            envelopeObject[\"waveform\"] = this.waveform;\n        }\n        else if (Config.newEnvelopes[this.envelope].name == \"lfo\") {\n            envelopeObject[\"waveform\"] = this.waveform;\n            envelopeObject[\"steps\"] = this.steps;\n        }\n        return envelopeObject;\n    }\n    fromJsonObject(envelopeObject, format) {\n        this.reset();\n        let target = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\n        if (target == null)\n            target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n        this.target = target.index;\n        let envelope = Config.envelopes.dictionary[\"none\"];\n        let isTremolo2 = false;\n        if (format == \"slarmoosbox\") {\n            if (envelopeObject[\"envelope\"] == \"tremolo2\") {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = true;\n            }\n            else if (envelopeObject[\"envelope\"] == \"tremolo\") {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = false;\n            }\n            else {\n                envelope = Config.newEnvelopes.dictionary[envelopeObject[\"envelope\"]];\n            }\n        }\n        else {\n            if (Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type == 9) {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = true;\n            }\n            else if (Config.newEnvelopes[Math.max(Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1, 0)].index > 8) {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1];\n            }\n            else {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type];\n            }\n        }\n        if (envelope == undefined) {\n            if (Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type == 9) {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = true;\n            }\n            else if (Config.newEnvelopes[Math.max(Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1, 0)].index > 8) {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1];\n            }\n            else {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type];\n            }\n        }\n        if (envelope == null)\n            envelope = Config.envelopes.dictionary[\"none\"];\n        this.envelope = envelope.index;\n        if (envelopeObject[\"index\"] != undefined) {\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\n        }\n        else {\n            this.index = 0;\n        }\n        if (envelopeObject[\"pitchEnvelopeStart\"] != undefined) {\n            this.pitchEnvelopeStart = clamp(0, this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch + 1, envelopeObject[\"pitchEnvelopeStart\"]);\n        }\n        else {\n            this.pitchEnvelopeStart = 0;\n        }\n        if (envelopeObject[\"pitchEnvelopeEnd\"] != undefined) {\n            this.pitchEnvelopeEnd = clamp(0, this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch + 1, envelopeObject[\"pitchEnvelopeEnd\"]);\n        }\n        else {\n            this.pitchEnvelopeEnd = this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch;\n        }\n        this.inverse = Boolean(envelopeObject[\"inverse\"]);\n        if (envelopeObject[\"perEnvelopeSpeed\"] != undefined) {\n            this.perEnvelopeSpeed = envelopeObject[\"perEnvelopeSpeed\"];\n        }\n        else {\n            this.perEnvelopeSpeed = Config.envelopes.dictionary[envelopeObject[\"envelope\"]].speed;\n        }\n        if (envelopeObject[\"perEnvelopeLowerBound\"] != undefined) {\n            this.perEnvelopeLowerBound = clamp(Config.perEnvelopeBoundMin, Config.perEnvelopeBoundMax + 1, envelopeObject[\"perEnvelopeLowerBound\"]);\n        }\n        else {\n            this.perEnvelopeLowerBound = 0;\n        }\n        if (envelopeObject[\"perEnvelopeUpperBound\"] != undefined) {\n            this.perEnvelopeUpperBound = clamp(Config.perEnvelopeBoundMin, Config.perEnvelopeBoundMax + 1, envelopeObject[\"perEnvelopeUpperBound\"]);\n        }\n        else {\n            this.perEnvelopeUpperBound = 1;\n        }\n        if (isTremolo2) {\n            if (this.inverse) {\n                this.perEnvelopeUpperBound = Math.floor((this.perEnvelopeUpperBound / 2) * 10) / 10;\n                this.perEnvelopeLowerBound = Math.floor((this.perEnvelopeLowerBound / 2) * 10) / 10;\n            }\n            else {\n                this.perEnvelopeUpperBound = Math.floor((0.5 + (this.perEnvelopeUpperBound - this.perEnvelopeLowerBound) / 2) * 10) / 10;\n                this.perEnvelopeLowerBound = 0.5;\n            }\n        }\n        if (envelopeObject[\"steps\"] != undefined) {\n            this.steps = clamp(1, Config.randomEnvelopeStepsMax + 1, envelopeObject[\"steps\"]);\n        }\n        else {\n            this.steps = 2;\n        }\n        if (envelopeObject[\"seed\"] != undefined) {\n            this.seed = clamp(1, Config.randomEnvelopeSeedMax + 1, envelopeObject[\"seed\"]);\n        }\n        else {\n            this.seed = 2;\n        }\n        if (envelopeObject[\"waveform\"] != undefined) {\n            this.waveform = envelopeObject[\"waveform\"];\n        }\n        else {\n            this.waveform = 0;\n        }\n        if (envelopeObject[\"discrete\"] != undefined) {\n            this.discrete = envelopeObject[\"discrete\"];\n        }\n        else {\n            this.discrete = false;\n        }\n    }\n}\nexport class Instrument {\n    constructor(isNoiseChannel, isModChannel) {\n        this.type = 0;\n        this.preset = 0;\n        this.chipWave = 2;\n        this.isUsingAdvancedLoopControls = false;\n        this.chipWaveLoopStart = 0;\n        this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n        this.chipWaveLoopMode = 0;\n        this.chipWavePlayBackwards = false;\n        this.chipWaveStartOffset = 0;\n        this.chipNoise = 1;\n        this.eqFilter = new FilterSettings();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        this.noteFilter = new FilterSettings();\n        this.noteFilterType = false;\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.noteFilterSimplePeak = 0;\n        this.eqSubFilters = [];\n        this.noteSubFilters = [];\n        this.envelopes = [];\n        this.fadeIn = 0;\n        this.fadeOut = Config.fadeOutNeutral;\n        this.envelopeCount = 0;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        this.pitchShift = 0;\n        this.detune = 0;\n        this.vibrato = 0;\n        this.interval = 0;\n        this.vibratoDepth = 0;\n        this.vibratoSpeed = 10;\n        this.vibratoDelay = 0;\n        this.vibratoType = 0;\n        this.envelopeSpeed = 12;\n        this.unison = 0;\n        this.unisonVoices = 1;\n        this.unisonSpread = 0.0;\n        this.unisonOffset = 0.0;\n        this.unisonExpression = 1.4;\n        this.unisonSign = 1.0;\n        this.effects = 0;\n        this.chord = 1;\n        this.volume = 0;\n        this.pan = Config.panCenter;\n        this.panDelay = 0;\n        this.arpeggioSpeed = 12;\n        this.monoChordTone = 0;\n        this.fastTwoNoteArp = false;\n        this.legacyTieOver = false;\n        this.clicklessTransition = false;\n        this.aliases = false;\n        this.pulseWidth = Config.pulseWidthRange;\n        this.decimalOffset = 0;\n        this.supersawDynamism = Config.supersawDynamismMax;\n        this.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n        this.supersawShape = 0;\n        this.stringSustain = 10;\n        this.stringSustainType = 1;\n        this.distortion = 0;\n        this.bitcrusherFreq = 0;\n        this.bitcrusherQuantization = 0;\n        this.ringModulation = Config.ringModRange >> 1;\n        this.ringModulationHz = Config.ringModHzRange >> 1;\n        this.ringModWaveformIndex = 0;\n        this.ringModPulseWidth = Config.pwmOperatorWaves.length >> 1;\n        this.ringModHzOffset = 200;\n        this.granular = 4;\n        this.grainSize = (Config.grainSizeMax - Config.grainSizeMin) / Config.grainSizeStep;\n        this.grainAmounts = Config.grainAmountsMax;\n        this.grainRange = 40;\n        this.chorus = 0;\n        this.reverb = 0;\n        this.echoSustain = 0;\n        this.echoDelay = 0;\n        this.algorithm = 0;\n        this.feedbackType = 0;\n        this.algorithm6Op = 1;\n        this.feedbackType6Op = 1;\n        this.customAlgorithm = new CustomAlgorithm();\n        this.customFeedbackType = new CustomFeedBack();\n        this.feedbackAmplitude = 0;\n        this.customChipWave = new Float32Array(64);\n        this.customChipWaveIntegral = new Float32Array(65);\n        this.operators = [];\n        this.harmonicsWave = new HarmonicsWave();\n        this.drumsetEnvelopes = [];\n        this.drumsetSpectrumWaves = [];\n        this.modChannels = [];\n        this.modInstruments = [];\n        this.modulators = [];\n        this.modFilterTypes = [];\n        this.modEnvelopeNumbers = [];\n        this.invalidModulators = [];\n        this.isNoiseInstrument = false;\n        if (isModChannel) {\n            for (let mod = 0; mod < Config.modCount; mod++) {\n                this.modChannels.push(-2);\n                this.modInstruments.push(0);\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n            }\n        }\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\n        for (let i = 0; i < Config.operatorCount + 2; i++) {\n            this.operators[i] = new Operator(i);\n        }\n        for (let i = 0; i < Config.drumCount; i++) {\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n        }\n        for (let i = 0; i < 64; i++) {\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\n        }\n        let sum = 0.0;\n        for (let i = 0; i < this.customChipWave.length; i++) {\n            sum += this.customChipWave[i];\n        }\n        const average = sum / this.customChipWave.length;\n        let cumulative = 0;\n        let wavePrev = 0;\n        for (let i = 0; i < this.customChipWave.length; i++) {\n            cumulative += wavePrev;\n            wavePrev = this.customChipWave[i] - average;\n            this.customChipWaveIntegral[i] = cumulative;\n        }\n        this.customChipWaveIntegral[64] = 0.0;\n        this.isNoiseInstrument = isNoiseChannel;\n    }\n    setTypeAndReset(type, isNoiseChannel, isModChannel) {\n        if (isModChannel)\n            type = 10;\n        this.type = type;\n        this.preset = type;\n        this.volume = 0;\n        this.effects = (1 << 2);\n        this.chorus = Config.chorusRange - 1;\n        this.reverb = 0;\n        this.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\n        this.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\n        this.eqFilter.reset();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        for (let i = 0; i < Config.filterMorphCount; i++) {\n            this.eqSubFilters[i] = null;\n            this.noteSubFilters[i] = null;\n        }\n        this.noteFilter.reset();\n        this.noteFilterType = false;\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.noteFilterSimplePeak = 0;\n        this.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\n        this.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5);\n        this.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\n        this.ringModulation = Config.ringModRange >> 1;\n        this.ringModulationHz = Config.ringModHzRange >> 1;\n        this.ringModWaveformIndex = 0;\n        this.ringModPulseWidth = Config.pwmOperatorWaves.length >> 1;\n        this.ringModHzOffset = 200;\n        this.granular = 4;\n        this.grainSize = (Config.grainSizeMax - Config.grainSizeMin) / Config.grainSizeStep;\n        this.grainAmounts = Config.grainAmountsMax;\n        this.grainRange = 40;\n        this.pan = Config.panCenter;\n        this.panDelay = 0;\n        this.pitchShift = Config.pitchShiftCenter;\n        this.detune = Config.detuneCenter;\n        this.vibrato = 0;\n        this.unison = 0;\n        this.stringSustain = 10;\n        this.stringSustainType = Config.enableAcousticSustain ? 1 : 0;\n        this.clicklessTransition = false;\n        this.arpeggioSpeed = 12;\n        this.monoChordTone = 1;\n        this.envelopeSpeed = 12;\n        this.legacyTieOver = false;\n        this.aliases = false;\n        this.fadeIn = 0;\n        this.fadeOut = Config.fadeOutNeutral;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        this.envelopeCount = 0;\n        this.isNoiseInstrument = isNoiseChannel;\n        switch (type) {\n            case 0:\n                this.chipWave = 2;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.isUsingAdvancedLoopControls = false;\n                this.chipWaveLoopStart = 0;\n                this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                this.chipWaveLoopMode = 0;\n                this.chipWavePlayBackwards = false;\n                this.chipWaveStartOffset = 0;\n                break;\n            case 9:\n                this.chipWave = 2;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                for (let i = 0; i < 64; i++) {\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\n                }\n                let sum = 0.0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average = sum / this.customChipWave.length;\n                let cumulative = 0;\n                let wavePrev = 0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n                this.customChipWaveIntegral[64] = 0.0;\n                break;\n            case 1:\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.feedbackAmplitude = 0;\n                for (let i = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case 11:\n                this.transition = 1;\n                this.vibrato = 0;\n                this.effects = 1;\n                this.chord = 3;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.algorithm6Op = 1;\n                this.feedbackType6Op = 1;\n                this.customAlgorithm.fromPreset(1);\n                this.feedbackAmplitude = 0;\n                for (let i = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case 2:\n                this.chipNoise = 1;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                break;\n            case 3:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.spectrumWave.reset(isNoiseChannel);\n                break;\n            case 4:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                for (let i = 0; i < Config.drumCount; i++) {\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n                    }\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\n                }\n                break;\n            case 5:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case 6:\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.pulseWidth = Config.pulseWidthRange;\n                this.decimalOffset = 0;\n                break;\n            case 7:\n                this.chord = Config.chords.dictionary[\"strum\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case 10:\n                this.transition = 0;\n                this.vibrato = 0;\n                this.interval = 0;\n                this.effects = 0;\n                this.chord = 0;\n                this.modChannels = [];\n                this.modInstruments = [];\n                this.modulators = [];\n                for (let mod = 0; mod < Config.modCount; mod++) {\n                    this.modChannels.push(-2);\n                    this.modInstruments.push(0);\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n                    this.invalidModulators[mod] = false;\n                    this.modFilterTypes[mod] = 0;\n                    this.modEnvelopeNumbers[mod] = 0;\n                }\n                break;\n            case 8:\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.supersawDynamism = Config.supersawDynamismMax;\n                this.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n                this.supersawShape = 0;\n                this.pulseWidth = Config.pulseWidthRange - 1;\n                this.decimalOffset = 0;\n                break;\n            default:\n                throw new Error(\"Unrecognized instrument type: \" + type);\n        }\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n            this.effects = (this.effects | (1 << 11));\n        }\n    }\n    convertLegacySettings(legacySettings, forceSimpleFilter) {\n        let legacyCutoffSetting = legacySettings.filterCutoff;\n        let legacyResonanceSetting = legacySettings.filterResonance;\n        let legacyFilterEnv = legacySettings.filterEnvelope;\n        let legacyPulseEnv = legacySettings.pulseEnvelope;\n        let legacyOperatorEnvelopes = legacySettings.operatorEnvelopes;\n        let legacyFeedbackEnv = legacySettings.feedbackEnvelope;\n        if (legacyCutoffSetting == undefined)\n            legacyCutoffSetting = (this.type == 0) ? 6 : 10;\n        if (legacyResonanceSetting == undefined)\n            legacyResonanceSetting = 0;\n        if (legacyFilterEnv == undefined)\n            legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n        if (legacyPulseEnv == undefined)\n            legacyPulseEnv = Config.envelopes.dictionary[(this.type == 6) ? \"twang 2\" : \"none\"];\n        if (legacyOperatorEnvelopes == undefined)\n            legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == 1) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\n        if (legacyFeedbackEnv == undefined)\n            legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\n        const legacyFilterCutoffRange = 11;\n        const cutoffAtMax = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        if (cutoffAtMax && legacyFilterEnv.type == 4)\n            legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n        const carrierCount = Config.algorithms[this.algorithm].carrierCount;\n        let noCarriersControlledByNoteSize = true;\n        let allCarriersControlledByNoteSize = true;\n        let noteSizeControlsSomethingElse = (legacyFilterEnv.type == 1) || (legacyPulseEnv.type == 1);\n        if (this.type == 1 || this.type == 11) {\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == 1);\n            for (let i = 0; i < legacyOperatorEnvelopes.length; i++) {\n                if (i < carrierCount) {\n                    if (legacyOperatorEnvelopes[i].type != 1) {\n                        allCarriersControlledByNoteSize = false;\n                    }\n                    else {\n                        noCarriersControlledByNoteSize = false;\n                    }\n                }\n                else {\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == 1);\n                }\n            }\n        }\n        this.envelopeCount = 0;\n        if (this.type == 1 || this.type == 11) {\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index, false);\n            }\n            else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index, false);\n            }\n        }\n        if (legacyFilterEnv.type == 0) {\n            this.noteFilter.reset();\n            this.noteFilterType = false;\n            this.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects &= ~(1 << 5);\n            if (forceSimpleFilter || this.eqFilterType) {\n                this.eqFilterType = true;\n                this.eqFilterSimpleCut = legacyCutoffSetting;\n                this.eqFilterSimplePeak = legacyResonanceSetting;\n            }\n        }\n        else {\n            this.eqFilter.reset();\n            this.eqFilterType = false;\n            this.noteFilterType = false;\n            this.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects |= 1 << 5;\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index, false);\n            if (forceSimpleFilter || this.noteFilterType) {\n                this.noteFilterType = true;\n                this.noteFilterSimpleCut = legacyCutoffSetting;\n                this.noteFilterSimplePeak = legacyResonanceSetting;\n            }\n        }\n        if (legacyPulseEnv.type != 0) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index, false);\n        }\n        for (let i = 0; i < legacyOperatorEnvelopes.length; i++) {\n            if (i < carrierCount && allCarriersControlledByNoteSize)\n                continue;\n            if (legacyOperatorEnvelopes[i].type != 0) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index, false);\n            }\n        }\n        if (legacyFeedbackEnv.type != 0) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index, false);\n        }\n    }\n    toJsonObject() {\n        const instrumentObject = {\n            \"type\": Config.instrumentTypeNames[this.type],\n            \"volume\": this.volume,\n            \"eqFilter\": this.eqFilter.toJsonObject(),\n            \"eqFilterType\": this.eqFilterType,\n            \"eqSimpleCut\": this.eqFilterSimpleCut,\n            \"eqSimplePeak\": this.eqFilterSimplePeak,\n            \"envelopeSpeed\": this.envelopeSpeed\n        };\n        if (this.preset != this.type) {\n            instrumentObject[\"preset\"] = this.preset;\n        }\n        for (let i = 0; i < Config.filterMorphCount; i++) {\n            if (this.eqSubFilters[i] != null)\n                instrumentObject[\"eqSubFilters\" + i] = this.eqSubFilters[i].toJsonObject();\n        }\n        const effects = [];\n        for (const effect of Config.effectOrder) {\n            if (this.effects & (1 << effect)) {\n                effects.push(Config.effectNames[effect]);\n            }\n        }\n        instrumentObject[\"effects\"] = effects;\n        if (effectsIncludeTransition(this.effects)) {\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\n        }\n        if (effectsIncludeChord(this.effects)) {\n            instrumentObject[\"chord\"] = this.getChord().name;\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\n            instrumentObject[\"monoChordTone\"] = this.monoChordTone;\n        }\n        if (effectsIncludePitchShift(this.effects)) {\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\n        }\n        if (effectsIncludeDetune(this.effects)) {\n            instrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune);\n        }\n        if (effectsIncludeVibrato(this.effects)) {\n            if (this.vibrato == -1) {\n                this.vibrato = 5;\n            }\n            if (this.vibrato != 5) {\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\n            }\n            else {\n                instrumentObject[\"vibrato\"] = \"custom\";\n            }\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\n        }\n        if (effectsIncludeNoteFilter(this.effects)) {\n            instrumentObject[\"noteFilterType\"] = this.noteFilterType;\n            instrumentObject[\"noteSimpleCut\"] = this.noteFilterSimpleCut;\n            instrumentObject[\"noteSimplePeak\"] = this.noteFilterSimplePeak;\n            instrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null)\n                    instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i].toJsonObject();\n            }\n        }\n        if (effectsIncludeGranular(this.effects)) {\n            instrumentObject[\"granular\"] = this.granular;\n            instrumentObject[\"grainSize\"] = this.grainSize;\n            instrumentObject[\"grainAmounts\"] = this.grainAmounts;\n            instrumentObject[\"grainRange\"] = this.grainRange;\n        }\n        if (effectsIncludeRingModulation(this.effects)) {\n            instrumentObject[\"ringMod\"] = Math.round(100 * this.ringModulation / (Config.ringModRange - 1));\n            instrumentObject[\"ringModHz\"] = Math.round(100 * this.ringModulationHz / (Config.ringModHzRange - 1));\n            instrumentObject[\"ringModWaveformIndex\"] = this.ringModWaveformIndex;\n            instrumentObject[\"ringModPulseWidth\"] = Math.round(100 * this.ringModPulseWidth / (Config.pulseWidthRange - 1));\n            instrumentObject[\"ringModHzOffset\"] = Math.round(100 * this.ringModHzOffset / (Config.rmHzOffsetMax));\n        }\n        if (effectsIncludeDistortion(this.effects)) {\n            instrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\n            instrumentObject[\"aliases\"] = this.aliases;\n        }\n        if (effectsIncludeBitcrusher(this.effects)) {\n            instrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\n            instrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\n        }\n        if (effectsIncludePanning(this.effects)) {\n            instrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\n            instrumentObject[\"panDelay\"] = this.panDelay;\n        }\n        if (effectsIncludeChorus(this.effects)) {\n            instrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\n        }\n        if (effectsIncludeEcho(this.effects)) {\n            instrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\n            instrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\n        }\n        if (effectsIncludeReverb(this.effects)) {\n            instrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\n        }\n        if (this.type != 4) {\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\n            instrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\n        }\n        if (this.type == 5 || this.type == 7) {\n            instrumentObject[\"harmonics\"] = [];\n            for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\n            }\n        }\n        if (this.type == 2) {\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 3) {\n            instrumentObject[\"spectrum\"] = [];\n            for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\n            }\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 4) {\n            instrumentObject[\"drums\"] = [];\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            for (let j = 0; j < Config.drumCount; j++) {\n                const spectrum = [];\n                for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\n                }\n                instrumentObject[\"drums\"][j] = {\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\n                    \"spectrum\": spectrum,\n                };\n            }\n        }\n        else if (this.type == 0) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"isUsingAdvancedLoopControls\"] = this.isUsingAdvancedLoopControls;\n            instrumentObject[\"chipWaveLoopStart\"] = this.chipWaveLoopStart;\n            instrumentObject[\"chipWaveLoopEnd\"] = this.chipWaveLoopEnd;\n            instrumentObject[\"chipWaveLoopMode\"] = this.chipWaveLoopMode;\n            instrumentObject[\"chipWavePlayBackwards\"] = this.chipWavePlayBackwards;\n            instrumentObject[\"chipWaveStartOffset\"] = this.chipWaveStartOffset;\n        }\n        else if (this.type == 6) {\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 8) {\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n            instrumentObject[\"dynamism\"] = Math.round(100 * this.supersawDynamism / Config.supersawDynamismMax);\n            instrumentObject[\"spread\"] = Math.round(100 * this.supersawSpread / Config.supersawSpreadMax);\n            instrumentObject[\"shape\"] = Math.round(100 * this.supersawShape / Config.supersawShapeMax);\n        }\n        else if (this.type == 7) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\n            if (Config.enableAcousticSustain) {\n                instrumentObject[\"stringSustainType\"] = Config.sustainTypeNames[this.stringSustainType];\n            }\n        }\n        else if (this.type == 5) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 1 || this.type == 11) {\n            const operatorArray = [];\n            for (const operator of this.operators) {\n                operatorArray.push({\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\n                    \"amplitude\": operator.amplitude,\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\n                    \"pulseWidth\": operator.pulseWidth,\n                });\n            }\n            if (this.type == 1) {\n                instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                instrumentObject[\"operators\"] = operatorArray;\n            }\n            else {\n                instrumentObject[\"algorithm\"] = Config.algorithms6Op[this.algorithm6Op].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks6Op[this.feedbackType6Op].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                if (this.algorithm6Op == 0) {\n                    const customAlgorithm = {};\n                    customAlgorithm[\"mods\"] = this.customAlgorithm.modulatedBy;\n                    customAlgorithm[\"carrierCount\"] = this.customAlgorithm.carrierCount;\n                    instrumentObject[\"customAlgorithm\"] = customAlgorithm;\n                }\n                if (this.feedbackType6Op == 0) {\n                    const customFeedback = {};\n                    customFeedback[\"mods\"] = this.customFeedbackType.indices;\n                    instrumentObject[\"customFeedback\"] = customFeedback;\n                }\n                instrumentObject[\"operators\"] = operatorArray;\n            }\n        }\n        else if (this.type == 9) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\n            for (let i = 0; i < this.customChipWave.length; i++) {\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\n            }\n        }\n        else if (this.type == 10) {\n            instrumentObject[\"modChannels\"] = [];\n            instrumentObject[\"modInstruments\"] = [];\n            instrumentObject[\"modSettings\"] = [];\n            instrumentObject[\"modFilterTypes\"] = [];\n            instrumentObject[\"modEnvelopeNumbers\"] = [];\n            for (let mod = 0; mod < Config.modCount; mod++) {\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\n                instrumentObject[\"modFilterTypes\"][mod] = this.modFilterTypes[mod];\n                instrumentObject[\"modEnvelopeNumbers\"][mod] = this.modEnvelopeNumbers[mod];\n            }\n        }\n        else {\n            throw new Error(\"Unrecognized instrument type\");\n        }\n        const envelopes = [];\n        for (let i = 0; i < this.envelopeCount; i++) {\n            envelopes.push(this.envelopes[i].toJsonObject());\n        }\n        instrumentObject[\"envelopes\"] = envelopes;\n        return instrumentObject;\n    }\n    fromJsonObject(instrumentObject, isNoiseChannel, isModChannel, useSlowerRhythm, useFastTwoNoteArp, legacyGlobalReverb = 0, jsonFormat = Config.jsonFormat) {\n        if (instrumentObject == undefined)\n            instrumentObject = {};\n        const format = jsonFormat.toLowerCase();\n        let type = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\n        if ((format == \"synthbox\") && (instrumentObject[\"type\"] == \"FM\"))\n            type = Config.instrumentTypeNames.indexOf(\"FM6op\");\n        if (type == -1)\n            type = isModChannel ? 10 : (isNoiseChannel ? 2 : 0);\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\n        this.effects &= ~(1 << 2);\n        if (instrumentObject[\"preset\"] != undefined) {\n            this.preset = instrumentObject[\"preset\"] >>> 0;\n        }\n        if (instrumentObject[\"volume\"] != undefined) {\n            if (format == \"jummbox\" || format == \"midbox\" || format == \"synthbox\" || format == \"goldbox\" || format == \"paandorasbox\" || format == \"ultrabox\" || format == \"slarmoosbox\") {\n                this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\n            }\n            else {\n                this.volume = Math.round(-clamp(0, 8, Math.round(5 - (instrumentObject[\"volume\"] | 0) / 20)) * 25.0 / 7.0);\n            }\n        }\n        else {\n            this.volume = 0;\n        }\n        this.envelopeSpeed = instrumentObject[\"envelopeSpeed\"] != undefined ? clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, instrumentObject[\"envelopeSpeed\"] | 0) : 12;\n        if (Array.isArray(instrumentObject[\"effects\"])) {\n            let effects = 0;\n            for (let i = 0; i < instrumentObject[\"effects\"].length; i++) {\n                effects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\n            }\n            this.effects = (effects & ((1 << 15) - 1));\n        }\n        else {\n            const legacyEffectsNames = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\n            this.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\n            if (this.effects == -1)\n                this.effects = (this.type == 2) ? 0 : 1;\n        }\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        const transitionProperty = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"];\n        if (transitionProperty != undefined) {\n            let transition = Config.transitions.dictionary[transitionProperty];\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\n                const legacySettings = {\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                }[transitionProperty];\n                if (legacySettings != undefined) {\n                    transition = Config.transitions.dictionary[legacySettings.transition];\n                    this.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\n                    this.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\n                }\n            }\n            if (transition != undefined)\n                this.transition = transition.index;\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\n                this.effects = (this.effects | (1 << 10));\n            }\n        }\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\n            this.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\n        }\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\n            this.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\n        }\n        {\n            const chordProperty = instrumentObject[\"chord\"];\n            const legacyChordNames = { \"harmony\": \"simultaneous\" };\n            const chord = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\n            if (chord != undefined) {\n                this.chord = chord.index;\n            }\n            else {\n                if (this.type == 2) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                }\n                else if (this.type == 7) {\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\n                }\n                else if (this.type == 0) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                }\n                else if (this.type == 1 || this.type == 11) {\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                }\n                else {\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                }\n            }\n        }\n        this.unison = Config.unisons.dictionary[\"none\"].index;\n        const unisonProperty = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"];\n        if (unisonProperty != undefined) {\n            const legacyChorusNames = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\", \"error\": \"voiced\" };\n            const unison = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\n            if (unison != undefined)\n                this.unison = unison.index;\n            if (unisonProperty == \"custom\")\n                this.unison = Config.unisons.length;\n        }\n        this.unisonVoices = (instrumentObject[\"unisonVoices\"] == undefined) ? Config.unisons[this.unison].voices : instrumentObject[\"unisonVoices\"];\n        this.unisonSpread = (instrumentObject[\"unisonSpread\"] == undefined) ? Config.unisons[this.unison].spread : instrumentObject[\"unisonSpread\"];\n        this.unisonOffset = (instrumentObject[\"unisonOffset\"] == undefined) ? Config.unisons[this.unison].offset : instrumentObject[\"unisonOffset\"];\n        this.unisonExpression = (instrumentObject[\"unisonExpression\"] == undefined) ? Config.unisons[this.unison].expression : instrumentObject[\"unisonExpression\"];\n        this.unisonSign = (instrumentObject[\"unisonSign\"] == undefined) ? Config.unisons[this.unison].sign : instrumentObject[\"unisonSign\"];\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\n        }\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\n            this.effects = (this.effects | (1 << 11));\n        }\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\n        }\n        if (instrumentObject[\"octoff\"] != undefined) {\n            let potentialPitchShift = instrumentObject[\"octoff\"];\n            this.effects = (this.effects | (1 << 7));\n            if ((potentialPitchShift == \"+1 (octave)\") || (potentialPitchShift == \"+2 (2 octaves)\")) {\n                this.pitchShift = 24;\n            }\n            else if ((potentialPitchShift == \"+1/2 (fifth)\") || (potentialPitchShift == \"+1 1/2 (octave and fifth)\")) {\n                this.pitchShift = 18;\n            }\n            else if ((potentialPitchShift == \"-1 (octave)\") || (potentialPitchShift == \"-2 (2 octaves\")) {\n                this.pitchShift = 0;\n            }\n            else if ((potentialPitchShift == \"-1/2 (fifth)\") || (potentialPitchShift == \"-1 1/2 (octave and fifth)\")) {\n                this.pitchShift = 6;\n            }\n            else {\n                this.pitchShift = 12;\n            }\n        }\n        if (instrumentObject[\"detuneCents\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\n        }\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index;\n        const vibratoProperty = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"];\n        if (vibratoProperty != undefined) {\n            const legacyVibratoNames = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\n            const vibrato = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\n            if (vibrato != undefined)\n                this.vibrato = vibrato.index;\n            else if (vibratoProperty == \"custom\")\n                this.vibrato = Config.vibratos.length;\n            if (this.vibrato == Config.vibratos.length) {\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\n                this.vibratoType = instrumentObject[\"vibratoType\"];\n            }\n            else {\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\n                this.vibratoSpeed = 10;\n                this.vibratoType = Config.vibratos[this.vibrato].type;\n            }\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\n                this.effects = (this.effects | (1 << 9));\n            }\n        }\n        if (instrumentObject[\"pan\"] != undefined) {\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\n        }\n        else if (instrumentObject[\"ipan\"] != undefined) {\n            this.pan = clamp(0, Config.panMax + 1, Config.panCenter + (instrumentObject[\"ipan\"] * -50));\n        }\n        else {\n            this.pan = Config.panCenter;\n        }\n        if (this.pan != Config.panCenter) {\n            this.effects = (this.effects | (1 << 2));\n        }\n        if (instrumentObject[\"panDelay\"] != undefined) {\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\n        }\n        else {\n            this.panDelay = 0;\n        }\n        if (instrumentObject[\"detune\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\n        }\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\n            this.detune = Config.detuneCenter;\n        }\n        if (instrumentObject[\"ringMod\"] != undefined) {\n            this.ringModulation = clamp(0, Config.ringModRange, Math.round((Config.ringModRange - 1) * (instrumentObject[\"ringMod\"] | 0) / 100));\n        }\n        if (instrumentObject[\"ringModHz\"] != undefined) {\n            this.ringModulationHz = clamp(0, Config.ringModHzRange, Math.round((Config.ringModHzRange - 1) * (instrumentObject[\"ringModHz\"] | 0) / 100));\n        }\n        if (instrumentObject[\"ringModWaveformIndex\"] != undefined) {\n            this.ringModWaveformIndex = clamp(0, Config.operatorWaves.length, instrumentObject[\"ringModWaveformIndex\"]);\n        }\n        if (instrumentObject[\"ringModPulseWidth\"] != undefined) {\n            this.ringModPulseWidth = clamp(0, Config.pulseWidthRange, Math.round((Config.pulseWidthRange - 1) * (instrumentObject[\"ringModPulseWidth\"] | 0) / 100));\n        }\n        if (instrumentObject[\"ringModHzOffset\"] != undefined) {\n            this.ringModHzOffset = clamp(0, Config.rmHzOffsetMax, Math.round((Config.rmHzOffsetMax - 1) * (instrumentObject[\"ringModHzOffset\"] | 0) / 100));\n        }\n        if (instrumentObject[\"granular\"] != undefined) {\n            this.granular = instrumentObject[\"granular\"];\n        }\n        if (instrumentObject[\"grainSize\"] != undefined) {\n            this.grainSize = instrumentObject[\"grainSize\"];\n        }\n        if (instrumentObject[\"grainAmounts\"] != undefined) {\n            this.grainAmounts = instrumentObject[\"grainAmounts\"];\n        }\n        if (instrumentObject[\"grainRange\"] != undefined) {\n            this.grainRange = clamp(0, Config.grainRangeMax / Config.grainSizeStep + 1, instrumentObject[\"grainRange\"]);\n        }\n        if (instrumentObject[\"distortion\"] != undefined) {\n            this.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\n        }\n        if (instrumentObject[\"bitcrusherOctave\"] != undefined) {\n            this.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\n        }\n        if (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\n            this.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\n        }\n        if (instrumentObject[\"echoSustain\"] != undefined) {\n            this.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\n        }\n        if (instrumentObject[\"echoDelayBeats\"] != undefined) {\n            this.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\n        }\n        if (!isNaN(instrumentObject[\"chorus\"])) {\n            this.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\n        }\n        if (instrumentObject[\"reverb\"] != undefined) {\n            this.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\n        }\n        else {\n            this.reverb = legacyGlobalReverb;\n        }\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\n        }\n        else {\n            this.pulseWidth = Config.pulseWidthRange;\n        }\n        if (instrumentObject[\"decimalOffset\"] != undefined) {\n            this.decimalOffset = clamp(0, 99 + 1, Math.round(instrumentObject[\"decimalOffset\"]));\n        }\n        else {\n            this.decimalOffset = 0;\n        }\n        if (instrumentObject[\"dynamism\"] != undefined) {\n            this.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, Math.round(Config.supersawDynamismMax * (instrumentObject[\"dynamism\"] | 0) / 100));\n        }\n        else {\n            this.supersawDynamism = Config.supersawDynamismMax;\n        }\n        if (instrumentObject[\"spread\"] != undefined) {\n            this.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, Math.round(Config.supersawSpreadMax * (instrumentObject[\"spread\"] | 0) / 100));\n        }\n        else {\n            this.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n        }\n        if (instrumentObject[\"shape\"] != undefined) {\n            this.supersawShape = clamp(0, Config.supersawShapeMax + 1, Math.round(Config.supersawShapeMax * (instrumentObject[\"shape\"] | 0) / 100));\n        }\n        else {\n            this.supersawShape = 0;\n        }\n        if (instrumentObject[\"harmonics\"] != undefined) {\n            for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\n            }\n            this.harmonicsWave.markCustomWaveDirty();\n        }\n        else {\n            this.harmonicsWave.reset();\n        }\n        if (instrumentObject[\"spectrum\"] != undefined) {\n            for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\n                this.spectrumWave.markCustomWaveDirty();\n            }\n        }\n        else {\n            this.spectrumWave.reset(isNoiseChannel);\n        }\n        if (instrumentObject[\"stringSustain\"] != undefined) {\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\n        }\n        else {\n            this.stringSustain = 10;\n        }\n        this.stringSustainType = Config.enableAcousticSustain ? Config.sustainTypeNames.indexOf(instrumentObject[\"stringSustainType\"]) : 0;\n        if (this.stringSustainType == -1)\n            this.stringSustainType = 0;\n        if (this.type == 2) {\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            if (instrumentObject[\"wave\"] == \"pink noise\")\n                this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"pink\");\n            if (instrumentObject[\"wave\"] == \"brownian noise\")\n                this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"brownian\");\n            if (this.chipNoise == -1)\n                this.chipNoise = 1;\n        }\n        const legacyEnvelopeNames = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\n        const getEnvelope = (name) => {\n            if (legacyEnvelopeNames[name] != undefined)\n                return Config.envelopes.dictionary[legacyEnvelopeNames[name]];\n            else {\n                return Config.envelopes.dictionary[name];\n            }\n        };\n        if (this.type == 4) {\n            if (instrumentObject[\"drums\"] != undefined) {\n                for (let j = 0; j < Config.drumCount; j++) {\n                    const drum = instrumentObject[\"drums\"][j];\n                    if (drum == undefined)\n                        continue;\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index;\n                    if (drum[\"filterEnvelope\"] != undefined) {\n                        const envelope = getEnvelope(drum[\"filterEnvelope\"]);\n                        if (envelope != undefined)\n                            this.drumsetEnvelopes[j] = envelope.index;\n                    }\n                    if (drum[\"spectrum\"] != undefined) {\n                        for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\n                        }\n                    }\n                    this.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                }\n            }\n        }\n        if (this.type == 0) {\n            const legacyWaveNames = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\n            const modboxWaveNames = { \"10% pulse\": 22, \"sunsoft bass\": 23, \"loud pulse\": 24, \"sax\": 25, \"guitar\": 26, \"atari bass\": 28, \"atari pulse\": 29, \"1% pulse\": 30, \"curved sawtooth\": 31, \"viola\": 32, \"brass\": 33, \"acoustic bass\": 34, \"lyre\": 35, \"ramp pulse\": 36, \"piccolo\": 37, \"squaretooth\": 38, \"flatline\": 39, \"pnryshk a (u5)\": 40, \"pnryshk b (riff)\": 41 };\n            const sandboxWaveNames = { \"shrill lute\": 42, \"shrill bass\": 44, \"nes pulse\": 45, \"saw bass\": 46, \"euphonium\": 47, \"shrill pulse\": 48, \"r-sawtooth\": 49, \"recorder\": 50, \"narrow saw\": 51, \"deep square\": 52, \"ring pulse\": 53, \"double sine\": 54, \"contrabass\": 55, \"double bass\": 56 };\n            const zefboxWaveNames = { \"semi-square\": 63, \"deep square\": 64, \"squaretal\": 40, \"saw wide\": 65, \"saw narrow \": 66, \"deep sawtooth\": 67, \"sawtal\": 68, \"pulse\": 69, \"triple pulse\": 70, \"high pulse\": 71, \"deep pulse\": 72 };\n            const miscWaveNames = { \"test1\": 56, \"pokey 4bit lfsr\": 57, \"pokey 5step bass\": 58, \"isolated spiky\": 59, \"unnamed 1\": 60, \"unnamed 2\": 61, \"guitar string\": 75, \"intense\": 76, \"buzz wave\": 77, \"pokey square\": 57, \"pokey bass\": 58, \"banana wave\": 83, \"test 1\": 84, \"test 2\": 84, \"real snare\": 85, \"earthbound o. guitar\": 86 };\n            const paandorasboxWaveNames = { \"kick\": 87, \"snare\": 88, \"piano1\": 89, \"WOW\": 90, \"overdrive\": 91, \"trumpet\": 92, \"saxophone\": 93, \"orchestrahit\": 94, \"detached violin\": 95, \"synth\": 96, \"sonic3snare\": 97, \"come on\": 98, \"choir\": 99, \"overdriveguitar\": 100, \"flute\": 101, \"legato violin\": 102, \"tremolo violin\": 103, \"amen break\": 104, \"pizzicato violin\": 105, \"tim allen grunt\": 106, \"tuba\": 107, \"loopingcymbal\": 108, \"standardkick\": 109, \"standardsnare\": 110, \"closedhihat\": 111, \"foothihat\": 112, \"openhihat\": 113, \"crashcymbal\": 114, \"pianoC4\": 115, \"liver pad\": 116, \"marimba\": 117, \"susdotwav\": 118, \"wackyboxtts\": 119 };\n            this.chipWave = -1;\n            const rawName = instrumentObject[\"wave\"];\n            for (const table of [\n                legacyWaveNames,\n                modboxWaveNames,\n                sandboxWaveNames,\n                zefboxWaveNames,\n                miscWaveNames,\n                paandorasboxWaveNames\n            ]) {\n                if (this.chipWave == -1 && table[rawName] != undefined && Config.chipWaves[table[rawName]] != undefined) {\n                    this.chipWave = table[rawName];\n                    break;\n                }\n            }\n            if (this.chipWave == -1) {\n                const potentialChipWaveIndex = Config.chipWaves.findIndex(wave => wave.name == rawName);\n                if (potentialChipWaveIndex != -1)\n                    this.chipWave = potentialChipWaveIndex;\n            }\n            if (this.chipWave == -1)\n                this.chipWave = 1;\n        }\n        if (this.type == 1 || this.type == 11) {\n            if (this.type == 1) {\n                this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm == -1)\n                    this.algorithm = 0;\n                this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType == -1)\n                    this.feedbackType = 0;\n            }\n            else {\n                this.algorithm6Op = Config.algorithms6Op.findIndex(algorithm6Op => algorithm6Op.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm6Op == -1)\n                    this.algorithm6Op = 1;\n                if (this.algorithm6Op == 0) {\n                    this.customAlgorithm.set(instrumentObject[\"customAlgorithm\"][\"carrierCount\"], instrumentObject[\"customAlgorithm\"][\"mods\"]);\n                }\n                else {\n                    this.customAlgorithm.fromPreset(this.algorithm6Op);\n                }\n                this.feedbackType6Op = Config.feedbacks6Op.findIndex(feedback6Op => feedback6Op.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType6Op == -1) {\n                    let synthboxLegacyFeedbacks = toNameMap([\n                        { name: \"2⟲ 3⟲\", indices: [[], [2], [3], [], [], []] },\n                        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\n                        { name: \"4⟲ 5⟲\", indices: [[], [], [], [4], [5], []] },\n                        { name: \"5⟲ 6⟲\", indices: [[], [], [], [], [5], [6]] },\n                        { name: \"1⟲ 6⟲\", indices: [[1], [], [], [], [], [6]] },\n                        { name: \"1⟲ 3⟲\", indices: [[1], [], [3], [], [], []] },\n                        { name: \"1⟲ 4⟲\", indices: [[1], [], [], [4], [], []] },\n                        { name: \"1⟲ 5⟲\", indices: [[1], [], [], [], [5], []] },\n                        { name: \"4⟲ 6⟲\", indices: [[], [], [], [4], [], [6]] },\n                        { name: \"2⟲ 6⟲\", indices: [[], [2], [], [], [], [6]] },\n                        { name: \"3⟲ 6⟲\", indices: [[], [], [3], [], [], [6]] },\n                        { name: \"4⟲ 5⟲ 6⟲\", indices: [[], [], [], [4], [5], [6]] },\n                        { name: \"1⟲ 3⟲ 6⟲\", indices: [[1], [], [3], [], [], [6]] },\n                        { name: \"2→5\", indices: [[], [], [], [], [2], []] },\n                        { name: \"2→6\", indices: [[], [], [], [], [], [2]] },\n                        { name: \"3→5\", indices: [[], [], [], [], [3], []] },\n                        { name: \"3→6\", indices: [[], [], [], [], [], [3]] },\n                        { name: \"4→6\", indices: [[], [], [], [], [], [4]] },\n                        { name: \"5→6\", indices: [[], [], [], [], [], [5]] },\n                        { name: \"1→3→4\", indices: [[], [], [1], [], [3], []] },\n                        { name: \"2→5→6\", indices: [[], [], [], [], [2], [5]] },\n                        { name: \"2→4→6\", indices: [[], [], [], [2], [], [4]] },\n                        { name: \"4→5→6\", indices: [[], [], [], [], [4], [5]] },\n                        { name: \"3→4→5→6\", indices: [[], [], [], [3], [4], [5]] },\n                        { name: \"2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n                        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n                    ]);\n                    let synthboxFeedbackType = synthboxLegacyFeedbacks[synthboxLegacyFeedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"])].indices;\n                    if (synthboxFeedbackType != undefined) {\n                        this.feedbackType6Op = 0;\n                        this.customFeedbackType.set(synthboxFeedbackType);\n                    }\n                    else {\n                        this.feedbackType6Op = 1;\n                    }\n                }\n                if ((this.feedbackType6Op == 0) && (instrumentObject[\"customFeedback\"] != undefined)) {\n                    this.customFeedbackType.set(instrumentObject[\"customFeedback\"][\"mods\"]);\n                }\n                else {\n                    this.customFeedbackType.fromPreset(this.feedbackType6Op);\n                }\n            }\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\n            }\n            else {\n                this.feedbackAmplitude = 0;\n            }\n            for (let j = 0; j < Config.operatorCount + (this.type == 11 ? 2 : 0); j++) {\n                const operator = this.operators[j];\n                let operatorObject = undefined;\n                if (instrumentObject[\"operators\"] != undefined)\n                    operatorObject = instrumentObject[\"operators\"][j];\n                if (operatorObject == undefined)\n                    operatorObject = {};\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\n                if (operator.frequency == -1)\n                    operator.frequency = 0;\n                if (operatorObject[\"amplitude\"] != undefined) {\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\n                }\n                else {\n                    operator.amplitude = 0;\n                }\n                if (operatorObject[\"waveform\"] != undefined) {\n                    if (format == \"goldbox\" && j > 3) {\n                        operator.waveform = 0;\n                        continue;\n                    }\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\n                    if (operator.waveform == -1) {\n                        if (operatorObject[\"waveform\"] == \"square\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\n                            operator.pulseWidth = 5;\n                        }\n                        else if (operatorObject[\"waveform\"] == \"rounded\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"quasi-sine\"].index;\n                        }\n                        else {\n                            operator.waveform = 0;\n                        }\n                    }\n                }\n                else {\n                    operator.waveform = 0;\n                }\n                if (operatorObject[\"pulseWidth\"] != undefined) {\n                    operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\n                }\n                else {\n                    operator.pulseWidth = 5;\n                }\n            }\n        }\n        else if (this.type == 9) {\n            if (instrumentObject[\"customChipWave\"]) {\n                for (let i = 0; i < 64; i++) {\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\n                }\n                let sum = 0.0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average = sum / this.customChipWave.length;\n                let cumulative = 0;\n                let wavePrev = 0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n                this.customChipWaveIntegral[64] = 0.0;\n            }\n        }\n        else if (this.type == 10) {\n            if (instrumentObject[\"modChannels\"] != undefined) {\n                for (let mod = 0; mod < Config.modCount; mod++) {\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\n                    if (instrumentObject[\"modFilterTypes\"] != undefined)\n                        this.modFilterTypes[mod] = instrumentObject[\"modFilterTypes\"][mod];\n                    if (instrumentObject[\"modEnvelopeNumbers\"] != undefined)\n                        this.modEnvelopeNumbers[mod] = instrumentObject[\"modEnvelopeNumbers\"][mod];\n                }\n            }\n        }\n        if (this.type != 10) {\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\n            }\n            else {\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12;\n            }\n            if (this.chord == Config.chords.dictionary[\"monophonic\"].index && instrumentObject[\"monoChordTone\"] != undefined) {\n                this.monoChordTone = instrumentObject[\"monoChordTone\"];\n            }\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\n            }\n            else {\n                this.fastTwoNoteArp = useFastTwoNoteArp;\n            }\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\n            }\n            else {\n                this.clicklessTransition = false;\n            }\n            if (instrumentObject[\"aliases\"] != undefined) {\n                this.aliases = instrumentObject[\"aliases\"];\n            }\n            else {\n                if (format == \"modbox\") {\n                    this.effects = (this.effects | (1 << 3));\n                    this.aliases = true;\n                    this.distortion = 0;\n                }\n                else {\n                    this.aliases = false;\n                }\n            }\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\n            }\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\n            }\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\n            }\n            if (instrumentObject[\"noteFilter\"] != undefined) {\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\n            }\n            else {\n                this.noteFilter.reset();\n            }\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\n                    this.noteSubFilters[i] = new FilterSettings();\n                    this.noteSubFilters[i].fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\n                }\n            }\n            if (instrumentObject[\"eqFilterType\"] != undefined) {\n                this.eqFilterType = instrumentObject[\"eqFilterType\"];\n            }\n            if (instrumentObject[\"eqSimpleCut\"] != undefined) {\n                this.eqFilterSimpleCut = instrumentObject[\"eqSimpleCut\"];\n            }\n            if (instrumentObject[\"eqSimplePeak\"] != undefined) {\n                this.eqFilterSimplePeak = instrumentObject[\"eqSimplePeak\"];\n            }\n            if (Array.isArray(instrumentObject[\"eqFilter\"])) {\n                this.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\n            }\n            else {\n                this.eqFilter.reset();\n                const legacySettings = {};\n                const filterCutoffMaxHz = 8000;\n                const filterCutoffRange = 11;\n                const filterResonanceRange = 8;\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\n                }\n                else {\n                    legacySettings.filterCutoff = (this.type == 0) ? 6 : 10;\n                }\n                if (instrumentObject[\"filterResonance\"] != undefined) {\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\n                }\n                else {\n                    legacySettings.filterResonance = 0;\n                }\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\n                if (Array.isArray(instrumentObject[\"operators\"])) {\n                    legacySettings.operatorEnvelopes = [];\n                    for (let j = 0; j < Config.operatorCount + (this.type == 11 ? 2 : 0); j++) {\n                        let envelope;\n                        if (instrumentObject[\"operators\"][j] != undefined) {\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\n                        }\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\n                    }\n                }\n                if (instrumentObject[\"filter\"] != undefined) {\n                    const legacyToCutoff = [10, 6, 3, 0, 8, 5, 2];\n                    const legacyToEnvelope = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n                    const filterNames = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\n                    const oldFilterNames = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\n                    let legacyFilter = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\n                    if (legacyFilter == -1)\n                        legacyFilter = 0;\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\n                    legacySettings.filterResonance = 0;\n                }\n                this.convertLegacySettings(legacySettings, true);\n            }\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"eqSubFilters\" + i])) {\n                    this.eqSubFilters[i] = new FilterSettings();\n                    this.eqSubFilters[i].fromJsonObject(instrumentObject[\"eqSubFilters\" + i]);\n                }\n            }\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\n                const envelopeArray = instrumentObject[\"envelopes\"];\n                for (let i = 0; i < envelopeArray.length; i++) {\n                    if (this.envelopeCount >= Config.maxEnvelopeCount)\n                        break;\n                    const tempEnvelope = new EnvelopeSettings(this.isNoiseInstrument);\n                    tempEnvelope.fromJsonObject(envelopeArray[i], format);\n                    let pitchEnvelopeStart;\n                    if (instrumentObject[\"pitchEnvelopeStart\"] != undefined && instrumentObject[\"pitchEnvelopeStart\"] != null) {\n                        pitchEnvelopeStart = instrumentObject[\"pitchEnvelopeStart\"];\n                    }\n                    else if (instrumentObject[\"pitchEnvelopeStart\" + i] != undefined && instrumentObject[\"pitchEnvelopeStart\" + i] != undefined) {\n                        pitchEnvelopeStart = instrumentObject[\"pitchEnvelopeStart\" + i];\n                    }\n                    else {\n                        pitchEnvelopeStart = tempEnvelope.pitchEnvelopeStart;\n                    }\n                    let pitchEnvelopeEnd;\n                    if (instrumentObject[\"pitchEnvelopeEnd\"] != undefined && instrumentObject[\"pitchEnvelopeEnd\"] != null) {\n                        pitchEnvelopeEnd = instrumentObject[\"pitchEnvelopeEnd\"];\n                    }\n                    else if (instrumentObject[\"pitchEnvelopeEnd\" + i] != undefined && instrumentObject[\"pitchEnvelopeEnd\" + i] != null) {\n                        pitchEnvelopeEnd = instrumentObject[\"pitchEnvelopeEnd\" + i];\n                    }\n                    else {\n                        pitchEnvelopeEnd = tempEnvelope.pitchEnvelopeEnd;\n                    }\n                    let envelopeInverse;\n                    if (instrumentObject[\"envelopeInverse\" + i] != undefined && instrumentObject[\"envelopeInverse\" + i] != null) {\n                        envelopeInverse = instrumentObject[\"envelopeInverse\" + i];\n                    }\n                    else if (instrumentObject[\"pitchEnvelopeInverse\"] != undefined && instrumentObject[\"pitchEnvelopeInverse\"] != null && Config.envelopes[tempEnvelope.envelope].name == \"pitch\") {\n                        envelopeInverse = instrumentObject[\"pitchEnvelopeInverse\"];\n                    }\n                    else {\n                        envelopeInverse = tempEnvelope.inverse;\n                    }\n                    let discreteEnvelope;\n                    if (instrumentObject[\"discreteEnvelope\"] != undefined) {\n                        discreteEnvelope = instrumentObject[\"discreteEnvelope\"];\n                    }\n                    else {\n                        discreteEnvelope = tempEnvelope.discrete;\n                    }\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope, true, pitchEnvelopeStart, pitchEnvelopeEnd, envelopeInverse, tempEnvelope.perEnvelopeSpeed, tempEnvelope.perEnvelopeLowerBound, tempEnvelope.perEnvelopeUpperBound, tempEnvelope.steps, tempEnvelope.seed, tempEnvelope.waveform, discreteEnvelope);\n                }\n            }\n        }\n        if (type === 0) {\n            if (instrumentObject[\"isUsingAdvancedLoopControls\"] != undefined) {\n                this.isUsingAdvancedLoopControls = instrumentObject[\"isUsingAdvancedLoopControls\"];\n                this.chipWaveLoopStart = instrumentObject[\"chipWaveLoopStart\"];\n                this.chipWaveLoopEnd = instrumentObject[\"chipWaveLoopEnd\"];\n                this.chipWaveLoopMode = instrumentObject[\"chipWaveLoopMode\"];\n                this.chipWavePlayBackwards = instrumentObject[\"chipWavePlayBackwards\"];\n                this.chipWaveStartOffset = instrumentObject[\"chipWaveStartOffset\"];\n            }\n            else {\n                this.isUsingAdvancedLoopControls = false;\n                this.chipWaveLoopStart = 0;\n                this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                this.chipWaveLoopMode = 0;\n                this.chipWavePlayBackwards = false;\n                this.chipWaveStartOffset = 0;\n            }\n        }\n    }\n    getLargestControlPointCount(forNoteFilter) {\n        let largest;\n        if (forNoteFilter) {\n            largest = this.noteFilter.controlPointCount;\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null && this.noteSubFilters[i].controlPointCount > largest)\n                    largest = this.noteSubFilters[i].controlPointCount;\n            }\n        }\n        else {\n            largest = this.eqFilter.controlPointCount;\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (this.eqSubFilters[i] != null && this.eqSubFilters[i].controlPointCount > largest)\n                    largest = this.eqSubFilters[i].controlPointCount;\n            }\n        }\n        return largest;\n    }\n    static frequencyFromPitch(pitch) {\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\n    }\n    addEnvelope(target, index, envelope, newEnvelopes, start = 0, end = -1, inverse = false, perEnvelopeSpeed = -1, perEnvelopeLowerBound = 0, perEnvelopeUpperBound = 1, steps = 2, seed = 2, waveform = 0, discrete = false) {\n        end = end != -1 ? end : this.isNoiseInstrument ? Config.drumCount - 1 : Config.maxPitch;\n        perEnvelopeSpeed = perEnvelopeSpeed != -1 ? perEnvelopeSpeed : newEnvelopes ? 1 : Config.envelopes[envelope].speed;\n        let makeEmpty = false;\n        if (!this.supportsEnvelopeTarget(target, index))\n            makeEmpty = true;\n        if (this.envelopeCount >= Config.maxEnvelopeCount)\n            throw new Error();\n        while (this.envelopes.length <= this.envelopeCount)\n            this.envelopes[this.envelopes.length] = new EnvelopeSettings(this.isNoiseInstrument);\n        const envelopeSettings = this.envelopes[this.envelopeCount];\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\n        envelopeSettings.index = makeEmpty ? 0 : index;\n        if (!newEnvelopes) {\n            envelopeSettings.envelope = clamp(0, Config.newEnvelopes.length, Config.envelopes[envelope].type);\n        }\n        else {\n            envelopeSettings.envelope = envelope;\n        }\n        envelopeSettings.pitchEnvelopeStart = start;\n        envelopeSettings.pitchEnvelopeEnd = end;\n        envelopeSettings.inverse = inverse;\n        envelopeSettings.perEnvelopeSpeed = perEnvelopeSpeed;\n        envelopeSettings.perEnvelopeLowerBound = perEnvelopeLowerBound;\n        envelopeSettings.perEnvelopeUpperBound = perEnvelopeUpperBound;\n        envelopeSettings.steps = steps;\n        envelopeSettings.seed = seed;\n        envelopeSettings.waveform = waveform;\n        envelopeSettings.discrete = discrete;\n        this.envelopeCount++;\n    }\n    supportsEnvelopeTarget(target, index) {\n        const automationTarget = Config.instrumentAutomationTargets[target];\n        if (automationTarget.computeIndex == null && automationTarget.name != \"none\") {\n            return false;\n        }\n        if (index >= automationTarget.maxCount) {\n            return false;\n        }\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\n            return false;\n        }\n        if (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\n            return false;\n        }\n        if (automationTarget.name == \"arpeggioSpeed\") {\n            return effectsIncludeChord(this.effects) && this.chord == Config.chords.dictionary[\"arpeggio\"].index;\n        }\n        if (automationTarget.isFilter) {\n            let useControlPointCount = this.noteFilter.controlPointCount;\n            if (this.noteFilterType)\n                useControlPointCount = 1;\n            if (index >= useControlPointCount)\n                return false;\n        }\n        if ((automationTarget.name == \"operatorFrequency\") || (automationTarget.name == \"operatorAmplitude\")) {\n            if (index >= 4 + (this.type == 11 ? 2 : 0))\n                return false;\n        }\n        return true;\n    }\n    clearInvalidEnvelopeTargets() {\n        for (let envelopeIndex = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\n            const target = this.envelopes[envelopeIndex].target;\n            const index = this.envelopes[envelopeIndex].index;\n            if (!this.supportsEnvelopeTarget(target, index)) {\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                this.envelopes[envelopeIndex].index = 0;\n            }\n        }\n    }\n    getTransition() {\n        return effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] :\n            (this.type == 10 ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\n    }\n    getFadeInSeconds() {\n        return (this.type == 4) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\n    }\n    getFadeOutTicks() {\n        return (this.type == 4) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut);\n    }\n    getChord() {\n        return effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\n    }\n    getDrumsetEnvelope(pitch) {\n        if (this.type != 4)\n            throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\n    }\n}\nexport class Channel {\n    constructor() {\n        this.octave = 0;\n        this.instruments = [];\n        this.patterns = [];\n        this.bars = [];\n        this.muted = false;\n        this.name = \"\";\n    }\n}\nexport class Song {\n    constructor(string) {\n        this.scaleCustom = [];\n        this.channels = [];\n        this.limitDecay = 4.0;\n        this.limitRise = 4000.0;\n        this.compressionThreshold = 1.0;\n        this.limitThreshold = 1.0;\n        this.compressionRatio = 1.0;\n        this.limitRatio = 1.0;\n        this.masterGain = 1.0;\n        this.inVolumeCap = 0.0;\n        this.outVolumeCap = 0.0;\n        this.eqFilter = new FilterSettings();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        this.eqSubFilters = [];\n        this.getNewNoteVolume = (isMod, modChannel, modInstrument, modCount) => {\n            if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n                return Config.noteSizeMax;\n            else {\n                modCount = Config.modCount - modCount - 1;\n                const instrument = this.channels[modChannel].instruments[modInstrument];\n                let vol = Config.modulators[instrument.modulators[modCount]].newNoteVol;\n                let currentIndex = instrument.modulators[modCount];\n                let tempoIndex = Config.modulators.dictionary[\"tempo\"].index;\n                if (currentIndex == tempoIndex)\n                    vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\n                if (!Config.modulators[currentIndex].forSong && instrument.modInstruments[modCount] < this.channels[instrument.modChannels[modCount]].instruments.length) {\n                    let chorusIndex = Config.modulators.dictionary[\"chorus\"].index;\n                    let reverbIndex = Config.modulators.dictionary[\"reverb\"].index;\n                    let panningIndex = Config.modulators.dictionary[\"pan\"].index;\n                    let panDelayIndex = Config.modulators.dictionary[\"pan delay\"].index;\n                    let distortionIndex = Config.modulators.dictionary[\"distortion\"].index;\n                    let detuneIndex = Config.modulators.dictionary[\"detune\"].index;\n                    let vibratoDepthIndex = Config.modulators.dictionary[\"vibrato depth\"].index;\n                    let vibratoSpeedIndex = Config.modulators.dictionary[\"vibrato speed\"].index;\n                    let vibratoDelayIndex = Config.modulators.dictionary[\"vibrato delay\"].index;\n                    let arpSpeedIndex = Config.modulators.dictionary[\"arp speed\"].index;\n                    let bitCrushIndex = Config.modulators.dictionary[\"bit crush\"].index;\n                    let freqCrushIndex = Config.modulators.dictionary[\"freq crush\"].index;\n                    let echoIndex = Config.modulators.dictionary[\"echo\"].index;\n                    let echoDelayIndex = Config.modulators.dictionary[\"echo delay\"].index;\n                    let pitchShiftIndex = Config.modulators.dictionary[\"pitch shift\"].index;\n                    let ringModIndex = Config.modulators.dictionary[\"ring modulation\"].index;\n                    let ringModHertzIndex = Config.modulators.dictionary[\"ring mod hertz\"].index;\n                    let granularIndex = Config.modulators.dictionary[\"granular\"].index;\n                    let grainAmountIndex = Config.modulators.dictionary[\"grain freq\"].index;\n                    let grainSizeIndex = Config.modulators.dictionary[\"grain size\"].index;\n                    let grainRangeIndex = Config.modulators.dictionary[\"grain range\"].index;\n                    let envSpeedIndex = Config.modulators.dictionary[\"envelope speed\"].index;\n                    let perEnvSpeedIndex = Config.modulators.dictionary[\"individual envelope speed\"].index;\n                    let perEnvLowerIndex = Config.modulators.dictionary[\"individual envelope lower bound\"].index;\n                    let perEnvUpperIndex = Config.modulators.dictionary[\"individual envelope upper bound\"].index;\n                    let instrumentIndex = instrument.modInstruments[modCount];\n                    switch (currentIndex) {\n                        case chorusIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].chorus - Config.modulators[chorusIndex].convertRealFactor;\n                            break;\n                        case reverbIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].reverb - Config.modulators[reverbIndex].convertRealFactor;\n                            break;\n                        case panningIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].pan - Config.modulators[panningIndex].convertRealFactor;\n                            break;\n                        case panDelayIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].panDelay - Config.modulators[panDelayIndex].convertRealFactor;\n                            break;\n                        case distortionIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].distortion - Config.modulators[distortionIndex].convertRealFactor;\n                            break;\n                        case detuneIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].detune;\n                            break;\n                        case vibratoDepthIndex:\n                            vol = Math.round(this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].vibratoDepth * 25 - Config.modulators[vibratoDepthIndex].convertRealFactor);\n                            break;\n                        case vibratoSpeedIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].vibratoSpeed - Config.modulators[vibratoSpeedIndex].convertRealFactor;\n                            break;\n                        case vibratoDelayIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].vibratoDelay - Config.modulators[vibratoDelayIndex].convertRealFactor;\n                            break;\n                        case arpSpeedIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].arpeggioSpeed - Config.modulators[arpSpeedIndex].convertRealFactor;\n                            break;\n                        case bitCrushIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].bitcrusherQuantization - Config.modulators[bitCrushIndex].convertRealFactor;\n                            break;\n                        case freqCrushIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].bitcrusherFreq - Config.modulators[freqCrushIndex].convertRealFactor;\n                            break;\n                        case echoIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].echoSustain - Config.modulators[echoIndex].convertRealFactor;\n                            break;\n                        case echoDelayIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].echoDelay - Config.modulators[echoDelayIndex].convertRealFactor;\n                            break;\n                        case pitchShiftIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].pitchShift;\n                            break;\n                        case ringModIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].ringModulation - Config.modulators[ringModIndex].convertRealFactor;\n                            break;\n                        case ringModHertzIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].ringModulationHz - Config.modulators[ringModHertzIndex].convertRealFactor;\n                            break;\n                        case granularIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].granular - Config.modulators[granularIndex].convertRealFactor;\n                            break;\n                        case grainAmountIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].grainAmounts - Config.modulators[grainAmountIndex].convertRealFactor;\n                            break;\n                        case grainSizeIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].grainSize - Config.modulators[grainSizeIndex].convertRealFactor;\n                            break;\n                        case grainRangeIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].grainRange - Config.modulators[grainRangeIndex].convertRealFactor;\n                            break;\n                        case envSpeedIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].envelopeSpeed - Config.modulators[envSpeedIndex].convertRealFactor;\n                            break;\n                        case perEnvSpeedIndex:\n                            vol = Config.perEnvelopeSpeedToIndices[this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].envelopes[instrument.modEnvelopeNumbers[modCount]].perEnvelopeSpeed] - Config.modulators[perEnvSpeedIndex].convertRealFactor;\n                            break;\n                        case perEnvLowerIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].envelopes[instrument.modEnvelopeNumbers[modCount]].perEnvelopeLowerBound - Config.modulators[perEnvLowerIndex].convertRealFactor;\n                            break;\n                        case perEnvUpperIndex:\n                            vol = this.channels[instrument.modChannels[modCount]].instruments[instrumentIndex].envelopes[instrument.modEnvelopeNumbers[modCount]].perEnvelopeUpperBound - Config.modulators[perEnvUpperIndex].convertRealFactor;\n                            break;\n                    }\n                }\n                if (vol != undefined)\n                    return vol;\n                else\n                    return Config.noteSizeMax;\n            }\n        };\n        this.getVolumeCap = (isMod, modChannel, modInstrument, modCount) => {\n            if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n                return Config.noteSizeMax;\n            else {\n                modCount = Config.modCount - modCount - 1;\n                let instrument = this.channels[modChannel].instruments[modInstrument];\n                let modulator = Config.modulators[instrument.modulators[modCount]];\n                let cap = modulator.maxRawVol;\n                if (cap != undefined) {\n                    if (modulator.name == \"eq filter\" || modulator.name == \"note filter\" || modulator.name == \"song eq\") {\n                        cap = Config.filterMorphCount - 1;\n                        if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\n                            cap = Config.filterFreqRange;\n                        }\n                        else if (instrument.modFilterTypes[modCount] > 0) {\n                            cap = Config.filterGainRange;\n                        }\n                    }\n                    return cap;\n                }\n                else\n                    return Config.noteSizeMax;\n            }\n        };\n        this.getVolumeCapForSetting = (isMod, modSetting, filterType) => {\n            if (!isMod)\n                return Config.noteSizeMax;\n            else {\n                let cap = Config.modulators[modSetting].maxRawVol;\n                if (cap != undefined) {\n                    if (filterType != undefined && (Config.modulators[modSetting].name == \"eq filter\" || Config.modulators[modSetting].name == \"note filter\" || Config.modulators[modSetting].name == \"song eq\")) {\n                        cap = Config.filterMorphCount - 1;\n                        if (filterType > 0 && filterType % 2) {\n                            cap = Config.filterFreqRange;\n                        }\n                        else if (filterType > 0) {\n                            cap = Config.filterGainRange;\n                        }\n                    }\n                    return cap;\n                }\n                else\n                    return Config.noteSizeMax;\n            }\n        };\n        if (string != undefined) {\n            this.fromBase64String(string);\n        }\n        else {\n            this.initToDefault(true);\n        }\n    }\n    getChannelCount() {\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\n    }\n    getMaxInstrumentsPerChannel() {\n        return Math.max(this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin, this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\n    }\n    getMaxInstrumentsPerPattern(channelIndex) {\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\n    }\n    getMaxInstrumentsPerPatternForChannel(channel) {\n        return this.layeredInstruments\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\n            : 1;\n    }\n    getChannelIsNoise(channelIndex) {\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\n    }\n    getChannelIsMod(channelIndex) {\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\n    }\n    initToDefault(andResetChannels = true) {\n        this.scale = 0;\n        this.scaleCustom = [true, false, true, true, false, false, false, true, true, false, true, true];\n        this.key = 0;\n        this.octave = 0;\n        this.loopStart = 0;\n        this.loopLength = 4;\n        this.tempo = 150;\n        this.reverb = 0;\n        this.beatsPerBar = 8;\n        this.barCount = 16;\n        this.patternsPerChannel = 8;\n        this.rhythm = 1;\n        this.layeredInstruments = false;\n        this.patternInstruments = false;\n        this.eqFilter.reset();\n        for (let i = 0; i < Config.filterMorphCount - 1; i++) {\n            this.eqSubFilters[i] = null;\n        }\n        this.title = \"Untitled\";\n        document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n        if (andResetChannels) {\n            this.pitchChannelCount = 3;\n            this.noiseChannelCount = 1;\n            this.modChannelCount = 1;\n            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                const isNoiseChannel = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                const isModChannel = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n                if (this.channels.length <= channelIndex) {\n                    this.channels[channelIndex] = new Channel();\n                }\n                const channel = this.channels[channelIndex];\n                channel.octave = Math.max(3 - channelIndex, 0);\n                for (let pattern = 0; pattern < this.patternsPerChannel; pattern++) {\n                    if (channel.patterns.length <= pattern) {\n                        channel.patterns[pattern] = new Pattern();\n                    }\n                    else {\n                        channel.patterns[pattern].reset();\n                    }\n                }\n                channel.patterns.length = this.patternsPerChannel;\n                for (let instrument = 0; instrument < Config.instrumentCountMin; instrument++) {\n                    if (channel.instruments.length <= instrument) {\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\n                    }\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? 10 : (isNoiseChannel ? 2 : 0), isNoiseChannel, isModChannel);\n                }\n                channel.instruments.length = Config.instrumentCountMin;\n                for (let bar = 0; bar < this.barCount; bar++) {\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n            this.channels.length = this.getChannelCount();\n        }\n    }\n    toBase64String() {\n        let bits;\n        let buffer = [];\n        buffer.push(Song._variant);\n        buffer.push(base64IntToCharCode[Song._latestSlarmoosBoxVersion]);\n        buffer.push(78);\n        var encodedSongTitle = encodeURIComponent(this.title);\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\n        for (let i = 0; i < encodedSongTitle.length; i++) {\n            buffer.push(encodedSongTitle.charCodeAt(i));\n        }\n        buffer.push(110, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\n        buffer.push(115, base64IntToCharCode[this.scale]);\n        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n            for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                buffer.push(base64IntToCharCode[this.scaleCustom[i] ? 1 : 0]);\n            }\n        }\n        buffer.push(107, base64IntToCharCode[this.key], base64IntToCharCode[this.octave - Config.octaveMin]);\n        buffer.push(108, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\n        buffer.push(101, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\n        buffer.push(116, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\n        buffer.push(97, base64IntToCharCode[this.beatsPerBar - 1]);\n        buffer.push(103, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\n        buffer.push(106, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\n        buffer.push(114, base64IntToCharCode[this.rhythm]);\n        buffer.push(79);\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]);\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]);\n            buffer.push(base64IntToCharCode[this.limitDecay]);\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]);\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]);\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]);\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]);\n        }\n        else {\n            buffer.push(base64IntToCharCode[0x3f]);\n        }\n        buffer.push(99);\n        if (this.eqFilter == null) {\n            buffer.push(base64IntToCharCode[0]);\n            console.log(\"Null EQ filter settings detected in toBase64String for song\");\n        }\n        else {\n            buffer.push(base64IntToCharCode[this.eqFilter.controlPointCount]);\n            for (let j = 0; j < this.eqFilter.controlPointCount; j++) {\n                const point = this.eqFilter.controlPoints[j];\n                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n            }\n        }\n        let usingSubFilterBitfield = 0;\n        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n            usingSubFilterBitfield |= (+(this.eqSubFilters[j + 1] != null) << j);\n        }\n        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n            if (usingSubFilterBitfield & (1 << j)) {\n                buffer.push(base64IntToCharCode[this.eqSubFilters[j + 1].controlPointCount]);\n                for (let k = 0; k < this.eqSubFilters[j + 1].controlPointCount; k++) {\n                    const point = this.eqSubFilters[j + 1].controlPoints[k];\n                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                }\n            }\n        }\n        buffer.push(85);\n        for (let channel = 0; channel < this.getChannelCount(); channel++) {\n            var encodedChannelName = encodeURIComponent(this.channels[channel].name);\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\n            for (let i = 0; i < encodedChannelName.length; i++) {\n                buffer.push(encodedChannelName.charCodeAt(i));\n            }\n        }\n        buffer.push(105, base64IntToCharCode[(this.layeredInstruments << 1) | this.patternInstruments]);\n        if (this.layeredInstruments || this.patternInstruments) {\n            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\n            }\n        }\n        buffer.push(111);\n        for (let channelIndex = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\n        }\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            for (let i = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                const instrument = this.channels[channelIndex].instruments[i];\n                buffer.push(84, base64IntToCharCode[instrument.type]);\n                buffer.push(118, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\n                buffer.push(117, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\n                buffer.push(102);\n                buffer.push(base64IntToCharCode[+instrument.eqFilterType]);\n                if (instrument.eqFilterType) {\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimpleCut]);\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimplePeak]);\n                }\n                else {\n                    if (instrument.eqFilter == null) {\n                        buffer.push(base64IntToCharCode[0]);\n                        console.log(\"Null EQ filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                    }\n                    else {\n                        buffer.push(base64IntToCharCode[instrument.eqFilter.controlPointCount]);\n                        for (let j = 0; j < instrument.eqFilter.controlPointCount; j++) {\n                            const point = instrument.eqFilter.controlPoints[j];\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                        }\n                    }\n                    let usingSubFilterBitfield = 0;\n                    for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                        usingSubFilterBitfield |= (+(instrument.eqSubFilters[j + 1] != null) << j);\n                    }\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                    for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                        if (usingSubFilterBitfield & (1 << j)) {\n                            buffer.push(base64IntToCharCode[instrument.eqSubFilters[j + 1].controlPointCount]);\n                            for (let k = 0; k < instrument.eqSubFilters[j + 1].controlPointCount; k++) {\n                                const point = instrument.eqSubFilters[j + 1].controlPoints[k];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n                    }\n                }\n                buffer.push(113, base64IntToCharCode[(instrument.effects >> 12) & 63], base64IntToCharCode[(instrument.effects >> 6) & 63], base64IntToCharCode[instrument.effects & 63]);\n                if (effectsIncludeNoteFilter(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\n                    if (instrument.noteFilterType) {\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\n                    }\n                    else {\n                        if (instrument.noteFilter == null) {\n                            buffer.push(base64IntToCharCode[0]);\n                            console.log(\"Null note filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                        }\n                        else {\n                            buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\n                            for (let j = 0; j < instrument.noteFilter.controlPointCount; j++) {\n                                const point = instrument.noteFilter.controlPoints[j];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n                        let usingSubFilterBitfield = 0;\n                        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                            usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\n                        }\n                        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                            if (usingSubFilterBitfield & (1 << j)) {\n                                buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1].controlPointCount]);\n                                for (let k = 0; k < instrument.noteSubFilters[j + 1].controlPointCount; k++) {\n                                    const point = instrument.noteSubFilters[j + 1].controlPoints[k];\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (effectsIncludeTransition(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.transition]);\n                }\n                if (effectsIncludeChord(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chord]);\n                    if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]);\n                    }\n                    if (instrument.chord == Config.chords.dictionary[\"monophonic\"].index) {\n                        buffer.push(base64IntToCharCode[instrument.monoChordTone]);\n                    }\n                }\n                if (effectsIncludePitchShift(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\n                }\n                if (effectsIncludeDetune(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\n                }\n                if (effectsIncludeVibrato(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\n                    if (instrument.vibrato == Config.vibratos.length) {\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\n                    }\n                }\n                if (effectsIncludeDistortion(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.distortion]);\n                    buffer.push(base64IntToCharCode[+instrument.aliases]);\n                }\n                if (effectsIncludeBitcrusher(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\n                }\n                if (effectsIncludePanning(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\n                    buffer.push(base64IntToCharCode[instrument.panDelay]);\n                }\n                if (effectsIncludeChorus(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chorus]);\n                }\n                if (effectsIncludeEcho(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\n                }\n                if (effectsIncludeReverb(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.reverb]);\n                }\n                if (effectsIncludeGranular(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.granular]);\n                    buffer.push(base64IntToCharCode[instrument.grainSize]);\n                    buffer.push(base64IntToCharCode[instrument.grainAmounts]);\n                    buffer.push(base64IntToCharCode[instrument.grainRange]);\n                }\n                if (effectsIncludeRingModulation(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.ringModulation]);\n                    buffer.push(base64IntToCharCode[instrument.ringModulationHz]);\n                    buffer.push(base64IntToCharCode[instrument.ringModWaveformIndex]);\n                    buffer.push(base64IntToCharCode[(instrument.ringModPulseWidth)]);\n                    buffer.push(base64IntToCharCode[(instrument.ringModHzOffset - Config.rmHzOffsetMin) >> 6], base64IntToCharCode[(instrument.ringModHzOffset - Config.rmHzOffsetMin) & 0x3F]);\n                }\n                if (instrument.type != 4) {\n                    buffer.push(100, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\n                }\n                if (instrument.type == 5 || instrument.type == 7) {\n                    buffer.push(72);\n                    const harmonicsBits = new BitFieldWriter();\n                    for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\n                    }\n                    harmonicsBits.encodeBase64(buffer);\n                }\n                if (instrument.type == 0) {\n                    if (instrument.chipWave > 186) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\n                        buffer.push(base64IntToCharCode[3]);\n                    }\n                    else if (instrument.chipWave > 124) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\n                        buffer.push(base64IntToCharCode[2]);\n                    }\n                    else if (instrument.chipWave > 62) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\n                        buffer.push(base64IntToCharCode[1]);\n                    }\n                    else {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave]);\n                        buffer.push(base64IntToCharCode[0]);\n                    }\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(121);\n                    const encodedLoopMode = ((clamp(0, 31 + 1, instrument.chipWaveLoopMode) << 1)\n                        | (instrument.isUsingAdvancedLoopControls ? 1 : 0));\n                    buffer.push(base64IntToCharCode[encodedLoopMode]);\n                    const encodedReleaseMode = ((clamp(0, 31 + 1, 0) << 1)\n                        | (instrument.chipWavePlayBackwards ? 1 : 0));\n                    buffer.push(base64IntToCharCode[encodedReleaseMode]);\n                    encode32BitNumber(buffer, instrument.chipWaveLoopStart);\n                    encode32BitNumber(buffer, instrument.chipWaveLoopEnd);\n                    encode32BitNumber(buffer, instrument.chipWaveStartOffset);\n                }\n                else if (instrument.type == 1 || instrument.type == 11) {\n                    if (instrument.type == 1) {\n                        buffer.push(65, base64IntToCharCode[instrument.algorithm]);\n                        buffer.push(70, base64IntToCharCode[instrument.feedbackType]);\n                    }\n                    else {\n                        buffer.push(65, base64IntToCharCode[instrument.algorithm6Op]);\n                        if (instrument.algorithm6Op == 0) {\n                            buffer.push(67, base64IntToCharCode[instrument.customAlgorithm.carrierCount]);\n                            buffer.push(113);\n                            for (let o = 0; o < instrument.customAlgorithm.modulatedBy.length; o++) {\n                                for (let j = 0; j < instrument.customAlgorithm.modulatedBy[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customAlgorithm.modulatedBy[o][j]]);\n                                }\n                                buffer.push(82);\n                            }\n                            buffer.push(113);\n                        }\n                        buffer.push(70, base64IntToCharCode[instrument.feedbackType6Op]);\n                        if (instrument.feedbackType6Op == 0) {\n                            buffer.push(113);\n                            for (let o = 0; o < instrument.customFeedbackType.indices.length; o++) {\n                                for (let j = 0; j < instrument.customFeedbackType.indices[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customFeedbackType.indices[o][j]]);\n                                }\n                                buffer.push(82);\n                            }\n                            buffer.push(113);\n                        }\n                    }\n                    buffer.push(66, base64IntToCharCode[instrument.feedbackAmplitude]);\n                    buffer.push(81);\n                    for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\n                    }\n                    buffer.push(80);\n                    for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\n                    }\n                    buffer.push(82);\n                    for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\n                        if (instrument.operators[o].waveform == 2) {\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\n                        }\n                    }\n                }\n                else if (instrument.type == 9) {\n                    if (instrument.chipWave > 186) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\n                        buffer.push(base64IntToCharCode[3]);\n                    }\n                    else if (instrument.chipWave > 124) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\n                        buffer.push(base64IntToCharCode[2]);\n                    }\n                    else if (instrument.chipWave > 62) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\n                        buffer.push(base64IntToCharCode[1]);\n                    }\n                    else {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave]);\n                        buffer.push(base64IntToCharCode[0]);\n                    }\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(77);\n                    for (let j = 0; j < 64; j++) {\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24)]);\n                    }\n                }\n                else if (instrument.type == 2) {\n                    buffer.push(119, base64IntToCharCode[instrument.chipNoise]);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 3) {\n                    buffer.push(83);\n                    const spectrumBits = new BitFieldWriter();\n                    for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 4) {\n                    buffer.push(122);\n                    for (let j = 0; j < Config.drumCount; j++) {\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\n                    }\n                    buffer.push(83);\n                    const spectrumBits = new BitFieldWriter();\n                    for (let j = 0; j < Config.drumCount; j++) {\n                        for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\n                        }\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 5) {\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 6) {\n                    buffer.push(87, base64IntToCharCode[instrument.pulseWidth]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 8) {\n                    buffer.push(120, base64IntToCharCode[instrument.supersawDynamism], base64IntToCharCode[instrument.supersawSpread], base64IntToCharCode[instrument.supersawShape]);\n                    buffer.push(87, base64IntToCharCode[instrument.pulseWidth]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]);\n                }\n                else if (instrument.type == 7) {\n                    if (Config.stringSustainRange > 0x20 || 2 > 2) {\n                        throw new Error(\"Not enough bits to represent sustain value and type in same base64 character.\");\n                    }\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(73, base64IntToCharCode[instrument.stringSustain | (instrument.stringSustainType << 5)]);\n                }\n                else if (instrument.type == 10) {\n                }\n                else {\n                    throw new Error(\"Unknown instrument type.\");\n                }\n                buffer.push(69, base64IntToCharCode[instrument.envelopeCount]);\n                buffer.push(base64IntToCharCode[instrument.envelopeSpeed]);\n                for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\n                    if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"pitch\") {\n                        if (!instrument.isNoiseInstrument) {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart >> 6], base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart & 0x3f]);\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd >> 6], base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd & 0x3f]);\n                        }\n                        else {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart]);\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd]);\n                        }\n                    }\n                    else if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"random\") {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].steps]);\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].seed]);\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].waveform]);\n                    }\n                    else if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"lfo\") {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].waveform]);\n                        if (instrument.envelopes[envelopeIndex].waveform == 5 || instrument.envelopes[envelopeIndex].waveform == 6) {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].steps]);\n                        }\n                    }\n                    let checkboxValues = +instrument.envelopes[envelopeIndex].discrete;\n                    checkboxValues = checkboxValues << 1;\n                    checkboxValues += +instrument.envelopes[envelopeIndex].inverse;\n                    buffer.push(base64IntToCharCode[checkboxValues] ? base64IntToCharCode[checkboxValues] : base64IntToCharCode[0]);\n                    if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"pitch\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"note size\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"punch\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"none\") {\n                        buffer.push(base64IntToCharCode[Config.perEnvelopeSpeedToIndices[instrument.envelopes[envelopeIndex].perEnvelopeSpeed]]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].perEnvelopeLowerBound * 10]);\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].perEnvelopeUpperBound * 10]);\n                }\n            }\n        }\n        buffer.push(98);\n        bits = new BitFieldWriter();\n        let neededBits = 0;\n        while ((1 << neededBits) < this.patternsPerChannel + 1)\n            neededBits++;\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++)\n            for (let i = 0; i < this.barCount; i++) {\n                bits.write(neededBits, this.channels[channelIndex].bars[i]);\n            }\n        bits.encodeBase64(buffer);\n        buffer.push(112);\n        bits = new BitFieldWriter();\n        const shapeBits = new BitFieldWriter();\n        const bitsPerNoteSize = Song.getNeededBits(Config.noteSizeMax);\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel = this.channels[channelIndex];\n            const maxInstrumentsPerPattern = this.getMaxInstrumentsPerPattern(channelIndex);\n            const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n            const isModChannel = this.getChannelIsMod(channelIndex);\n            const neededInstrumentCountBits = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n            const neededInstrumentIndexBits = Song.getNeededBits(channel.instruments.length - 1);\n            if (isModChannel) {\n                const neededModInstrumentIndexBits = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n                for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                    let instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                    for (let mod = 0; mod < Config.modCount; mod++) {\n                        const modChannel = instrument.modChannels[mod];\n                        const modInstrument = instrument.modInstruments[mod];\n                        const modSetting = instrument.modulators[mod];\n                        const modFilter = instrument.modFilterTypes[mod];\n                        const modEnvelope = instrument.modEnvelopeNumbers[mod];\n                        let status = Config.modulators[modSetting].forSong ? 2 : 0;\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\n                            status = 3;\n                        bits.write(2, status);\n                        if (status == 0 || status == 1) {\n                            bits.write(8, modChannel);\n                            bits.write(neededModInstrumentIndexBits, modInstrument);\n                        }\n                        if (status != 3) {\n                            bits.write(6, modSetting);\n                        }\n                        if (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\" || Config.modulators[instrument.modulators[mod]].name == \"song eq\") {\n                            bits.write(6, modFilter);\n                        }\n                        if (Config.modulators[instrument.modulators[mod]].name == \"individual envelope speed\" ||\n                            Config.modulators[instrument.modulators[mod]].name == \"reset envelope\" ||\n                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope lower bound\" ||\n                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope upper bound\") {\n                            bits.write(6, modEnvelope);\n                        }\n                    }\n                }\n            }\n            const octaveOffset = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\n            let lastPitch = (isNoiseChannel ? 4 : octaveOffset);\n            const recentPitches = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n            const recentShapes = [];\n            for (let i = 0; i < recentPitches.length; i++) {\n                recentPitches[i] += octaveOffset;\n            }\n            for (const pattern of channel.patterns) {\n                if (this.patternInstruments) {\n                    const instrumentCount = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\n                    for (let i = 0; i < instrumentCount; i++) {\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\n                    }\n                }\n                if (pattern.notes.length > 0) {\n                    bits.write(1, 1);\n                    let curPart = 0;\n                    for (const note of pattern.notes) {\n                        if (note.start < curPart && isModChannel) {\n                            bits.write(2, 0);\n                            bits.write(1, 1);\n                            bits.writePartDuration(curPart - note.start);\n                        }\n                        if (note.start > curPart) {\n                            bits.write(2, 0);\n                            if (isModChannel)\n                                bits.write(1, 0);\n                            bits.writePartDuration(note.start - curPart);\n                        }\n                        shapeBits.clear();\n                        if (note.pitches.length == 1) {\n                            shapeBits.write(1, 0);\n                        }\n                        else {\n                            shapeBits.write(1, 1);\n                            shapeBits.write(3, note.pitches.length - 2);\n                        }\n                        shapeBits.writePinCount(note.pins.length - 1);\n                        if (!isModChannel) {\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size);\n                        }\n                        else {\n                            shapeBits.write(9, note.pins[0].size);\n                        }\n                        let shapePart = 0;\n                        let startPitch = note.pitches[0];\n                        let currentPitch = startPitch;\n                        const pitchBends = [];\n                        for (let i = 1; i < note.pins.length; i++) {\n                            const pin = note.pins[i];\n                            const nextPitch = startPitch + pin.interval;\n                            if (currentPitch != nextPitch) {\n                                shapeBits.write(1, 1);\n                                pitchBends.push(nextPitch);\n                                currentPitch = nextPitch;\n                            }\n                            else {\n                                shapeBits.write(1, 0);\n                            }\n                            shapeBits.writePartDuration(pin.time - shapePart);\n                            shapePart = pin.time;\n                            if (!isModChannel) {\n                                shapeBits.write(bitsPerNoteSize, pin.size);\n                            }\n                            else {\n                                shapeBits.write(9, pin.size);\n                            }\n                        }\n                        const shapeString = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\n                        const shapeIndex = recentShapes.indexOf(shapeString);\n                        if (shapeIndex == -1) {\n                            bits.write(2, 1);\n                            bits.concat(shapeBits);\n                        }\n                        else {\n                            bits.write(1, 1);\n                            bits.writeLongTail(0, 0, shapeIndex);\n                            recentShapes.splice(shapeIndex, 1);\n                        }\n                        recentShapes.unshift(shapeString);\n                        if (recentShapes.length > 10)\n                            recentShapes.pop();\n                        const allPitches = note.pitches.concat(pitchBends);\n                        for (let i = 0; i < allPitches.length; i++) {\n                            const pitch = allPitches[i];\n                            const pitchIndex = recentPitches.indexOf(pitch);\n                            if (pitchIndex == -1) {\n                                let interval = 0;\n                                let pitchIter = lastPitch;\n                                if (pitchIter < pitch) {\n                                    while (pitchIter != pitch) {\n                                        pitchIter++;\n                                        if (recentPitches.indexOf(pitchIter) == -1)\n                                            interval++;\n                                    }\n                                }\n                                else {\n                                    while (pitchIter != pitch) {\n                                        pitchIter--;\n                                        if (recentPitches.indexOf(pitchIter) == -1)\n                                            interval--;\n                                    }\n                                }\n                                bits.write(1, 0);\n                                bits.writePitchInterval(interval);\n                            }\n                            else {\n                                bits.write(1, 1);\n                                bits.write(4, pitchIndex);\n                                recentPitches.splice(pitchIndex, 1);\n                            }\n                            recentPitches.unshift(pitch);\n                            if (recentPitches.length > 16)\n                                recentPitches.pop();\n                            if (i == note.pitches.length - 1) {\n                                lastPitch = note.pitches[0];\n                            }\n                            else {\n                                lastPitch = pitch;\n                            }\n                        }\n                        if (note.start == 0) {\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\n                        }\n                        curPart = note.end;\n                    }\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n                        bits.write(2, 0);\n                        if (isModChannel)\n                            bits.write(1, 0);\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\n                    }\n                }\n                else {\n                    bits.write(1, 0);\n                }\n            }\n        }\n        let stringLength = bits.lengthBase64();\n        let digits = [];\n        while (stringLength > 0) {\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\n            stringLength = stringLength >> 6;\n        }\n        buffer.push(base64IntToCharCode[digits.length]);\n        Array.prototype.push.apply(buffer, digits);\n        bits.encodeBase64(buffer);\n        const maxApplyArgs = 64000;\n        let customSamplesStr = \"\";\n        if (EditorConfig.customSamples != undefined && EditorConfig.customSamples.length > 0) {\n            customSamplesStr = \"|\" + EditorConfig.customSamples.join(\"|\");\n        }\n        if (buffer.length < maxApplyArgs) {\n            return String.fromCharCode.apply(null, buffer) + customSamplesStr;\n        }\n        else {\n            let result = \"\";\n            for (let i = 0; i < buffer.length; i += maxApplyArgs) {\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\n            }\n            return result + customSamplesStr;\n        }\n    }\n    static _envelopeFromLegacyIndex(legacyIndex) {\n        if (legacyIndex == 0)\n            legacyIndex = 1;\n        else if (legacyIndex == 1)\n            legacyIndex = 0;\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\n    }\n    fromBase64String(compressed, jsonFormat = \"auto\") {\n        if (compressed == null || compressed == \"\") {\n            Song._clearSamples();\n            this.initToDefault(true);\n            return;\n        }\n        let charIndex = 0;\n        while (compressed.charCodeAt(charIndex) <= 32)\n            charIndex++;\n        if (compressed.charCodeAt(charIndex) == 35)\n            charIndex++;\n        if (compressed.charCodeAt(charIndex) == 123) {\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)), jsonFormat);\n            return;\n        }\n        const variantTest = compressed.charCodeAt(charIndex);\n        let fromBeepBox = false;\n        let fromJummBox = false;\n        let fromGoldBox = false;\n        let fromUltraBox = false;\n        let fromSlarmoosBox = false;\n        if (variantTest == 0x6A) {\n            fromJummBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x67) {\n            fromGoldBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x75) {\n            fromUltraBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x64) {\n            fromJummBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x61) {\n            fromUltraBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x73) {\n            fromSlarmoosBox = true;\n            charIndex++;\n        }\n        else {\n            fromBeepBox = true;\n        }\n        const version = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion))\n            return;\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion))\n            return;\n        if (fromGoldBox && (version == -1 || version > Song._latestGoldBoxVersion || version < Song._oldestGoldBoxVersion))\n            return;\n        if (fromUltraBox && (version == -1 || version > Song._latestUltraBoxVersion || version < Song._oldestUltraBoxVersion))\n            return;\n        if (fromSlarmoosBox && (version == -1 || version > Song._latestSlarmoosBoxVersion || version < Song._oldestSlarmoosBoxVersion))\n            return;\n        const beforeTwo = version < 2;\n        const beforeThree = version < 3;\n        const beforeFour = version < 4;\n        const beforeFive = version < 5;\n        const beforeSix = version < 6;\n        const beforeSeven = version < 7;\n        const beforeEight = version < 8;\n        const beforeNine = version < 9;\n        this.initToDefault((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)));\n        const forceSimpleFilter = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\n        let willLoadLegacySamplesForOldSongs = false;\n        if (fromSlarmoosBox || fromUltraBox || fromGoldBox) {\n            compressed = compressed.replaceAll(\"%7C\", \"|\");\n            var compressed_array = compressed.split(\"|\");\n            compressed = compressed_array.shift();\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != compressed_array.join(\", \")) {\n                Song._restoreChipWaveListToDefault();\n                let willLoadLegacySamples = false;\n                let willLoadNintariboxSamples = false;\n                let willLoadMarioPaintboxSamples = false;\n                const customSampleUrls = [];\n                const customSamplePresets = [];\n                sampleLoadingState.statusTable = {};\n                sampleLoadingState.urlTable = {};\n                sampleLoadingState.totalSamples = 0;\n                sampleLoadingState.samplesLoaded = 0;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                for (const url of compressed_array) {\n                    if (url.toLowerCase() === \"legacysamples\") {\n                        if (!willLoadLegacySamples) {\n                            willLoadLegacySamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(0);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\n                        if (!willLoadNintariboxSamples) {\n                            willLoadNintariboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(1);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                        if (!willLoadMarioPaintboxSamples) {\n                            willLoadMarioPaintboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(2);\n                        }\n                    }\n                    else {\n                        const parseOldSyntax = beforeThree;\n                        const ok = Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                        if (!ok) {\n                            continue;\n                        }\n                    }\n                }\n                if (customSampleUrls.length > 0) {\n                    EditorConfig.customSamples = customSampleUrls;\n                }\n                if (customSamplePresets.length > 0) {\n                    const customSamplePresetsMap = toNameMap(customSamplePresets);\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                        name: \"Custom Sample Presets\",\n                        presets: customSamplePresetsMap,\n                        index: EditorConfig.presetCategories.length,\n                    };\n                }\n            }\n        }\n        if (beforeThree && fromBeepBox) {\n            for (const channel of this.channels) {\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\n                channel.instruments[0].effects |= 1 << 10;\n            }\n            this.channels[3].instruments[0].chipNoise = 0;\n        }\n        let legacySettingsCache = null;\n        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n            legacySettingsCache = [];\n            for (let i = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n                legacySettingsCache[i] = [];\n                for (let j = 0; j < Config.instrumentCountMin; j++)\n                    legacySettingsCache[i][j] = {};\n            }\n        }\n        let legacyGlobalReverb = 0;\n        let instrumentChannelIterator = 0;\n        let instrumentIndexIterator = -1;\n        let command;\n        let useSlowerArpSpeed = false;\n        let useFastTwoNoteArp = false;\n        while (charIndex < compressed.length)\n            switch (command = compressed.charCodeAt(charIndex++)) {\n                case 78:\n                    {\n                        var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\n                        document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n                        charIndex += songNameLength;\n                    }\n                    break;\n                case 110:\n                    {\n                        this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if (fromBeepBox || (fromJummBox && beforeTwo)) {\n                            this.modChannelCount = 0;\n                        }\n                        else {\n                            this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\n                        this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\n                        this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\n                        for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\n                            this.channels[channelIndex] = new Channel();\n                        }\n                        this.channels.length = this.getChannelCount();\n                        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            for (let i = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n                                legacySettingsCache[i] = [];\n                                for (let j = 0; j < Config.instrumentCountMin; j++)\n                                    legacySettingsCache[i][j] = {};\n                            }\n                        }\n                    }\n                    break;\n                case 115:\n                    {\n                        this.scale = clamp(0, Config.scales.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                            for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                                this.scaleCustom[i] = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1;\n                            }\n                        }\n                        if (fromBeepBox)\n                            this.scale = 0;\n                    }\n                    break;\n                case 107:\n                    {\n                        if (beforeSeven && fromBeepBox) {\n                            this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.octave = 0;\n                        }\n                        else if (fromBeepBox || fromJummBox) {\n                            this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.octave = 0;\n                        }\n                        else if (fromGoldBox || (beforeThree && fromUltraBox)) {\n                            const rawKeyIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const [key, octave] = convertLegacyKeyToKeyAndOctave(rawKeyIndex);\n                            this.key = key;\n                            this.octave = octave;\n                        }\n                        else {\n                            this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.octaveMin);\n                        }\n                    }\n                    break;\n                case 108:\n                    {\n                        if (beforeFive && fromBeepBox) {\n                            this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        else {\n                            this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                    }\n                    break;\n                case 101:\n                    {\n                        if (beforeFive && fromBeepBox) {\n                            this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        else {\n                            this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                    }\n                    break;\n                case 116:\n                    {\n                        if (beforeFour && fromBeepBox) {\n                            this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                        }\n                        else {\n                            this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\n                    }\n                    break;\n                case 109:\n                    {\n                        if (beforeNine && fromBeepBox) {\n                            legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\n                            legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                        }\n                        else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 97:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                        }\n                        else {\n                            this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                        this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\n                    }\n                    break;\n                case 103:\n                    {\n                        const barCount = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\n                        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                            for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\n                                this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\n                            }\n                            this.channels[channelIndex].bars.length = this.barCount;\n                        }\n                    }\n                    break;\n                case 106:\n                    {\n                        let patternsPerChannel;\n                        if (beforeEight && fromBeepBox) {\n                            patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                        else {\n                            patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                        this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\n                        const channelCount = this.getChannelCount();\n                        for (let channelIndex = 0; channelIndex < channelCount; channelIndex++) {\n                            const patterns = this.channels[channelIndex].patterns;\n                            for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\n                                patterns[pattern] = new Pattern();\n                            }\n                            patterns.length = this.patternsPerChannel;\n                        }\n                    }\n                    break;\n                case 105:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const instrumentsPerChannel = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                            this.layeredInstruments = false;\n                            this.patternInstruments = (instrumentsPerChannel > 1);\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                const isNoiseChannel = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                                const isModChannel = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n                                for (let instrumentIndex = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                                    this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\n                                }\n                                this.channels[channelIndex].instruments.length = instrumentsPerChannel;\n                                if (beforeSix && fromBeepBox) {\n                                    for (let instrumentIndex = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                                        this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? 2 : 0, isNoiseChannel, isModChannel);\n                                    }\n                                }\n                                for (let j = legacySettingsCache[channelIndex].length; j < instrumentsPerChannel; j++) {\n                                    legacySettingsCache[channelIndex][j] = {};\n                                }\n                            }\n                        }\n                        else {\n                            const instrumentsFlagBits = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\n                            this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                let instrumentCount = 1;\n                                if (this.layeredInstruments || this.patternInstruments) {\n                                    instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                                }\n                                const channel = this.channels[channelIndex];\n                                const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n                                const isModChannel = this.getChannelIsMod(channelIndex);\n                                for (let i = channel.instruments.length; i < instrumentCount; i++) {\n                                    channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\n                                }\n                                channel.instruments.length = instrumentCount;\n                            }\n                        }\n                    }\n                    break;\n                case 114:\n                    {\n                        if (!fromUltraBox && !fromSlarmoosBox) {\n                            let newRhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.rhythm = clamp(0, Config.rhythms.length, newRhythm);\n                            if (fromJummBox && beforeThree || fromBeepBox) {\n                                if (this.rhythm == Config.rhythms.dictionary[\"÷3 (triplets)\"].index || this.rhythm == Config.rhythms.dictionary[\"÷6\"].index) {\n                                    useSlowerArpSpeed = true;\n                                }\n                                if (this.rhythm >= Config.rhythms.dictionary[\"÷6\"].index) {\n                                    useFastTwoNoteArp = true;\n                                }\n                            }\n                        }\n                        else if ((fromSlarmoosBox && beforeFour) || (fromUltraBox && beforeFive)) {\n                            const rhythmMap = [1, 1, 0, 1, 2, 3, 4, 5];\n                            this.rhythm = clamp(0, Config.rhythms.length, rhythmMap[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]]);\n                        }\n                        else {\n                            this.rhythm = clamp(0, Config.rhythms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 111:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                            if (channelIndex >= this.pitchChannelCount)\n                                this.channels[channelIndex].octave = 0;\n                        }\n                        else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                                if (channelIndex >= this.pitchChannelCount)\n                                    this.channels[channelIndex].octave = 0;\n                            }\n                        }\n                        else {\n                            for (let channelIndex = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n                                this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            for (let channelIndex = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\n                                this.channels[channelIndex].octave = 0;\n                            }\n                        }\n                    }\n                    break;\n                case 84:\n                    {\n                        instrumentIndexIterator++;\n                        if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\n                            instrumentChannelIterator++;\n                            instrumentIndexIterator = 0;\n                        }\n                        validateRange(0, this.channels.length - 1, instrumentChannelIterator);\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        let instrumentType = validateRange(0, 12 - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            if (instrumentType == 7 || instrumentType == 8) {\n                                instrumentType += 2;\n                            }\n                        }\n                        else if ((fromJummBox && beforeSix) || (fromGoldBox && !beforeFour) || (fromUltraBox && beforeFive)) {\n                            if (instrumentType == 8 || instrumentType == 9 || instrumentType == 10) {\n                                instrumentType += 1;\n                            }\n                        }\n                        instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\n                        if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == 0 || instrumentType == 9 || instrumentType == 6)) {\n                            instrument.aliases = true;\n                            instrument.distortion = 0;\n                            instrument.effects |= 1 << 3;\n                        }\n                        if (useSlowerArpSpeed) {\n                            instrument.arpeggioSpeed = 9;\n                        }\n                        if (useFastTwoNoteArp) {\n                            instrument.fastTwoNoteArp = true;\n                        }\n                        if (beforeSeven && fromBeepBox) {\n                            if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                                instrument.effects |= 1 << 11;\n                            }\n                        }\n                    }\n                    break;\n                case 117:\n                    {\n                        const presetValue = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == 7) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = 9;\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = 9;\n                            }\n                        }\n                        else if ((fromJummBox && beforeSix) || (fromUltraBox && beforeFive)) {\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == 8) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = 9;\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = 9;\n                            }\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == 10) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = 11;\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = 11;\n                            }\n                        }\n                        if (fromBeepBox && presetValue == EditorConfig.nameToPresetValue(\"grand piano 1\")) {\n                            this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = EditorConfig.nameToPresetValue(\"grand piano 3\");\n                        }\n                    }\n                    break;\n                case 119:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const legacyWaves = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument = this.channels[channelIndex].instruments[0];\n                            instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                            instrument.convertLegacySettings(legacySettingsCache[channelIndex][0], forceSimpleFilter);\n                        }\n                        else if (beforeSix && fromBeepBox) {\n                            const legacyWaves = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (const instrument of this.channels[channelIndex].instruments) {\n                                    if (channelIndex >= this.pitchChannelCount) {\n                                        instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    else {\n                                        instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                                    }\n                                }\n                            }\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            const legacyWaves = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                            if (instrumentChannelIterator >= this.pitchChannelCount) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            else {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                            }\n                        }\n                        else {\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type == 2) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            else {\n                                if (fromSlarmoosBox || fromUltraBox) {\n                                    const chipWaveReal = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const chipWaveCounter = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if (chipWaveCounter == 3) {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 186);\n                                    }\n                                    else if (chipWaveCounter == 2) {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 124);\n                                    }\n                                    else if (chipWaveCounter == 1) {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 62);\n                                    }\n                                    else {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal);\n                                    }\n                                }\n                                else {\n                                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 102:\n                    {\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            if (beforeSeven && fromBeepBox) {\n                                const legacyToCutoff = [10, 6, 3, 0, 8, 5, 2];\n                                const legacyToEnvelope = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n                                if (beforeThree && fromBeepBox) {\n                                    const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const instrument = this.channels[channelIndex].instruments[0];\n                                    const legacySettings = legacySettingsCache[channelIndex][0];\n                                    const legacyFilter = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                    legacySettings.filterResonance = 0;\n                                    legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                }\n                                else if (beforeSix && fromBeepBox) {\n                                    for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                        for (let i = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                            const instrument = this.channels[channelIndex].instruments[i];\n                                            const legacySettings = legacySettingsCache[channelIndex][i];\n                                            const legacyFilter = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                                            if (channelIndex < this.pitchChannelCount) {\n                                                legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                                legacySettings.filterResonance = 0;\n                                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                            }\n                                            else {\n                                                legacySettings.filterCutoff = 10;\n                                                legacySettings.filterResonance = 0;\n                                                legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\n                                            }\n                                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const legacyFilter = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                    const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                    legacySettings.filterResonance = 0;\n                                    legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                }\n                            }\n                            else {\n                                const filterCutoffRange = 11;\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            let typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if (fromBeepBox || typeCheck == 0) {\n                                instrument.eqFilterType = false;\n                                if (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                    typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const originalControlPointCount = typeCheck;\n                                instrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                                for (let i = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\n                                    instrument.eqFilter.controlPoints[i] = new FilterControlPoint();\n                                }\n                                for (let i = 0; i < instrument.eqFilter.controlPointCount; i++) {\n                                    const point = instrument.eqFilter.controlPoints[i];\n                                    point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                for (let i = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n                                    charIndex += 3;\n                                }\n                                instrument.eqSubFilters[0] = instrument.eqFilter;\n                                if ((fromJummBox && !beforeFive) || (fromGoldBox && !beforeFour) || fromUltraBox || fromSlarmoosBox) {\n                                    let usingSubFilterBitfield = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                        if (usingSubFilterBitfield & (1 << j)) {\n                                            const originalSubfilterControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                            if (instrument.eqSubFilters[j + 1] == null)\n                                                instrument.eqSubFilters[j + 1] = new FilterSettings();\n                                            instrument.eqSubFilters[j + 1].controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                            for (let i = instrument.eqSubFilters[j + 1].controlPoints.length; i < instrument.eqSubFilters[j + 1].controlPointCount; i++) {\n                                                instrument.eqSubFilters[j + 1].controlPoints[i] = new FilterControlPoint();\n                                            }\n                                            for (let i = 0; i < instrument.eqSubFilters[j + 1].controlPointCount; i++) {\n                                                const point = instrument.eqSubFilters[j + 1].controlPoints[i];\n                                                point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            }\n                                            for (let i = instrument.eqSubFilters[j + 1].controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                                charIndex += 3;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                instrument.eqFilterType = true;\n                                instrument.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                        }\n                    }\n                    break;\n                case 121:\n                    {\n                        if (fromSlarmoosBox || fromUltraBox) {\n                            if (beforeThree && fromUltraBox) {\n                                const sampleLoopInfoEncodedLength = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const sampleLoopInfoEncoded = compressed.slice(charIndex, charIndex + sampleLoopInfoEncodedLength);\n                                charIndex += sampleLoopInfoEncodedLength;\n                                const sampleLoopInfo = JSON.parse(atob(sampleLoopInfoEncoded));\n                                for (const entry of sampleLoopInfo) {\n                                    const channelIndex = entry[\"channel\"];\n                                    const instrumentIndex = entry[\"instrument\"];\n                                    const info = entry[\"info\"];\n                                    const instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                                    instrument.isUsingAdvancedLoopControls = info[\"isUsingAdvancedLoopControls\"];\n                                    instrument.chipWaveLoopStart = info[\"chipWaveLoopStart\"];\n                                    instrument.chipWaveLoopEnd = info[\"chipWaveLoopEnd\"];\n                                    instrument.chipWaveLoopMode = info[\"chipWaveLoopMode\"];\n                                    instrument.chipWavePlayBackwards = info[\"chipWavePlayBackwards\"];\n                                    instrument.chipWaveStartOffset = info[\"chipWaveStartOffset\"];\n                                }\n                            }\n                            else {\n                                const encodedLoopMode = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const isUsingAdvancedLoopControls = Boolean(encodedLoopMode & 1);\n                                const chipWaveLoopMode = encodedLoopMode >> 1;\n                                const encodedReleaseMode = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const chipWavePlayBackwards = Boolean(encodedReleaseMode & 1);\n                                const chipWaveLoopStart = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const chipWaveLoopEnd = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const chipWaveStartOffset = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.isUsingAdvancedLoopControls = isUsingAdvancedLoopControls;\n                                instrument.chipWaveLoopStart = chipWaveLoopStart;\n                                instrument.chipWaveLoopEnd = chipWaveLoopEnd;\n                                instrument.chipWaveLoopMode = chipWaveLoopMode;\n                                instrument.chipWavePlayBackwards = chipWavePlayBackwards;\n                                instrument.chipWaveStartOffset = chipWaveStartOffset;\n                            }\n                        }\n                        else if (fromGoldBox && !beforeFour && beforeSix) {\n                            if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                                if (!willLoadLegacySamplesForOldSongs) {\n                                    willLoadLegacySamplesForOldSongs = true;\n                                    Config.willReloadForCustomSamples = true;\n                                    EditorConfig.customSamples = [\"legacySamples\"];\n                                    loadBuiltInSamples(0);\n                                }\n                            }\n                            this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 125);\n                        }\n                        else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const filterResonanceRange = 8;\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                    }\n                    break;\n                case 122:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox)) {\n                            }\n                            if (instrument.type == 4) {\n                                for (let i = 0; i < Config.drumCount; i++) {\n                                    let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                        aa = pregoldToEnvelope[aa];\n                                    instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(aa).index;\n                                }\n                            }\n                            else {\n                                const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                    aa = pregoldToEnvelope[aa];\n                                legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(aa);\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < Config.drumCount; i++) {\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                    aa = pregoldToEnvelope[aa];\n                                if (!fromSlarmoosBox && aa >= 2)\n                                    aa++;\n                                instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, aa);\n                            }\n                        }\n                    }\n                    break;\n                case 87:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.pulseWidth = clamp(0, Config.pulseWidthRange + (+(fromJummBox)) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if (fromBeepBox) {\n                            instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\n                        }\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                aa = pregoldToEnvelope[aa];\n                            legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(aa);\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        if ((fromUltraBox && !beforeFour) || fromSlarmoosBox) {\n                            instrument.decimalOffset = clamp(0, 99 + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 73:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const sustainValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        instrument.stringSustain = clamp(0, Config.stringSustainRange, sustainValue & 0x1F);\n                        instrument.stringSustainType = Config.enableAcousticSustain ? clamp(0, 2, sustainValue >> 5) : 0;\n                    }\n                    break;\n                case 100:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const legacySettings = [\n                                { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                                { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                                { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                                { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                                { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                                { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                                { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                                { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                                { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                            ];\n                            if (beforeThree && fromBeepBox) {\n                                const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                const instrument = this.channels[channelIndex].instruments[0];\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                    instrument.effects |= 1 << 10;\n                                }\n                            }\n                            else if (beforeSix && fromBeepBox) {\n                                for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                    for (const instrument of this.channels[channelIndex].instruments) {\n                                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                            instrument.effects |= 1 << 10;\n                                        }\n                                    }\n                                }\n                            }\n                            else if ((beforeFour && !fromGoldBox && !fromUltraBox && !fromSlarmoosBox) || fromBeepBox) {\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                    instrument.effects |= 1 << 10;\n                                }\n                            }\n                            else {\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\n                                    instrument.legacyTieOver = true;\n                                }\n                                instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\n                                    instrument.effects |= 1 << 10;\n                                }\n                            }\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            if (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                        }\n                    }\n                    break;\n                case 99:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            if (beforeSeven && fromBeepBox) {\n                                if (beforeThree && fromBeepBox) {\n                                    const legacyEffects = [0, 3, 2, 0];\n                                    const legacyEnvelopes = [\"none\", \"none\", \"none\", \"tremolo2\"];\n                                    const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const effect = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument = this.channels[channelIndex].instruments[0];\n                                    const legacySettings = legacySettingsCache[channelIndex][0];\n                                    instrument.vibrato = legacyEffects[effect];\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == 0) {\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                    }\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                        instrument.effects |= 1 << 9;\n                                    }\n                                }\n                                else if (beforeSix && fromBeepBox) {\n                                    const legacyEffects = [0, 1, 2, 3, 0, 0];\n                                    const legacyEnvelopes = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                                    for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                        for (let i = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                            const effect = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            const instrument = this.channels[channelIndex].instruments[i];\n                                            const legacySettings = legacySettingsCache[channelIndex][i];\n                                            instrument.vibrato = legacyEffects[effect];\n                                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == 0) {\n                                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                            }\n                                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                                instrument.effects |= 1 << 9;\n                                            }\n                                            if ((legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) && !this.getChannelIsNoise(channelIndex)) {\n                                                instrument.effects |= 1 << 0;\n                                                instrument.reverb = legacyGlobalReverb;\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    const legacyEffects = [0, 1, 2, 3, 0, 0];\n                                    const legacyEnvelopes = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                                    const effect = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                    const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                    instrument.vibrato = legacyEffects[effect];\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == 0) {\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                    }\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                        instrument.effects |= 1 << 9;\n                                    }\n                                    if (legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                                        instrument.effects |= 1 << 0;\n                                        instrument.reverb = legacyGlobalReverb;\n                                    }\n                                }\n                            }\n                            else {\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                const vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.vibrato = vibrato;\n                                if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                    instrument.effects |= 1 << 9;\n                                }\n                                if (vibrato == Config.vibratos.length) {\n                                    instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\n                                    instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\n                                    instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.effects |= 1 << 9;\n                                }\n                                else {\n                                    instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                                    instrument.vibratoSpeed = 10;\n                                    instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                                    instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                                }\n                            }\n                        }\n                        else {\n                            if (fromSlarmoosBox && !beforeFour) {\n                                const originalControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                this.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                                for (let i = this.eqFilter.controlPoints.length; i < this.eqFilter.controlPointCount; i++) {\n                                    this.eqFilter.controlPoints[i] = new FilterControlPoint();\n                                }\n                                for (let i = 0; i < this.eqFilter.controlPointCount; i++) {\n                                    const point = this.eqFilter.controlPoints[i];\n                                    point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                for (let i = this.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n                                    charIndex += 3;\n                                }\n                                this.eqSubFilters[0] = this.eqFilter;\n                                let usingSubFilterBitfield = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                    if (usingSubFilterBitfield & (1 << j)) {\n                                        const originalSubfilterControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        if (this.eqSubFilters[j + 1] == null)\n                                            this.eqSubFilters[j + 1] = new FilterSettings();\n                                        this.eqSubFilters[j + 1].controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                        for (let i = this.eqSubFilters[j + 1].controlPoints.length; i < this.eqSubFilters[j + 1].controlPointCount; i++) {\n                                            this.eqSubFilters[j + 1].controlPoints[i] = new FilterControlPoint();\n                                        }\n                                        for (let i = 0; i < this.eqSubFilters[j + 1].controlPointCount; i++) {\n                                            const point = this.eqSubFilters[j + 1].controlPoints[i];\n                                            point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        for (let i = this.eqSubFilters[j + 1].controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                            charIndex += 3;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 71:\n                    {\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 104:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument = this.channels[channelIndex].instruments[0];\n                            instrument.unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                            instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                            instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                            instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                            instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                        }\n                        else if (beforeSix && fromBeepBox) {\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (const instrument of this.channels[channelIndex].instruments) {\n                                    const originalValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    let unison = clamp(0, Config.unisons.length, originalValue);\n                                    if (originalValue == 8) {\n                                        unison = 2;\n                                        instrument.chord = 3;\n                                    }\n                                    instrument.unison = unison;\n                                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                                }\n                            }\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            const originalValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            let unison = clamp(0, Config.unisons.length, originalValue);\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            if (originalValue == 8) {\n                                unison = 2;\n                                instrument.chord = 3;\n                            }\n                            instrument.unison = unison;\n                            instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                            instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                            instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                            instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                            instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.unison = clamp(0, Config.unisons.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const unisonLength = (beforeFive || !fromSlarmoosBox) ? 27 : Config.unisons.length;\n                            if (((fromUltraBox && !beforeFive) || fromSlarmoosBox) && (instrument.unison == unisonLength)) {\n                                instrument.unison = Config.unisons.length;\n                                instrument.unisonVoices = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonSpreadNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonSpread = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n                                const unisonOffsetNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonOffset = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n                                const unisonExpressionNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonExpression = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n                                const unisonSignNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonSign = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n                                instrument.unisonSpread = unisonSpread / 1000;\n                                if (unisonSpreadNegative == 0)\n                                    instrument.unisonSpread *= -1;\n                                instrument.unisonOffset = unisonOffset / 1000;\n                                if (unisonOffsetNegative == 0)\n                                    instrument.unisonOffset *= -1;\n                                instrument.unisonExpression = unisonExpression / 1000;\n                                if (unisonExpressionNegative == 0)\n                                    instrument.unisonExpression *= -1;\n                                instrument.unisonSign = unisonSign / 1000;\n                                if (unisonSignNegative == 0)\n                                    instrument.unisonSign *= -1;\n                            }\n                            else {\n                                instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                                instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                                instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                                instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                                instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                            }\n                        }\n                    }\n                    break;\n                case 67:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                                instrument.effects |= 1 << 11;\n                            }\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 113:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << 15) - 1));\n                            if (legacyGlobalReverb == 0 && !((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                                instrument.effects &= ~(1 << 0);\n                            }\n                            else if (effectsIncludeReverb(instrument.effects)) {\n                                instrument.reverb = legacyGlobalReverb;\n                            }\n                            instrument.effects |= 1 << 2;\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                instrument.effects |= 1 << 9;\n                            }\n                            if (instrument.detune != Config.detuneCenter) {\n                                instrument.effects |= 1 << 8;\n                            }\n                            if (instrument.aliases)\n                                instrument.effects |= 1 << 3;\n                            else\n                                instrument.effects &= ~(1 << 3);\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        else {\n                            if (15 > 15)\n                                throw new Error();\n                            if (fromSlarmoosBox && !beforeFive) {\n                                instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 12) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            else {\n                                instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludeNoteFilter(instrument.effects)) {\n                                let typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if (fromBeepBox || typeCheck == 0) {\n                                    instrument.noteFilterType = false;\n                                    if (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                        typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\n                                    for (let i = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\n                                        instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\n                                    }\n                                    for (let i = 0; i < instrument.noteFilter.controlPointCount; i++) {\n                                        const point = instrument.noteFilter.controlPoints[i];\n                                        point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    for (let i = instrument.noteFilter.controlPointCount; i < typeCheck; i++) {\n                                        charIndex += 3;\n                                    }\n                                    instrument.noteSubFilters[0] = instrument.noteFilter;\n                                    if ((fromJummBox && !beforeFive) || (fromGoldBox) || (fromUltraBox) || (fromSlarmoosBox)) {\n                                        let usingSubFilterBitfield = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                            if (usingSubFilterBitfield & (1 << j)) {\n                                                const originalSubfilterControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                                if (instrument.noteSubFilters[j + 1] == null)\n                                                    instrument.noteSubFilters[j + 1] = new FilterSettings();\n                                                instrument.noteSubFilters[j + 1].controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                                for (let i = instrument.noteSubFilters[j + 1].controlPoints.length; i < instrument.noteSubFilters[j + 1].controlPointCount; i++) {\n                                                    instrument.noteSubFilters[j + 1].controlPoints[i] = new FilterControlPoint();\n                                                }\n                                                for (let i = 0; i < instrument.noteSubFilters[j + 1].controlPointCount; i++) {\n                                                    const point = instrument.noteSubFilters[j + 1].controlPoints[i];\n                                                    point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                    point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                    point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                }\n                                                for (let i = instrument.noteSubFilters[j + 1].controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                                    charIndex += 3;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    instrument.noteFilterType = true;\n                                    instrument.noteFilter.reset();\n                                    instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                            if (effectsIncludeTransition(instrument.effects)) {\n                                instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludeChord(instrument.effects)) {\n                                instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)) {\n                                    instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                                }\n                                if (instrument.chord == Config.chords.dictionary[\"monophonic\"].index && fromSlarmoosBox && !beforeFive) {\n                                    instrument.monoChordTone = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                }\n                            }\n                            if (effectsIncludePitchShift(instrument.effects)) {\n                                instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludeDetune(instrument.effects)) {\n                                if (fromBeepBox) {\n                                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\n                                }\n                                else {\n                                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                            if (effectsIncludeVibrato(instrument.effects)) {\n                                instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (instrument.vibrato == Config.vibratos.length && (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)) {\n                                    instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\n                                    instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                else {\n                                    instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                                    instrument.vibratoSpeed = 10;\n                                    instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                                    instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                                }\n                            }\n                            if (effectsIncludeDistortion(instrument.effects)) {\n                                instrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if ((fromJummBox && !beforeFive) || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                    instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                            }\n                            if (effectsIncludeBitcrusher(instrument.effects)) {\n                                instrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludePanning(instrument.effects)) {\n                                if (fromBeepBox) {\n                                    instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\n                                }\n                                else {\n                                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                if ((fromJummBox && !beforeTwo) || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                    instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            }\n                            if (effectsIncludeChorus(instrument.effects)) {\n                                if (fromBeepBox) {\n                                    instrument.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\n                                }\n                                else {\n                                    instrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                            if (effectsIncludeEcho(instrument.effects)) {\n                                instrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludeReverb(instrument.effects)) {\n                                if (fromBeepBox) {\n                                    instrument.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\n                                }\n                                else {\n                                    instrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                            if (effectsIncludeGranular(instrument.effects)) {\n                                instrument.granular = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrument.grainSize = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrument.grainAmounts = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrument.grainRange = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            }\n                            if (effectsIncludeRingModulation(instrument.effects)) {\n                                instrument.ringModulation = clamp(0, Config.ringModRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.ringModulationHz = clamp(0, Config.ringModHzRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.ringModWaveformIndex = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.ringModPulseWidth = clamp(0, Config.pulseWidthRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.ringModHzOffset = clamp(Config.rmHzOffsetMin, Config.rmHzOffsetMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                        }\n                        instrument.effects &= (1 << 15) - 1;\n                    }\n                    break;\n                case 118:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument = this.channels[channelIndex].instruments[0];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                        }\n                        else if (beforeSix && fromBeepBox) {\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (const instrument of this.channels[channelIndex].instruments) {\n                                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                                }\n                            }\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                        }\n                        else if (fromBeepBox) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\n                        }\n                    }\n                    break;\n                case 76:\n                    {\n                        if (beforeNine && fromBeepBox) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0));\n                        }\n                        else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            if (fromJummBox && !beforeThree || fromGoldBox || fromUltraBox || fromSlarmoosBox) {\n                                instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            }\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 68:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\n                            instrument.effects |= 1 << 8;\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 77:\n                    {\n                        let instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        for (let j = 0; j < 64; j++) {\n                            instrument.customChipWave[j]\n                                = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\n                        }\n                        let sum = 0.0;\n                        for (let i = 0; i < instrument.customChipWave.length; i++) {\n                            sum += instrument.customChipWave[i];\n                        }\n                        const average = sum / instrument.customChipWave.length;\n                        let cumulative = 0;\n                        let wavePrev = 0;\n                        for (let i = 0; i < instrument.customChipWave.length; i++) {\n                            cumulative += wavePrev;\n                            wavePrev = instrument.customChipWave[i] - average;\n                            instrument.customChipWaveIntegral[i] = cumulative;\n                        }\n                        instrument.customChipWaveIntegral[64] = 0.0;\n                    }\n                    break;\n                case 79:\n                    {\n                        let nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if (nextValue == 0x3f) {\n                            this.restoreLimiterDefaults();\n                        }\n                        else {\n                            this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\n                            nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\n                            this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\n                            this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                            this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                            this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\n                        }\n                    }\n                    break;\n                case 85:\n                    {\n                        for (let channel = 0; channel < this.getChannelCount(); channel++) {\n                            var channelNameLength;\n                            if (beforeFour && !fromGoldBox && !fromUltraBox && !fromSlarmoosBox)\n                                channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            else\n                                channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\n                            charIndex += channelNameLength;\n                        }\n                    }\n                    break;\n                case 65:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (instrument.type == 1) {\n                            instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        else {\n                            instrument.algorithm6Op = clamp(0, Config.algorithms6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\n                            if (compressed.charCodeAt(charIndex) == 67) {\n                                let carrierCountTemp = clamp(1, Config.operatorCount + 2 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex + 1)]);\n                                charIndex++;\n                                let tempModArray = [];\n                                if (compressed.charCodeAt(charIndex + 1) == 113) {\n                                    charIndex++;\n                                    let j = 0;\n                                    charIndex++;\n                                    while (compressed.charCodeAt(charIndex) != 113) {\n                                        tempModArray[j] = [];\n                                        let o = 0;\n                                        while (compressed.charCodeAt(charIndex) != 82) {\n                                            tempModArray[j][o] = clamp(1, Config.operatorCount + 3, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                            o++;\n                                            charIndex++;\n                                        }\n                                        j++;\n                                        charIndex++;\n                                    }\n                                    instrument.customAlgorithm.set(carrierCountTemp, tempModArray);\n                                    charIndex++;\n                                }\n                            }\n                        }\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                    }\n                    break;\n                case 120:\n                    {\n                        if (fromGoldBox && !beforeFour && beforeSix) {\n                            const chipWaveForCompat = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if ((chipWaveForCompat + 62) > 85) {\n                                if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                                    if (!willLoadLegacySamplesForOldSongs) {\n                                        willLoadLegacySamplesForOldSongs = true;\n                                        Config.willReloadForCustomSamples = true;\n                                        EditorConfig.customSamples = [\"legacySamples\"];\n                                        loadBuiltInSamples(0);\n                                    }\n                                }\n                            }\n                            if ((chipWaveForCompat + 62) > 78) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 63);\n                            }\n                            else if ((chipWaveForCompat + 62) > 67) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 61);\n                            }\n                            else if ((chipWaveForCompat + 62) == 67) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = 40;\n                            }\n                            else {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 62);\n                            }\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.supersawShape = clamp(0, Config.supersawShapeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 70:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (instrument.type == 1) {\n                            instrument.feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        else {\n                            instrument.feedbackType6Op = clamp(0, Config.feedbacks6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\n                            let tempModArray = [];\n                            if (compressed.charCodeAt(charIndex) == 113) {\n                                let j = 0;\n                                charIndex++;\n                                while (compressed.charCodeAt(charIndex) != 113) {\n                                    tempModArray[j] = [];\n                                    let o = 0;\n                                    while (compressed.charCodeAt(charIndex) != 82) {\n                                        tempModArray[j][o] = clamp(1, Config.operatorCount + 2, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                        o++;\n                                        charIndex++;\n                                    }\n                                    j++;\n                                    charIndex++;\n                                }\n                                instrument.customFeedbackType.set(tempModArray);\n                                charIndex++;\n                            }\n                        }\n                    }\n                    break;\n                case 66:\n                    {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    break;\n                case 86:\n                    {\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                aa = pregoldToEnvelope[aa];\n                            legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[aa]);\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 81:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (beforeThree && fromGoldBox) {\n                            const freqToGold3 = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                instrument.operators[o].frequency = freqToGold3[clamp(0, freqToGold3.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                            }\n                        }\n                        else if (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox) {\n                            const freqToUltraBox = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 23, 27, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                instrument.operators[o].frequency = freqToUltraBox[clamp(0, freqToUltraBox.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                            }\n                        }\n                        else {\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                instrument.operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                        }\n                    }\n                    break;\n                case 80:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                            instrument.operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 69:\n                    {\n                        const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                        const jummToUltraEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 58, 59, 60];\n                        const slarURL3toURL4Envelope = [0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 11, 12, 13, 14];\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            legacySettings.operatorEnvelopes = [];\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (fromBeepBox))\n                                    aa = pregoldToEnvelope[aa];\n                                if (fromJummBox)\n                                    aa = jummToUltraEnvelope[aa];\n                                legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(aa);\n                            }\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        else {\n                            const envelopeCount = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            let envelopeDiscrete = false;\n                            if ((fromJummBox && !beforeSix) || (fromUltraBox && !beforeFive) || (fromSlarmoosBox)) {\n                                instrument.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (!fromSlarmoosBox || beforeFive) {\n                                    envelopeDiscrete = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                                }\n                            }\n                            for (let i = 0; i < envelopeCount; i++) {\n                                const target = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                let index = 0;\n                                const maxCount = Config.instrumentAutomationTargets[target].maxCount;\n                                if (maxCount > 1) {\n                                    index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (fromBeepBox))\n                                    aa = pregoldToEnvelope[aa];\n                                if (fromJummBox)\n                                    aa = jummToUltraEnvelope[aa];\n                                if (!fromSlarmoosBox && aa >= 2)\n                                    aa++;\n                                let updatedEnvelopes = false;\n                                let perEnvelopeSpeed = 1;\n                                if (!fromSlarmoosBox || beforeThree) {\n                                    updatedEnvelopes = true;\n                                    perEnvelopeSpeed = Config.envelopes[aa].speed;\n                                    aa = Config.envelopes[aa].type;\n                                }\n                                else if (beforeFour && aa >= 3)\n                                    aa++;\n                                let isTremolo2 = false;\n                                if ((fromSlarmoosBox && !beforeThree && beforeFour) || updatedEnvelopes) {\n                                    if (aa == 9)\n                                        isTremolo2 = true;\n                                    aa = slarURL3toURL4Envelope[aa];\n                                }\n                                const envelope = clamp(0, ((fromSlarmoosBox && !beforeThree || updatedEnvelopes) ? Config.newEnvelopes.length : Config.envelopes.length), aa);\n                                let pitchEnvelopeStart = 0;\n                                let pitchEnvelopeEnd = Config.maxPitch;\n                                let envelopeInverse = false;\n                                perEnvelopeSpeed = (fromSlarmoosBox && !beforeThree) ? Config.newEnvelopes[envelope].speed : perEnvelopeSpeed;\n                                let perEnvelopeLowerBound = 0;\n                                let perEnvelopeUpperBound = 1;\n                                let steps = 2;\n                                let seed = 2;\n                                let waveform = 0;\n                                if (fromSlarmoosBox && !beforeFour) {\n                                    if (Config.newEnvelopes[envelope].name == \"lfo\") {\n                                        waveform = clamp(0, 7, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        if (waveform == 5 || waveform == 6) {\n                                            steps = clamp(1, Config.randomEnvelopeStepsMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                    }\n                                    else if (Config.newEnvelopes[envelope].name == \"random\") {\n                                        steps = clamp(1, Config.randomEnvelopeStepsMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        seed = clamp(1, Config.randomEnvelopeSeedMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        waveform = clamp(0, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                }\n                                if (fromSlarmoosBox && !beforeThree) {\n                                    if (Config.newEnvelopes[envelope].name == \"pitch\") {\n                                        if (!instrument.isNoiseInstrument) {\n                                            let pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                            pitchEnvelopeStart = clamp(0, Config.maxPitch + 1, pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                            pitchEnvelopeEnd = clamp(0, Config.maxPitch + 1, pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        else {\n                                            pitchEnvelopeStart = clamp(0, Config.drumCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            pitchEnvelopeEnd = clamp(0, Config.drumCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                    }\n                                    let checkboxValues = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if (fromSlarmoosBox && !beforeFive) {\n                                        envelopeDiscrete = (checkboxValues >> 1) == 1 ? true : false;\n                                    }\n                                    envelopeInverse = (checkboxValues & 1) == 1 ? true : false;\n                                    if (Config.newEnvelopes[envelope].name != \"pitch\" && Config.newEnvelopes[envelope].name != \"note size\" && Config.newEnvelopes[envelope].name != \"punch\" && Config.newEnvelopes[envelope].name != \"none\") {\n                                        perEnvelopeSpeed = Config.perEnvelopeSpeedIndices[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                                    }\n                                    perEnvelopeLowerBound = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 10;\n                                    perEnvelopeUpperBound = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 10;\n                                }\n                                if (!fromSlarmoosBox || beforeFour) {\n                                    if (isTremolo2) {\n                                        waveform = 0;\n                                        if (envelopeInverse) {\n                                            perEnvelopeUpperBound = Math.floor((perEnvelopeUpperBound / 2) * 10) / 10;\n                                            perEnvelopeLowerBound = Math.floor((perEnvelopeLowerBound / 2) * 10) / 10;\n                                        }\n                                        else {\n                                            perEnvelopeUpperBound = Math.floor((0.5 + (perEnvelopeUpperBound - perEnvelopeLowerBound) / 2) * 10) / 10;\n                                            perEnvelopeLowerBound = 0.5;\n                                        }\n                                    }\n                                }\n                                instrument.addEnvelope(target, index, envelope, true, pitchEnvelopeStart, pitchEnvelopeEnd, envelopeInverse, perEnvelopeSpeed, perEnvelopeLowerBound, perEnvelopeUpperBound, steps, seed, waveform, envelopeDiscrete);\n                                if (fromSlarmoosBox && beforeThree && !beforeTwo) {\n                                    let pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.envelopes[i].pitchEnvelopeStart = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.envelopes[i].pitchEnvelopeEnd = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.envelopes[i].inverse = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1 ? true : false;\n                                }\n                            }\n                            let instrumentPitchEnvelopeStart = 0;\n                            let instrumentPitchEnvelopeEnd = Config.maxPitch;\n                            let instrumentEnvelopeInverse = false;\n                            if (fromSlarmoosBox && beforeTwo) {\n                                let pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrumentPitchEnvelopeStart = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrumentPitchEnvelopeEnd = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrumentEnvelopeInverse = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] === 1 ? true : false;\n                                for (let i = 0; i < envelopeCount; i++) {\n                                    instrument.envelopes[i].pitchEnvelopeStart = instrumentPitchEnvelopeStart;\n                                    instrument.envelopes[i].pitchEnvelopeEnd = instrumentPitchEnvelopeEnd;\n                                    instrument.envelopes[i].inverse = Config.envelopes[instrument.envelopes[i].envelope].name == \"pitch\" ? instrumentEnvelopeInverse : false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 82:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (beforeThree && fromGoldBox) {\n                            for (let o = 0; o < Config.operatorCount; o++) {\n                                const pre3To3g = [0, 1, 3, 2, 2, 2, 4, 5];\n                                const old = clamp(0, pre3To3g.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (old == 3) {\n                                    instrument.operators[o].pulseWidth = 5;\n                                }\n                                else if (old == 4) {\n                                    instrument.operators[o].pulseWidth = 4;\n                                }\n                                else if (old == 5) {\n                                    instrument.operators[o].pulseWidth = 6;\n                                }\n                                instrument.operators[o].waveform = pre3To3g[old];\n                            }\n                        }\n                        else {\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                if (fromJummBox) {\n                                    const jummToG = [0, 1, 3, 2, 4, 5];\n                                    instrument.operators[o].waveform = jummToG[clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                }\n                                else {\n                                    instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                if (instrument.operators[o].waveform == 2) {\n                                    instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 83:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (instrument.type == 3) {\n                            const byteCount = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                            for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                                instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                            }\n                            instrument.spectrumWave.markCustomWaveDirty();\n                            charIndex += byteCount;\n                        }\n                        else if (instrument.type == 4) {\n                            const byteCount = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                            for (let j = 0; j < Config.drumCount; j++) {\n                                for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                                    instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                                }\n                                instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                            }\n                            charIndex += byteCount;\n                        }\n                        else {\n                            throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\n                        }\n                    }\n                    break;\n                case 72:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const byteCount = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6);\n                        const bits = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                        for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                            instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\n                        }\n                        instrument.harmonicsWave.markCustomWaveDirty();\n                        charIndex += byteCount;\n                    }\n                    break;\n                case 88:\n                    {\n                        if ((fromJummBox && beforeFive) || (fromGoldBox && beforeFour)) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                            if (instrument.aliases) {\n                                instrument.distortion = 0;\n                                instrument.effects |= 1 << 3;\n                            }\n                        }\n                        else {\n                            if (fromUltraBox || fromSlarmoosBox) {\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.decimalOffset = clamp(0, 50 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                        }\n                    }\n                    break;\n                case 98:\n                    {\n                        let subStringLength;\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const barCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            subStringLength = Math.ceil(barCount * 0.5);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                            for (let i = 0; i < barCount; i++) {\n                                this.channels[channelIndex].bars[i] = bits.read(3) + 1;\n                            }\n                        }\n                        else if (beforeFive && fromBeepBox) {\n                            let neededBits = 0;\n                            while ((1 << neededBits) < this.patternsPerChannel)\n                                neededBits++;\n                            subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i = 0; i < this.barCount; i++) {\n                                    this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\n                                }\n                            }\n                        }\n                        else {\n                            let neededBits = 0;\n                            while ((1 << neededBits) < this.patternsPerChannel + 1)\n                                neededBits++;\n                            subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i = 0; i < this.barCount; i++) {\n                                    this.channels[channelIndex].bars[i] = bits.read(neededBits);\n                                }\n                            }\n                        }\n                        charIndex += subStringLength;\n                    }\n                    break;\n                case 112:\n                    {\n                        let bitStringLength = 0;\n                        let channelIndex;\n                        let largerChords = !((beforeFour && fromJummBox) || fromBeepBox);\n                        let recentPitchBitLength = (largerChords ? 4 : 3);\n                        let recentPitchLength = (largerChords ? 16 : 8);\n                        if (beforeThree && fromBeepBox) {\n                            channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            charIndex++;\n                            bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            bitStringLength = bitStringLength << 6;\n                            bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        else {\n                            channelIndex = 0;\n                            let bitStringLengthLength = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            while (bitStringLengthLength > 0) {\n                                bitStringLength = bitStringLength << 6;\n                                bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                bitStringLengthLength--;\n                            }\n                        }\n                        const bits = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\n                        charIndex += bitStringLength;\n                        const bitsPerNoteSize = Song.getNeededBits(Config.noteSizeMax);\n                        let songReverbChannel = -1;\n                        let songReverbInstrument = -1;\n                        let songReverbIndex = -1;\n                        const shouldCorrectTempoMods = fromJummBox;\n                        const jummboxTempoMin = 30;\n                        while (true) {\n                            const channel = this.channels[channelIndex];\n                            const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n                            const isModChannel = this.getChannelIsMod(channelIndex);\n                            const maxInstrumentsPerPattern = this.getMaxInstrumentsPerPattern(channelIndex);\n                            const neededInstrumentCountBits = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n                            const neededInstrumentIndexBits = Song.getNeededBits(channel.instruments.length - 1);\n                            if (isModChannel) {\n                                let jumfive = (beforeFive && fromJummBox) || (beforeFour && fromGoldBox);\n                                const neededModInstrumentIndexBits = (jumfive) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n                                for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                                    let instrument = channel.instruments[instrumentIndex];\n                                    for (let mod = 0; mod < Config.modCount; mod++) {\n                                        let status = bits.read(2);\n                                        switch (status) {\n                                            case 0:\n                                                instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\n                                                instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\n                                                break;\n                                            case 1:\n                                                instrument.modChannels[mod] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\n                                                instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\n                                                break;\n                                            case 2:\n                                                instrument.modChannels[mod] = -1;\n                                                break;\n                                            case 3:\n                                                instrument.modChannels[mod] = -2;\n                                                break;\n                                        }\n                                        if (status != 3) {\n                                            instrument.modulators[mod] = bits.read(6);\n                                        }\n                                        if (!jumfive && (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\" || Config.modulators[instrument.modulators[mod]].name == \"song eq\")) {\n                                            instrument.modFilterTypes[mod] = bits.read(6);\n                                        }\n                                        if (Config.modulators[instrument.modulators[mod]].name == \"individual envelope speed\" ||\n                                            Config.modulators[instrument.modulators[mod]].name == \"reset envelope\" ||\n                                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope lower bound\" ||\n                                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope upper bound\") {\n                                            instrument.modEnvelopeNumbers[mod] = bits.read(6);\n                                        }\n                                        if (jumfive && instrument.modChannels[mod] >= 0) {\n                                            let forNoteFilter = effectsIncludeNoteFilter(this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects);\n                                            if (instrument.modulators[mod] == 7) {\n                                                if (forNoteFilter) {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\n                                                }\n                                                else {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\n                                                }\n                                                instrument.modFilterTypes[mod] = 1;\n                                            }\n                                            else if (instrument.modulators[mod] == 8) {\n                                                if (forNoteFilter) {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\n                                                }\n                                                else {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\n                                                }\n                                                instrument.modFilterTypes[mod] = 2;\n                                            }\n                                        }\n                                        else if (jumfive) {\n                                            if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\n                                                songReverbChannel = channelIndex;\n                                                songReverbInstrument = instrumentIndex;\n                                                songReverbIndex = mod;\n                                            }\n                                        }\n                                        if (jumfive && Config.modulators[instrument.modulators[mod]].associatedEffect != 15) {\n                                            this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects |= 1 << Config.modulators[instrument.modulators[mod]].associatedEffect;\n                                        }\n                                    }\n                                }\n                            }\n                            const detuneScaleNotes = [];\n                            for (let j = 0; j < channel.instruments.length; j++) {\n                                detuneScaleNotes[j] = [];\n                                for (let i = 0; i < Config.modCount; i++) {\n                                    detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(((beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\n                                }\n                            }\n                            const octaveOffset = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\n                            let lastPitch = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\n                            const recentPitches = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n                            const recentShapes = [];\n                            for (let i = 0; i < recentPitches.length; i++) {\n                                recentPitches[i] += octaveOffset;\n                            }\n                            for (let i = 0; i < this.patternsPerChannel; i++) {\n                                const newPattern = channel.patterns[i];\n                                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                                    newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\n                                    newPattern.instruments.length = 1;\n                                }\n                                else {\n                                    if (this.patternInstruments) {\n                                        const instrumentCount = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\n                                        for (let j = 0; j < instrumentCount; j++) {\n                                            newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\n                                        }\n                                        newPattern.instruments.length = instrumentCount;\n                                    }\n                                    else {\n                                        newPattern.instruments[0] = 0;\n                                        newPattern.instruments.length = Config.instrumentCountMin;\n                                    }\n                                }\n                                if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\n                                    newPattern.notes.length = 0;\n                                    continue;\n                                }\n                                let curPart = 0;\n                                const newNotes = newPattern.notes;\n                                let noteCount = 0;\n                                while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n                                    const useOldShape = bits.read(1) == 1;\n                                    let newNote = false;\n                                    let shapeIndex = 0;\n                                    if (useOldShape) {\n                                        shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\n                                    }\n                                    else {\n                                        newNote = bits.read(1) == 1;\n                                    }\n                                    if (!useOldShape && !newNote) {\n                                        if (isModChannel) {\n                                            const isBackwards = bits.read(1) == 1;\n                                            const restLength = bits.readPartDuration();\n                                            if (isBackwards) {\n                                                curPart -= restLength;\n                                            }\n                                            else {\n                                                curPart += restLength;\n                                            }\n                                        }\n                                        else {\n                                            const restLength = (beforeSeven && fromBeepBox)\n                                                ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                                : bits.readPartDuration();\n                                            curPart += restLength;\n                                        }\n                                    }\n                                    else {\n                                        let shape;\n                                        if (useOldShape) {\n                                            shape = recentShapes[shapeIndex];\n                                            recentShapes.splice(shapeIndex, 1);\n                                        }\n                                        else {\n                                            shape = {};\n                                            if (!largerChords) {\n                                                shape.pitchCount = 1;\n                                                while (shape.pitchCount < 4 && bits.read(1) == 1)\n                                                    shape.pitchCount++;\n                                            }\n                                            else {\n                                                if (bits.read(1) == 1) {\n                                                    shape.pitchCount = bits.read(3) + 2;\n                                                }\n                                                else {\n                                                    shape.pitchCount = 1;\n                                                }\n                                            }\n                                            shape.pinCount = bits.readPinCount();\n                                            if (fromBeepBox) {\n                                                shape.initialSize = bits.read(2) * 2;\n                                            }\n                                            else if (!isModChannel) {\n                                                shape.initialSize = bits.read(bitsPerNoteSize);\n                                            }\n                                            else {\n                                                shape.initialSize = bits.read(9);\n                                            }\n                                            shape.pins = [];\n                                            shape.length = 0;\n                                            shape.bendCount = 0;\n                                            for (let j = 0; j < shape.pinCount; j++) {\n                                                let pinObj = {};\n                                                pinObj.pitchBend = bits.read(1) == 1;\n                                                if (pinObj.pitchBend)\n                                                    shape.bendCount++;\n                                                shape.length += (beforeSeven && fromBeepBox)\n                                                    ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                                    : bits.readPartDuration();\n                                                pinObj.time = shape.length;\n                                                if (fromBeepBox) {\n                                                    pinObj.size = bits.read(2) * 2;\n                                                }\n                                                else if (!isModChannel) {\n                                                    pinObj.size = bits.read(bitsPerNoteSize);\n                                                }\n                                                else {\n                                                    pinObj.size = bits.read(9);\n                                                }\n                                                shape.pins.push(pinObj);\n                                            }\n                                        }\n                                        recentShapes.unshift(shape);\n                                        if (recentShapes.length > 10)\n                                            recentShapes.pop();\n                                        let note;\n                                        if (newNotes.length <= noteCount) {\n                                            note = new Note(0, curPart, curPart + shape.length, shape.initialSize);\n                                            newNotes[noteCount++] = note;\n                                        }\n                                        else {\n                                            note = newNotes[noteCount++];\n                                            note.start = curPart;\n                                            note.end = curPart + shape.length;\n                                            note.pins[0].size = shape.initialSize;\n                                        }\n                                        let pitch;\n                                        let pitchCount = 0;\n                                        const pitchBends = [];\n                                        for (let j = 0; j < shape.pitchCount + shape.bendCount; j++) {\n                                            const useOldPitch = bits.read(1) == 1;\n                                            if (!useOldPitch) {\n                                                const interval = bits.readPitchInterval();\n                                                pitch = lastPitch;\n                                                let intervalIter = interval;\n                                                while (intervalIter > 0) {\n                                                    pitch++;\n                                                    while (recentPitches.indexOf(pitch) != -1)\n                                                        pitch++;\n                                                    intervalIter--;\n                                                }\n                                                while (intervalIter < 0) {\n                                                    pitch--;\n                                                    while (recentPitches.indexOf(pitch) != -1)\n                                                        pitch--;\n                                                    intervalIter++;\n                                                }\n                                            }\n                                            else {\n                                                const pitchIndex = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\n                                                pitch = recentPitches[pitchIndex];\n                                                recentPitches.splice(pitchIndex, 1);\n                                            }\n                                            recentPitches.unshift(pitch);\n                                            if (recentPitches.length > recentPitchLength)\n                                                recentPitches.pop();\n                                            if (j < shape.pitchCount) {\n                                                note.pitches[pitchCount++] = pitch;\n                                            }\n                                            else {\n                                                pitchBends.push(pitch);\n                                            }\n                                            if (j == shape.pitchCount - 1) {\n                                                lastPitch = note.pitches[0];\n                                            }\n                                            else {\n                                                lastPitch = pitch;\n                                            }\n                                        }\n                                        note.pitches.length = pitchCount;\n                                        pitchBends.unshift(note.pitches[0]);\n                                        const noteIsForTempoMod = isModChannel && channel.instruments[newPattern.instruments[0]].modulators[Config.modCount - 1 - note.pitches[0]] === Config.modulators.dictionary[\"tempo\"].index;\n                                        let tempoOffset = 0;\n                                        if (shouldCorrectTempoMods && noteIsForTempoMod) {\n                                            tempoOffset = jummboxTempoMin - Config.tempoMin;\n                                        }\n                                        if (isModChannel) {\n                                            note.pins[0].size += tempoOffset;\n                                            note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\n                                        }\n                                        let pinCount = 1;\n                                        for (const pinObj of shape.pins) {\n                                            if (pinObj.pitchBend)\n                                                pitchBends.shift();\n                                            const interval = pitchBends[0] - note.pitches[0];\n                                            if (note.pins.length <= pinCount) {\n                                                if (isModChannel) {\n                                                    note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]] + tempoOffset);\n                                                }\n                                                else {\n                                                    note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\n                                                }\n                                            }\n                                            else {\n                                                const pin = note.pins[pinCount++];\n                                                pin.interval = interval;\n                                                pin.time = pinObj.time;\n                                                if (isModChannel) {\n                                                    pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]] + tempoOffset;\n                                                }\n                                                else {\n                                                    pin.size = pinObj.size;\n                                                }\n                                            }\n                                        }\n                                        note.pins.length = pinCount;\n                                        if (note.start == 0) {\n                                            if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox))) {\n                                                note.continuesLastPattern = (bits.read(1) == 1);\n                                            }\n                                            else {\n                                                if ((beforeFour && !fromUltraBox && !fromSlarmoosBox) || fromBeepBox) {\n                                                    note.continuesLastPattern = false;\n                                                }\n                                                else {\n                                                    note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\n                                                }\n                                            }\n                                        }\n                                        curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\n                                    }\n                                }\n                                newNotes.length = noteCount;\n                            }\n                            if (beforeThree && fromBeepBox) {\n                                break;\n                            }\n                            else {\n                                channelIndex++;\n                                if (channelIndex >= this.getChannelCount())\n                                    break;\n                            }\n                        }\n                        if (((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) && songReverbIndex >= 0) {\n                            for (let channelIndex = 0; channelIndex < this.channels.length; channelIndex++) {\n                                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                                    const instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                                    if (effectsIncludeReverb(instrument.effects)) {\n                                        instrument.reverb = Config.reverbRange - 1;\n                                    }\n                                    if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\n                                        const patternIndex = this.channels[channelIndex].bars[0];\n                                        if (patternIndex > 0) {\n                                            const pattern = this.channels[channelIndex].patterns[patternIndex - 1];\n                                            let lowestPart = 6;\n                                            for (const note of pattern.notes) {\n                                                if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\n                                                    lowestPart = Math.min(lowestPart, note.start);\n                                                }\n                                            }\n                                            if (lowestPart > 0) {\n                                                pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\n                                            }\n                                        }\n                                        else {\n                                            if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\n                                                const pattern = new Pattern();\n                                                this.channels[channelIndex].patterns.push(pattern);\n                                                this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\n                                                if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\n                                                    for (let chn = 0; chn < this.channels.length; chn++) {\n                                                        if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\n                                                            this.channels[chn].patterns.push(new Pattern());\n                                                        }\n                                                    }\n                                                    this.patternsPerChannel++;\n                                                }\n                                                pattern.instruments.length = 1;\n                                                pattern.instruments[0] = songReverbInstrument;\n                                                pattern.notes.length = 0;\n                                                pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    {\n                        throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1) + \" \" + compressed.substring(0, charIndex));\n                    }\n                    break;\n            }\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n    static _isProperUrl(string) {\n        try {\n            if (OFFLINE) {\n                return Boolean(string);\n            }\n            else {\n                return Boolean(new URL(string));\n            }\n        }\n        catch (x) {\n            return false;\n        }\n    }\n    static _parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax) {\n        const defaultIndex = 0;\n        const defaultIntegratedSamples = Config.chipWaves[defaultIndex].samples;\n        const defaultSamples = Config.rawRawChipWaves[defaultIndex].samples;\n        const customSampleUrlIndex = customSampleUrls.length;\n        customSampleUrls.push(url);\n        const chipWaveIndex = Config.chipWaves.length;\n        let urlSliced = url;\n        let customSampleRate = 44100;\n        let isCustomPercussive = false;\n        let customRootKey = 60;\n        let presetIsUsingAdvancedLoopControls = false;\n        let presetChipWaveLoopStart = null;\n        let presetChipWaveLoopEnd = null;\n        let presetChipWaveStartOffset = null;\n        let presetChipWaveLoopMode = null;\n        let presetChipWavePlayBackwards = false;\n        let parsedSampleOptions = false;\n        let optionsStartIndex = url.indexOf(\"!\");\n        let optionsEndIndex = -1;\n        if (optionsStartIndex === 0) {\n            optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\n            if (optionsEndIndex !== -1) {\n                const rawOptions = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\n                for (const rawOption of rawOptions) {\n                    const optionCode = rawOption.charAt(0);\n                    const optionData = rawOption.slice(1, rawOption.length);\n                    if (optionCode === \"s\") {\n                        customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(optionData, 44100));\n                    }\n                    else if (optionCode === \"r\") {\n                        customRootKey = parseFloatWithDefault(optionData, 60);\n                    }\n                    else if (optionCode === \"p\") {\n                        isCustomPercussive = true;\n                    }\n                    else if (optionCode === \"a\") {\n                        presetChipWaveLoopStart = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopStart != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"b\") {\n                        presetChipWaveLoopEnd = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopEnd != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"c\") {\n                        presetChipWaveStartOffset = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveStartOffset != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"d\") {\n                        presetChipWaveLoopMode = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopMode != null) {\n                            presetChipWaveLoopMode = clamp(0, 3 + 1, presetChipWaveLoopMode);\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"e\") {\n                        presetChipWavePlayBackwards = true;\n                        presetIsUsingAdvancedLoopControls = true;\n                    }\n                }\n                urlSliced = url.slice(optionsEndIndex + 1, url.length);\n                parsedSampleOptions = true;\n            }\n        }\n        let parsedUrl = null;\n        if (Song._isProperUrl(urlSliced)) {\n            if (OFFLINE) {\n                parsedUrl = urlSliced;\n            }\n            else {\n                parsedUrl = new URL(urlSliced);\n            }\n        }\n        else {\n            alert(url + \" is not a valid url\");\n            return false;\n        }\n        if (parseOldSyntax) {\n            if (!parsedSampleOptions && parsedUrl != null) {\n                if (url.indexOf(\"@\") != -1) {\n                    urlSliced = url.replaceAll(\"@\", \"\");\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    }\n                    else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    isCustomPercussive = true;\n                }\n                function sliceForSampleRate() {\n                    urlSliced = url.slice(0, url.indexOf(\",\"));\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    }\n                    else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(url.slice(url.indexOf(\",\") + 1), 44100));\n                }\n                function sliceForRootKey() {\n                    urlSliced = url.slice(0, url.indexOf(\"!\"));\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    }\n                    else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    customRootKey = parseFloatWithDefault(url.slice(url.indexOf(\"!\") + 1), 60);\n                }\n                if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\n                    if (url.indexOf(\",\") < url.indexOf(\"!\")) {\n                        sliceForRootKey();\n                        sliceForSampleRate();\n                    }\n                    else {\n                        sliceForSampleRate();\n                        sliceForRootKey();\n                    }\n                }\n                else {\n                    if (url.indexOf(\",\") != -1) {\n                        sliceForSampleRate();\n                    }\n                    if (url.indexOf(\"!\") != -1) {\n                        sliceForRootKey();\n                    }\n                }\n            }\n        }\n        if (parsedUrl != null) {\n            let urlWithNamedOptions = urlSliced;\n            const namedOptions = [];\n            if (customSampleRate !== 44100)\n                namedOptions.push(\"s\" + customSampleRate);\n            if (customRootKey !== 60)\n                namedOptions.push(\"r\" + customRootKey);\n            if (isCustomPercussive)\n                namedOptions.push(\"p\");\n            if (presetIsUsingAdvancedLoopControls) {\n                if (presetChipWaveLoopStart != null)\n                    namedOptions.push(\"a\" + presetChipWaveLoopStart);\n                if (presetChipWaveLoopEnd != null)\n                    namedOptions.push(\"b\" + presetChipWaveLoopEnd);\n                if (presetChipWaveStartOffset != null)\n                    namedOptions.push(\"c\" + presetChipWaveStartOffset);\n                if (presetChipWaveLoopMode != null)\n                    namedOptions.push(\"d\" + presetChipWaveLoopMode);\n                if (presetChipWavePlayBackwards)\n                    namedOptions.push(\"e\");\n            }\n            if (namedOptions.length > 0) {\n                urlWithNamedOptions = \"!\" + namedOptions.join(\",\") + \"!\" + urlSliced;\n            }\n            customSampleUrls[customSampleUrlIndex] = urlWithNamedOptions;\n            let name;\n            if (OFFLINE) {\n                name = decodeURIComponent(parsedUrl.replace(/^([^\\/]*\\/)+/, \"\"));\n            }\n            else {\n                name = decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\n            }\n            const expression = 1.0;\n            Config.chipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultIntegratedSamples,\n                index: chipWaveIndex,\n            };\n            Config.rawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamples,\n                index: chipWaveIndex,\n            };\n            Config.rawRawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamples,\n                index: chipWaveIndex,\n            };\n            const customSamplePresetSettings = {\n                \"type\": \"chip\",\n                \"eqFilter\": [],\n                \"effects\": [],\n                \"transition\": \"normal\",\n                \"fadeInSeconds\": 0,\n                \"fadeOutTicks\": -3,\n                \"chord\": \"harmony\",\n                \"wave\": name,\n                \"unison\": \"none\",\n                \"envelopes\": [],\n            };\n            if (presetIsUsingAdvancedLoopControls) {\n                customSamplePresetSettings[\"isUsingAdvancedLoopControls\"] = true;\n                customSamplePresetSettings[\"chipWaveLoopStart\"] = presetChipWaveLoopStart != null ? presetChipWaveLoopStart : 0;\n                customSamplePresetSettings[\"chipWaveLoopEnd\"] = presetChipWaveLoopEnd != null ? presetChipWaveLoopEnd : 2;\n                customSamplePresetSettings[\"chipWaveLoopMode\"] = presetChipWaveLoopMode != null ? presetChipWaveLoopMode : 0;\n                customSamplePresetSettings[\"chipWavePlayBackwards\"] = presetChipWavePlayBackwards;\n                customSamplePresetSettings[\"chipWaveStartOffset\"] = presetChipWaveStartOffset != null ? presetChipWaveStartOffset : 0;\n            }\n            const customSamplePreset = {\n                index: 0,\n                name: name,\n                midiProgram: 80,\n                settings: customSamplePresetSettings,\n            };\n            customSamplePresets.push(customSamplePreset);\n            if (!Config.willReloadForCustomSamples) {\n                const rawLoopOptions = {\n                    \"isUsingAdvancedLoopControls\": presetIsUsingAdvancedLoopControls,\n                    \"chipWaveLoopStart\": presetChipWaveLoopStart,\n                    \"chipWaveLoopEnd\": presetChipWaveLoopEnd,\n                    \"chipWaveLoopMode\": presetChipWaveLoopMode,\n                    \"chipWavePlayBackwards\": presetChipWavePlayBackwards,\n                    \"chipWaveStartOffset\": presetChipWaveStartOffset,\n                };\n                startLoadingSample(urlSliced, chipWaveIndex, customSamplePresetSettings, rawLoopOptions, customSampleRate);\n            }\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = urlSliced;\n            sampleLoadingState.totalSamples++;\n        }\n        return true;\n    }\n    static _restoreChipWaveListToDefault() {\n        Config.chipWaves = toNameMap(Config.chipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawChipWaves = toNameMap(Config.rawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawRawChipWaves = toNameMap(Config.rawRawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n    }\n    static _clearSamples() {\n        EditorConfig.customSamples = null;\n        Song._restoreChipWaveListToDefault();\n        sampleLoadingState.statusTable = {};\n        sampleLoadingState.urlTable = {};\n        sampleLoadingState.totalSamples = 0;\n        sampleLoadingState.samplesLoaded = 0;\n        sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n    }\n    toJsonObject(enableIntro = true, loopCount = 1, enableOutro = true) {\n        const channelArray = [];\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel = this.channels[channelIndex];\n            const instrumentArray = [];\n            const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n            const isModChannel = this.getChannelIsMod(channelIndex);\n            for (const instrument of channel.instruments) {\n                instrumentArray.push(instrument.toJsonObject());\n            }\n            const patternArray = [];\n            for (const pattern of channel.patterns) {\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\n            }\n            const sequenceArray = [];\n            if (enableIntro)\n                for (let i = 0; i < this.loopStart; i++) {\n                    sequenceArray.push(channel.bars[i]);\n                }\n            for (let l = 0; l < loopCount; l++)\n                for (let i = this.loopStart; i < this.loopStart + this.loopLength; i++) {\n                    sequenceArray.push(channel.bars[i]);\n                }\n            if (enableOutro)\n                for (let i = this.loopStart + this.loopLength; i < this.barCount; i++) {\n                    sequenceArray.push(channel.bars[i]);\n                }\n            const channelObject = {\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\n                \"name\": channel.name,\n                \"instruments\": instrumentArray,\n                \"patterns\": patternArray,\n                \"sequence\": sequenceArray,\n            };\n            if (!isNoiseChannel) {\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\n            }\n            channelArray.push(channelObject);\n        }\n        const result = {\n            \"name\": this.title,\n            \"format\": Song._format,\n            \"version\": Song._latestSlarmoosBoxVersion,\n            \"scale\": Config.scales[this.scale].name,\n            \"customScale\": this.scaleCustom,\n            \"key\": Config.keys[this.key].name,\n            \"keyOctave\": this.octave,\n            \"introBars\": this.loopStart,\n            \"loopBars\": this.loopLength,\n            \"beatsPerBar\": this.beatsPerBar,\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\n            \"beatsPerMinute\": this.tempo,\n            \"reverb\": this.reverb,\n            \"masterGain\": this.masterGain,\n            \"compressionThreshold\": this.compressionThreshold,\n            \"limitThreshold\": this.limitThreshold,\n            \"limitDecay\": this.limitDecay,\n            \"limitRise\": this.limitRise,\n            \"limitRatio\": this.limitRatio,\n            \"compressionRatio\": this.compressionRatio,\n            \"songEq\": this.eqFilter.toJsonObject(),\n            \"layeredInstruments\": this.layeredInstruments,\n            \"patternInstruments\": this.patternInstruments,\n            \"channels\": channelArray,\n        };\n        for (let i = 0; i < Config.filterMorphCount - 1; i++) {\n            result[\"songEq\" + i] = this.eqSubFilters[i];\n        }\n        if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n            result[\"customSamples\"] = EditorConfig.customSamples;\n        }\n        return result;\n    }\n    fromJsonObject(jsonObject, jsonFormat = \"auto\") {\n        this.initToDefault(true);\n        if (!jsonObject)\n            return;\n        if (jsonFormat == \"auto\") {\n            if (jsonObject[\"format\"] == \"BeepBox\") {\n                if (jsonObject[\"riff\"] != undefined) {\n                    jsonFormat = \"modbox\";\n                }\n                if (jsonObject[\"masterGain\"] != undefined) {\n                    jsonFormat = \"jummbox\";\n                }\n            }\n        }\n        const format = (jsonFormat == \"auto\" ? jsonObject[\"format\"] : jsonFormat).toLowerCase();\n        if (jsonObject[\"name\"] != undefined) {\n            this.title = jsonObject[\"name\"];\n        }\n        if (jsonObject[\"customSamples\"] != undefined) {\n            const customSamples = jsonObject[\"customSamples\"];\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != customSamples.join(\", \")) {\n                Config.willReloadForCustomSamples = true;\n                Song._restoreChipWaveListToDefault();\n                let willLoadLegacySamples = false;\n                let willLoadNintariboxSamples = false;\n                let willLoadMarioPaintboxSamples = false;\n                const customSampleUrls = [];\n                const customSamplePresets = [];\n                for (const url of customSamples) {\n                    if (url.toLowerCase() === \"legacysamples\") {\n                        if (!willLoadLegacySamples) {\n                            willLoadLegacySamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(0);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\n                        if (!willLoadNintariboxSamples) {\n                            willLoadNintariboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(1);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                        if (!willLoadMarioPaintboxSamples) {\n                            willLoadMarioPaintboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(2);\n                        }\n                    }\n                    else {\n                        const parseOldSyntax = false;\n                        Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                    }\n                }\n                if (customSampleUrls.length > 0) {\n                    EditorConfig.customSamples = customSampleUrls;\n                }\n                if (customSamplePresets.length > 0) {\n                    const customSamplePresetsMap = toNameMap(customSamplePresets);\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                        name: \"Custom Sample Presets\",\n                        presets: customSamplePresetsMap,\n                        index: EditorConfig.presetCategories.length,\n                    };\n                }\n            }\n        }\n        else {\n            let shouldLoadLegacySamples = false;\n            if (jsonObject[\"channels\"] != undefined) {\n                for (let channelIndex = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                    const channelObject = jsonObject[\"channels\"][channelIndex];\n                    if (channelObject[\"type\"] !== \"pitch\") {\n                        continue;\n                    }\n                    if (Array.isArray(channelObject[\"instruments\"])) {\n                        const instrumentObjects = channelObject[\"instruments\"];\n                        for (let i = 0; i < instrumentObjects.length; i++) {\n                            const instrumentObject = instrumentObjects[i];\n                            if (instrumentObject[\"type\"] !== \"chip\") {\n                                continue;\n                            }\n                            if (instrumentObject[\"wave\"] == null) {\n                                continue;\n                            }\n                            const waveName = instrumentObject[\"wave\"];\n                            const names = [\n                                \"paandorasbox kick\",\n                                \"paandorasbox snare\",\n                                \"paandorasbox piano1\",\n                                \"paandorasbox WOW\",\n                                \"paandorasbox overdrive\",\n                                \"paandorasbox trumpet\",\n                                \"paandorasbox saxophone\",\n                                \"paandorasbox orchestrahit\",\n                                \"paandorasbox detatched violin\",\n                                \"paandorasbox synth\",\n                                \"paandorasbox sonic3snare\",\n                                \"paandorasbox come on\",\n                                \"paandorasbox choir\",\n                                \"paandorasbox overdriveguitar\",\n                                \"paandorasbox flute\",\n                                \"paandorasbox legato violin\",\n                                \"paandorasbox tremolo violin\",\n                                \"paandorasbox amen break\",\n                                \"paandorasbox pizzicato violin\",\n                                \"paandorasbox tim allen grunt\",\n                                \"paandorasbox tuba\",\n                                \"paandorasbox loopingcymbal\",\n                                \"paandorasbox standardkick\",\n                                \"paandorasbox standardsnare\",\n                                \"paandorasbox closedhihat\",\n                                \"paandorasbox foothihat\",\n                                \"paandorasbox openhihat\",\n                                \"paandorasbox crashcymbal\",\n                                \"paandorasbox pianoC4\",\n                                \"paandorasbox liver pad\",\n                                \"paandorasbox marimba\",\n                                \"paandorasbox susdotwav\",\n                                \"paandorasbox wackyboxtts\",\n                                \"paandorasbox peppersteak_1\",\n                                \"paandorasbox peppersteak_2\",\n                                \"paandorasbox vinyl_noise\",\n                                \"paandorasbeta slap bass\",\n                                \"paandorasbeta HD EB overdrive guitar\",\n                                \"paandorasbeta sunsoft bass\",\n                                \"paandorasbeta masculine choir\",\n                                \"paandorasbeta feminine choir\",\n                                \"paandorasbeta tololoche\",\n                                \"paandorasbeta harp\",\n                                \"paandorasbeta pan flute\",\n                                \"paandorasbeta krumhorn\",\n                                \"paandorasbeta timpani\",\n                                \"paandorasbeta crowd hey\",\n                                \"paandorasbeta wario land 4 brass\",\n                                \"paandorasbeta wario land 4 rock organ\",\n                                \"paandorasbeta wario land 4 DAOW\",\n                                \"paandorasbeta wario land 4 hour chime\",\n                                \"paandorasbeta wario land 4 tick\",\n                                \"paandorasbeta kirby kick\",\n                                \"paandorasbeta kirby snare\",\n                                \"paandorasbeta kirby bongo\",\n                                \"paandorasbeta kirby click\",\n                                \"paandorasbeta sonor kick\",\n                                \"paandorasbeta sonor snare\",\n                                \"paandorasbeta sonor snare (left hand)\",\n                                \"paandorasbeta sonor snare (right hand)\",\n                                \"paandorasbeta sonor high tom\",\n                                \"paandorasbeta sonor low tom\",\n                                \"paandorasbeta sonor hihat (closed)\",\n                                \"paandorasbeta sonor hihat (half opened)\",\n                                \"paandorasbeta sonor hihat (open)\",\n                                \"paandorasbeta sonor hihat (open tip)\",\n                                \"paandorasbeta sonor hihat (pedal)\",\n                                \"paandorasbeta sonor crash\",\n                                \"paandorasbeta sonor crash (tip)\",\n                                \"paandorasbeta sonor ride\"\n                            ];\n                            const oldNames = [\n                                \"pandoraasbox kick\",\n                                \"pandoraasbox snare\",\n                                \"pandoraasbox piano1\",\n                                \"pandoraasbox WOW\",\n                                \"pandoraasbox overdrive\",\n                                \"pandoraasbox trumpet\",\n                                \"pandoraasbox saxophone\",\n                                \"pandoraasbox orchestrahit\",\n                                \"pandoraasbox detatched violin\",\n                                \"pandoraasbox synth\",\n                                \"pandoraasbox sonic3snare\",\n                                \"pandoraasbox come on\",\n                                \"pandoraasbox choir\",\n                                \"pandoraasbox overdriveguitar\",\n                                \"pandoraasbox flute\",\n                                \"pandoraasbox legato violin\",\n                                \"pandoraasbox tremolo violin\",\n                                \"pandoraasbox amen break\",\n                                \"pandoraasbox pizzicato violin\",\n                                \"pandoraasbox tim allen grunt\",\n                                \"pandoraasbox tuba\",\n                                \"pandoraasbox loopingcymbal\",\n                                \"pandoraasbox standardkick\",\n                                \"pandoraasbox standardsnare\",\n                                \"pandoraasbox closedhihat\",\n                                \"pandoraasbox foothihat\",\n                                \"pandoraasbox openhihat\",\n                                \"pandoraasbox crashcymbal\",\n                                \"pandoraasbox pianoC4\",\n                                \"pandoraasbox liver pad\",\n                                \"pandoraasbox marimba\",\n                                \"pandoraasbox susdotwav\",\n                                \"pandoraasbox wackyboxtts\",\n                                \"pandoraasbox peppersteak_1\",\n                                \"pandoraasbox peppersteak_2\",\n                                \"pandoraasbox vinyl_noise\",\n                                \"pandoraasbeta slap bass\",\n                                \"pandoraasbeta HD EB overdrive guitar\",\n                                \"pandoraasbeta sunsoft bass\",\n                                \"pandoraasbeta masculine choir\",\n                                \"pandoraasbeta feminine choir\",\n                                \"pandoraasbeta tololoche\",\n                                \"pandoraasbeta harp\",\n                                \"pandoraasbeta pan flute\",\n                                \"pandoraasbeta krumhorn\",\n                                \"pandoraasbeta timpani\",\n                                \"pandoraasbeta crowd hey\",\n                                \"pandoraasbeta wario land 4 brass\",\n                                \"pandoraasbeta wario land 4 rock organ\",\n                                \"pandoraasbeta wario land 4 DAOW\",\n                                \"pandoraasbeta wario land 4 hour chime\",\n                                \"pandoraasbeta wario land 4 tick\",\n                                \"pandoraasbeta kirby kick\",\n                                \"pandoraasbeta kirby snare\",\n                                \"pandoraasbeta kirby bongo\",\n                                \"pandoraasbeta kirby click\",\n                                \"pandoraasbeta sonor kick\",\n                                \"pandoraasbeta sonor snare\",\n                                \"pandoraasbeta sonor snare (left hand)\",\n                                \"pandoraasbeta sonor snare (right hand)\",\n                                \"pandoraasbeta sonor high tom\",\n                                \"pandoraasbeta sonor low tom\",\n                                \"pandoraasbeta sonor hihat (closed)\",\n                                \"pandoraasbeta sonor hihat (half opened)\",\n                                \"pandoraasbeta sonor hihat (open)\",\n                                \"pandoraasbeta sonor hihat (open tip)\",\n                                \"pandoraasbeta sonor hihat (pedal)\",\n                                \"pandoraasbeta sonor crash\",\n                                \"pandoraasbeta sonor crash (tip)\",\n                                \"pandoraasbeta sonor ride\"\n                            ];\n                            const veryOldNames = [\n                                \"kick\",\n                                \"snare\",\n                                \"piano1\",\n                                \"WOW\",\n                                \"overdrive\",\n                                \"trumpet\",\n                                \"saxophone\",\n                                \"orchestrahit\",\n                                \"detatched violin\",\n                                \"synth\",\n                                \"sonic3snare\",\n                                \"come on\",\n                                \"choir\",\n                                \"overdriveguitar\",\n                                \"flute\",\n                                \"legato violin\",\n                                \"tremolo violin\",\n                                \"amen break\",\n                                \"pizzicato violin\",\n                                \"tim allen grunt\",\n                                \"tuba\",\n                                \"loopingcymbal\",\n                                \"standardkick\",\n                                \"standardsnare\",\n                                \"closedhihat\",\n                                \"foothihat\",\n                                \"openhihat\",\n                                \"crashcymbal\",\n                                \"pianoC4\",\n                                \"liver pad\",\n                                \"marimba\",\n                                \"susdotwav\",\n                                \"wackyboxtts\"\n                            ];\n                            if (names.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                            }\n                            else if (oldNames.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                                instrumentObject[\"wave\"] = names[oldNames.findIndex(x => x === waveName)];\n                            }\n                            else if (veryOldNames.includes(waveName)) {\n                                if ((waveName === \"trumpet\" || waveName === \"flute\") && (format != \"paandorasbox\")) {\n                                }\n                                else {\n                                    shouldLoadLegacySamples = true;\n                                    instrumentObject[\"wave\"] = names[veryOldNames.findIndex(x => x === waveName)];\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (shouldLoadLegacySamples) {\n                Config.willReloadForCustomSamples = true;\n                Song._restoreChipWaveListToDefault();\n                loadBuiltInSamples(0);\n                EditorConfig.customSamples = [\"legacySamples\"];\n            }\n            else {\n                if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n                    Config.willReloadForCustomSamples = true;\n                    Song._clearSamples();\n                }\n            }\n        }\n        this.scale = 0;\n        if (jsonObject[\"scale\"] != undefined) {\n            const oldScaleNames = {\n                \"romani :)\": \"double harmonic :)\",\n                \"romani :(\": \"double harmonic :(\",\n                \"dbl harmonic :)\": \"double harmonic :)\",\n                \"dbl harmonic :(\": \"double harmonic :(\",\n                \"enigma\": \"strange\",\n            };\n            const scaleName = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\n            const scale = Config.scales.findIndex(scale => scale.name == scaleName);\n            if (scale != -1)\n                this.scale = scale;\n            if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                if (jsonObject[\"customScale\"] != undefined) {\n                    for (var i of jsonObject[\"customScale\"].keys()) {\n                        this.scaleCustom[i] = jsonObject[\"customScale\"][i];\n                    }\n                }\n            }\n        }\n        if (jsonObject[\"key\"] != undefined) {\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\n            }\n            else if (typeof (jsonObject[\"key\"]) == \"string\") {\n                const key = jsonObject[\"key\"];\n                if (key === \"C+\") {\n                    this.key = 0;\n                    this.octave = 1;\n                }\n                else if (key === \"G- (actually F#-)\") {\n                    this.key = 6;\n                    this.octave = -1;\n                }\n                else if (key === \"C-\") {\n                    this.key = 0;\n                    this.octave = -1;\n                }\n                else if (key === \"oh no (F-)\") {\n                    this.key = 5;\n                    this.octave = -1;\n                }\n                else {\n                    const letter = key.charAt(0).toUpperCase();\n                    const symbol = key.charAt(1).toLowerCase();\n                    const letterMap = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\n                    const accidentalMap = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\n                    let index = letterMap[letter];\n                    const offset = accidentalMap[symbol];\n                    if (index != undefined) {\n                        if (offset != undefined)\n                            index += offset;\n                        if (index < 0)\n                            index += 12;\n                        index = index % 12;\n                        this.key = index;\n                    }\n                }\n            }\n        }\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\n        }\n        if (jsonObject[\"keyOctave\"] != undefined) {\n            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, jsonObject[\"keyOctave\"] | 0);\n        }\n        let legacyGlobalReverb = 0;\n        if (jsonObject[\"reverb\"] != undefined) {\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\n        }\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\n        }\n        let importedPartsPerBeat = 4;\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\n            if (this.rhythm == -1) {\n                this.rhythm = 1;\n            }\n        }\n        if (jsonObject[\"masterGain\"] != undefined) {\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\n        }\n        else {\n            this.masterGain = 1.0;\n        }\n        if (jsonObject[\"limitThreshold\"] != undefined) {\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\n        }\n        else {\n            this.limitThreshold = 1.0;\n        }\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\n        }\n        else {\n            this.compressionThreshold = 1.0;\n        }\n        if (jsonObject[\"limitRise\"] != undefined) {\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\n        }\n        else {\n            this.limitRise = 4000.0;\n        }\n        if (jsonObject[\"limitDecay\"] != undefined) {\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\n        }\n        else {\n            this.limitDecay = 4.0;\n        }\n        if (jsonObject[\"limitRatio\"] != undefined) {\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\n        }\n        else {\n            this.limitRatio = 1.0;\n        }\n        if (jsonObject[\"compressionRatio\"] != undefined) {\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\n        }\n        else {\n            this.compressionRatio = 1.0;\n        }\n        if (jsonObject[\"songEq\"] != undefined) {\n            this.eqFilter.fromJsonObject(jsonObject[\"songEq\"]);\n        }\n        else {\n            this.eqFilter.reset();\n        }\n        for (let i = 0; i < Config.filterMorphCount - 1; i++) {\n            if (jsonObject[\"songEq\" + i]) {\n                this.eqSubFilters[i] = jsonObject[\"songEq\" + i];\n            }\n            else {\n                this.eqSubFilters[i] = null;\n            }\n        }\n        let maxInstruments = 1;\n        let maxPatterns = 1;\n        let maxBars = 1;\n        if (jsonObject[\"channels\"] != undefined) {\n            for (const channelObject of jsonObject[\"channels\"]) {\n                if (channelObject[\"instruments\"])\n                    maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\n                if (channelObject[\"patterns\"])\n                    maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\n                if (channelObject[\"sequence\"])\n                    maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\n            }\n        }\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\n        }\n        else {\n            this.layeredInstruments = false;\n        }\n        if (jsonObject[\"patternInstruments\"] != undefined) {\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\n        }\n        else {\n            this.patternInstruments = (maxInstruments > 1);\n        }\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\n        this.barCount = Math.min(maxBars, Config.barCountMax);\n        if (jsonObject[\"introBars\"] != undefined) {\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\n        }\n        if (jsonObject[\"loopBars\"] != undefined) {\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\n        }\n        const newPitchChannels = [];\n        const newNoiseChannels = [];\n        const newModChannels = [];\n        if (jsonObject[\"channels\"] != undefined) {\n            for (let channelIndex = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                let channelObject = jsonObject[\"channels\"][channelIndex];\n                const channel = new Channel();\n                let isNoiseChannel = false;\n                let isModChannel = false;\n                if (channelObject[\"type\"] != undefined) {\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\n                }\n                else {\n                    isNoiseChannel = (channelIndex >= 3);\n                }\n                if (isNoiseChannel) {\n                    newNoiseChannels.push(channel);\n                }\n                else if (isModChannel) {\n                    newModChannels.push(channel);\n                }\n                else {\n                    newPitchChannels.push(channel);\n                }\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\n                    if (isNoiseChannel)\n                        channel.octave = 0;\n                }\n                if (channelObject[\"name\"] != undefined) {\n                    channel.name = channelObject[\"name\"];\n                }\n                else {\n                    channel.name = \"\";\n                }\n                if (Array.isArray(channelObject[\"instruments\"])) {\n                    const instrumentObjects = channelObject[\"instruments\"];\n                    for (let i = 0; i < instrumentObjects.length; i++) {\n                        if (i >= this.getMaxInstrumentsPerChannel())\n                            break;\n                        const instrument = new Instrument(isNoiseChannel, isModChannel);\n                        channel.instruments[i] = instrument;\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb, format);\n                    }\n                }\n                for (let i = 0; i < this.patternsPerChannel; i++) {\n                    const pattern = new Pattern();\n                    channel.patterns[i] = pattern;\n                    let patternObject = undefined;\n                    if (channelObject[\"patterns\"])\n                        patternObject = channelObject[\"patterns\"][i];\n                    if (patternObject == undefined)\n                        continue;\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel, format);\n                }\n                channel.patterns.length = this.patternsPerChannel;\n                for (let i = 0; i < this.barCount; i++) {\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n        }\n        if (newPitchChannels.length > Config.pitchChannelCountMax)\n            newPitchChannels.length = Config.pitchChannelCountMax;\n        if (newNoiseChannels.length > Config.noiseChannelCountMax)\n            newNoiseChannels.length = Config.noiseChannelCountMax;\n        if (newModChannels.length > Config.modChannelCountMax)\n            newModChannels.length = Config.modChannelCountMax;\n        this.pitchChannelCount = newPitchChannels.length;\n        this.noiseChannelCount = newNoiseChannels.length;\n        this.modChannelCount = newModChannels.length;\n        this.channels.length = 0;\n        Array.prototype.push.apply(this.channels, newPitchChannels);\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\n        Array.prototype.push.apply(this.channels, newModChannels);\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n    getPattern(channelIndex, bar) {\n        if (bar < 0 || bar >= this.barCount)\n            return null;\n        const patternIndex = this.channels[channelIndex].bars[bar];\n        if (patternIndex == 0)\n            return null;\n        return this.channels[channelIndex].patterns[patternIndex - 1];\n    }\n    getBeatsPerMinute() {\n        return this.tempo;\n    }\n    static getNeededBits(maxValue) {\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\n    }\n    restoreLimiterDefaults() {\n        this.compressionRatio = 1.0;\n        this.limitRatio = 1.0;\n        this.limitRise = 4000.0;\n        this.limitDecay = 4.0;\n        this.limitThreshold = 1.0;\n        this.compressionThreshold = 1.0;\n        this.masterGain = 1.0;\n    }\n}\nSong._format = Config.jsonFormat;\nSong._oldestBeepboxVersion = 2;\nSong._latestBeepboxVersion = 9;\nSong._oldestJummBoxVersion = 1;\nSong._latestJummBoxVersion = 6;\nSong._oldestGoldBoxVersion = 1;\nSong._latestGoldBoxVersion = 4;\nSong._oldestUltraBoxVersion = 1;\nSong._latestUltraBoxVersion = 5;\nSong._oldestSlarmoosBoxVersion = 1;\nSong._latestSlarmoosBoxVersion = 5;\nSong._variant = 0x73;\nclass PickedString {\n    constructor() {\n        this.delayLine = null;\n        this.allPassG = 0.0;\n        this.allPassGDelta = 0.0;\n        this.sustainFilterA1 = 0.0;\n        this.sustainFilterA1Delta = 0.0;\n        this.sustainFilterA2 = 0.0;\n        this.sustainFilterA2Delta = 0.0;\n        this.sustainFilterB0 = 0.0;\n        this.sustainFilterB0Delta = 0.0;\n        this.sustainFilterB1 = 0.0;\n        this.sustainFilterB1Delta = 0.0;\n        this.sustainFilterB2 = 0.0;\n        this.sustainFilterB2Delta = 0.0;\n        this.reset();\n    }\n    reset() {\n        this.delayIndex = -1;\n        this.allPassSample = 0.0;\n        this.allPassPrevInput = 0.0;\n        this.sustainFilterSample = 0.0;\n        this.sustainFilterPrevOutput2 = 0.0;\n        this.sustainFilterPrevInput1 = 0.0;\n        this.sustainFilterPrevInput2 = 0.0;\n        this.fractionalDelaySample = 0.0;\n        this.prevDelayLength = -1.0;\n        this.delayResetOffset = 0;\n    }\n    update(synth, instrumentState, tone, stringIndex, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, sustainType) {\n        const allPassCenter = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\n        const prevDelayLength = this.prevDelayLength;\n        const phaseDeltaStart = tone.phaseDeltas[stringIndex];\n        const phaseDeltaScale = tone.phaseDeltaScales[stringIndex];\n        const phaseDeltaEnd = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\n        const radiansPerSampleStart = Math.PI * 2.0 * phaseDeltaStart;\n        const radiansPerSampleEnd = Math.PI * 2.0 * phaseDeltaEnd;\n        const centerHarmonicStart = radiansPerSampleStart * 2.0;\n        const centerHarmonicEnd = radiansPerSampleEnd * 2.0;\n        const allPassRadiansStart = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\n        const allPassRadiansEnd = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\n        const shelfRadians = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\n        const decayCurveStart = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\n        const decayCurveEnd = (Math.pow(100.0, stringDecayEnd) - 1.0) / 99.0;\n        const register = sustainType == 1 ? 0.25 : 0.0;\n        const registerShelfCenter = 15.6;\n        const registerLowpassCenter = 3.0 * synth.samplesPerSecond / 48000;\n        const decayRateStart = Math.pow(0.5, decayCurveStart * Math.pow(shelfRadians / (radiansPerSampleStart * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n        const decayRateEnd = Math.pow(0.5, decayCurveEnd * Math.pow(shelfRadians / (radiansPerSampleEnd * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n        const expressionDecayStart = Math.pow(decayRateStart, 0.002);\n        const expressionDecayEnd = Math.pow(decayRateEnd, 0.002);\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const allPassGStart = Synth.tempFilterStartCoefficients.b[0];\n        const allPassPhaseDelayStart = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const allPassGEnd = Synth.tempFilterEndCoefficients.b[0];\n        const allPassPhaseDelayEnd = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n        const brightnessType = sustainType == 0 ? 0 : 1;\n        if (brightnessType == 0) {\n            const shelfGainStart = Math.pow(decayRateStart, Config.stringDecayRate);\n            const shelfGainEnd = Math.pow(decayRateEnd, Config.stringDecayRate);\n            Synth.tempFilterStartCoefficients.highShelf2ndOrder(shelfRadians, shelfGainStart, 0.5);\n            Synth.tempFilterEndCoefficients.highShelf2ndOrder(shelfRadians, shelfGainEnd, 0.5);\n        }\n        else {\n            const cornerHardness = Math.pow(brightnessType == 1 ? 0.0 : 1.0, 0.25);\n            const lowpass1stOrderCutoffRadiansStart = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleStart * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveStart, .5);\n            const lowpass1stOrderCutoffRadiansEnd = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleEnd * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveEnd, .5);\n            const lowpass2ndOrderCutoffRadiansStart = lowpass1stOrderCutoffRadiansStart * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n            const lowpass2ndOrderCutoffRadiansEnd = lowpass1stOrderCutoffRadiansEnd * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n            const lowpass2ndOrderGainStart = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n            const lowpass2ndOrderGainEnd = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n            Synth.tempFilterStartCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansStart), lowpass2ndOrderGainStart);\n            Synth.tempFilterEndCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansEnd), lowpass2ndOrderGainEnd);\n        }\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const sustainFilterA1Start = Synth.tempFilterStartCoefficients.a[1];\n        const sustainFilterA2Start = Synth.tempFilterStartCoefficients.a[2];\n        const sustainFilterB0Start = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\n        const sustainFilterB1Start = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\n        const sustainFilterB2Start = Synth.tempFilterStartCoefficients.b[2] * expressionDecayStart;\n        const sustainFilterPhaseDelayStart = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const sustainFilterA1End = Synth.tempFilterEndCoefficients.a[1];\n        const sustainFilterA2End = Synth.tempFilterEndCoefficients.a[2];\n        const sustainFilterB0End = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\n        const sustainFilterB1End = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\n        const sustainFilterB2End = Synth.tempFilterEndCoefficients.b[2] * expressionDecayEnd;\n        const sustainFilterPhaseDelayEnd = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n        const periodLengthStart = 1.0 / phaseDeltaStart;\n        const periodLengthEnd = 1.0 / phaseDeltaEnd;\n        const minBufferLength = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\n        const delayLength = periodLengthStart - allPassPhaseDelayStart - sustainFilterPhaseDelayStart;\n        const delayLengthEnd = periodLengthEnd - allPassPhaseDelayEnd - sustainFilterPhaseDelayEnd;\n        this.prevDelayLength = delayLength;\n        this.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\n        this.allPassG = allPassGStart;\n        this.sustainFilterA1 = sustainFilterA1Start;\n        this.sustainFilterA2 = sustainFilterA2Start;\n        this.sustainFilterB0 = sustainFilterB0Start;\n        this.sustainFilterB1 = sustainFilterB1Start;\n        this.sustainFilterB2 = sustainFilterB2Start;\n        this.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\n        this.sustainFilterA1Delta = (sustainFilterA1End - sustainFilterA1Start) / roundedSamplesPerTick;\n        this.sustainFilterA2Delta = (sustainFilterA2End - sustainFilterA2Start) / roundedSamplesPerTick;\n        this.sustainFilterB0Delta = (sustainFilterB0End - sustainFilterB0Start) / roundedSamplesPerTick;\n        this.sustainFilterB1Delta = (sustainFilterB1End - sustainFilterB1Start) / roundedSamplesPerTick;\n        this.sustainFilterB2Delta = (sustainFilterB2End - sustainFilterB2Start) / roundedSamplesPerTick;\n        const pitchChanged = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\n        const reinitializeImpulse = (this.delayIndex == -1 || pitchChanged);\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\n            const likelyMaximumLength = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\n            const newDelayLine = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n            if (!reinitializeImpulse && this.delayLine != null) {\n                const oldDelayBufferMask = (this.delayLine.length - 1) >> 0;\n                const startCopyingFromIndex = this.delayIndex + this.delayResetOffset;\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\n                for (let i = 0; i < this.delayLine.length; i++) {\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n                }\n            }\n            this.delayLine = newDelayLine;\n        }\n        const delayLine = this.delayLine;\n        const delayBufferMask = (delayLine.length - 1) >> 0;\n        if (reinitializeImpulse) {\n            this.delayIndex = 0;\n            this.allPassSample = 0.0;\n            this.allPassPrevInput = 0.0;\n            this.sustainFilterSample = 0.0;\n            this.sustainFilterPrevOutput2 = 0.0;\n            this.sustainFilterPrevInput1 = 0.0;\n            this.sustainFilterPrevInput2 = 0.0;\n            this.fractionalDelaySample = 0.0;\n            const startImpulseFrom = -delayLength;\n            const startZerosFrom = Math.floor(startImpulseFrom - periodLengthStart / 2);\n            const stopZerosAt = Math.ceil(startZerosFrom + periodLengthStart * 2);\n            this.delayResetOffset = stopZerosAt;\n            for (let i = startZerosFrom; i <= stopZerosAt; i++) {\n                delayLine[i & delayBufferMask] = 0.0;\n            }\n            const impulseWave = instrumentState.wave;\n            const impulseWaveLength = impulseWave.length - 1;\n            const impulsePhaseDelta = impulseWaveLength / periodLengthStart;\n            const fadeDuration = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\n            const startImpulseFromSample = Math.ceil(startImpulseFrom);\n            const stopImpulseAt = startImpulseFrom + periodLengthStart + fadeDuration;\n            const stopImpulseAtSample = stopImpulseAt;\n            let impulsePhase = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\n            let prevWaveIntegral = 0.0;\n            for (let i = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\n                const impulsePhaseInt = impulsePhase | 0;\n                const index = impulsePhaseInt % impulseWaveLength;\n                let nextWaveIntegral = impulseWave[index];\n                const phaseRatio = impulsePhase - impulsePhaseInt;\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\n                const sample = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\n                const fadeIn = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\n                const fadeOut = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\n                const combinedFade = fadeIn * fadeOut;\n                const curvedFade = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade);\n                delayLine[i & delayBufferMask] += sample * curvedFade;\n                prevWaveIntegral = nextWaveIntegral;\n                impulsePhase += impulsePhaseDelta;\n            }\n        }\n    }\n}\nclass EnvelopeComputer {\n    constructor() {\n        this.noteSecondsStart = [];\n        this.noteSecondsStartUnscaled = 0.0;\n        this.noteSecondsEnd = [];\n        this.noteSecondsEndUnscaled = 0.0;\n        this.noteTicksStart = 0.0;\n        this.noteTicksEnd = 0.0;\n        this.noteSizeStart = Config.noteSizeMax;\n        this.noteSizeEnd = Config.noteSizeMax;\n        this.prevNoteSize = Config.noteSizeMax;\n        this.nextNoteSize = Config.noteSizeMax;\n        this._noteSizeFinal = Config.noteSizeMax;\n        this.prevNoteSecondsStart = [];\n        this.prevNoteSecondsStartUnscaled = 0.0;\n        this.prevNoteSecondsEnd = [];\n        this.prevNoteSecondsEndUnscaled = 0.0;\n        this.prevNoteTicksStart = 0.0;\n        this.prevNoteTicksEnd = 0.0;\n        this._prevNoteSizeFinal = Config.noteSizeMax;\n        this.tickTimeEnd = [];\n        this.drumsetFilterEnvelopeStart = 0.0;\n        this.drumsetFilterEnvelopeEnd = 0.0;\n        this.prevSlideStart = false;\n        this.prevSlideEnd = false;\n        this.nextSlideStart = false;\n        this.nextSlideEnd = false;\n        this.prevSlideRatioStart = 0.0;\n        this.prevSlideRatioEnd = 0.0;\n        this.nextSlideRatioStart = 0.0;\n        this.nextSlideRatioEnd = 0.0;\n        this.startPinTickAbsolute = null;\n        this.startPinTickDefaultPitch = null;\n        this.startPinTickPitch = null;\n        this.envelopeStarts = [];\n        this.envelopeEnds = [];\n        this._modifiedEnvelopeIndices = [];\n        this._modifiedEnvelopeCount = 0;\n        this.lowpassCutoffDecayVolumeCompensation = 1.0;\n        const length = 56;\n        for (let i = 0; i < length; i++) {\n            this.envelopeStarts[i] = 1.0;\n            this.envelopeEnds[i] = 1.0;\n        }\n        this.reset();\n    }\n    reset() {\n        for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n            this.noteSecondsEnd[envelopeIndex] = 0.0;\n            this.prevNoteSecondsEnd[envelopeIndex] = 0.0;\n        }\n        this.noteSecondsEndUnscaled = 0.0;\n        this.noteTicksEnd = 0.0;\n        this._noteSizeFinal = Config.noteSizeMax;\n        this.prevNoteSecondsEndUnscaled = 0.0;\n        this.prevNoteTicksEnd = 0.0;\n        this._prevNoteSizeFinal = Config.noteSizeMax;\n        this._modifiedEnvelopeCount = 0;\n        this.drumsetFilterEnvelopeStart = 0.0;\n        this.drumsetFilterEnvelopeEnd = 0.0;\n        this.startPinTickAbsolute = null;\n        this.startPinTickDefaultPitch = null;\n        this.startPinTickPitch = null;\n    }\n    computeEnvelopes(instrument, currentPart, tickTimeStart, tickTimeStartReal, secondsPerTick, tone, timeScale, instrumentState, synth, channelIndex, instrumentIndex) {\n        const secondsPerTickUnscaled = secondsPerTick;\n        const transition = instrument.getTransition();\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n            this.prevNoteSecondsEndUnscaled = this.noteSecondsEndUnscaled;\n            this.prevNoteTicksEnd = this.noteTicksEnd;\n            this._prevNoteSizeFinal = this._noteSizeFinal;\n            this.noteSecondsEndUnscaled = 0.0;\n            this.noteTicksEnd = 0.0;\n            for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n                this.prevNoteSecondsEnd[envelopeIndex] = this.noteSecondsEnd[envelopeIndex];\n                this.noteSecondsEnd[envelopeIndex] = 0.0;\n            }\n        }\n        if (tone != null) {\n            if (tone.note != null) {\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\n            }\n            else {\n                this._noteSizeFinal = Config.noteSizeMax;\n            }\n        }\n        const tickTimeEnd = [];\n        const tickTimeEndReal = tickTimeStartReal + 1.0;\n        const noteSecondsStart = [];\n        const noteSecondsStartUnscaled = this.noteSecondsEndUnscaled;\n        const noteSecondsEnd = [];\n        const noteSecondsEndUnscaled = noteSecondsStartUnscaled + secondsPerTickUnscaled;\n        const noteTicksStart = this.noteTicksEnd;\n        const noteTicksEnd = noteTicksStart + 1.0;\n        const prevNoteSecondsStart = [];\n        const prevNoteSecondsEnd = [];\n        const prevNoteSecondsStartUnscaled = this.prevNoteSecondsEndUnscaled;\n        const prevNoteSecondsEndUnscaled = prevNoteSecondsStartUnscaled + secondsPerTickUnscaled;\n        const prevNoteTicksStart = this.prevNoteTicksEnd;\n        const prevNoteTicksEnd = prevNoteTicksStart + 1.0;\n        const beatsPerTick = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\n        const beatTimeStart = [];\n        const beatTimeEnd = [];\n        let noteSizeStart = this._noteSizeFinal;\n        let noteSizeEnd = this._noteSizeFinal;\n        let prevNoteSize = this._prevNoteSizeFinal;\n        let nextNoteSize = 0;\n        let prevSlideStart = false;\n        let prevSlideEnd = false;\n        let nextSlideStart = false;\n        let nextSlideEnd = false;\n        let prevSlideRatioStart = 0.0;\n        let prevSlideRatioEnd = 0.0;\n        let nextSlideRatioStart = 0.0;\n        let nextSlideRatioEnd = 0.0;\n        if (tone == null) {\n            this.startPinTickAbsolute = null;\n            this.startPinTickDefaultPitch = null;\n        }\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\n            const endPinIndex = tone.note.getEndPinIndex(currentPart);\n            const startPin = tone.note.pins[endPinIndex - 1];\n            const endPin = tone.note.pins[endPinIndex];\n            const startPinTick = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            if (this.startPinTickAbsolute == null || (!(transition.continues || transition.slides)) && tone.passedEndOfNote)\n                this.startPinTickAbsolute = startPinTick + synth.computeTicksSinceStart(true);\n            if (this.startPinTickDefaultPitch == null || tone.passedEndOfNote)\n                this.startPinTickDefaultPitch = this.getPitchValue(instrument, tone, instrumentState, false);\n            if (!tone.passedEndOfNote)\n                this.startPinTickPitch = this.getPitchValue(instrument, tone, instrumentState, true);\n            const endPinTick = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart = (tickTimeStartReal - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd = (tickTimeEndReal - startPinTick) / (endPinTick - startPinTick);\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\n            if (transition.slides) {\n                const noteStartTick = tone.noteStartPart * Config.ticksPerPart;\n                const noteEndTick = tone.noteEndPart * Config.ticksPerPart;\n                const noteLengthTicks = noteEndTick - noteStartTick;\n                const maximumSlideTicks = noteLengthTicks * 0.5;\n                const slideTicks = Math.min(maximumSlideTicks, transition.slideTicks);\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\n                    if (tickTimeStartReal - noteStartTick < slideTicks) {\n                        prevSlideStart = true;\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStartReal - noteStartTick) / slideTicks);\n                    }\n                    if (tickTimeEndReal - noteStartTick < slideTicks) {\n                        prevSlideEnd = true;\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEndReal - noteStartTick) / slideTicks);\n                    }\n                }\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\n                    nextNoteSize = tone.nextNote.pins[0].size;\n                    if (noteEndTick - tickTimeStartReal < slideTicks) {\n                        nextSlideStart = true;\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStartReal) / slideTicks);\n                    }\n                    if (noteEndTick - tickTimeEndReal < slideTicks) {\n                        nextSlideEnd = true;\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEndReal) / slideTicks);\n                    }\n                }\n            }\n        }\n        let lowpassCutoffDecayVolumeCompensation = 1.0;\n        let usedNoteSize = false;\n        for (let envelopeIndex = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\n            let automationTarget;\n            let targetIndex;\n            let envelope;\n            let inverse = false;\n            let isDiscrete = false;\n            let perEnvelopeSpeed = 1;\n            let globalEnvelopeSpeed = 1;\n            let envelopeSpeed = perEnvelopeSpeed * globalEnvelopeSpeed;\n            let perEnvelopeLowerBound = 0;\n            let perEnvelopeUpperBound = 1;\n            let timeSinceStart = 0;\n            let steps = 2;\n            let seed = 2;\n            let waveform = 0;\n            let startPinTickAbsolute = this.startPinTickAbsolute || 0.0;\n            let defaultPitch = this.startPinTickDefaultPitch || 0.0;\n            if (envelopeIndex == instrument.envelopeCount) {\n                if (usedNoteSize)\n                    break;\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n                targetIndex = 0;\n                envelope = Config.newEnvelopes.dictionary[\"note size\"];\n            }\n            else {\n                let envelopeSettings = instrument.envelopes[envelopeIndex];\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\n                targetIndex = envelopeSettings.index;\n                envelope = Config.newEnvelopes[envelopeSettings.envelope];\n                inverse = instrument.envelopes[envelopeIndex].inverse;\n                isDiscrete = instrument.envelopes[envelopeIndex].discrete;\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n                globalEnvelopeSpeed = Math.pow(instrument.envelopeSpeed, 2) / 144;\n                envelopeSpeed = perEnvelopeSpeed * globalEnvelopeSpeed;\n                perEnvelopeLowerBound = instrument.envelopes[envelopeIndex].perEnvelopeLowerBound;\n                perEnvelopeUpperBound = instrument.envelopes[envelopeIndex].perEnvelopeUpperBound;\n                if (synth.isModActive(Config.modulators.dictionary[\"individual envelope lower bound\"].index, channelIndex, instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeLowerBound != null) {\n                    perEnvelopeLowerBound = instrument.envelopes[envelopeIndex].tempEnvelopeLowerBound;\n                }\n                if (synth.isModActive(Config.modulators.dictionary[\"individual envelope upper bound\"].index, channelIndex, instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeUpperBound != null) {\n                    perEnvelopeUpperBound = instrument.envelopes[envelopeIndex].tempEnvelopeUpperBound;\n                }\n                if (!(perEnvelopeLowerBound <= perEnvelopeUpperBound)) {\n                    perEnvelopeLowerBound = 0;\n                    perEnvelopeUpperBound = 1;\n                }\n                timeSinceStart = synth.computeTicksSinceStart();\n                steps = instrument.envelopes[envelopeIndex].steps;\n                seed = instrument.envelopes[envelopeIndex].seed;\n                if (instrument.envelopes[envelopeIndex].waveform >= (envelope.name == \"lfo\" ? 7 : 4)) {\n                    instrument.envelopes[envelopeIndex].waveform = 0;\n                }\n                waveform = instrument.envelopes[envelopeIndex].waveform;\n                if (!timeScale[envelopeIndex])\n                    timeScale[envelopeIndex] = 0;\n                const secondsPerTickScaled = secondsPerTick * timeScale[envelopeIndex];\n                if (!tickTimeStart[envelopeIndex])\n                    tickTimeStart[envelopeIndex] = 0;\n                tickTimeEnd[envelopeIndex] = tickTimeStart[envelopeIndex] ? tickTimeStart[envelopeIndex] + timeScale[envelopeIndex] : timeScale[envelopeIndex];\n                noteSecondsStart[envelopeIndex] = this.noteSecondsEnd[envelopeIndex] ? this.noteSecondsEnd[envelopeIndex] : 0;\n                prevNoteSecondsStart[envelopeIndex] = this.prevNoteSecondsEnd[envelopeIndex] ? this.prevNoteSecondsEnd[envelopeIndex] : 0;\n                noteSecondsEnd[envelopeIndex] = noteSecondsStart[envelopeIndex] ? noteSecondsStart[envelopeIndex] + secondsPerTickScaled : secondsPerTickScaled;\n                prevNoteSecondsEnd[envelopeIndex] = prevNoteSecondsStart[envelopeIndex] ? prevNoteSecondsStart[envelopeIndex] + secondsPerTickScaled : secondsPerTickScaled;\n                beatTimeStart[envelopeIndex] = tickTimeStart[envelopeIndex] ? beatsPerTick * tickTimeStart[envelopeIndex] : beatsPerTick;\n                beatTimeEnd[envelopeIndex] = tickTimeEnd[envelopeIndex] ? beatsPerTick * tickTimeEnd[envelopeIndex] : beatsPerTick;\n                if (envelope.type == 1)\n                    usedNoteSize = true;\n            }\n            const pitch = (envelope.type == 2) ? this.computePitchEnvelope(instrument, envelopeIndex, (this.startPinTickPitch || this.getPitchValue(instrument, tone, instrumentState, true))) : 0;\n            if (automationTarget.computeIndex != null) {\n                const computeIndex = automationTarget.computeIndex + targetIndex;\n                let envelopeStart = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, noteSecondsStartUnscaled, noteSecondsStart[envelopeIndex], beatTimeStart[envelopeIndex], timeSinceStart, noteSizeStart, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                if (prevSlideStart) {\n                    const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, prevNoteSecondsStartUnscaled, prevNoteSecondsStart[envelopeIndex], beatTimeStart[envelopeIndex], timeSinceStart, prevNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\n                }\n                if (nextSlideStart) {\n                    const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, 0.0, 0.0, beatTimeStart[envelopeIndex], timeSinceStart, nextNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\n                }\n                let envelopeEnd = envelopeStart;\n                if (isDiscrete == false) {\n                    envelopeEnd = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, noteSecondsEndUnscaled, noteSecondsEnd[envelopeIndex], beatTimeEnd[envelopeIndex], timeSinceStart, noteSizeEnd, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    if (prevSlideEnd) {\n                        const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, prevNoteSecondsEndUnscaled, prevNoteSecondsEnd[envelopeIndex], beatTimeEnd[envelopeIndex], timeSinceStart, prevNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                        envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\n                    }\n                    if (nextSlideEnd) {\n                        const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, 0.0, 0.0, beatTimeEnd[envelopeIndex], timeSinceStart, nextNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                        envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\n                    }\n                }\n                this.envelopeStarts[computeIndex] *= envelopeStart;\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\n                if (automationTarget.isFilter) {\n                    const filterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == 0) {\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope, perEnvelopeSpeed));\n                    }\n                }\n            }\n        }\n        this.noteSecondsStartUnscaled = noteSecondsStartUnscaled;\n        this.noteSecondsEndUnscaled = noteSecondsEndUnscaled;\n        this.noteTicksStart = noteTicksStart;\n        this.noteTicksEnd = noteTicksEnd;\n        this.prevNoteSecondsStartUnscaled = prevNoteSecondsStartUnscaled;\n        this.prevNoteSecondsEndUnscaled = prevNoteSecondsEndUnscaled;\n        this.prevNoteTicksStart = prevNoteTicksStart;\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\n        for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n            this.noteSecondsStart[envelopeIndex] = noteSecondsStart[envelopeIndex];\n            this.noteSecondsEnd[envelopeIndex] = noteSecondsEnd[envelopeIndex];\n            this.prevNoteSecondsStart[envelopeIndex] = prevNoteSecondsStart[envelopeIndex];\n            this.prevNoteSecondsEnd[envelopeIndex] = prevNoteSecondsEnd[envelopeIndex];\n        }\n        this.prevNoteSize = prevNoteSize;\n        this.nextNoteSize = nextNoteSize;\n        this.noteSizeStart = noteSizeStart;\n        this.noteSizeEnd = noteSizeEnd;\n        this.prevSlideStart = prevSlideStart;\n        this.prevSlideEnd = prevSlideEnd;\n        this.nextSlideStart = nextSlideStart;\n        this.nextSlideEnd = nextSlideEnd;\n        this.prevSlideRatioStart = prevSlideRatioStart;\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\n        this.nextSlideRatioStart = nextSlideRatioStart;\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\n    }\n    clearEnvelopes() {\n        for (let envelopeIndex = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\n            const computeIndex = this._modifiedEnvelopeIndices[envelopeIndex];\n            this.envelopeStarts[computeIndex] = 1.0;\n            this.envelopeEnds[computeIndex] = 1.0;\n        }\n        this._modifiedEnvelopeCount = 0;\n    }\n    static computeEnvelope(envelope, perEnvelopeSpeed, globalEnvelopeSpeed, unspedTime, time, beats, timeSinceStart, noteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, isDrumset = false, steps, seed, waveform, defaultPitch, notePinStart) {\n        const envelopeSpeed = isDrumset ? envelope.speed : 1;\n        const boundAdjust = (perEnvelopeUpperBound - perEnvelopeLowerBound);\n        switch (envelope.type) {\n            case 0: return perEnvelopeUpperBound;\n            case 1:\n                if (!inverse) {\n                    return Synth.noteSizeToVolumeMult(noteSize) * (boundAdjust) + perEnvelopeLowerBound;\n                }\n                else {\n                    return perEnvelopeUpperBound - Synth.noteSizeToVolumeMult(noteSize) * (boundAdjust);\n                }\n            case 2:\n                return pitch;\n            case 3:\n                const hashMax = 0xffffffff;\n                const step = steps;\n                switch (waveform) {\n                    case 0:\n                        if (step <= 1)\n                            return 1;\n                        const timeHash = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed) / (256))) + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * (step / (step - 1)) * Math.floor(timeHash * step / (hashMax + 1)) / step;\n                        }\n                        else {\n                            return boundAdjust * (step / (step - 1)) * Math.floor(timeHash * (step) / (hashMax + 1)) / step + perEnvelopeLowerBound;\n                        }\n                    case 1:\n                        const pitchHash = xxHash32(defaultPitch + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * pitchHash / (hashMax + 1);\n                        }\n                        else {\n                            return boundAdjust * pitchHash / (hashMax + 1) + perEnvelopeLowerBound;\n                        }\n                    case 2:\n                        if (step <= 1)\n                            return 1;\n                        const noteHash = xxHash32(notePinStart + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * (step / (step - 1)) * Math.floor(noteHash * step / (hashMax + 1)) / step;\n                        }\n                        else {\n                            return boundAdjust * (step / (step - 1)) * Math.floor(noteHash * (step) / (hashMax + 1)) / step + perEnvelopeLowerBound;\n                        }\n                    case 3:\n                        const timeHashA = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed) / (256))) + \"\", seed);\n                        const timeHashB = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed + 256) / (256))) + \"\", seed);\n                        const weightedAverage = timeHashA * (1 - ((timeSinceStart * perEnvelopeSpeed) / (256)) % 1) + timeHashB * (((timeSinceStart * perEnvelopeSpeed) / (256)) % 1);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * weightedAverage / (hashMax + 1);\n                        }\n                        else {\n                            return boundAdjust * weightedAverage / (hashMax + 1) + perEnvelopeLowerBound;\n                        }\n                    default: throw new Error(\"Unrecognized operator envelope waveform type: \" + waveform);\n                }\n            case 6:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * (1.0 / (1.0 + time * envelopeSpeed));\n                }\n                else {\n                    return boundAdjust / (1.0 + time * envelopeSpeed) + perEnvelopeLowerBound;\n                }\n            case 7:\n                if (inverse) {\n                    return boundAdjust / (1.0 + time * envelopeSpeed) + perEnvelopeLowerBound;\n                }\n                else {\n                    return perEnvelopeUpperBound - boundAdjust / (1.0 + time * envelopeSpeed);\n                }\n            case 8:\n                switch (waveform) {\n                    case 0:\n                        if (inverse) {\n                            return (perEnvelopeUpperBound / 2) + boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.5 + (perEnvelopeLowerBound / 2);\n                        }\n                        else {\n                            return (perEnvelopeUpperBound / 2) - boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.5 + (perEnvelopeLowerBound / 2);\n                        }\n                    case 1:\n                        if (inverse) {\n                            return (Math.cos(beats * 2.0 * Math.PI * envelopeSpeed + 3 * Math.PI / 2) < 0) ? perEnvelopeUpperBound : perEnvelopeLowerBound;\n                        }\n                        else {\n                            return (Math.cos(beats * 2.0 * Math.PI * envelopeSpeed + 3 * Math.PI / 2) < 0) ? perEnvelopeLowerBound : perEnvelopeUpperBound;\n                        }\n                    case 2:\n                        if (inverse) {\n                            return (perEnvelopeUpperBound / 2) - (boundAdjust / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                        else {\n                            return (perEnvelopeUpperBound / 2) + (boundAdjust / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                    case 3:\n                        if (inverse) {\n                            return perEnvelopeUpperBound - (beats * envelopeSpeed) % 1 * boundAdjust;\n                        }\n                        else {\n                            return (beats * envelopeSpeed) % 1 * boundAdjust + perEnvelopeLowerBound;\n                        }\n                    case 4:\n                        let trap = 0;\n                        if (inverse) {\n                            trap = (perEnvelopeUpperBound / 2) - (boundAdjust * 2 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                        else {\n                            trap = (perEnvelopeUpperBound / 2) + (boundAdjust * 2 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                        return Math.max(perEnvelopeLowerBound, Math.min(perEnvelopeUpperBound, trap));\n                    case 5:\n                        if (steps <= 1)\n                            return 1;\n                        let saw = (beats * envelopeSpeed) % 1;\n                        if (inverse) {\n                            return perEnvelopeUpperBound - Math.floor(saw * steps) * boundAdjust / (steps - 1);\n                        }\n                        else {\n                            return Math.floor(saw * steps) * boundAdjust / (steps - 1) + perEnvelopeLowerBound;\n                        }\n                    case 6:\n                        if (steps <= 1)\n                            return 1;\n                        let tri = 0.5 + (inverse ? -1 : 1) * (1 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed));\n                        return Math.round(tri * (steps - 1)) * boundAdjust / (steps - 1) + perEnvelopeLowerBound;\n                    default: throw new Error(\"Unrecognized operator envelope waveform type: \" + waveform);\n                }\n            case 9:\n                if (inverse) {\n                    return (perEnvelopeUpperBound / 4) + boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.25 + (perEnvelopeLowerBound / 4);\n                }\n                else {\n                    return 0.5 + (perEnvelopeUpperBound / 4) - boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.25 - (perEnvelopeLowerBound / 4);\n                }\n            case 4:\n                if (inverse) {\n                    return Math.max(0, perEnvelopeUpperBound + 1.0 - Math.max(1.0 - perEnvelopeLowerBound, 1.0 - perEnvelopeUpperBound - unspedTime * globalEnvelopeSpeed * 10.0));\n                }\n                else {\n                    return Math.max(1.0 + perEnvelopeLowerBound, 1.0 + perEnvelopeUpperBound - unspedTime * globalEnvelopeSpeed * 10.0);\n                }\n            case 5:\n                const attack = 0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed);\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * (unspedTime < attack ? unspedTime / attack : 1.0 / (1.0 + (unspedTime - attack) * envelopeSpeed * perEnvelopeSpeed));\n                }\n                else {\n                    return boundAdjust * (unspedTime < attack ? unspedTime / attack : 1.0 / (1.0 + (unspedTime - attack) * envelopeSpeed * perEnvelopeSpeed)) + perEnvelopeLowerBound;\n                }\n            case 10:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * Math.pow(2, -envelopeSpeed * time);\n                }\n                else {\n                    return boundAdjust * Math.pow(2, -envelopeSpeed * time) + perEnvelopeLowerBound;\n                }\n            case 14:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * +(unspedTime < (0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed)));\n                }\n                else {\n                    return boundAdjust * +(unspedTime < (0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed))) + perEnvelopeLowerBound;\n                }\n            case 11:\n                let temp = 0.5 - Math.cos(beats * envelopeSpeed) * 0.5;\n                temp = 1.0 / (1.0 + time * (envelopeSpeed - (temp / (1.5 / envelopeSpeed))));\n                temp = temp > 0.0 ? temp : 0.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * temp;\n                }\n                else {\n                    return boundAdjust * temp + perEnvelopeLowerBound;\n                }\n            case 12: {\n                let lin = (1.0 - (time / (16 / envelopeSpeed)));\n                lin = lin > 0.0 ? lin : 0.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * lin;\n                }\n                else {\n                    return boundAdjust * lin + perEnvelopeLowerBound;\n                }\n            }\n            case 13: {\n                let lin = (time / (16 / envelopeSpeed));\n                lin = lin < 1.0 ? lin : 1.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * lin;\n                }\n                else {\n                    return boundAdjust * lin + perEnvelopeLowerBound;\n                }\n            }\n            case 15: {\n                if (inverse) {\n                    return Math.min(Math.max(perEnvelopeLowerBound, perEnvelopeUpperBound - boundAdjust * Math.sqrt(Math.max(1.0 - envelopeSpeed * time / 2, 0))), perEnvelopeUpperBound);\n                }\n                else {\n                    return Math.max(perEnvelopeLowerBound, boundAdjust * Math.sqrt(Math.max(1.0 - envelopeSpeed * time / 2, 0)) + perEnvelopeLowerBound);\n                }\n            }\n            default: throw new Error(\"Unrecognized operator envelope type.\");\n        }\n    }\n    getPitchValue(instrument, tone, instrumentState, calculateBends = true) {\n        if (tone && tone.pitchCount >= 1) {\n            const chord = instrument.getChord();\n            const arpeggiates = chord.arpeggiates;\n            const monophonic = chord.name == \"monophonic\";\n            const arpeggio = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n            const tonePitch = tone.pitches[arpeggiates ? getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio) : monophonic ? instrument.monoChordTone : 0];\n            if (calculateBends) {\n                return tone.lastInterval != tonePitch ? tonePitch + tone.lastInterval : tonePitch;\n            }\n            else {\n                return tonePitch;\n            }\n        }\n        return 0;\n    }\n    computePitchEnvelope(instrument, index, pitch = 0) {\n        let startNote = 0;\n        let endNote = Config.maxPitch;\n        let inverse = false;\n        let envelopeLowerBound = 0;\n        let envelopeUpperBound = 1;\n        if (instrument.isNoiseInstrument) {\n            endNote = Config.drumCount - 1;\n        }\n        if (index < instrument.envelopeCount && index !== -2) {\n            startNote = instrument.envelopes[index].pitchEnvelopeStart;\n            endNote = instrument.envelopes[index].pitchEnvelopeEnd;\n            inverse = instrument.envelopes[index].inverse;\n            envelopeLowerBound = instrument.envelopes[index].perEnvelopeLowerBound;\n            envelopeUpperBound = instrument.envelopes[index].perEnvelopeUpperBound;\n        }\n        if (startNote > endNote) {\n            startNote = 0;\n            endNote = instrument.isNoiseInstrument ? Config.drumCount - 1 : Config.maxPitch;\n        }\n        const range = endNote - startNote + 1;\n        if (!inverse) {\n            if (pitch <= startNote) {\n                return envelopeLowerBound;\n            }\n            else if (pitch >= endNote) {\n                return envelopeUpperBound;\n            }\n            else {\n                return (pitch - startNote) * (envelopeUpperBound - envelopeLowerBound) / range + envelopeLowerBound;\n            }\n        }\n        else {\n            if (pitch <= startNote) {\n                return envelopeUpperBound;\n            }\n            else if (pitch >= endNote) {\n                return envelopeLowerBound;\n            }\n            else {\n                return envelopeUpperBound - (pitch - startNote) * (envelopeUpperBound - envelopeLowerBound) / range;\n            }\n        }\n    }\n    static getLowpassCutoffDecayVolumeCompensation(envelope, perEnvelopeSpeed = 1) {\n        if (envelope.type == 10)\n            return 1.25 + 0.025 * perEnvelopeSpeed;\n        if (envelope.type == 6)\n            return 1.0 + 0.02 * perEnvelopeSpeed;\n        return 1.0;\n    }\n    computeDrumsetEnvelopes(instrument, drumsetFilterEnvelope, beatsPerPart, partTimeStart, partTimeEnd) {\n        const pitch = 1;\n        function computeDrumsetEnvelope(unspedTime, time, beats, noteSize) {\n            return EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 1, 1, unspedTime, time, beats, 0, noteSize, pitch, false, 0, 1, true, 2, 2, 0, pitch, 0);\n        }\n        let drumsetFilterEnvelopeStart = computeDrumsetEnvelope(this.noteSecondsStartUnscaled, this.noteSecondsStartUnscaled, beatsPerPart * partTimeStart, this.noteSizeStart);\n        if (this.prevSlideStart) {\n            const other = computeDrumsetEnvelope(this.prevNoteSecondsStartUnscaled, this.prevNoteSecondsStartUnscaled, beatsPerPart * partTimeStart, this.prevNoteSize);\n            drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * this.prevSlideRatioStart;\n        }\n        if (this.nextSlideStart) {\n            const other = computeDrumsetEnvelope(0.0, 0.0, beatsPerPart * partTimeStart, this.nextNoteSize);\n            drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * this.nextSlideRatioStart;\n        }\n        let drumsetFilterEnvelopeEnd = drumsetFilterEnvelopeStart;\n        drumsetFilterEnvelopeEnd = computeDrumsetEnvelope(this.noteSecondsEndUnscaled, this.noteSecondsEndUnscaled, beatsPerPart * partTimeEnd, this.noteSizeEnd);\n        if (this.prevSlideEnd) {\n            const other = computeDrumsetEnvelope(this.prevNoteSecondsEndUnscaled, this.prevNoteSecondsEndUnscaled, beatsPerPart * partTimeEnd, this.prevNoteSize);\n            drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * this.prevSlideRatioEnd;\n        }\n        if (this.nextSlideEnd) {\n            const other = computeDrumsetEnvelope(0.0, 0.0, beatsPerPart * partTimeEnd, this.nextNoteSize);\n            drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * this.nextSlideRatioEnd;\n        }\n        this.drumsetFilterEnvelopeStart = drumsetFilterEnvelopeStart;\n        this.drumsetFilterEnvelopeEnd = drumsetFilterEnvelopeEnd;\n    }\n}\nclass Tone {\n    constructor() {\n        this.pitches = Array(Config.maxChordSize + 2).fill(0);\n        this.pitchCount = 0;\n        this.chordSize = 0;\n        this.drumsetPitch = null;\n        this.note = null;\n        this.prevNote = null;\n        this.nextNote = null;\n        this.prevNotePitchIndex = 0;\n        this.nextNotePitchIndex = 0;\n        this.freshlyAllocated = true;\n        this.atNoteStart = false;\n        this.isOnLastTick = false;\n        this.passedEndOfNote = false;\n        this.forceContinueAtStart = false;\n        this.forceContinueAtEnd = false;\n        this.noteStartPart = 0;\n        this.noteEndPart = 0;\n        this.ticksSinceReleased = 0;\n        this.liveInputSamplesHeld = 0;\n        this.lastInterval = 0;\n        this.stringSustainStart = 0;\n        this.stringSustainEnd = 0;\n        this.noiseSamples = [];\n        this.phases = [];\n        this.operatorWaves = [];\n        this.phaseDeltas = [];\n        this.directions = [];\n        this.chipWaveCompletions = [];\n        this.chipWavePrevWaves = [];\n        this.chipWaveCompletionsLastWave = [];\n        this.phaseDeltaScales = [];\n        this.expression = 0.0;\n        this.expressionDelta = 0.0;\n        this.operatorExpressions = [];\n        this.operatorExpressionDeltas = [];\n        this.prevPitchExpressions = Array(Config.maxPitchOrOperatorCount).fill(null);\n        this.prevVibrato = null;\n        this.prevStringDecay = null;\n        this.pulseWidth = 0.0;\n        this.pulseWidthDelta = 0.0;\n        this.decimalOffset = 0.0;\n        this.supersawDynamism = 0.0;\n        this.supersawDynamismDelta = 0.0;\n        this.supersawUnisonDetunes = [];\n        this.supersawShape = 0.0;\n        this.supersawShapeDelta = 0.0;\n        this.supersawDelayLength = 0.0;\n        this.supersawDelayLengthDelta = 0.0;\n        this.supersawDelayLine = null;\n        this.supersawDelayIndex = -1;\n        this.supersawPrevPhaseDelta = null;\n        this.pickedStrings = [];\n        this.noteFilters = [];\n        this.noteFilterCount = 0;\n        this.initialNoteFilterInput1 = 0.0;\n        this.initialNoteFilterInput2 = 0.0;\n        this.specialIntervalExpressionMult = 1.0;\n        this.feedbackOutputs = [];\n        this.feedbackMult = 0.0;\n        this.feedbackDelta = 0.0;\n        this.stereoVolumeLStart = 0.0;\n        this.stereoVolumeRStart = 0.0;\n        this.stereoVolumeLDelta = 0.0;\n        this.stereoVolumeRDelta = 0.0;\n        this.stereoDelayStart = 0.0;\n        this.stereoDelayEnd = 0.0;\n        this.stereoDelayDelta = 0.0;\n        this.customVolumeStart = 0.0;\n        this.customVolumeEnd = 0.0;\n        this.filterResonanceStart = 0.0;\n        this.filterResonanceDelta = 0.0;\n        this.isFirstOrder = false;\n        this.envelopeComputer = new EnvelopeComputer();\n        this.reset();\n    }\n    reset() {\n        for (let i = 0; i < Config.unisonVoicesMax; i++) {\n            this.noiseSamples[i] = 0.0;\n        }\n        for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            this.phases[i] = 0.0;\n            this.directions[i] = 1;\n            this.chipWaveCompletions[i] = 0;\n            this.chipWavePrevWaves[i] = 0;\n            this.chipWaveCompletionsLastWave[i] = 0;\n            this.operatorWaves[i] = Config.operatorWaves[0];\n            this.feedbackOutputs[i] = 0.0;\n            this.prevPitchExpressions[i] = null;\n        }\n        for (let i = 0; i < this.noteFilterCount; i++) {\n            this.noteFilters[i].resetOutput();\n        }\n        this.noteFilterCount = 0;\n        this.initialNoteFilterInput1 = 0.0;\n        this.initialNoteFilterInput2 = 0.0;\n        this.liveInputSamplesHeld = 0;\n        this.supersawDelayIndex = -1;\n        for (const pickedString of this.pickedStrings) {\n            pickedString.reset();\n        }\n        this.envelopeComputer.reset();\n        this.prevVibrato = null;\n        this.prevStringDecay = null;\n        this.supersawPrevPhaseDelta = null;\n        this.drumsetPitch = null;\n    }\n}\nclass InstrumentState {\n    constructor() {\n        this.awake = false;\n        this.computed = false;\n        this.tonesAddedInThisTick = false;\n        this.flushingDelayLines = false;\n        this.deactivateAfterThisTick = false;\n        this.attentuationProgress = 0.0;\n        this.flushedSamples = 0;\n        this.activeTones = new Deque();\n        this.activeModTones = new Deque();\n        this.releasedTones = new Deque();\n        this.liveInputTones = new Deque();\n        this.type = 0;\n        this.synthesizer = null;\n        this.wave = null;\n        this.isUsingAdvancedLoopControls = false;\n        this.chipWaveLoopStart = 0;\n        this.chipWaveLoopEnd = 0;\n        this.chipWaveLoopMode = 0;\n        this.chipWavePlayBackwards = false;\n        this.chipWaveStartOffset = 0;\n        this.noisePitchFilterMult = 1.0;\n        this.unison = null;\n        this.unisonVoices = 1;\n        this.unisonSpread = 0.0;\n        this.unisonOffset = 0.0;\n        this.unisonExpression = 1.4;\n        this.unisonSign = 1.0;\n        this.chord = null;\n        this.effects = 0;\n        this.volumeScale = 0;\n        this.aliases = false;\n        this.arpTime = 0;\n        this.vibratoTime = 0;\n        this.nextVibratoTime = 0;\n        this.envelopeTime = [];\n        this.eqFilterVolume = 1.0;\n        this.eqFilterVolumeDelta = 0.0;\n        this.mixVolume = 1.0;\n        this.mixVolumeDelta = 0.0;\n        this.delayInputMult = 0.0;\n        this.delayInputMultDelta = 0.0;\n        this.granularMix = 1.0;\n        this.granularMixDelta = 0.0;\n        this.granularDelayLine = null;\n        this.granularDelayLineIndex = 0;\n        this.granularMaximumDelayTimeInSeconds = 1;\n        this.usesRandomGrainLocation = true;\n        this.granularDelayLineDirty = false;\n        this.computeGrains = true;\n        this.ringModMix = 0;\n        this.ringModMixDelta = 0;\n        this.ringModPhase = 0;\n        this.ringModPhaseDelta = 0;\n        this.ringModPhaseDeltaScale = 1.0;\n        this.ringModWaveformIndex = 0.0;\n        this.ringModPulseWidth = 0.0;\n        this.ringModHzOffset = 0.0;\n        this.ringModMixFade = 1.0;\n        this.ringModMixFadeDelta = 0;\n        this.distortion = 0.0;\n        this.distortionDelta = 0.0;\n        this.distortionDrive = 0.0;\n        this.distortionDriveDelta = 0.0;\n        this.distortionFractionalInput1 = 0.0;\n        this.distortionFractionalInput2 = 0.0;\n        this.distortionFractionalInput3 = 0.0;\n        this.distortionPrevInput = 0.0;\n        this.distortionNextOutput = 0.0;\n        this.bitcrusherPrevInput = 0.0;\n        this.bitcrusherCurrentOutput = 0.0;\n        this.bitcrusherPhase = 1.0;\n        this.bitcrusherPhaseDelta = 0.0;\n        this.bitcrusherPhaseDeltaScale = 1.0;\n        this.bitcrusherScale = 1.0;\n        this.bitcrusherScaleScale = 1.0;\n        this.bitcrusherFoldLevel = 1.0;\n        this.bitcrusherFoldLevelScale = 1.0;\n        this.eqFilters = [];\n        this.eqFilterCount = 0;\n        this.initialEqFilterInput1 = 0.0;\n        this.initialEqFilterInput2 = 0.0;\n        this.panningDelayLine = null;\n        this.panningDelayPos = 0;\n        this.panningVolumeL = 0.0;\n        this.panningVolumeR = 0.0;\n        this.panningVolumeDeltaL = 0.0;\n        this.panningVolumeDeltaR = 0.0;\n        this.panningOffsetL = 0.0;\n        this.panningOffsetR = 0.0;\n        this.panningOffsetDeltaL = 0.0;\n        this.panningOffsetDeltaR = 0.0;\n        this.chorusDelayLineL = null;\n        this.chorusDelayLineR = null;\n        this.chorusDelayLineDirty = false;\n        this.chorusDelayPos = 0;\n        this.chorusPhase = 0;\n        this.chorusVoiceMult = 0;\n        this.chorusVoiceMultDelta = 0;\n        this.chorusCombinedMult = 0;\n        this.chorusCombinedMultDelta = 0;\n        this.echoDelayLineL = null;\n        this.echoDelayLineR = null;\n        this.echoDelayLineDirty = false;\n        this.echoDelayPos = 0;\n        this.echoDelayOffsetStart = 0;\n        this.echoDelayOffsetEnd = null;\n        this.echoDelayOffsetRatio = 0.0;\n        this.echoDelayOffsetRatioDelta = 0.0;\n        this.echoMult = 0.0;\n        this.echoMultDelta = 0.0;\n        this.echoShelfA1 = 0.0;\n        this.echoShelfB0 = 0.0;\n        this.echoShelfB1 = 0.0;\n        this.echoShelfSampleL = 0.0;\n        this.echoShelfSampleR = 0.0;\n        this.echoShelfPrevInputL = 0.0;\n        this.echoShelfPrevInputR = 0.0;\n        this.reverbDelayLine = null;\n        this.reverbDelayLineDirty = false;\n        this.reverbDelayPos = 0;\n        this.reverbMult = 0.0;\n        this.reverbMultDelta = 0.0;\n        this.reverbShelfA1 = 0.0;\n        this.reverbShelfB0 = 0.0;\n        this.reverbShelfB1 = 0.0;\n        this.reverbShelfSample0 = 0.0;\n        this.reverbShelfSample1 = 0.0;\n        this.reverbShelfSample2 = 0.0;\n        this.reverbShelfSample3 = 0.0;\n        this.reverbShelfPrevInput0 = 0.0;\n        this.reverbShelfPrevInput1 = 0.0;\n        this.reverbShelfPrevInput2 = 0.0;\n        this.reverbShelfPrevInput3 = 0.0;\n        this.spectrumWave = new SpectrumWaveState();\n        this.harmonicsWave = new HarmonicsWaveState();\n        this.drumsetSpectrumWaves = [];\n        this.envelopeComputer = new EnvelopeComputer();\n        for (let i = 0; i < Config.drumCount; i++) {\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\n        }\n        this.granularGrains = [];\n        this.granularMaximumGrains = 256;\n        for (let i = 0; i < this.granularMaximumGrains; i++) {\n            this.granularGrains.push(new Grain());\n        }\n        this.granularGrainsLength = 0;\n    }\n    allocateNecessaryBuffers(synth, instrument, samplesPerTick) {\n        if (effectsIncludePanning(instrument.effects)) {\n            if (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\n                this.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\n            }\n        }\n        if (effectsIncludeChorus(instrument.effects)) {\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\n            }\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\n            }\n        }\n        if (effectsIncludeEcho(instrument.effects)) {\n            this.allocateEchoBuffers(samplesPerTick, instrument.echoDelay);\n        }\n        if (effectsIncludeReverb(instrument.effects)) {\n            if (this.reverbDelayLine == null) {\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\n            }\n        }\n        if (effectsIncludeGranular(instrument.effects)) {\n            const granularDelayLineSizeInMilliseconds = 2500;\n            const granularDelayLineSizeInSeconds = granularDelayLineSizeInMilliseconds / 1000;\n            this.granularMaximumDelayTimeInSeconds = granularDelayLineSizeInSeconds;\n            const granularDelayLineSizeInSamples = Synth.fittingPowerOfTwo(Math.floor(granularDelayLineSizeInSeconds * synth.samplesPerSecond));\n            if (this.granularDelayLine == null || this.granularDelayLine.length != granularDelayLineSizeInSamples) {\n                this.granularDelayLine = new Float32Array(granularDelayLineSizeInSamples);\n                this.granularDelayLineIndex = 0;\n            }\n            const oldGrainsLength = this.granularGrains.length;\n            if (this.granularMaximumGrains > oldGrainsLength) {\n                for (let i = oldGrainsLength; i < this.granularMaximumGrains + 1; i++) {\n                    this.granularGrains.push(new Grain());\n                }\n            }\n            if (this.granularMaximumGrains < this.granularGrainsLength) {\n                this.granularGrainsLength = Math.round(this.granularMaximumGrains);\n            }\n        }\n    }\n    allocateEchoBuffers(samplesPerTick, echoDelay) {\n        const safeEchoDelaySteps = Math.max(Config.echoDelayRange >> 1, (echoDelay + 1));\n        const baseEchoDelayBufferSize = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\n        const safeEchoDelayBufferSize = baseEchoDelayBufferSize * 2;\n        if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\n            this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n            this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n        }\n        else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\n            const newDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n            const newDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n            const oldMask = this.echoDelayLineL.length - 1;\n            for (let i = 0; i < this.echoDelayLineL.length; i++) {\n                newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n                newDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n            }\n            this.echoDelayPos = this.echoDelayLineL.length;\n            this.echoDelayLineL = newDelayLineL;\n            this.echoDelayLineR = newDelayLineR;\n        }\n    }\n    deactivate() {\n        this.bitcrusherPrevInput = 0.0;\n        this.bitcrusherCurrentOutput = 0.0;\n        this.bitcrusherPhase = 1.0;\n        for (let i = 0; i < this.eqFilterCount; i++) {\n            this.eqFilters[i].resetOutput();\n        }\n        this.eqFilterCount = 0;\n        this.initialEqFilterInput1 = 0.0;\n        this.initialEqFilterInput2 = 0.0;\n        this.distortionFractionalInput1 = 0.0;\n        this.distortionFractionalInput2 = 0.0;\n        this.distortionFractionalInput3 = 0.0;\n        this.distortionPrevInput = 0.0;\n        this.distortionNextOutput = 0.0;\n        this.panningDelayPos = 0;\n        if (this.panningDelayLine != null)\n            for (let i = 0; i < this.panningDelayLine.length; i++)\n                this.panningDelayLine[i] = 0.0;\n        this.echoDelayOffsetEnd = null;\n        this.echoShelfSampleL = 0.0;\n        this.echoShelfSampleR = 0.0;\n        this.echoShelfPrevInputL = 0.0;\n        this.echoShelfPrevInputR = 0.0;\n        this.reverbShelfSample0 = 0.0;\n        this.reverbShelfSample1 = 0.0;\n        this.reverbShelfSample2 = 0.0;\n        this.reverbShelfSample3 = 0.0;\n        this.reverbShelfPrevInput0 = 0.0;\n        this.reverbShelfPrevInput1 = 0.0;\n        this.reverbShelfPrevInput2 = 0.0;\n        this.reverbShelfPrevInput3 = 0.0;\n        this.volumeScale = 1.0;\n        this.aliases = false;\n        this.awake = false;\n        this.flushingDelayLines = false;\n        this.deactivateAfterThisTick = false;\n        this.attentuationProgress = 0.0;\n        this.flushedSamples = 0;\n    }\n    resetAllEffects() {\n        this.deactivate();\n        this.vibratoTime = 0;\n        this.nextVibratoTime = 0;\n        this.arpTime = 0;\n        for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++)\n            this.envelopeTime[envelopeIndex] = 0;\n        this.envelopeComputer.reset();\n        if (this.chorusDelayLineDirty) {\n            for (let i = 0; i < this.chorusDelayLineL.length; i++)\n                this.chorusDelayLineL[i] = 0.0;\n            for (let i = 0; i < this.chorusDelayLineR.length; i++)\n                this.chorusDelayLineR[i] = 0.0;\n        }\n        if (this.echoDelayLineDirty) {\n            for (let i = 0; i < this.echoDelayLineL.length; i++)\n                this.echoDelayLineL[i] = 0.0;\n            for (let i = 0; i < this.echoDelayLineR.length; i++)\n                this.echoDelayLineR[i] = 0.0;\n        }\n        if (this.reverbDelayLineDirty) {\n            for (let i = 0; i < this.reverbDelayLine.length; i++)\n                this.reverbDelayLine[i] = 0.0;\n        }\n        if (this.granularDelayLineDirty) {\n            for (let i = 0; i < this.granularDelayLine.length; i++)\n                this.granularDelayLine[i] = 0.0;\n        }\n        this.chorusPhase = 0.0;\n        this.ringModPhase = 0.0;\n        this.ringModMixFade = 1.0;\n    }\n    compute(synth, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, instrumentIndex) {\n        this.computed = true;\n        this.type = instrument.type;\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\n        this.unison = Config.unisons[instrument.unison];\n        this.chord = instrument.getChord();\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\n        this.effects = instrument.effects;\n        this.aliases = instrument.aliases;\n        this.volumeScale = 1.0;\n        const samplesPerSecond = synth.samplesPerSecond;\n        this.updateWaves(instrument, samplesPerSecond);\n        const ticksIntoBar = synth.getTicksIntoBar();\n        const tickTimeStart = ticksIntoBar;\n        const secondsPerTick = samplesPerTick / synth.samplesPerSecond;\n        const currentPart = synth.getCurrentPart();\n        const envelopeSpeeds = [];\n        for (let i = 0; i < Config.maxEnvelopeCount; i++) {\n            envelopeSpeeds[i] = 0;\n        }\n        let useEnvelopeSpeed = Config.arpSpeedScale[instrument.envelopeSpeed];\n        if (synth.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex)) {\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, synth.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex, false)));\n            if (Number.isInteger(useEnvelopeSpeed)) {\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\n            }\n            else {\n                useEnvelopeSpeed = ((1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)]);\n            }\n        }\n        for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n            let perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n            if (synth.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channelIndex, instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed;\n            }\n            envelopeSpeeds[envelopeIndex] = useEnvelopeSpeed * perEnvelopeSpeed;\n        }\n        this.envelopeComputer.computeEnvelopes(instrument, currentPart, this.envelopeTime, tickTimeStart, secondsPerTick, tone, envelopeSpeeds, this, synth, channelIndex, instrumentIndex);\n        const envelopeStarts = this.envelopeComputer.envelopeStarts;\n        const envelopeEnds = this.envelopeComputer.envelopeEnds;\n        const usesGranular = effectsIncludeGranular(this.effects);\n        const usesRingModulation = effectsIncludeRingModulation(this.effects);\n        const usesDistortion = effectsIncludeDistortion(this.effects);\n        const usesBitcrusher = effectsIncludeBitcrusher(this.effects);\n        const usesPanning = effectsIncludePanning(this.effects);\n        const usesChorus = effectsIncludeChorus(this.effects);\n        const usesEcho = effectsIncludeEcho(this.effects);\n        const usesReverb = effectsIncludeReverb(this.effects);\n        let granularChance = 0;\n        if (usesGranular) {\n            granularChance = (instrument.grainAmounts + 1);\n            this.granularMaximumGrains = instrument.grainAmounts;\n            if (synth.isModActive(Config.modulators.dictionary[\"grain freq\"].index, channelIndex, instrumentIndex)) {\n                this.granularMaximumGrains = synth.getModValue(Config.modulators.dictionary[\"grain freq\"].index, channelIndex, instrumentIndex, false);\n                granularChance = (synth.getModValue(Config.modulators.dictionary[\"grain freq\"].index, channelIndex, instrumentIndex, false) + 1);\n            }\n            this.granularMaximumGrains = Math.floor(Math.pow(2, this.granularMaximumGrains * envelopeStarts[52]));\n            granularChance = granularChance * envelopeStarts[52];\n        }\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\n        if (usesGranular) {\n            this.granularMix = instrument.granular / Config.granularRange;\n            this.computeGrains = true;\n            let granularMixEnd = this.granularMix;\n            if (synth.isModActive(Config.modulators.dictionary[\"granular\"].index, channelIndex, instrumentIndex)) {\n                this.granularMix = synth.getModValue(Config.modulators.dictionary[\"granular\"].index, channelIndex, instrumentIndex, false) / Config.granularRange;\n                granularMixEnd = synth.getModValue(Config.modulators.dictionary[\"granular\"].index, channelIndex, instrumentIndex, true) / Config.granularRange;\n            }\n            this.granularMix *= envelopeStarts[51];\n            granularMixEnd *= envelopeEnds[51];\n            this.granularMixDelta = (granularMixEnd - this.granularMix) / roundedSamplesPerTick;\n            for (let iterations = 0; iterations < Math.ceil(Math.random() * Math.random() * 10); iterations++) {\n                if (this.granularGrainsLength < this.granularMaximumGrains && Math.random() <= granularChance) {\n                    let granularMinGrainSizeInMilliseconds = instrument.grainSize;\n                    if (synth.isModActive(Config.modulators.dictionary[\"grain size\"].index, channelIndex, instrumentIndex)) {\n                        granularMinGrainSizeInMilliseconds = synth.getModValue(Config.modulators.dictionary[\"grain size\"].index, channelIndex, instrumentIndex, false);\n                    }\n                    granularMinGrainSizeInMilliseconds *= envelopeStarts[53];\n                    let grainRange = instrument.grainRange;\n                    if (synth.isModActive(Config.modulators.dictionary[\"grain range\"].index, channelIndex, instrumentIndex)) {\n                        grainRange = synth.getModValue(Config.modulators.dictionary[\"grain range\"].index, channelIndex, instrumentIndex, false);\n                    }\n                    grainRange *= envelopeStarts[54];\n                    const granularMaxGrainSizeInMilliseconds = granularMinGrainSizeInMilliseconds + grainRange;\n                    const granularGrainSizeInMilliseconds = granularMinGrainSizeInMilliseconds + (granularMaxGrainSizeInMilliseconds - granularMinGrainSizeInMilliseconds) * Math.random();\n                    const granularGrainSizeInSeconds = granularGrainSizeInMilliseconds / 1000.0;\n                    const granularGrainSizeInSamples = Math.floor(granularGrainSizeInSeconds * samplesPerSecond);\n                    const granularDelayLineLength = this.granularDelayLine.length;\n                    const grainIndex = this.granularGrainsLength;\n                    this.granularGrainsLength++;\n                    const grain = this.granularGrains[grainIndex];\n                    grain.ageInSamples = 0;\n                    grain.maxAgeInSamples = granularGrainSizeInSamples;\n                    const minDelayTimeInSeconds = 0.02;\n                    const maxDelayTimeInSeconds = 2.4;\n                    grain.delayLinePosition = this.usesRandomGrainLocation ? (minDelayTimeInSeconds + (maxDelayTimeInSeconds - minDelayTimeInSeconds) * Math.random() * Math.random() * samplesPerSecond) % (granularDelayLineLength - 1) : minDelayTimeInSeconds;\n                    if (Config.granularEnvelopeType == 0) {\n                        grain.initializeParabolicEnvelope(grain.maxAgeInSamples, 1.0);\n                    }\n                    else if (Config.granularEnvelopeType == 1) {\n                        grain.initializeRCBEnvelope(grain.maxAgeInSamples, 1.0);\n                    }\n                    grain.addDelay(Math.random() * samplesPerTick * 4);\n                }\n            }\n        }\n        if (usesDistortion) {\n            let useDistortionStart = instrument.distortion;\n            let useDistortionEnd = instrument.distortion;\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\n            }\n            const distortionSliderStart = Math.min(1.0, envelopeStarts[42] * useDistortionStart / (Config.distortionRange - 1));\n            const distortionSliderEnd = Math.min(1.0, envelopeEnds[42] * useDistortionEnd / (Config.distortionRange - 1));\n            const distortionStart = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\n            const distortionEnd = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\n            const distortionDriveStart = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\n            const distortionDriveEnd = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\n            this.distortion = distortionStart;\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\n            this.distortionDrive = distortionDriveStart;\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\n        }\n        if (usesBitcrusher) {\n            let freqSettingStart = instrument.bitcrusherFreq * Math.sqrt(envelopeStarts[44]);\n            let freqSettingEnd = instrument.bitcrusherFreq * Math.sqrt(envelopeEnds[44]);\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false) * Math.sqrt(envelopeStarts[44]);\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true) * Math.sqrt(envelopeEnds[44]);\n            }\n            let quantizationSettingStart = instrument.bitcrusherQuantization * Math.sqrt(envelopeStarts[43]);\n            let quantizationSettingEnd = instrument.bitcrusherQuantization * Math.sqrt(envelopeEnds[43]);\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false) * Math.sqrt(envelopeStarts[43]);\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true) * Math.sqrt(envelopeEnds[43]);\n            }\n            const basePitch = Config.keys[synth.song.key].basePitch + (Config.pitchesPerOctave * synth.song.octave);\n            const freqStart = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingStart) * Config.bitcrusherOctaveStep);\n            const freqEnd = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingEnd) * Config.bitcrusherOctaveStep);\n            const phaseDeltaStart = Math.min(1.0, freqStart / samplesPerSecond);\n            const phaseDeltaEnd = Math.min(1.0, freqEnd / samplesPerSecond);\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\n            const scaleStart = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart) * 0.5));\n            const scaleEnd = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd) * 0.5));\n            this.bitcrusherScale = scaleStart;\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\n            const foldLevelStart = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart);\n            const foldLevelEnd = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd);\n            this.bitcrusherFoldLevel = foldLevelStart;\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\n        }\n        let eqFilterVolume = 1.0;\n        if (instrument.eqFilterType) {\n            const eqFilterSettingsStart = instrument.eqFilter;\n            if (instrument.eqSubFilters[1] == null)\n                instrument.eqSubFilters[1] = new FilterSettings();\n            const eqFilterSettingsEnd = instrument.eqSubFilters[1];\n            let startSimpleFreq = instrument.eqFilterSimpleCut;\n            let startSimpleGain = instrument.eqFilterSimplePeak;\n            let endSimpleFreq = instrument.eqFilterSimpleCut;\n            let endSimpleGain = instrument.eqFilterSimplePeak;\n            let filterChanges = false;\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\n                startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\n                endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\n                startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\n                endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n            let startPoint;\n            if (filterChanges) {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                let endPoint = eqFilterSettingsEnd.controlPoints[0];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.eqFilters.length < 1)\n                    this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            }\n            else {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.eqFilters.length < 1)\n                    this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            }\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            this.eqFilterCount = 1;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        else {\n            const eqFilterSettings = (instrument.tmpEqFilterStart != null) ? instrument.tmpEqFilterStart : instrument.eqFilter;\n            for (let i = 0; i < eqFilterSettings.controlPointCount; i++) {\n                let startPoint = eqFilterSettings.controlPoints[i];\n                let endPoint = (instrument.tmpEqFilterEnd != null && instrument.tmpEqFilterEnd.controlPoints[i] != null) ? instrument.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\n                if (startPoint.type != endPoint.type) {\n                    startPoint = endPoint;\n                }\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.eqFilters.length <= i)\n                    this.eqFilters[i] = new DynamicBiquadFilter();\n                this.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            }\n            this.eqFilterCount = eqFilterSettings.controlPointCount;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        const mainInstrumentVolume = Synth.instrumentVolumeToVolumeMult(instrument.volume);\n        this.mixVolume = mainInstrumentVolume;\n        let mixVolumeEnd = mainInstrumentVolume;\n        if (synth.isModActive(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex)) {\n            const startVal = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, false);\n            const endVal = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, true);\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n        }\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\n        }\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\n        let eqFilterVolumeStart = eqFilterVolume;\n        let eqFilterVolumeEnd = eqFilterVolume;\n        let delayInputMultStart = 1.0;\n        let delayInputMultEnd = 1.0;\n        if (usesPanning) {\n            const panEnvelopeStart = envelopeStarts[41] * 2.0 - 1.0;\n            const panEnvelopeEnd = envelopeEnds[41] * 2.0 - 1.0;\n            let usePanStart = instrument.pan;\n            let usePanEnd = instrument.pan;\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\n            }\n            let panStart = Math.max(-1.0, Math.min(1.0, (usePanStart - Config.panCenter) / Config.panCenter * panEnvelopeStart));\n            let panEnd = Math.max(-1.0, Math.min(1.0, (usePanEnd - Config.panCenter) / Config.panCenter * panEnvelopeEnd));\n            const volumeStartL = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\n            const volumeStartR = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\n            const volumeEndL = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\n            const volumeEndR = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\n            const maxDelaySamples = samplesPerSecond * Config.panDelaySecondsMax;\n            let usePanDelayStart = instrument.panDelay;\n            let usePanDelayEnd = instrument.panDelay;\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\n            }\n            const delayStart = panStart * usePanDelayStart * maxDelaySamples / 10;\n            const delayEnd = panEnd * usePanDelayEnd * maxDelaySamples / 10;\n            const delayStartL = Math.max(0.0, delayStart);\n            const delayStartR = Math.max(0.0, -delayStart);\n            const delayEndL = Math.max(0.0, delayEnd);\n            const delayEndR = Math.max(0.0, -delayEnd);\n            this.panningVolumeL = volumeStartL;\n            this.panningVolumeR = volumeStartR;\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\n        }\n        if (usesChorus) {\n            const chorusEnvelopeStart = envelopeStarts[45];\n            const chorusEnvelopeEnd = envelopeEnds[45];\n            let useChorusStart = instrument.chorus;\n            let useChorusEnd = instrument.chorus;\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\n            }\n            let chorusStart = Math.min(1.0, chorusEnvelopeStart * useChorusStart / (Config.chorusRange - 1));\n            let chorusEnd = Math.min(1.0, chorusEnvelopeEnd * useChorusEnd / (Config.chorusRange - 1));\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\n            this.chorusVoiceMult = chorusStart;\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\n            this.chorusCombinedMult = chorusCombinedMultStart;\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\n        }\n        if (usesRingModulation) {\n            let useRingModStart = instrument.ringModulation;\n            let useRingModEnd = instrument.ringModulation;\n            let useRingModEnvelopeStart = envelopeStarts[49];\n            let useRingModEnvelopeEnd = envelopeEnds[49];\n            let useRingModHzStart = Math.min(1.0, instrument.ringModulationHz / (Config.ringModHzRange - 1));\n            let useRingModHzEnd = Math.min(1.0, instrument.ringModulationHz / (Config.ringModHzRange - 1));\n            let useRingModHzEnvelopeStart = envelopeStarts[50];\n            let useRingModHzEnvelopeEnd = envelopeEnds[50];\n            if (synth.isModActive(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex)) {\n                useRingModStart = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, false));\n                useRingModEnd = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, true));\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex)) {\n                useRingModHzStart = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\n                useRingModHzEnd = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\n            }\n            useRingModHzStart *= useRingModHzEnvelopeStart;\n            useRingModHzEnd *= useRingModHzEnvelopeEnd;\n            let ringModStart = Math.min(1.0, (useRingModStart * useRingModEnvelopeStart) / (Config.ringModRange - 1));\n            let ringModEnd = Math.min(1.0, (useRingModEnd * useRingModEnvelopeEnd) / (Config.ringModRange - 1));\n            this.ringModMix = ringModStart;\n            this.ringModMixDelta = (ringModEnd - ringModStart) / roundedSamplesPerTick;\n            this.ringModHzOffset = instrument.ringModHzOffset;\n            let ringModPhaseDeltaStart = (Math.max(0, calculateRingModHertz(useRingModHzStart))) / synth.samplesPerSecond;\n            let ringModPhaseDeltaEnd = (Math.max(0, calculateRingModHertz(useRingModHzEnd))) / synth.samplesPerSecond;\n            if (useRingModHzStart < 1 / (Config.ringModHzRange - 1) || useRingModHzEnd < 1 / (Config.ringModHzRange - 1)) {\n                ringModPhaseDeltaStart *= useRingModHzStart * (Config.ringModHzRange - 1);\n                ringModPhaseDeltaEnd *= useRingModHzEnd * (Config.ringModHzRange - 1);\n            }\n            this.ringModMixFadeDelta = 0;\n            if (this.ringModMixFade < 0)\n                this.ringModMixFade = 0;\n            if (ringModPhaseDeltaStart <= 0 && ringModPhaseDeltaEnd <= 0 && this.ringModMixFade != 0) {\n                this.ringModMixFadeDelta = this.ringModMixFade / -40;\n            }\n            else if (ringModPhaseDeltaStart > 0 && ringModPhaseDeltaEnd > 0) {\n                this.ringModMixFade = 1.0;\n            }\n            this.ringModPhaseDelta = ringModPhaseDeltaStart;\n            this.ringModPhaseDeltaScale = ringModPhaseDeltaStart == 0 ? 1 : Math.pow(ringModPhaseDeltaEnd / ringModPhaseDeltaStart, 1.0 / roundedSamplesPerTick);\n            this.ringModWaveformIndex = instrument.ringModWaveformIndex;\n            this.ringModPulseWidth = instrument.ringModPulseWidth;\n        }\n        let maxEchoMult = 0.0;\n        let averageEchoDelaySeconds = 0.0;\n        if (usesEcho) {\n            const echoSustainEnvelopeStart = envelopeStarts[46];\n            const echoSustainEnvelopeEnd = envelopeEnds[46];\n            let useEchoSustainStart = instrument.echoSustain;\n            let useEchoSustainEnd = instrument.echoSustain;\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\n                useEchoSustainStart = Math.max(0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false));\n                useEchoSustainEnd = Math.max(0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true));\n            }\n            const echoMultStart = Math.min(1.0, Math.pow(echoSustainEnvelopeStart * useEchoSustainStart / Config.echoSustainRange, 1.1)) * 0.9;\n            const echoMultEnd = Math.min(1.0, Math.pow(echoSustainEnvelopeEnd * useEchoSustainEnd / Config.echoSustainRange, 1.1)) * 0.9;\n            this.echoMult = echoMultStart;\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\n            const echoDelayEnvelopeStart = envelopeStarts[55];\n            const echoDelayEnvelopeEnd = envelopeEnds[55];\n            let useEchoDelayStart = instrument.echoDelay * echoDelayEnvelopeStart;\n            let useEchoDelayEnd = instrument.echoDelay * echoDelayEnvelopeEnd;\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false) * echoDelayEnvelopeStart;\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true) * echoDelayEnvelopeEnd;\n            }\n            const tmpEchoDelayOffsetStart = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            const tmpEchoDelayOffsetEnd = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            if (this.echoDelayOffsetEnd != null) {\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\n            }\n            else {\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\n            }\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\n            this.echoDelayOffsetRatio = 0.0;\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\n            const shelfRadians = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n        let maxReverbMult = 0.0;\n        if (usesReverb) {\n            const reverbEnvelopeStart = envelopeStarts[47];\n            const reverbEnvelopeEnd = envelopeEnds[47];\n            let useReverbStart = instrument.reverb;\n            let useReverbEnd = instrument.reverb;\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n            }\n            const reverbStart = Math.min(1.0, Math.pow(reverbEnvelopeStart * useReverbStart / Config.reverbRange, 0.667)) * 0.425;\n            const reverbEnd = Math.min(1.0, Math.pow(reverbEnvelopeEnd * useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\n            this.reverbMult = reverbStart;\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\n            const shelfRadians = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n        if (this.tonesAddedInThisTick) {\n            this.attentuationProgress = 0.0;\n            this.flushedSamples = 0;\n            this.flushingDelayLines = false;\n        }\n        else if (!this.flushingDelayLines) {\n            if (this.attentuationProgress == 0.0) {\n                eqFilterVolumeEnd = 0.0;\n            }\n            else {\n                eqFilterVolumeStart = 0.0;\n                eqFilterVolumeEnd = 0.0;\n            }\n            const attenuationThreshold = 1.0 / 256.0;\n            const halfLifeMult = -Math.log2(attenuationThreshold);\n            let delayDuration = 0.0;\n            if (usesChorus) {\n                delayDuration += Config.chorusMaxDelay;\n            }\n            if (usesEcho) {\n                const attenuationPerSecond = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\n                const halfLife = -1.0 / Math.log2(attenuationPerSecond);\n                const echoDuration = halfLife * halfLifeMult;\n                delayDuration += echoDuration;\n            }\n            if (usesReverb) {\n                const averageMult = maxReverbMult * 2.0;\n                const averageReverbDelaySeconds = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\n                const attenuationPerSecond = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\n                const halfLife = -1.0 / Math.log2(attenuationPerSecond);\n                const reverbDuration = halfLife * halfLifeMult;\n                delayDuration += reverbDuration;\n            }\n            if (usesGranular) {\n                this.computeGrains = false;\n            }\n            const secondsInTick = samplesPerTick / samplesPerSecond;\n            const progressInTick = secondsInTick / delayDuration;\n            const progressAtEndOfTick = this.attentuationProgress + progressInTick;\n            if (progressAtEndOfTick >= 1.0) {\n                delayInputMultEnd = 0.0;\n            }\n            this.attentuationProgress = progressAtEndOfTick;\n            if (this.attentuationProgress >= 1.0) {\n                this.flushingDelayLines = true;\n            }\n        }\n        else {\n            eqFilterVolumeStart = 0.0;\n            eqFilterVolumeEnd = 0.0;\n            delayInputMultStart = 0.0;\n            delayInputMultEnd = 0.0;\n            let totalDelaySamples = 0;\n            if (usesChorus)\n                totalDelaySamples += synth.chorusDelayBufferSize;\n            if (usesEcho)\n                totalDelaySamples += this.echoDelayLineL.length;\n            if (usesReverb)\n                totalDelaySamples += Config.reverbDelayBufferSize;\n            if (usesGranular)\n                totalDelaySamples += this.granularMaximumDelayTimeInSeconds;\n            this.flushedSamples += roundedSamplesPerTick;\n            if (this.flushedSamples >= totalDelaySamples) {\n                this.deactivateAfterThisTick = true;\n            }\n        }\n        this.eqFilterVolume = eqFilterVolumeStart;\n        this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n        this.delayInputMult = delayInputMultStart;\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\n        this.envelopeComputer.clearEnvelopes();\n    }\n    updateWaves(instrument, samplesPerSecond) {\n        this.volumeScale = 1.0;\n        if (instrument.type == 0) {\n            this.wave = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\n            this.isUsingAdvancedLoopControls = instrument.isUsingAdvancedLoopControls;\n            this.chipWaveLoopStart = instrument.chipWaveLoopStart;\n            this.chipWaveLoopEnd = instrument.chipWaveLoopEnd;\n            this.chipWaveLoopMode = instrument.chipWaveLoopMode;\n            this.chipWavePlayBackwards = instrument.chipWavePlayBackwards;\n            this.chipWaveStartOffset = instrument.chipWaveStartOffset;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 6) {\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 9) {\n            this.wave = (this.aliases) ? instrument.customChipWave : instrument.customChipWaveIntegral;\n            this.volumeScale = 0.05;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 2) {\n            this.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 5) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 7) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 3) {\n            this.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 4) {\n            for (let i = 0; i < Config.drumCount; i++) {\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\n            }\n            this.wave = null;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else {\n            this.wave = null;\n        }\n    }\n    getDrumsetWave(pitch) {\n        if (this.type == 4) {\n            return this.drumsetSpectrumWaves[pitch].wave;\n        }\n        else {\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\n        }\n    }\n    static drumsetIndexReferenceDelta(index) {\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\n    }\n    static _drumsetIndexToSpectrumOctave(index) {\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\n    }\n}\nclass ChannelState {\n    constructor() {\n        this.instruments = [];\n        this.muted = false;\n        this.singleSeamlessInstrument = null;\n    }\n}\nexport class Synth {\n    syncSongState() {\n        const channelCount = this.song.getChannelCount();\n        for (let i = this.channels.length; i < channelCount; i++) {\n            this.channels[i] = new ChannelState();\n        }\n        this.channels.length = channelCount;\n        for (let i = 0; i < channelCount; i++) {\n            const channel = this.song.channels[i];\n            const channelState = this.channels[i];\n            for (let j = channelState.instruments.length; j < channel.instruments.length; j++) {\n                channelState.instruments[j] = new InstrumentState();\n            }\n            channelState.instruments.length = channel.instruments.length;\n            if (channelState.muted != channel.muted) {\n                channelState.muted = channel.muted;\n                if (channelState.muted) {\n                    for (const instrumentState of channelState.instruments) {\n                        instrumentState.resetAllEffects();\n                    }\n                }\n            }\n        }\n    }\n    initModFilters(song) {\n        if (song != null) {\n            song.tmpEqFilterStart = song.eqFilter;\n            song.tmpEqFilterEnd = null;\n            for (let channelIndex = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    instrument.tmpEqFilterStart = instrument.eqFilter;\n                    instrument.tmpEqFilterEnd = null;\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\n                    instrument.tmpNoteFilterEnd = null;\n                }\n            }\n        }\n    }\n    warmUpSynthesizer(song) {\n        if (song != null) {\n            this.syncSongState();\n            const samplesPerTick = this.getSamplesPerTick();\n            for (let channelIndex = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    const instrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    Synth.getInstrumentSynthFunction(instrument);\n                    instrumentState.vibratoTime = 0;\n                    instrumentState.nextVibratoTime = 0;\n                    for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++)\n                        instrumentState.envelopeTime[envelopeIndex] = 0;\n                    instrumentState.arpTime = 0;\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\n                }\n            }\n        }\n        var dummyArray = new Float32Array(1);\n        this.isPlayingSong = true;\n        this.synthesize(dummyArray, dummyArray, 1, true);\n        this.isPlayingSong = false;\n    }\n    computeLatestModValues() {\n        if (this.song != null && this.song.modChannelCount > 0) {\n            let latestModTimes = [];\n            let latestModInsTimes = [];\n            this.modValues = [];\n            this.nextModValues = [];\n            this.modInsValues = [];\n            this.nextModInsValues = [];\n            this.heldMods = [];\n            for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                latestModInsTimes[channel] = [];\n                this.modInsValues[channel] = [];\n                this.nextModInsValues[channel] = [];\n                for (let instrument = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\n                    this.modInsValues[channel][instrument] = [];\n                    this.nextModInsValues[channel][instrument] = [];\n                    latestModInsTimes[channel][instrument] = [];\n                }\n            }\n            let currentPart = this.beat * Config.partsPerBeat + this.part;\n            for (let channelIndex = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\n                if (!(this.song.channels[channelIndex].muted)) {\n                    let pattern;\n                    for (let currentBar = this.bar; currentBar >= 0; currentBar--) {\n                        pattern = this.song.getPattern(channelIndex, currentBar);\n                        if (pattern != null) {\n                            let instrumentIdx = pattern.instruments[0];\n                            let instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\n                            let latestPinParts = [];\n                            let latestPinValues = [];\n                            let partsInBar = (currentBar == this.bar)\n                                ? currentPart\n                                : this.findPartsInBar(currentBar);\n                            for (const note of pattern.notes) {\n                                if (note.start <= partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\n                                    if (note.start == partsInBar) {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.start;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[0].size;\n                                    }\n                                    if (note.end <= partsInBar) {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (let mod = 0; mod < Config.modCount; mod++) {\n                                if (latestPinParts[mod] != null) {\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\n                                        const songFilterParam = instrument.modulators[mod] == Config.modulators.dictionary[\"song eq\"].index;\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModTimes[instrument.modulators[mod]]) {\n                                            if (songFilterParam) {\n                                                let tgtSong = this.song;\n                                                if (instrument.modFilterTypes[mod] == 0) {\n                                                    tgtSong.tmpEqFilterStart = tgtSong.eqSubFilters[latestPinValues[mod]];\n                                                }\n                                                else {\n                                                    for (let i = 0; i < Config.filterMorphCount; i++) {\n                                                        if (tgtSong.tmpEqFilterStart != null && tgtSong.tmpEqFilterStart == tgtSong.eqSubFilters[i]) {\n                                                            tgtSong.tmpEqFilterStart = new FilterSettings();\n                                                            tgtSong.tmpEqFilterStart.fromJsonObject(tgtSong.eqSubFilters[i].toJsonObject());\n                                                            i = Config.filterMorphCount;\n                                                        }\n                                                    }\n                                                    if (tgtSong.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtSong.tmpEqFilterStart.controlPointCount) {\n                                                        if (instrument.modFilterTypes[mod] % 2)\n                                                            tgtSong.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                        else\n                                                            tgtSong.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                    }\n                                                }\n                                                tgtSong.tmpEqFilterEnd = tgtSong.tmpEqFilterStart;\n                                            }\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], instrument.modInstruments[mod], instrument.modulators[mod]);\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                        }\n                                    }\n                                    else {\n                                        let usedInstruments = [];\n                                        if (instrument.modInstruments[mod] == this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            for (let i = 0; i < this.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                                                usedInstruments.push(i);\n                                            }\n                                        }\n                                        else if (instrument.modInstruments[mod] > this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            const tgtPattern = this.song.getPattern(instrument.modChannels[mod], currentBar);\n                                            if (tgtPattern != null)\n                                                usedInstruments = tgtPattern.instruments;\n                                        }\n                                        else {\n                                            usedInstruments.push(instrument.modInstruments[mod]);\n                                        }\n                                        for (let instrumentIndex = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n                                            const eqFilterParam = instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index;\n                                            const noteFilterParam = instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index;\n                                            let modulatorAdjust = instrument.modulators[mod];\n                                            if (eqFilterParam) {\n                                                modulatorAdjust = Config.modulators.length + (instrument.modFilterTypes[mod] | 0);\n                                            }\n                                            else if (noteFilterParam) {\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + (instrument.modFilterTypes[mod] | 0);\n                                            }\n                                            if (latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust]) {\n                                                if (eqFilterParam) {\n                                                    let tgtInstrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpEqFilterStart = tgtInstrument.eqSubFilters[latestPinValues[mod]];\n                                                    }\n                                                    else {\n                                                        for (let i = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpEqFilterStart != null && tgtInstrument.tmpEqFilterStart == tgtInstrument.eqSubFilters[i]) {\n                                                                tgtInstrument.tmpEqFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpEqFilterStart.fromJsonObject(tgtInstrument.eqSubFilters[i].toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpEqFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpEqFilterEnd = tgtInstrument.tmpEqFilterStart;\n                                                }\n                                                else if (noteFilterParam) {\n                                                    let tgtInstrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\n                                                    }\n                                                    else {\n                                                        for (let i = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpNoteFilterStart != null && tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i].toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpNoteFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\n                                                }\n                                                else\n                                                    this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], usedInstruments[instrumentIndex], modulatorAdjust);\n                                                latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    determineInvalidModulators(instrument) {\n        if (this.song == null)\n            return;\n        for (let mod = 0; mod < Config.modCount; mod++) {\n            instrument.invalidModulators[mod] = true;\n            if (instrument.modChannels[mod] == -1) {\n                if (instrument.modulators[mod] != 0)\n                    instrument.invalidModulators[mod] = false;\n                continue;\n            }\n            const channel = this.song.channels[instrument.modChannels[mod]];\n            if (channel == null)\n                continue;\n            let tgtInstrumentList = [];\n            if (instrument.modInstruments[mod] >= channel.instruments.length) {\n                tgtInstrumentList = channel.instruments;\n            }\n            else {\n                tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod]]];\n            }\n            for (let i = 0; i < tgtInstrumentList.length; i++) {\n                const tgtInstrument = tgtInstrumentList[i];\n                if (tgtInstrument == null)\n                    continue;\n                const str = Config.modulators[instrument.modulators[mod]].name;\n                if (!((Config.modulators[instrument.modulators[mod]].associatedEffect != 15 && !(tgtInstrument.effects & (1 << Config.modulators[instrument.modulators[mod]].associatedEffect)))\n                    || ((tgtInstrument.type != 1 && tgtInstrument.type != 11) && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\n                    || tgtInstrument.type != 11 && (str == \"fm slider 5\" || str == \"fm slider 6\")\n                    || ((tgtInstrument.type != 6 && tgtInstrument.type != 8) && (str == \"pulse width\" || str == \"decimal offset\"))\n                    || ((tgtInstrument.type != 8) && (str == \"dynamism\" || str == \"spread\" || str == \"saw shape\"))\n                    || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\n                    || (tgtInstrument.eqFilterType && str == \"eq filter\")\n                    || (!tgtInstrument.eqFilterType && (str == \"eq filt cut\" || str == \"eq filt peak\"))\n                    || (str == \"eq filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(false))\n                    || (tgtInstrument.noteFilterType && str == \"note filter\")\n                    || (!tgtInstrument.noteFilterType && (str == \"note filt cut\" || str == \"note filt peak\"))\n                    || (str == \"note filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(true)))) {\n                    instrument.invalidModulators[mod] = false;\n                    i = tgtInstrumentList.length;\n                }\n            }\n        }\n    }\n    static operatorAmplitudeCurve(amplitude) {\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\n    }\n    get playing() {\n        return this.isPlayingSong;\n    }\n    get recording() {\n        return this.isRecording;\n    }\n    get playhead() {\n        return this.playheadInternal;\n    }\n    set playhead(value) {\n        if (this.song != null) {\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\n            let remainder = this.playheadInternal;\n            this.bar = Math.floor(remainder);\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\n            this.beat = Math.floor(remainder);\n            remainder = Config.partsPerBeat * (remainder - this.beat);\n            this.part = Math.floor(remainder);\n            remainder = Config.ticksPerPart * (remainder - this.part);\n            this.tick = Math.floor(remainder);\n            this.tickSampleCountdown = 0;\n            this.isAtStartOfTick = true;\n            this.prevBar = null;\n        }\n    }\n    getSamplesPerBar() {\n        if (this.song == null)\n            throw new Error();\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\n    }\n    getTicksIntoBar() {\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n    }\n    getCurrentPart() {\n        return (this.beat * Config.partsPerBeat + this.part);\n    }\n    findPartsInBar(bar) {\n        if (this.song == null)\n            return 0;\n        let partsInBar = Config.partsPerBeat * this.song.beatsPerBar;\n        for (let channel = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\n            let pattern = this.song.getPattern(channel, bar);\n            if (pattern != null) {\n                let instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                for (let mod = 0; mod < Config.modCount; mod++) {\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                        for (const note of pattern.notes) {\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                if (partsInBar > note.start)\n                                    partsInBar = note.start;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return partsInBar;\n    }\n    getTotalSamples(enableIntro, enableOutro, loop) {\n        if (this.song == null)\n            return -1;\n        let startBar = enableIntro ? 0 : this.song.loopStart;\n        let endBar = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\n        let hasTempoMods = false;\n        let hasNextBarMods = false;\n        let prevTempo = this.song.tempo;\n        for (let channel = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n            for (let bar = startBar; bar < endBar; bar++) {\n                let pattern = this.song.getPattern(channel, bar);\n                if (pattern != null) {\n                    let instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                    for (let mod = 0; mod < Config.modCount; mod++) {\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                            hasTempoMods = true;\n                        }\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                            hasNextBarMods = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (startBar > 0) {\n            let latestTempoPin = null;\n            let latestTempoValue = 0;\n            for (let bar = startBar - 1; bar >= 0; bar--) {\n                for (let channel = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                    let pattern = this.song.getPattern(channel, bar);\n                    if (pattern != null) {\n                        let instrumentIdx = pattern.instruments[0];\n                        let instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        let partsInBar = this.findPartsInBar(bar);\n                        for (const note of pattern.notes) {\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\n                                    if (note.end <= partsInBar) {\n                                        latestTempoPin = note.end;\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestTempoPin = partsInBar;\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (latestTempoPin != null) {\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                    bar = -1;\n                }\n            }\n        }\n        if (hasTempoMods || hasNextBarMods) {\n            let bar = startBar;\n            let ended = false;\n            let totalSamples = 0;\n            while (!ended) {\n                let partsInBar = Config.partsPerBeat * this.song.beatsPerBar;\n                let currentPart = 0;\n                if (hasNextBarMods) {\n                    partsInBar = this.findPartsInBar(bar);\n                }\n                if (hasTempoMods) {\n                    let foundMod = false;\n                    for (let channel = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                        if (foundMod == false) {\n                            let pattern = this.song.getPattern(channel, bar);\n                            if (pattern != null) {\n                                let instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                                for (let mod = 0; mod < Config.modCount; mod++) {\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\n                                        foundMod = true;\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n                                        for (const note of pattern.notes) {\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n                                                if (note.start < partsInBar) {\n                                                    for (let pinIdx = 1; pinIdx < note.pins.length; pinIdx++) {\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\n                                                            const tickLength = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\n                                                            const prevPinTempo = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            let currPinTempo = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            }\n                                                            let bpmScalar = Config.partsPerBeat * Config.ticksPerPart / 60;\n                                                            if (currPinTempo != prevPinTempo) {\n                                                                totalSamples += -this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\n                                                            }\n                                                            else {\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\n                                                            }\n                                                            prevTempo = currPinTempo;\n                                                        }\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n                bar++;\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\n                    bar = this.song.loopStart;\n                    if (loop > 0)\n                        loop--;\n                }\n                if (bar >= endBar) {\n                    ended = true;\n                }\n            }\n            return Math.ceil(totalSamples);\n        }\n        else {\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\n        }\n    }\n    getTotalBars(enableIntro, enableOutro, useLoopCount = this.loopRepeatCount) {\n        if (this.song == null)\n            throw new Error();\n        let bars = this.song.loopLength * (useLoopCount + 1);\n        if (enableIntro)\n            bars += this.song.loopStart;\n        if (enableOutro)\n            bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\n        return bars;\n    }\n    constructor(song = null) {\n        this.samplesPerSecond = 44100;\n        this.song = null;\n        this.preferLowerLatency = false;\n        this.anticipatePoorPerformance = false;\n        this.liveInputDuration = 0;\n        this.liveBassInputDuration = 0;\n        this.liveInputStarted = false;\n        this.liveBassInputStarted = false;\n        this.liveInputPitches = [];\n        this.liveBassInputPitches = [];\n        this.liveInputChannel = 0;\n        this.liveBassInputChannel = 0;\n        this.liveInputInstruments = [];\n        this.liveBassInputInstruments = [];\n        this.loopRepeatCount = -1;\n        this.volume = 1.0;\n        this.oscRefreshEventTimer = 0;\n        this.oscEnabled = true;\n        this.enableMetronome = false;\n        this.countInMetronome = false;\n        this.renderingSong = false;\n        this.heldMods = [];\n        this.wantToSkip = false;\n        this.playheadInternal = 0.0;\n        this.bar = 0;\n        this.prevBar = null;\n        this.nextBar = null;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.isAtStartOfTick = true;\n        this.isAtEndOfTick = true;\n        this.tickSampleCountdown = 0;\n        this.modValues = [];\n        this.modInsValues = [];\n        this.nextModValues = [];\n        this.nextModInsValues = [];\n        this.isPlayingSong = false;\n        this.isRecording = false;\n        this.liveInputEndTime = 0.0;\n        this.browserAutomaticallyClearsAudioBuffer = true;\n        this.tempDrumSetControlPoint = new FilterControlPoint();\n        this.tempFrequencyResponse = new FrequencyResponse();\n        this.loopBarStart = -1;\n        this.loopBarEnd = -1;\n        this.channels = [];\n        this.tonePool = new Deque();\n        this.tempMatchedPitchTones = Array(Config.maxChordSize).fill(null);\n        this.startedMetronome = false;\n        this.metronomeSamplesRemaining = -1;\n        this.metronomeAmplitude = 0.0;\n        this.metronomePrevAmplitude = 0.0;\n        this.metronomeFilter = 0.0;\n        this.limit = 0.0;\n        this.songEqFilterVolume = 1.0;\n        this.songEqFilterVolumeDelta = 0.0;\n        this.songEqFiltersL = [];\n        this.songEqFiltersR = [];\n        this.songEqFilterCount = 0;\n        this.initialSongEqFilterInput1L = 0.0;\n        this.initialSongEqFilterInput2L = 0.0;\n        this.initialSongEqFilterInput1R = 0.0;\n        this.initialSongEqFilterInput2R = 0.0;\n        this.tempMonoInstrumentSampleBuffer = null;\n        this.audioCtx = null;\n        this.scriptNode = null;\n        this.audioProcessCallback = (audioProcessingEvent) => {\n            const outputBuffer = audioProcessingEvent.outputBuffer;\n            const outputDataL = outputBuffer.getChannelData(0);\n            const outputDataR = outputBuffer.getChannelData(1);\n            if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\n                this.browserAutomaticallyClearsAudioBuffer = false;\n            }\n            if (!this.browserAutomaticallyClearsAudioBuffer) {\n                const length = outputBuffer.length;\n                for (let i = 0; i < length; i++) {\n                    outputDataL[i] = 0.0;\n                    outputDataR[i] = 0.0;\n                }\n            }\n            if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\n                this.deactivateAudio();\n            }\n            else {\n                this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\n                if (this.oscEnabled) {\n                    if (this.oscRefreshEventTimer <= 0) {\n                        events.raise(\"oscilloscopeUpdate\", outputDataL, outputDataR);\n                        this.oscRefreshEventTimer = 2;\n                    }\n                    else {\n                        this.oscRefreshEventTimer--;\n                    }\n                }\n            }\n        };\n        this.computeDelayBufferSizes();\n        if (song != null)\n            this.setSong(song);\n    }\n    setSong(song) {\n        if (typeof (song) == \"string\") {\n            this.song = new Song(song);\n        }\n        else if (song instanceof Song) {\n            this.song = song;\n        }\n        this.prevBar = null;\n    }\n    computeDelayBufferSizes() {\n        this.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\n        this.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\n    }\n    activateAudio() {\n        const bufferSize = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\n            if (this.scriptNode != null)\n                this.deactivateAudio();\n            const latencyHint = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\n            this.samplesPerSecond = this.audioCtx.sampleRate;\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2);\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\n            this.scriptNode.channelCountMode = 'explicit';\n            this.scriptNode.channelInterpretation = 'speakers';\n            this.scriptNode.connect(this.audioCtx.destination);\n            this.computeDelayBufferSizes();\n        }\n        this.audioCtx.resume();\n    }\n    deactivateAudio() {\n        if (this.audioCtx != null && this.scriptNode != null) {\n            this.scriptNode.disconnect(this.audioCtx.destination);\n            this.scriptNode = null;\n            if (this.audioCtx.close)\n                this.audioCtx.close();\n            this.audioCtx = null;\n        }\n    }\n    maintainLiveInput() {\n        this.activateAudio();\n        this.liveInputEndTime = performance.now() + 10000.0;\n    }\n    play() {\n        if (this.isPlayingSong)\n            return;\n        this.initModFilters(this.song);\n        this.computeLatestModValues();\n        this.activateAudio();\n        this.warmUpSynthesizer(this.song);\n        this.isPlayingSong = true;\n    }\n    pause() {\n        if (!this.isPlayingSong)\n            return;\n        this.isPlayingSong = false;\n        this.isRecording = false;\n        this.preferLowerLatency = false;\n        this.modValues = [];\n        this.nextModValues = [];\n        this.heldMods = [];\n        if (this.song != null) {\n            this.song.inVolumeCap = 0.0;\n            this.song.outVolumeCap = 0.0;\n            this.song.tmpEqFilterStart = null;\n            this.song.tmpEqFilterEnd = null;\n            for (let channelIndex = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                this.modInsValues[channelIndex] = [];\n                this.nextModInsValues[channelIndex] = [];\n            }\n        }\n    }\n    startRecording() {\n        this.preferLowerLatency = true;\n        this.isRecording = true;\n        this.play();\n    }\n    resetEffects() {\n        this.limit = 0.0;\n        this.freeAllTones();\n        if (this.song != null) {\n            for (const channelState of this.channels) {\n                for (const instrumentState of channelState.instruments) {\n                    instrumentState.resetAllEffects();\n                }\n            }\n        }\n    }\n    setModValue(volumeStart, volumeEnd, channelIndex, instrumentIndex, setting) {\n        let val = volumeStart + Config.modulators[setting].convertRealFactor;\n        let nextVal = volumeEnd + Config.modulators[setting].convertRealFactor;\n        if (Config.modulators[setting].forSong) {\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\n                this.modValues[setting] = val;\n                this.nextModValues[setting] = nextVal;\n            }\n        }\n        else {\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\n            }\n        }\n        return val;\n    }\n    getModValue(setting, channel, instrument, nextVal) {\n        const forSong = Config.modulators[setting].forSong;\n        if (forSong) {\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\n                return nextVal ? this.nextModValues[setting] : this.modValues[setting];\n            }\n        }\n        else if (channel != undefined && instrument != undefined) {\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                return nextVal ? this.nextModInsValues[channel][instrument][setting] : this.modInsValues[channel][instrument][setting];\n            }\n        }\n        return -1;\n    }\n    isAnyModActive(channel, instrument) {\n        for (let setting = 0; setting < Config.modulators.length; setting++) {\n            if ((this.modValues != undefined && this.modValues[setting] != null)\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    unsetMod(setting, channel, instrument) {\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\n            this.modValues[setting] = null;\n            this.nextModValues[setting] = null;\n            for (let i = 0; i < this.heldMods.length; i++) {\n                if (channel != undefined && instrument != undefined) {\n                    if (this.heldMods[i].channelIndex == channel && this.heldMods[i].instrumentIndex == instrument && this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                }\n                else {\n                    if (this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                }\n            }\n            if (channel != undefined && instrument != undefined) {\n                this.modInsValues[channel][instrument][setting] = null;\n                this.nextModInsValues[channel][instrument][setting] = null;\n            }\n        }\n    }\n    isFilterModActive(forNoteFilter, channelIdx, instrumentIdx, forSong) {\n        var _a;\n        const instrument = this.song.channels[channelIdx].instruments[instrumentIdx];\n        if (forNoteFilter) {\n            if (instrument.noteFilterType)\n                return false;\n            if (instrument.tmpNoteFilterEnd != null)\n                return true;\n        }\n        else {\n            if (forSong) {\n                if (((_a = this === null || this === void 0 ? void 0 : this.song) === null || _a === void 0 ? void 0 : _a.tmpEqFilterEnd) != null)\n                    return true;\n            }\n            else {\n                if (instrument.eqFilterType)\n                    return false;\n                if (instrument.tmpEqFilterEnd != null)\n                    return true;\n            }\n        }\n        return false;\n    }\n    isModActive(setting, channel, instrument) {\n        const forSong = Config.modulators[setting].forSong;\n        if (forSong) {\n            return (this.modValues != undefined && this.modValues[setting] != null);\n        }\n        else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\n            return (this.modInsValues[channel][instrument][setting] != null);\n        }\n        return false;\n    }\n    forceHoldMods(volumeStart, channelIndex, instrumentIndex, setting) {\n        let found = false;\n        for (let i = 0; i < this.heldMods.length; i++) {\n            if (this.heldMods[i].channelIndex == channelIndex && this.heldMods[i].instrumentIndex == instrumentIndex && this.heldMods[i].setting == setting) {\n                this.heldMods[i].volume = volumeStart;\n                this.heldMods[i].holdFor = 24;\n                found = true;\n            }\n        }\n        if (!found)\n            this.heldMods.push({ volume: volumeStart, channelIndex: channelIndex, instrumentIndex: instrumentIndex, setting: setting, holdFor: 24 });\n    }\n    snapToStart() {\n        this.bar = 0;\n        this.resetEffects();\n        this.snapToBar();\n    }\n    goToBar(bar) {\n        this.bar = bar;\n        this.resetEffects();\n        this.playheadInternal = this.bar;\n    }\n    snapToBar() {\n        this.playheadInternal = this.bar;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = 0;\n    }\n    jumpIntoLoop() {\n        if (!this.song)\n            return;\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\n            const oldBar = this.bar;\n            this.bar = this.song.loopStart;\n            this.playheadInternal += this.bar - oldBar;\n            if (this.playing)\n                this.computeLatestModValues();\n        }\n    }\n    goToNextBar() {\n        if (!this.song)\n            return;\n        this.prevBar = this.bar;\n        const oldBar = this.bar;\n        this.bar++;\n        if (this.bar >= this.song.barCount) {\n            this.bar = 0;\n        }\n        this.playheadInternal += this.bar - oldBar;\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n    goToPrevBar() {\n        if (!this.song)\n            return;\n        this.prevBar = null;\n        const oldBar = this.bar;\n        this.bar--;\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\n            this.bar = this.song.barCount - 1;\n        }\n        this.playheadInternal += this.bar - oldBar;\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n    getNextBar() {\n        let nextBar = this.bar + 1;\n        if (this.isRecording) {\n            if (nextBar >= this.song.barCount) {\n                nextBar = this.song.barCount - 1;\n            }\n        }\n        else if (this.bar == this.loopBarEnd && !this.renderingSong) {\n            nextBar = this.loopBarStart;\n        }\n        else if (this.loopRepeatCount != 0 && nextBar == Math.max(this.loopBarEnd + 1, this.song.loopStart + this.song.loopLength)) {\n            nextBar = this.song.loopStart;\n        }\n        return nextBar;\n    }\n    skipBar() {\n        if (!this.song)\n            return;\n        const samplesPerTick = this.getSamplesPerTick();\n        this.prevBar = this.bar;\n        if (this.loopBarEnd != this.bar)\n            this.bar++;\n        else {\n            this.bar = this.loopBarStart;\n        }\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = samplesPerTick;\n        this.isAtStartOfTick = true;\n        if (this.loopRepeatCount != 0 && this.bar == Math.max(this.song.loopStart + this.song.loopLength, this.loopBarEnd)) {\n            this.bar = this.song.loopStart;\n            if (this.loopBarStart != -1)\n                this.bar = this.loopBarStart;\n            if (this.loopRepeatCount > 0)\n                this.loopRepeatCount--;\n        }\n    }\n    computeSongState(samplesPerTick) {\n        if (this.song == null)\n            return;\n        const roundedSamplesPerTick = Math.ceil(samplesPerTick);\n        const samplesPerSecond = this.samplesPerSecond;\n        let eqFilterVolume = 1.0;\n        if (this.song.eqFilterType) {\n            const eqFilterSettingsStart = this.song.eqFilter;\n            if (this.song.eqSubFilters[1] == null)\n                this.song.eqSubFilters[1] = new FilterSettings();\n            const eqFilterSettingsEnd = this.song.eqSubFilters[1];\n            let startSimpleFreq = this.song.eqFilterSimpleCut;\n            let startSimpleGain = this.song.eqFilterSimplePeak;\n            let endSimpleFreq = this.song.eqFilterSimpleCut;\n            let endSimpleGain = this.song.eqFilterSimplePeak;\n            let filterChanges = false;\n            let startPoint;\n            if (filterChanges) {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                let endPoint = eqFilterSettingsEnd.controlPoints[0];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.songEqFiltersL.length < 1)\n                    this.songEqFiltersL[0] = new DynamicBiquadFilter();\n                this.songEqFiltersL[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                if (this.songEqFiltersR.length < 1)\n                    this.songEqFiltersR[0] = new DynamicBiquadFilter();\n                this.songEqFiltersR[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            }\n            else {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.songEqFiltersL.length < 1)\n                    this.songEqFiltersL[0] = new DynamicBiquadFilter();\n                this.songEqFiltersL[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                if (this.songEqFiltersR.length < 1)\n                    this.songEqFiltersR[0] = new DynamicBiquadFilter();\n                this.songEqFiltersR[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            }\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            this.songEqFilterCount = 1;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        else {\n            const eqFilterSettings = (this.song.tmpEqFilterStart != null) ? this.song.tmpEqFilterStart : this.song.eqFilter;\n            for (let i = 0; i < eqFilterSettings.controlPointCount; i++) {\n                let startPoint = eqFilterSettings.controlPoints[i];\n                let endPoint = (this.song.tmpEqFilterEnd != null && this.song.tmpEqFilterEnd.controlPoints[i] != null) ? this.song.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\n                if (startPoint.type != endPoint.type) {\n                    startPoint = endPoint;\n                }\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.songEqFiltersL.length <= i)\n                    this.songEqFiltersL[i] = new DynamicBiquadFilter();\n                this.songEqFiltersL[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                if (this.songEqFiltersR.length <= i)\n                    this.songEqFiltersR[i] = new DynamicBiquadFilter();\n                this.songEqFiltersR[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            }\n            this.songEqFilterCount = eqFilterSettings.controlPointCount;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        let eqFilterVolumeStart = eqFilterVolume;\n        let eqFilterVolumeEnd = eqFilterVolume;\n        this.songEqFilterVolume = eqFilterVolumeStart;\n        this.songEqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n    }\n    synthesize(outputDataL, outputDataR, outputBufferLength, playSong = true) {\n        if (this.song == null) {\n            for (let i = 0; i < outputBufferLength; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n            this.deactivateAudio();\n            return;\n        }\n        const outputDataLUnfiltered = outputDataL.slice();\n        const outputDataRUnfiltered = outputDataR.slice();\n        const song = this.song;\n        this.song.inVolumeCap = 0.0;\n        this.song.outVolumeCap = 0.0;\n        let samplesPerTick = this.getSamplesPerTick();\n        let ended = false;\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\n            this.tickSampleCountdown = samplesPerTick;\n            this.isAtStartOfTick = true;\n        }\n        if (playSong) {\n            if (this.beat >= song.beatsPerBar) {\n                this.beat = 0;\n                this.part = 0;\n                this.tick = 0;\n                this.tickSampleCountdown = samplesPerTick;\n                this.isAtStartOfTick = true;\n                this.prevBar = this.bar;\n                this.bar = this.getNextBar();\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0)\n                    this.loopRepeatCount--;\n            }\n            if (this.bar >= song.barCount) {\n                this.bar = 0;\n                if (this.loopRepeatCount != -1) {\n                    ended = true;\n                    this.pause();\n                }\n            }\n        }\n        this.syncSongState();\n        if (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\n            this.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\n        }\n        const volume = +this.volume;\n        const limitDecay = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond);\n        const limitRise = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond);\n        let limit = +this.limit;\n        let skippedBars = [];\n        let firstSkippedBufferIndex = -1;\n        let bufferIndex = 0;\n        while (bufferIndex < outputBufferLength && !ended) {\n            this.nextBar = this.getNextBar();\n            if (this.nextBar >= song.barCount)\n                this.nextBar = null;\n            const samplesLeftInBuffer = outputBufferLength - bufferIndex;\n            const samplesLeftInTick = Math.ceil(this.tickSampleCountdown);\n            const runLength = Math.min(samplesLeftInTick, samplesLeftInBuffer);\n            const runEnd = bufferIndex + runLength;\n            if (this.isPlayingSong || this.renderingSong) {\n                for (let channelIndex = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel = song.channels[channelIndex];\n                    const channelState = this.channels[channelIndex];\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\n                    for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState = channelState.instruments[instrumentIndex];\n                        for (let i = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone = instrumentState.activeModTones.get(i);\n                            const channel = song.channels[channelIndex];\n                            const instrument = channel.instruments[tone.instrumentIndex];\n                            let mod = Config.modCount - 1 - tone.pitches[0];\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"song eq\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n                                continue;\n                            }\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                        }\n                    }\n                }\n                for (let channelIndex = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel = song.channels[channelIndex];\n                    const channelState = this.channels[channelIndex];\n                    for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState = channelState.instruments[instrumentIndex];\n                        for (let i = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone = instrumentState.activeModTones.get(i);\n                            const channel = song.channels[channelIndex];\n                            const instrument = channel.instruments[tone.instrumentIndex];\n                            let mod = Config.modCount - 1 - tone.pitches[0];\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"song eq\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n                                this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.wantToSkip) {\n                let barVisited = skippedBars.includes(this.bar);\n                if (barVisited && bufferIndex == firstSkippedBufferIndex) {\n                    this.pause();\n                    return;\n                }\n                if (firstSkippedBufferIndex == -1) {\n                    firstSkippedBufferIndex = bufferIndex;\n                }\n                if (!barVisited)\n                    skippedBars.push(this.bar);\n                this.wantToSkip = false;\n                this.skipBar();\n                continue;\n            }\n            this.computeSongState(samplesPerTick);\n            for (let channelIndex = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\n                const channel = song.channels[channelIndex];\n                const channelState = this.channels[channelIndex];\n                if (this.isAtStartOfTick) {\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\n                }\n                for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                    const instrument = channel.instruments[instrumentIndex];\n                    const instrumentState = channelState.instruments[instrumentIndex];\n                    if (this.isAtStartOfTick) {\n                        let tonesPlayedInThisInstrument = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\n                        for (let i = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone = instrumentState.releasedTones.get(i);\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                                continue;\n                            }\n                            const shouldFadeOutFast = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\n                            tonesPlayedInThisInstrument++;\n                        }\n                        if (instrumentState.awake) {\n                            if (!instrumentState.computed) {\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\n                            }\n                            instrumentState.computed = false;\n                            instrumentState.envelopeComputer.clearEnvelopes();\n                        }\n                    }\n                    for (let i = 0; i < instrumentState.activeTones.count(); i++) {\n                        const tone = instrumentState.activeTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n                    for (let i = 0; i < instrumentState.liveInputTones.count(); i++) {\n                        const tone = instrumentState.liveInputTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n                    for (let i = 0; i < instrumentState.releasedTones.count(); i++) {\n                        const tone = instrumentState.releasedTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n                    if (instrumentState.awake) {\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n                    }\n                    const tickSampleCountdown = this.tickSampleCountdown;\n                    const startRatio = 1.0 - (tickSampleCountdown) / samplesPerTick;\n                    const endRatio = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\n                    const ticksIntoBar = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n                    const partTimeTickStart = (ticksIntoBar) / Config.ticksPerPart;\n                    const partTimeTickEnd = (ticksIntoBar + 1) / Config.ticksPerPart;\n                    const partTimeStart = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n                    const partTimeEnd = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n                    let useVibratoSpeed = instrument.vibratoSpeed;\n                    instrumentState.vibratoTime = instrumentState.nextVibratoTime;\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\n                    }\n                    if (useVibratoSpeed == 0) {\n                        instrumentState.vibratoTime = 0;\n                        instrumentState.nextVibratoTime = 0;\n                    }\n                    else {\n                        instrumentState.nextVibratoTime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\n                    }\n                }\n            }\n            if (this.enableMetronome || this.countInMetronome) {\n                if (this.part == 0) {\n                    if (!this.startedMetronome) {\n                        const midBeat = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\n                        const periods = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\n                        const hz = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\n                        const amplitude = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\n                        const samplesPerPeriod = this.samplesPerSecond / hz;\n                        const radiansPerSample = Math.PI * 2.0 / samplesPerPeriod;\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\n                        this.metronomePrevAmplitude = 0.0;\n                        this.startedMetronome = true;\n                    }\n                    if (this.metronomeSamplesRemaining > 0) {\n                        const stopIndex = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\n                        for (let i = bufferIndex; i < stopIndex; i++) {\n                            outputDataLUnfiltered[i] += this.metronomeAmplitude;\n                            outputDataRUnfiltered[i] += this.metronomeAmplitude;\n                            const tempAmplitude = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\n                            this.metronomeAmplitude = tempAmplitude;\n                        }\n                    }\n                }\n                else {\n                    this.startedMetronome = false;\n                }\n            }\n            for (let i = bufferIndex; i < runEnd; i++) {\n                {\n                    let filtersL = this.songEqFiltersL;\n                    let filtersR = this.songEqFiltersR;\n                    const filterCount = this.songEqFilterCount | 0;\n                    let initialFilterInput1L = +this.initialSongEqFilterInput1L;\n                    let initialFilterInput2L = +this.initialSongEqFilterInput2L;\n                    let initialFilterInput1R = +this.initialSongEqFilterInput1R;\n                    let initialFilterInput2R = +this.initialSongEqFilterInput2R;\n                    const applyFilters = Synth.applyFilters;\n                    let eqFilterVolume = +this.songEqFilterVolume;\n                    const eqFilterVolumeDelta = +this.songEqFilterVolumeDelta;\n                    const inputSampleL = outputDataL[i];\n                    let sampleL = inputSampleL;\n                    sampleL = applyFilters(sampleL, initialFilterInput1L, initialFilterInput2L, filterCount, filtersL);\n                    initialFilterInput2L = initialFilterInput1L;\n                    initialFilterInput1L = inputSampleL;\n                    sampleL *= eqFilterVolume;\n                    outputDataL[i] = sampleL;\n                    const inputSampleR = outputDataR[i];\n                    let sampleR = inputSampleR;\n                    sampleR = applyFilters(sampleR, initialFilterInput1R, initialFilterInput2R, filterCount, filtersR);\n                    initialFilterInput2R = initialFilterInput1R;\n                    initialFilterInput1R = inputSampleR;\n                    sampleR *= eqFilterVolume;\n                    outputDataR[i] = sampleR;\n                    eqFilterVolume += eqFilterVolumeDelta;\n                    this.sanitizeFilters(filtersL);\n                    if (!(initialFilterInput1L < 100) || !(initialFilterInput2L < 100)) {\n                        initialFilterInput1L = 0.0;\n                        initialFilterInput2L = 0.0;\n                    }\n                    if (Math.abs(initialFilterInput1L) < epsilon)\n                        initialFilterInput1L = 0.0;\n                    if (Math.abs(initialFilterInput2L) < epsilon)\n                        initialFilterInput2L = 0.0;\n                    this.initialSongEqFilterInput1L = initialFilterInput1L;\n                    this.initialSongEqFilterInput2L = initialFilterInput2L;\n                    this.sanitizeFilters(filtersR);\n                    if (!(initialFilterInput1R < 100) || !(initialFilterInput2R < 100)) {\n                        initialFilterInput1R = 0.0;\n                        initialFilterInput2R = 0.0;\n                    }\n                    if (Math.abs(initialFilterInput1R) < epsilon)\n                        initialFilterInput1R = 0.0;\n                    if (Math.abs(initialFilterInput2R) < epsilon)\n                        initialFilterInput2R = 0.0;\n                    this.initialSongEqFilterInput1R = initialFilterInput1R;\n                    this.initialSongEqFilterInput2R = initialFilterInput2R;\n                }\n                const sampleL = (outputDataL[i] + outputDataLUnfiltered[i]) * song.masterGain * song.masterGain;\n                const sampleR = (outputDataR[i] + outputDataRUnfiltered[i]) * song.masterGain * song.masterGain;\n                const absL = sampleL < 0.0 ? -sampleL : sampleL;\n                const absR = sampleR < 0.0 ? -sampleR : sampleR;\n                const abs = absL > absR ? absL : absR;\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs);\n                const limitRange = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\n                const limitTarget = (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\n                    + (+(limitRange == 1)) * (1.05)\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\n                outputDataL[i] = sampleL * limitedVolume;\n                outputDataR[i] = sampleR * limitedVolume;\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume);\n            }\n            bufferIndex += runLength;\n            this.isAtStartOfTick = false;\n            this.tickSampleCountdown -= runLength;\n            if (this.tickSampleCountdown <= 0) {\n                this.isAtStartOfTick = true;\n                for (const channelState of this.channels) {\n                    for (const instrumentState of channelState.instruments) {\n                        for (let i = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone = instrumentState.releasedTones.get(i);\n                            if (tone.isOnLastTick) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                            }\n                            else {\n                                tone.ticksSinceReleased++;\n                            }\n                        }\n                        if (instrumentState.deactivateAfterThisTick) {\n                            instrumentState.deactivate();\n                        }\n                        instrumentState.tonesAddedInThisTick = false;\n                    }\n                }\n                const ticksIntoBar = this.getTicksIntoBar();\n                const tickTimeStart = ticksIntoBar;\n                const secondsPerTick = samplesPerTick / this.samplesPerSecond;\n                const currentPart = this.getCurrentPart();\n                for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        let instrumentState = this.channels[channel].instruments[instrumentIdx];\n                        const envelopeComputer = instrumentState.envelopeComputer;\n                        const envelopeSpeeds = [];\n                        for (let i = 0; i < Config.maxEnvelopeCount; i++) {\n                            envelopeSpeeds[i] = 0;\n                        }\n                        for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                            let useEnvelopeSpeed = instrument.envelopeSpeed;\n                            let perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n                            if (this.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channel, instrumentIdx) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed;\n                            }\n                            if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx)) {\n                                useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx, false)));\n                                if (Number.isInteger(useEnvelopeSpeed)) {\n                                    instrumentState.envelopeTime[envelopeIndex] += Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                                }\n                                else {\n                                    instrumentState.envelopeTime[envelopeIndex] += ((1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)]) * perEnvelopeSpeed;\n                                }\n                            }\n                            else {\n                                instrumentState.envelopeTime[envelopeIndex] += Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                            }\n                        }\n                        if (instrumentState.activeTones.count() > 0) {\n                            const tone = instrumentState.activeTones.get(0);\n                            envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, tickTimeStart, secondsPerTick, tone, envelopeSpeeds, instrumentState, this, channel, instrumentIdx);\n                        }\n                        const envelopeStarts = envelopeComputer.envelopeStarts;\n                        const arpEnvelopeStart = envelopeStarts[48];\n                        let useArpeggioSpeed = instrument.arpeggioSpeed;\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\n                            useArpeggioSpeed = clamp(0, Config.arpSpeedScale.length, arpEnvelopeStart * this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false));\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            }\n                            else {\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        else {\n                            useArpeggioSpeed = clamp(0, Config.arpSpeedScale.length, arpEnvelopeStart * useArpeggioSpeed);\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            }\n                            else {\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        envelopeComputer.clearEnvelopes();\n                    }\n                }\n                for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        if (instrument.tmpEqFilterEnd != null) {\n                            instrument.tmpEqFilterStart = instrument.tmpEqFilterEnd;\n                        }\n                        else {\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\n                        }\n                        if (instrument.tmpNoteFilterEnd != null) {\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\n                        }\n                        else {\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\n                        }\n                    }\n                }\n                if (song.tmpEqFilterEnd != null) {\n                    song.tmpEqFilterStart = song.tmpEqFilterEnd;\n                }\n                else {\n                    song.tmpEqFilterStart = song.eqFilter;\n                }\n                this.tick++;\n                this.tickSampleCountdown += samplesPerTick;\n                if (this.tick == Config.ticksPerPart) {\n                    this.tick = 0;\n                    this.part++;\n                    this.liveInputDuration--;\n                    this.liveBassInputDuration--;\n                    for (let i = 0; i < this.heldMods.length; i++) {\n                        this.heldMods[i].holdFor--;\n                        if (this.heldMods[i].holdFor <= 0) {\n                            this.heldMods.splice(i, 1);\n                        }\n                    }\n                    if (this.part == Config.partsPerBeat) {\n                        this.part = 0;\n                        if (playSong) {\n                            this.beat++;\n                            if (this.beat == song.beatsPerBar) {\n                                this.beat = 0;\n                                if (this.countInMetronome) {\n                                    this.countInMetronome = false;\n                                }\n                                else {\n                                    this.prevBar = this.bar;\n                                    this.bar = this.getNextBar();\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0)\n                                        this.loopRepeatCount--;\n                                    if (this.bar >= song.barCount) {\n                                        this.bar = 0;\n                                        if (this.loopRepeatCount != -1) {\n                                            ended = true;\n                                            this.resetEffects();\n                                            this.pause();\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            for (let setting = 0; setting < Config.modulators.length; setting++) {\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\n                    this.modValues[setting] = this.nextModValues[setting];\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n                samplesPerTick = this.getSamplesPerTick();\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\n            }\n            for (let channelIndex = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    const instrument = this.song.channels[channelIndex].instruments[instrumentIndex];\n                    instrumentState.nextVibratoTime = (instrumentState.nextVibratoTime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\n                    instrumentState.arpTime = (instrumentState.arpTime % (2520 * Config.ticksPerArpeggio));\n                    for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                        instrumentState.envelopeTime[envelopeIndex] = (instrumentState.envelopeTime[envelopeIndex] % (Config.partsPerBeat * Config.ticksPerPart * this.song.beatsPerBar));\n                    }\n                }\n            }\n            const maxInstrumentsPerChannel = this.song.getMaxInstrumentsPerChannel();\n            for (let setting = 0; setting < Config.modulators.length; setting++) {\n                for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrument = 0; instrument < maxInstrumentsPerChannel; instrument++) {\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\n                        }\n                    }\n                }\n            }\n        }\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon)\n            limit = 0.0;\n        this.limit = limit;\n        if (playSong && !this.countInMetronome) {\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\n        }\n    }\n    freeTone(tone) {\n        this.tonePool.pushBack(tone);\n    }\n    newTone() {\n        if (this.tonePool.count() > 0) {\n            const tone = this.tonePool.popBack();\n            tone.freshlyAllocated = true;\n            return tone;\n        }\n        return new Tone();\n    }\n    releaseTone(instrumentState, tone) {\n        instrumentState.releasedTones.pushFront(tone);\n        tone.atNoteStart = false;\n        tone.passedEndOfNote = true;\n    }\n    freeReleasedTone(instrumentState, toneIndex) {\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\n        instrumentState.releasedTones.remove(toneIndex);\n    }\n    freeAllTones() {\n        for (const channelState of this.channels) {\n            for (const instrumentState of channelState.instruments) {\n                while (instrumentState.activeTones.count() > 0)\n                    this.freeTone(instrumentState.activeTones.popBack());\n                while (instrumentState.activeModTones.count() > 0)\n                    this.freeTone(instrumentState.activeModTones.popBack());\n                while (instrumentState.releasedTones.count() > 0)\n                    this.freeTone(instrumentState.releasedTones.popBack());\n                while (instrumentState.liveInputTones.count() > 0)\n                    this.freeTone(instrumentState.liveInputTones.popBack());\n            }\n        }\n    }\n    determineLiveInputTones(song, channelIndex, samplesPerTick) {\n        const channel = song.channels[channelIndex];\n        const channelState = this.channels[channelIndex];\n        const pitches = this.liveInputPitches;\n        const bassPitches = this.liveBassInputPitches;\n        if (this.liveInputPitches.length > 0 || this.liveBassInputPitches.length > 0) {\n            this.computeLatestModValues();\n        }\n        for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n            const instrumentState = channelState.instruments[instrumentIndex];\n            const toneList = instrumentState.liveInputTones;\n            let toneCount = 0;\n            if (this.liveInputDuration > 0 && (channelIndex == this.liveInputChannel) && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument = channel.instruments[instrumentIndex];\n                if (instrument.getChord().singleTone) {\n                    let tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    }\n                    else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    }\n                    else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n                    for (let i = 0; i < pitches.length; i++) {\n                        tone.pitches[i] = pitches[i];\n                    }\n                    tone.pitchCount = pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                }\n                else {\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, pitches);\n                    for (let i = 0; i < pitches.length; i++) {\n                        let tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount];\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != pitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        }\n                        else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n                        tone.pitches[0] = pitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = pitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n            if (this.liveBassInputDuration > 0 && (channelIndex == this.liveBassInputChannel) && bassPitches.length > 0 && this.liveBassInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument = channel.instruments[instrumentIndex];\n                if (instrument.getChord().singleTone) {\n                    let tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    }\n                    else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    }\n                    else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n                    for (let i = 0; i < bassPitches.length; i++) {\n                        tone.pitches[i] = bassPitches[i];\n                    }\n                    tone.pitchCount = bassPitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveBassInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                }\n                else {\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, bassPitches);\n                    for (let i = 0; i < bassPitches.length; i++) {\n                        let tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount];\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != bassPitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        }\n                        else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n                        tone.pitches[0] = bassPitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = bassPitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveBassInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n            while (toneList.count() > toneCount) {\n                this.releaseTone(instrumentState, toneList.popBack());\n            }\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\n        }\n        this.liveInputStarted = false;\n        this.liveBassInputStarted = false;\n    }\n    adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern, otherPattern, instrumentIndex, transition, chord, note, otherNote, forceContinue) {\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\n                return null;\n            }\n            const otherInstrument = channel.instruments[otherPattern.instruments[0]];\n            if (forceContinue) {\n                return otherInstrument.getChord();\n            }\n            const otherTransition = otherInstrument.getTransition();\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\n                return otherInstrument.getChord();\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\n        }\n    }\n    static adjacentNotesHaveMatchingPitches(firstNote, secondNote) {\n        if (firstNote.pitches.length != secondNote.pitches.length)\n            return false;\n        const firstNoteInterval = firstNote.pins[firstNote.pins.length - 1].interval;\n        for (const pitch of firstNote.pitches) {\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1)\n                return false;\n        }\n        return true;\n    }\n    moveTonesIntoOrderedTempMatchedList(toneList, notePitches) {\n        for (let i = 0; i < toneList.count(); i++) {\n            const tone = toneList.get(i);\n            const pitch = tone.pitches[0] + tone.lastInterval;\n            for (let j = 0; j < notePitches.length; j++) {\n                if (notePitches[j] == pitch) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    toneList.remove(i);\n                    i--;\n                    break;\n                }\n            }\n        }\n        while (toneList.count() > 0) {\n            const tone = toneList.popFront();\n            for (let j = 0; j < this.tempMatchedPitchTones.length; j++) {\n                if (this.tempMatchedPitchTones[j] == null) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    break;\n                }\n            }\n        }\n    }\n    determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong) {\n        const channel = song.channels[channelIndex];\n        const channelState = this.channels[channelIndex];\n        const pattern = song.getPattern(channelIndex, this.bar);\n        const currentPart = this.getCurrentPart();\n        const currentTick = this.tick + Config.ticksPerPart * currentPart;\n        if (playSong && song.getChannelIsMod(channelIndex)) {\n            let notes = [];\n            let prevNotes = [];\n            let nextNotes = [];\n            let fillCount = Config.modCount;\n            while (fillCount--) {\n                notes.push(null);\n                prevNotes.push(null);\n                nextNotes.push(null);\n            }\n            if (pattern != null && !channel.muted) {\n                for (let i = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > prevNotes[pattern.notes[i].pitches[0]].start) {\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start > currentPart) {\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < nextNotes[pattern.notes[i].pitches[0]].start) {\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                }\n            }\n            let modToneCount = 0;\n            const newInstrumentIndex = (song.patternInstruments && (pattern != null)) ? pattern.instruments[0] : 0;\n            const instrumentState = channelState.instruments[newInstrumentIndex];\n            const toneList = instrumentState.activeModTones;\n            for (let mod = 0; mod < Config.modCount; mod++) {\n                if (notes[mod] != null) {\n                    if (prevNotes[mod] != null && prevNotes[mod].end != notes[mod].start)\n                        prevNotes[mod] = null;\n                    if (nextNotes[mod] != null && nextNotes[mod].start != notes[mod].end)\n                        nextNotes[mod] = null;\n                }\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n                if (notes[mod] != null) {\n                    let prevNoteForThisInstrument = prevNotes[mod];\n                    let nextNoteForThisInstrument = nextNotes[mod];\n                    let forceContinueAtStart = false;\n                    let forceContinueAtEnd = false;\n                    const atNoteStart = (Config.ticksPerPart * notes[mod].start == currentTick) && this.isAtStartOfTick;\n                    let tone;\n                    if (toneList.count() <= modToneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    }\n                    else if (atNoteStart && (prevNoteForThisInstrument == null)) {\n                        const oldTone = toneList.get(modToneCount);\n                        if (oldTone.isOnLastTick) {\n                            this.freeTone(oldTone);\n                        }\n                        else {\n                            this.releaseTone(instrumentState, oldTone);\n                        }\n                        tone = this.newTone();\n                        toneList.set(modToneCount, tone);\n                    }\n                    else {\n                        tone = toneList.get(modToneCount);\n                    }\n                    modToneCount++;\n                    for (let i = 0; i < notes[mod].pitches.length; i++) {\n                        tone.pitches[i] = notes[mod].pitches[i];\n                    }\n                    tone.pitchCount = notes[mod].pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = newInstrumentIndex;\n                    tone.note = notes[mod];\n                    tone.noteStartPart = notes[mod].start;\n                    tone.noteEndPart = notes[mod].end;\n                    tone.prevNote = prevNoteForThisInstrument;\n                    tone.nextNote = nextNoteForThisInstrument;\n                    tone.prevNotePitchIndex = 0;\n                    tone.nextNotePitchIndex = 0;\n                    tone.atNoteStart = atNoteStart;\n                    tone.passedEndOfNote = false;\n                    tone.forceContinueAtStart = forceContinueAtStart;\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\n                }\n            }\n            while (toneList.count() > modToneCount) {\n                const tone = toneList.popBack();\n                const channel = song.channels[channelIndex];\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                    const instrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\n                    this.releaseTone(instrumentState, tone);\n                }\n                else {\n                    this.freeTone(tone);\n                }\n            }\n        }\n        else if (!song.getChannelIsMod(channelIndex)) {\n            let note = null;\n            let prevNote = null;\n            let nextNote = null;\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\n                for (let i = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        prevNote = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        note = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start > currentPart) {\n                        nextNote = pattern.notes[i];\n                        break;\n                    }\n                }\n                if (note != null) {\n                    if (prevNote != null && prevNote.end != note.start)\n                        prevNote = null;\n                    if (nextNote != null && nextNote.start != note.end)\n                        nextNote = null;\n                }\n            }\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\n                const newInstrumentIndex = song.patternInstruments ? pattern.instruments[0] : 0;\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeTones.count() > 0) {\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n            }\n            else {\n                channelState.singleSeamlessInstrument = null;\n            }\n            for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                const instrumentState = channelState.instruments[instrumentIndex];\n                const toneList = instrumentState.activeTones;\n                let toneCount = 0;\n                if ((note != null) && (!song.patternInstruments || (pattern.instruments.indexOf(instrumentIndex) != -1))) {\n                    const instrument = channel.instruments[instrumentIndex];\n                    let prevNoteForThisInstrument = prevNote;\n                    let nextNoteForThisInstrument = nextNote;\n                    const partsPerBar = Config.partsPerBeat * song.beatsPerBar;\n                    const transition = instrument.getTransition();\n                    const chord = instrument.getChord();\n                    let forceContinueAtStart = false;\n                    let forceContinueAtEnd = false;\n                    let tonesInPrevNote = 0;\n                    let tonesInNextNote = 0;\n                    if (note.start == 0) {\n                        let prevPattern = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\n                        if (prevPattern != null) {\n                            const lastNote = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\n                            if (lastNote != null && lastNote.end == partsPerBar) {\n                                const patternForcesContinueAtStart = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\n                                const chordOfCompatibleInstrument = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    prevNoteForThisInstrument = lastNote;\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevNoteForThisInstrument.pitches.length;\n                                    forceContinueAtStart = patternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    }\n                    else if (prevNoteForThisInstrument != null) {\n                        tonesInPrevNote = chord.singleTone ? 1 : prevNoteForThisInstrument.pitches.length;\n                    }\n                    if (note.end == partsPerBar) {\n                        let nextPattern = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\n                        if (nextPattern != null) {\n                            const firstNote = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\n                            if (firstNote != null && firstNote.start == 0) {\n                                const nextPatternForcesContinueAtStart = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\n                                const chordOfCompatibleInstrument = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    nextNoteForThisInstrument = firstNote;\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextNoteForThisInstrument.pitches.length;\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    }\n                    else if (nextNoteForThisInstrument != null) {\n                        tonesInNextNote = chord.singleTone ? 1 : nextNoteForThisInstrument.pitches.length;\n                    }\n                    if (chord.singleTone) {\n                        const atNoteStart = (Config.ticksPerPart * note.start == currentTick);\n                        let tone;\n                        if (toneList.count() <= toneCount) {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\n                            const oldTone = toneList.get(toneCount);\n                            if (oldTone.isOnLastTick) {\n                                this.freeTone(oldTone);\n                            }\n                            else {\n                                this.releaseTone(instrumentState, oldTone);\n                            }\n                            tone = this.newTone();\n                            toneList.set(toneCount, tone);\n                        }\n                        else {\n                            tone = toneList.get(toneCount);\n                        }\n                        toneCount++;\n                        for (let i = 0; i < note.pitches.length; i++) {\n                            tone.pitches[i] = note.pitches[i];\n                        }\n                        tone.pitchCount = note.pitches.length;\n                        tone.chordSize = 1;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = note;\n                        tone.noteStartPart = note.start;\n                        tone.noteEndPart = note.end;\n                        tone.prevNote = prevNoteForThisInstrument;\n                        tone.nextNote = nextNoteForThisInstrument;\n                        tone.prevNotePitchIndex = 0;\n                        tone.nextNotePitchIndex = 0;\n                        tone.atNoteStart = atNoteStart;\n                        tone.passedEndOfNote = false;\n                        tone.forceContinueAtStart = forceContinueAtStart;\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                    else {\n                        const transition = instrument.getTransition();\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, note.pitches);\n                        }\n                        let strumOffsetParts = 0;\n                        for (let i = 0; i < note.pitches.length; i++) {\n                            let prevNoteForThisTone = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\n                            let noteForThisTone = note;\n                            let nextNoteForThisTone = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\n                            let noteStartPart = noteForThisTone.start + strumOffsetParts;\n                            let passedEndOfNote = false;\n                            if (noteStartPart > currentPart) {\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\n                                    nextNoteForThisTone = noteForThisTone;\n                                    noteForThisTone = prevNoteForThisTone;\n                                    prevNoteForThisTone = null;\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\n                                    passedEndOfNote = true;\n                                }\n                                else {\n                                    break;\n                                }\n                            }\n                            let noteEndPart = noteForThisTone.end;\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song.beatsPerBar, noteEndPart + strumOffsetParts);\n                            }\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\n                                strumOffsetParts += chord.strumParts;\n                            }\n                            const atNoteStart = (Config.ticksPerPart * noteStartPart == currentTick);\n                            let tone;\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\n                                tone = this.tempMatchedPitchTones[toneCount];\n                                this.tempMatchedPitchTones[toneCount] = null;\n                                toneList.pushBack(tone);\n                            }\n                            else if (toneList.count() <= toneCount) {\n                                tone = this.newTone();\n                                toneList.pushBack(tone);\n                            }\n                            else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\n                                const oldTone = toneList.get(toneCount);\n                                if (oldTone.isOnLastTick) {\n                                    this.freeTone(oldTone);\n                                }\n                                else {\n                                    this.releaseTone(instrumentState, oldTone);\n                                }\n                                tone = this.newTone();\n                                toneList.set(toneCount, tone);\n                            }\n                            else {\n                                tone = toneList.get(toneCount);\n                            }\n                            toneCount++;\n                            tone.pitches[0] = noteForThisTone.pitches[i];\n                            tone.pitchCount = 1;\n                            tone.chordSize = noteForThisTone.pitches.length;\n                            tone.instrumentIndex = instrumentIndex;\n                            tone.note = noteForThisTone;\n                            tone.noteStartPart = noteStartPart;\n                            tone.noteEndPart = noteEndPart;\n                            tone.prevNote = prevNoteForThisTone;\n                            tone.nextNote = nextNoteForThisTone;\n                            tone.prevNotePitchIndex = i;\n                            tone.nextNotePitchIndex = i;\n                            tone.atNoteStart = atNoteStart;\n                            tone.passedEndOfNote = passedEndOfNote;\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                        }\n                    }\n                    if (transition.continues && (toneList.count() <= 0) || (note.pitches.length <= 0))\n                        instrumentState.envelopeComputer.reset();\n                }\n                while (toneList.count() > toneCount) {\n                    const tone = toneList.popBack();\n                    const channel = song.channels[channelIndex];\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                        const instrumentState = channelState.instruments[tone.instrumentIndex];\n                        this.releaseTone(instrumentState, tone);\n                    }\n                    else {\n                        this.freeTone(tone);\n                    }\n                }\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\n            }\n        }\n    }\n    clearTempMatchedPitchTones(toneCount, instrumentState) {\n        for (let i = toneCount; i < this.tempMatchedPitchTones.length; i++) {\n            const oldTone = this.tempMatchedPitchTones[i];\n            if (oldTone != null) {\n                if (oldTone.isOnLastTick) {\n                    this.freeTone(oldTone);\n                }\n                else {\n                    this.releaseTone(instrumentState, oldTone);\n                }\n                this.tempMatchedPitchTones[i] = null;\n            }\n        }\n    }\n    playTone(channelIndex, bufferIndex, runLength, tone) {\n        const channelState = this.channels[channelIndex];\n        const instrumentState = channelState.instruments[tone.instrumentIndex];\n        if (instrumentState.synthesizer != null)\n            instrumentState.synthesizer(this, bufferIndex, runLength, tone, instrumentState);\n        tone.envelopeComputer.clearEnvelopes();\n        instrumentState.envelopeComputer.clearEnvelopes();\n    }\n    playModTone(song, channelIndex, samplesPerTick, bufferIndex, roundedSamplesPerTick, tone, released, shouldFadeOutFast) {\n        const channel = song.channels[channelIndex];\n        const instrument = channel.instruments[tone.instrumentIndex];\n        if (tone.note != null) {\n            const ticksIntoBar = this.getTicksIntoBar();\n            const partTimeTickStart = (ticksIntoBar) / Config.ticksPerPart;\n            const partTimeTickEnd = (ticksIntoBar + 1) / Config.ticksPerPart;\n            const tickSampleCountdown = this.tickSampleCountdown;\n            const startRatio = 1.0 - (tickSampleCountdown) / samplesPerTick;\n            const endRatio = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\n            const partTimeStart = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n            const partTimeEnd = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n            const tickTimeStart = Config.ticksPerPart * partTimeStart;\n            const tickTimeEnd = Config.ticksPerPart * partTimeEnd;\n            const endPinIndex = tone.note.getEndPinIndex(this.getCurrentPart());\n            const startPin = tone.note.pins[endPinIndex - 1];\n            const endPin = tone.note.pins[endPinIndex];\n            const startPinTick = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            const endPinTick = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\n        }\n    }\n    static computeChordExpression(chordSize) {\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\n    }\n    computeTone(song, channelIndex, samplesPerTick, tone, released, shouldFadeOutFast) {\n        const roundedSamplesPerTick = Math.ceil(samplesPerTick);\n        const channel = song.channels[channelIndex];\n        const channelState = this.channels[channelIndex];\n        const instrument = channel.instruments[tone.instrumentIndex];\n        const instrumentState = channelState.instruments[tone.instrumentIndex];\n        instrumentState.awake = true;\n        instrumentState.tonesAddedInThisTick = true;\n        if (!instrumentState.computed) {\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\n        }\n        const transition = instrument.getTransition();\n        const chord = instrument.getChord();\n        const chordExpression = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\n        const isNoiseChannel = song.getChannelIsNoise(channelIndex);\n        const intervalScale = isNoiseChannel ? Config.noiseInterval : 1;\n        const secondsPerPart = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\n        const sampleTime = 1.0 / this.samplesPerSecond;\n        const beatsPerPart = 1.0 / Config.partsPerBeat;\n        const ticksIntoBar = this.getTicksIntoBar();\n        const partTimeStart = (ticksIntoBar) / Config.ticksPerPart;\n        const partTimeEnd = (ticksIntoBar + 1.0) / Config.ticksPerPart;\n        const currentPart = this.getCurrentPart();\n        let specialIntervalMult = 1.0;\n        tone.specialIntervalExpressionMult = 1.0;\n        let toneIsOnLastTick = shouldFadeOutFast;\n        let intervalStart = 0.0;\n        let intervalEnd = 0.0;\n        let fadeExpressionStart = 1.0;\n        let fadeExpressionEnd = 1.0;\n        let chordExpressionStart = chordExpression;\n        let chordExpressionEnd = chordExpression;\n        let expressionReferencePitch = 16;\n        let basePitch = Config.keys[song.key].basePitch + (Config.pitchesPerOctave * song.octave);\n        let baseExpression = 1.0;\n        let pitchDamping = 48;\n        if (instrument.type == 3) {\n            baseExpression = Config.spectrumBaseExpression;\n            if (isNoiseChannel) {\n                basePitch = Config.spectrumBasePitch;\n                baseExpression *= 2.0;\n            }\n            expressionReferencePitch = Config.spectrumBasePitch;\n            pitchDamping = 28;\n        }\n        else if (instrument.type == 4) {\n            basePitch = Config.spectrumBasePitch;\n            baseExpression = Config.drumsetBaseExpression;\n            expressionReferencePitch = basePitch;\n        }\n        else if (instrument.type == 2) {\n            basePitch = isNoiseChannel ? Config.chipNoises[instrument.chipNoise].basePitch : basePitch + Config.chipNoises[instrument.chipNoise].basePitch - 12;\n            baseExpression = Config.noiseBaseExpression;\n            expressionReferencePitch = basePitch;\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\n        }\n        else if (instrument.type == 1 || instrument.type == 11) {\n            baseExpression = Config.fmBaseExpression;\n        }\n        else if (instrument.type == 0) {\n            baseExpression = Config.chipBaseExpression;\n            if (Config.chipWaves[instrument.chipWave].isCustomSampled) {\n                if (Config.chipWaves[instrument.chipWave].isPercussion) {\n                    basePitch = -84.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length / Config.chipWaves[instrument.chipWave].sampleRate) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey);\n                }\n                else {\n                    basePitch += -96.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length / Config.chipWaves[instrument.chipWave].sampleRate) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey);\n                }\n            }\n            else {\n                if (Config.chipWaves[instrument.chipWave].isSampled && !Config.chipWaves[instrument.chipWave].isPercussion) {\n                    basePitch = basePitch - 63 + Config.chipWaves[instrument.chipWave].extraSampleDetune;\n                }\n                else if (Config.chipWaves[instrument.chipWave].isSampled && Config.chipWaves[instrument.chipWave].isPercussion) {\n                    basePitch = -51 + Config.chipWaves[instrument.chipWave].extraSampleDetune;\n                }\n            }\n        }\n        else if (instrument.type == 9) {\n            baseExpression = Config.chipBaseExpression;\n        }\n        else if (instrument.type == 5) {\n            baseExpression = Config.harmonicsBaseExpression;\n        }\n        else if (instrument.type == 6) {\n            baseExpression = Config.pwmBaseExpression;\n        }\n        else if (instrument.type == 8) {\n            baseExpression = Config.supersawBaseExpression;\n        }\n        else if (instrument.type == 7) {\n            baseExpression = Config.pickedStringBaseExpression;\n        }\n        else if (instrument.type == 10) {\n            baseExpression = 1.0;\n            expressionReferencePitch = 0;\n            pitchDamping = 1.0;\n            basePitch = 0;\n        }\n        else {\n            throw new Error(\"Unknown instrument type in computeTone.\");\n        }\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\n            tone.reset();\n            instrumentState.envelopeComputer.reset();\n            if (instrument.type == 0 && instrument.isUsingAdvancedLoopControls) {\n                const chipWaveLength = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\n                const firstOffset = instrument.chipWaveStartOffset / chipWaveLength;\n                const lastOffset = 0.999999999999999;\n                for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n                    tone.phases[i] = instrument.chipWavePlayBackwards ? Math.max(0, Math.min(lastOffset, firstOffset)) : Math.max(0, firstOffset);\n                    tone.directions[i] = instrument.chipWavePlayBackwards ? -1 : 1;\n                    tone.chipWaveCompletions[i] = 0;\n                    tone.chipWavePrevWaves[i] = 0;\n                    tone.chipWaveCompletionsLastWave[i] = 0;\n                }\n            }\n        }\n        tone.freshlyAllocated = false;\n        for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            tone.phaseDeltas[i] = 0.0;\n            tone.phaseDeltaScales[i] = 0.0;\n            tone.operatorExpressions[i] = 0.0;\n            tone.operatorExpressionDeltas[i] = 0.0;\n        }\n        tone.expression = 0.0;\n        tone.expressionDelta = 0.0;\n        for (let i = 0; i < (instrument.type == 11 ? 6 : Config.operatorCount); i++) {\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\n        }\n        if (released) {\n            const startTicksSinceReleased = tone.ticksSinceReleased;\n            const endTicksSinceReleased = tone.ticksSinceReleased + 1.0;\n            intervalStart = intervalEnd = tone.lastInterval;\n            const fadeOutTicks = Math.abs(instrument.getFadeOutTicks());\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n            if (shouldFadeOutFast) {\n                fadeExpressionEnd = 0.0;\n            }\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks)\n                toneIsOnLastTick = true;\n        }\n        else if (tone.note == null) {\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\n            tone.lastInterval = 0;\n            tone.ticksSinceReleased = 0;\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\n        }\n        else {\n            const note = tone.note;\n            const nextNote = tone.nextNote;\n            const noteStartPart = tone.noteStartPart;\n            const noteEndPart = tone.noteEndPart;\n            const endPinIndex = note.getEndPinIndex(currentPart);\n            const startPin = note.pins[endPinIndex - 1];\n            const endPin = note.pins[endPinIndex];\n            const noteStartTick = noteStartPart * Config.ticksPerPart;\n            const noteEndTick = noteEndPart * Config.ticksPerPart;\n            const pinStart = (note.start + startPin.time) * Config.ticksPerPart;\n            const pinEnd = (note.start + endPin.time) * Config.ticksPerPart;\n            tone.ticksSinceReleased = 0;\n            const tickTimeStart = currentPart * Config.ticksPerPart + this.tick;\n            const tickTimeEnd = tickTimeStart + 1.0;\n            const noteTicksPassedTickStart = tickTimeStart - noteStartTick;\n            const noteTicksPassedTickEnd = tickTimeEnd - noteStartTick;\n            const pinRatioStart = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\n            const pinRatioEnd = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\n            fadeExpressionStart = 1.0;\n            fadeExpressionEnd = 1.0;\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\n            tone.lastInterval = intervalEnd;\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\n                const fadeOutTicks = -instrument.getFadeOutTicks();\n                if (fadeOutTicks > 0.0) {\n                    const noteLengthTicks = noteEndTick - noteStartTick;\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks)\n                        toneIsOnLastTick = true;\n                }\n            }\n        }\n        tone.isOnLastTick = toneIsOnLastTick;\n        let tmpNoteFilter = instrument.noteFilter;\n        let startPoint;\n        let endPoint;\n        if (instrument.noteFilterType) {\n            const noteFilterSettingsStart = instrument.noteFilter;\n            if (instrument.noteSubFilters[1] == null)\n                instrument.noteSubFilters[1] = new FilterSettings();\n            const noteFilterSettingsEnd = instrument.noteSubFilters[1];\n            let startSimpleFreq = instrument.noteFilterSimpleCut;\n            let startSimpleGain = instrument.noteFilterSimplePeak;\n            let endSimpleFreq = instrument.noteFilterSimpleCut;\n            let endSimpleGain = instrument.noteFilterSimplePeak;\n            let filterChanges = false;\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\n            startPoint = noteFilterSettingsStart.controlPoints[0];\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\n            instrument.noteFilter = noteFilterSettingsStart;\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\n        }\n        const envelopeComputer = tone.envelopeComputer;\n        const envelopeSpeeds = [];\n        for (let i = 0; i < Config.maxEnvelopeCount; i++) {\n            envelopeSpeeds[i] = 0;\n        }\n        for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n            let perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n            if (this.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channelIndex, tone.instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed;\n            }\n            let useEnvelopeSpeed = Config.arpSpeedScale[instrument.envelopeSpeed] * perEnvelopeSpeed;\n            if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex)) {\n                useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex, false)));\n                if (Number.isInteger(useEnvelopeSpeed)) {\n                    useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                }\n                else {\n                    useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)] * perEnvelopeSpeed;\n                }\n            }\n            envelopeSpeeds[envelopeIndex] = useEnvelopeSpeed;\n        }\n        envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone, envelopeSpeeds, instrumentState, this, channelIndex, tone.instrumentIndex);\n        const envelopeStarts = tone.envelopeComputer.envelopeStarts;\n        const envelopeEnds = tone.envelopeComputer.envelopeEnds;\n        instrument.noteFilter = tmpNoteFilter;\n        if (transition.continues && (tone.prevNote == null || tone.note == null)) {\n            instrumentState.envelopeComputer.reset();\n        }\n        if (tone.note != null && transition.slides) {\n            const prevNote = tone.prevNote;\n            const nextNote = tone.nextNote;\n            if (prevNote != null) {\n                const intervalDiff = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\n                if (envelopeComputer.prevSlideStart)\n                    intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\n                if (envelopeComputer.prevSlideEnd)\n                    intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff = prevNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.prevSlideStart)\n                        chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\n                    if (envelopeComputer.prevSlideEnd)\n                        chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\n                }\n            }\n            if (nextNote != null) {\n                const intervalDiff = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\n                if (envelopeComputer.nextSlideStart)\n                    intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\n                if (envelopeComputer.nextSlideEnd)\n                    intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff = nextNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.nextSlideStart)\n                        chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\n                    if (envelopeComputer.nextSlideEnd)\n                        chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\n                }\n            }\n        }\n        if (effectsIncludePitchShift(instrument.effects)) {\n            let pitchShift = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\n            let pitchShiftScalarStart = 1.0;\n            let pitchShiftScalarEnd = 1.0;\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\n            }\n            const envelopeStart = envelopeStarts[18];\n            const envelopeEnd = envelopeEnds[18];\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\n        }\n        if (effectsIncludeDetune(instrument.effects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n            const envelopeStart = envelopeStarts[19];\n            const envelopeEnd = envelopeEnds[19];\n            let modDetuneStart = instrument.detune;\n            let modDetuneEnd = instrument.detune;\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\n            }\n            intervalStart += Synth.detuneToCents(modDetuneStart) * envelopeStart * Config.pitchesPerOctave / (12.0 * 100.0);\n            intervalEnd += Synth.detuneToCents(modDetuneEnd) * envelopeEnd * Config.pitchesPerOctave / (12.0 * 100.0);\n        }\n        if (effectsIncludeVibrato(instrument.effects)) {\n            let delayTicks;\n            let vibratoAmplitudeStart;\n            let vibratoAmplitudeEnd;\n            if (instrument.vibrato == Config.vibratos.length) {\n                delayTicks = instrument.vibratoDelay * 2;\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\n                    delayTicks = Number.POSITIVE_INFINITY;\n                vibratoAmplitudeStart = instrument.vibratoDepth;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            }\n            else {\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2;\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\n                    delayTicks = Number.POSITIVE_INFINITY;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\n            }\n            let vibratoStart;\n            if (tone.prevVibrato != null) {\n                vibratoStart = tone.prevVibrato;\n            }\n            else {\n                let vibratoLfoStart = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.vibratoTime);\n                const vibratoDepthEnvelopeStart = envelopeStarts[20];\n                vibratoStart = vibratoAmplitudeStart * vibratoLfoStart * vibratoDepthEnvelopeStart;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoStart = delayTicks - envelopeComputer.noteTicksStart;\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\n                }\n            }\n            let vibratoLfoEnd = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.nextVibratoTime);\n            const vibratoDepthEnvelopeEnd = envelopeEnds[20];\n            if (instrument.type != 10) {\n                let vibratoEnd = vibratoAmplitudeEnd * vibratoLfoEnd * vibratoDepthEnvelopeEnd;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoEnd = delayTicks - envelopeComputer.noteTicksEnd;\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\n                }\n                tone.prevVibrato = vibratoEnd;\n                intervalStart += vibratoStart;\n                intervalEnd += vibratoEnd;\n            }\n        }\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\n            const fadeInSeconds = instrument.getFadeInSeconds();\n            if (fadeInSeconds > 0.0) {\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStartUnscaled / fadeInSeconds);\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEndUnscaled / fadeInSeconds);\n            }\n        }\n        if (instrument.type == 4 && tone.drumsetPitch == null) {\n            tone.drumsetPitch = tone.pitches[0];\n            if (tone.note != null)\n                tone.drumsetPitch += tone.note.pickMainInterval();\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\n        }\n        let noteFilterExpression = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        if (!effectsIncludeNoteFilter(instrument.effects)) {\n            tone.noteFilterCount = 0;\n        }\n        else {\n            const noteAllFreqsEnvelopeStart = envelopeStarts[1];\n            const noteAllFreqsEnvelopeEnd = envelopeEnds[1];\n            if (instrument.noteFilterType) {\n                const noteFreqEnvelopeStart = envelopeStarts[21];\n                const noteFreqEnvelopeEnd = envelopeEnds[21];\n                const notePeakEnvelopeStart = envelopeStarts[29];\n                const notePeakEnvelopeEnd = envelopeEnds[29];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n                if (tone.noteFilters.length < 1)\n                    tone.noteFilters[0] = new DynamicBiquadFilter();\n                tone.noteFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                noteFilterExpression *= startPoint.getVolumeCompensationMult();\n                tone.noteFilterCount = 1;\n            }\n            else {\n                const noteFilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\n                for (let i = 0; i < noteFilterSettings.controlPointCount; i++) {\n                    const noteFreqEnvelopeStart = envelopeStarts[21 + i];\n                    const noteFreqEnvelopeEnd = envelopeEnds[21 + i];\n                    const notePeakEnvelopeStart = envelopeStarts[29 + i];\n                    const notePeakEnvelopeEnd = envelopeEnds[29 + i];\n                    let startPoint = noteFilterSettings.controlPoints[i];\n                    const endPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\n                    if (startPoint.type != endPoint.type) {\n                        startPoint = endPoint;\n                    }\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n                    if (tone.noteFilters.length <= i)\n                        tone.noteFilters[i] = new DynamicBiquadFilter();\n                    tone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                    noteFilterExpression *= startPoint.getVolumeCompensationMult();\n                }\n                tone.noteFilterCount = noteFilterSettings.controlPointCount;\n            }\n        }\n        if (instrument.type == 4) {\n            const drumsetEnvelopeComputer = tone.envelopeComputer;\n            const drumsetFilterEnvelope = instrument.getDrumsetEnvelope(tone.drumsetPitch);\n            noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope);\n            drumsetEnvelopeComputer.computeDrumsetEnvelopes(instrument, drumsetFilterEnvelope, beatsPerPart, partTimeStart, partTimeEnd);\n            const drumsetFilterEnvelopeStart = drumsetEnvelopeComputer.drumsetFilterEnvelopeStart;\n            const drumsetFilterEnvelopeEnd = drumsetEnvelopeComputer.drumsetFilterEnvelopeEnd;\n            const point = this.tempDrumSetControlPoint;\n            point.type = 0;\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.50);\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\n            if (tone.noteFilters.length == tone.noteFilterCount)\n                tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\n            tone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\n            tone.noteFilterCount++;\n        }\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\n        if (instrument.type == 1 || instrument.type == 11) {\n            let sineExpressionBoost = 1.0;\n            let totalCarrierExpression = 0.0;\n            let arpeggioInterval = 0;\n            const arpeggiates = chord.arpeggiates;\n            const isMono = chord.name == \"monophonic\";\n            if (tone.pitchCount > 1 && arpeggiates) {\n                const arpeggio = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n            }\n            const carrierCount = (instrument.type == 11 ? instrument.customAlgorithm.carrierCount : Config.algorithms[instrument.algorithm].carrierCount);\n            for (let i = 0; i < (instrument.type == 11 ? 6 : Config.operatorCount); i++) {\n                const associatedCarrierIndex = (instrument.type == 11 ? instrument.customAlgorithm.associatedCarrier[i] - 1 : Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1);\n                const pitch = tone.pitches[arpeggiates ? 0 : isMono ? instrument.monoChordTone : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\n                const pitchStart = basePitch + (pitch + intervalStart) * intervalScale + interval;\n                const pitchEnd = basePitch + (pitch + intervalEnd) * intervalScale + interval;\n                const baseFreqStart = Instrument.frequencyFromPitch(pitchStart);\n                const baseFreqEnd = Instrument.frequencyFromPitch(pitchEnd);\n                const hzOffset = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\n                const targetFreqStart = freqMult * baseFreqStart + hzOffset;\n                const targetFreqEnd = freqMult * baseFreqEnd + hzOffset;\n                const freqEnvelopeStart = envelopeStarts[5 + i];\n                const freqEnvelopeEnd = envelopeEnds[5 + i];\n                let freqStart;\n                let freqEnd;\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\n                }\n                else {\n                    freqStart = targetFreqStart;\n                    freqEnd = targetFreqEnd;\n                }\n                tone.phaseDeltas[i] = freqStart * sampleTime;\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\n                let amplitudeStart = instrument.operators[i].amplitude;\n                let amplitudeEnd = instrument.operators[i].amplitude;\n                if (i < 4) {\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                }\n                else {\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 5\"].index + i - 4, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i - 4, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i - 4, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                }\n                const amplitudeCurveStart = Synth.operatorAmplitudeCurve(amplitudeStart);\n                const amplitudeCurveEnd = Synth.operatorAmplitudeCurve(amplitudeEnd);\n                const amplitudeMultStart = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n                const amplitudeMultEnd = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n                let expressionStart = amplitudeMultStart;\n                let expressionEnd = amplitudeMultEnd;\n                if (i < carrierCount) {\n                    let pitchExpressionStart;\n                    if (tone.prevPitchExpressions[i] != null) {\n                        pitchExpressionStart = tone.prevPitchExpressions[i];\n                    }\n                    else {\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\n                    }\n                    const pitchExpressionEnd = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\n                    expressionStart *= pitchExpressionStart;\n                    expressionEnd *= pitchExpressionEnd;\n                    totalCarrierExpression += amplitudeCurveEnd;\n                }\n                else {\n                    expressionStart *= Config.sineWaveLength * 1.5;\n                    expressionEnd *= Config.sineWaveLength * 1.5;\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\n                }\n                expressionStart *= envelopeStarts[11 + i];\n                expressionEnd *= envelopeEnds[11 + i];\n                if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                    const startVal = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                    const endVal = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n                }\n                tone.operatorExpressions[i] = expressionStart;\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n            }\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\n            let expressionStart = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[0];\n            let expressionEnd = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[0];\n            if (isMono && tone.pitchCount <= instrument.monoChordTone) {\n                expressionStart = 0;\n                expressionEnd = 0;\n            }\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n            let useFeedbackAmplitudeStart = instrument.feedbackAmplitude;\n            let useFeedbackAmplitudeEnd = instrument.feedbackAmplitude;\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\n            }\n            let feedbackAmplitudeStart = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\n            const feedbackAmplitudeEnd = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\n            let feedbackStart = feedbackAmplitudeStart * envelopeStarts[17];\n            let feedbackEnd = feedbackAmplitudeEnd * envelopeEnds[17];\n            tone.feedbackMult = feedbackStart;\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\n        }\n        else {\n            const freqEndRatio = Math.pow(2.0, (intervalEnd - intervalStart) * intervalScale / 12.0);\n            const basePhaseDeltaScale = Math.pow(freqEndRatio, 1.0 / roundedSamplesPerTick);\n            const isMono = chord.name == \"monophonic\";\n            let pitch = tone.pitches[0];\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval || isMono)) {\n                const arpeggio = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                if (chord.customInterval) {\n                    const intervalOffset = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\n                }\n                else if (chord.arpeggiates) {\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\n                }\n                else {\n                    pitch = tone.pitches[instrument.monoChordTone];\n                }\n            }\n            const startPitch = basePitch + (pitch + intervalStart) * intervalScale;\n            const endPitch = basePitch + (pitch + intervalEnd) * intervalScale;\n            let pitchExpressionStart;\n            if (tone.prevPitchExpressions[0] != null) {\n                pitchExpressionStart = tone.prevPitchExpressions[0];\n            }\n            else {\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\n            }\n            const pitchExpressionEnd = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\n            let settingsExpressionMult = baseExpression * noteFilterExpression;\n            if (instrument.type == 2) {\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\n            }\n            if (instrument.type == 0) {\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\n            }\n            if (instrument.type == 6) {\n                const basePulseWidth = getPulseWidthRatio(instrument.pulseWidth);\n                let pulseWidthModStart = basePulseWidth;\n                let pulseWidthModEnd = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n                const pulseWidthStart = pulseWidthModStart * envelopeStarts[2];\n                const pulseWidthEnd = pulseWidthModEnd * envelopeEnds[2];\n                tone.pulseWidth = pulseWidthStart;\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\n                let decimalOffsetModStart = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n                const decimalOffsetStart = decimalOffsetModStart * envelopeStarts[37];\n                tone.decimalOffset = decimalOffsetStart;\n                tone.pulseWidth -= (tone.decimalOffset) / 10000;\n            }\n            if (instrument.type == 7) {\n                let useSustainStart = instrument.stringSustain;\n                let useSustainEnd = instrument.stringSustain;\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\n                }\n                tone.stringSustainStart = useSustainStart;\n                tone.stringSustainEnd = useSustainEnd;\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\n            }\n            const startFreq = Instrument.frequencyFromPitch(startPitch);\n            if (instrument.type == 0 || instrument.type == 9 || instrument.type == 5 || instrument.type == 7 || instrument.type == 3 || instrument.type == 6 || instrument.type == 2 || instrument.type == 4) {\n                const unisonVoices = instrument.unisonVoices;\n                const unisonSpread = instrument.unisonSpread;\n                const unisonOffset = instrument.unisonOffset;\n                const unisonExpression = instrument.unisonExpression;\n                const voiceCountExpression = (instrument.type == 7) ? 1 : unisonVoices / 2.0;\n                settingsExpressionMult *= unisonExpression * voiceCountExpression;\n                const unisonEnvelopeStart = envelopeStarts[4];\n                const unisonEnvelopeEnd = envelopeEnds[4];\n                const unisonStartA = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeStart / 12.0);\n                const unisonEndA = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeEnd / 12.0);\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonStartA;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonEndA / unisonStartA, 1.0 / roundedSamplesPerTick);\n                const divisor = (unisonVoices == 1) ? 1 : (unisonVoices - 1);\n                for (let i = 1; i <= unisonVoices; i++) {\n                    const unisonStart = Math.pow(2.0, (unisonOffset + unisonSpread - (2 * i * unisonSpread / divisor)) * unisonEnvelopeStart / 12.0) * (specialIntervalMult);\n                    const unisonEnd = Math.pow(2.0, (unisonOffset + unisonSpread - (2 * i * unisonSpread / divisor)) * unisonEnvelopeEnd / 12.0) * (specialIntervalMult);\n                    tone.phaseDeltas[i] = startFreq * sampleTime * unisonStart;\n                    tone.phaseDeltaScales[i] = basePhaseDeltaScale * Math.pow(unisonEnd / unisonStart, 1.0 / roundedSamplesPerTick);\n                }\n                for (let i = unisonVoices + 1; i < Config.unisonVoicesMax; i++) {\n                    if (i == 2) {\n                        const unisonBStart = Math.pow(2.0, (unisonOffset - unisonSpread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\n                        const unisonBEnd = Math.pow(2.0, (unisonOffset - unisonSpread) * unisonEnvelopeEnd / 12.0) * specialIntervalMult;\n                        tone.phaseDeltas[i] = startFreq * sampleTime * unisonBStart;\n                        tone.phaseDeltaScales[i] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\n                    }\n                    else {\n                        tone.phaseDeltas[i] = tone.phaseDeltas[0];\n                        tone.phaseDeltaScales[i] = tone.phaseDeltaScales[0];\n                    }\n                }\n            }\n            else {\n                tone.phaseDeltas[0] = startFreq * sampleTime;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\n            }\n            let supersawExpressionStart = 1.0;\n            let supersawExpressionEnd = 1.0;\n            if (instrument.type == 8) {\n                const minFirstVoiceAmplitude = 1.0 / Math.sqrt(Config.supersawVoiceCount);\n                let useDynamismStart = instrument.supersawDynamism / Config.supersawDynamismMax;\n                let useDynamismEnd = instrument.supersawDynamism / Config.supersawDynamismMax;\n                if (this.isModActive(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex)) {\n                    useDynamismStart = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawDynamismMax;\n                    useDynamismEnd = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawDynamismMax;\n                }\n                const curvedDynamismStart = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismStart * envelopeStarts[38]), 0.2);\n                const curvedDynamismEnd = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismEnd * envelopeEnds[38]), 0.2);\n                const firstVoiceAmplitudeStart = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismStart);\n                const firstVoiceAmplitudeEnd = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismEnd);\n                const dynamismStart = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeStart, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n                const dynamismEnd = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeEnd, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n                tone.supersawDynamism = dynamismStart;\n                tone.supersawDynamismDelta = (dynamismEnd - dynamismStart) / roundedSamplesPerTick;\n                const initializeSupersaw = (tone.supersawDelayIndex == -1);\n                if (initializeSupersaw) {\n                    let accumulator = 0.0;\n                    for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                        tone.phases[i] = accumulator;\n                        accumulator += -Math.log(Math.random());\n                    }\n                    const amplitudeSum = 1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart;\n                    const slope = amplitudeSum;\n                    let sample = 0.0;\n                    for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                        const amplitude = (i == 0) ? 1.0 : dynamismStart;\n                        const normalizedPhase = tone.phases[i] / accumulator;\n                        tone.phases[i] = normalizedPhase;\n                        sample += (normalizedPhase - 0.5) * amplitude;\n                    }\n                    let zeroCrossingPhase = 1.0;\n                    let prevDrop = 0.0;\n                    for (let i = Config.supersawVoiceCount - 1; i >= 0; i--) {\n                        const nextDrop = 1.0 - tone.phases[i];\n                        const phaseDelta = nextDrop - prevDrop;\n                        if (sample < 0.0) {\n                            const distanceToZeroCrossing = -sample / slope;\n                            if (distanceToZeroCrossing < phaseDelta) {\n                                zeroCrossingPhase = prevDrop + distanceToZeroCrossing;\n                                break;\n                            }\n                        }\n                        const amplitude = (i == 0) ? 1.0 : dynamismStart;\n                        sample += phaseDelta * slope - amplitude;\n                        prevDrop = nextDrop;\n                    }\n                    for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                        tone.phases[i] += zeroCrossingPhase;\n                    }\n                    for (let i = 1; i < Config.supersawVoiceCount - 1; i++) {\n                        const swappedIndex = i + Math.floor(Math.random() * (Config.supersawVoiceCount - i));\n                        const temp = tone.phases[i];\n                        tone.phases[i] = tone.phases[swappedIndex];\n                        tone.phases[swappedIndex] = temp;\n                    }\n                }\n                const baseSpreadSlider = instrument.supersawSpread / Config.supersawSpreadMax;\n                let useSpreadStart = baseSpreadSlider;\n                let useSpreadEnd = baseSpreadSlider;\n                if (this.isModActive(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSpreadStart = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawSpreadMax;\n                    useSpreadEnd = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawSpreadMax;\n                }\n                const spreadSliderStart = useSpreadStart * envelopeStarts[39];\n                const spreadSliderEnd = useSpreadEnd * envelopeEnds[39];\n                const averageSpreadSlider = (spreadSliderStart + spreadSliderEnd) * 0.5;\n                const curvedSpread = Math.pow(1.0 - Math.sqrt(Math.max(0.0, 1.0 - averageSpreadSlider)), 1.75);\n                for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                    const offset = (i == 0) ? 0.0 : Math.pow((((i + 1) >> 1) - 0.5 + 0.025 * ((i & 2) - 1)) / (Config.supersawVoiceCount >> 1), 1.1) * ((i & 1) * 2 - 1);\n                    tone.supersawUnisonDetunes[i] = Math.pow(2.0, curvedSpread * offset / 12.0);\n                }\n                const baseShape = instrument.supersawShape / Config.supersawShapeMax;\n                let useShapeStart = baseShape * envelopeStarts[40];\n                let useShapeEnd = baseShape * envelopeEnds[40];\n                if (this.isModActive(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex)) {\n                    useShapeStart = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawShapeMax;\n                    useShapeEnd = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawShapeMax;\n                }\n                const shapeStart = useShapeStart * envelopeStarts[40];\n                const shapeEnd = useShapeEnd * envelopeEnds[40];\n                tone.supersawShape = shapeStart;\n                tone.supersawShapeDelta = (shapeEnd - shapeStart) / roundedSamplesPerTick;\n                let decimalOffsetModStart = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n                const decimalOffsetStart = decimalOffsetModStart * envelopeStarts[37];\n                tone.decimalOffset = decimalOffsetStart;\n                const basePulseWidth = getPulseWidthRatio(instrument.pulseWidth);\n                let pulseWidthModStart = basePulseWidth;\n                let pulseWidthModEnd = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n                let pulseWidthStart = pulseWidthModStart * envelopeStarts[2];\n                let pulseWidthEnd = pulseWidthModEnd * envelopeEnds[2];\n                pulseWidthStart -= decimalOffsetStart / 10000;\n                pulseWidthEnd -= decimalOffsetStart / 10000;\n                const phaseDeltaStart = (tone.supersawPrevPhaseDelta != null) ? tone.supersawPrevPhaseDelta : startFreq * sampleTime;\n                const phaseDeltaEnd = startFreq * sampleTime * freqEndRatio;\n                tone.supersawPrevPhaseDelta = phaseDeltaEnd;\n                const delayLengthStart = pulseWidthStart / phaseDeltaStart;\n                const delayLengthEnd = pulseWidthEnd / phaseDeltaEnd;\n                tone.supersawDelayLength = delayLengthStart;\n                tone.supersawDelayLengthDelta = (delayLengthEnd - delayLengthStart) / roundedSamplesPerTick;\n                const minBufferLength = Math.ceil(Math.max(delayLengthStart, delayLengthEnd)) + 2;\n                if (tone.supersawDelayLine == null || tone.supersawDelayLine.length <= minBufferLength) {\n                    const likelyMaximumLength = Math.ceil(0.5 * this.samplesPerSecond / Instrument.frequencyFromPitch(24));\n                    const newDelayLine = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n                    if (!initializeSupersaw && tone.supersawDelayLine != null) {\n                        const oldDelayBufferMask = (tone.supersawDelayLine.length - 1) >> 0;\n                        const startCopyingFromIndex = tone.supersawDelayIndex;\n                        for (let i = 0; i < tone.supersawDelayLine.length; i++) {\n                            newDelayLine[i] = tone.supersawDelayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n                        }\n                    }\n                    tone.supersawDelayLine = newDelayLine;\n                    tone.supersawDelayIndex = tone.supersawDelayLine.length;\n                }\n                else if (initializeSupersaw) {\n                    tone.supersawDelayLine.fill(0.0);\n                    tone.supersawDelayIndex = tone.supersawDelayLine.length;\n                }\n                const pulseExpressionRatio = Config.pwmBaseExpression / Config.supersawBaseExpression;\n                supersawExpressionStart *= (1.0 + (pulseExpressionRatio - 1.0) * shapeStart) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart * dynamismStart);\n                supersawExpressionEnd *= (1.0 + (pulseExpressionRatio - 1.0) * shapeEnd) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismEnd * dynamismEnd);\n            }\n            let expressionStart = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[0] * supersawExpressionStart;\n            let expressionEnd = settingsExpressionMult * fadeExpressionEnd * chordExpressionEnd * pitchExpressionEnd * envelopeEnds[0] * supersawExpressionEnd;\n            if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                const startVal = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                const endVal = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n            }\n            if (isMono && tone.pitchCount <= instrument.monoChordTone) {\n                expressionStart = 0;\n                expressionEnd = 0;\n                instrumentState.awake = false;\n            }\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n            if (instrument.type == 7) {\n                let stringDecayStart;\n                if (tone.prevStringDecay != null) {\n                    stringDecayStart = tone.prevStringDecay;\n                }\n                else {\n                    const sustainEnvelopeStart = tone.envelopeComputer.envelopeStarts[3];\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\n                }\n                const sustainEnvelopeEnd = tone.envelopeComputer.envelopeEnds[3];\n                let stringDecayEnd = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\n                tone.prevStringDecay = stringDecayEnd;\n                const unisonVoices = instrument.unisonVoices;\n                for (let i = tone.pickedStrings.length; i < unisonVoices; i++) {\n                    tone.pickedStrings[i] = new PickedString();\n                }\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n                    for (const pickedString of tone.pickedStrings) {\n                        pickedString.delayIndex = -1;\n                    }\n                }\n                for (let i = 0; i < unisonVoices; i++) {\n                    tone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, instrument.stringSustainType);\n                }\n            }\n        }\n    }\n    static getLFOAmplitude(instrument, secondsIntoBar) {\n        let effect = 0.0;\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\n        }\n        return effect;\n    }\n    static getInstrumentSynthFunction(instrument) {\n        if (instrument.type == 1) {\n            const fingerprint = instrument.algorithm + \"_\" + instrument.feedbackType;\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\n                const synthSource = [];\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs = [];\n                        for (let j = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    }\n                    else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j = Config.operatorCount - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n                                    const feedbackIndices = Config.feedbacks[instrument.feedbackType].indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                }\n                                else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    }\n                    else if (line.indexOf(\"#\") != -1) {\n                        for (let j = 0; j < Config.operatorCount; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    }\n                    else {\n                        synthSource.push(line);\n                    }\n                }\n                const wrappedFmSynth = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n                Synth.fmSynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFmSynth)(Config, Synth);\n            }\n            return Synth.fmSynthFunctionCache[fingerprint];\n        }\n        else if (instrument.type == 0) {\n            if (instrument.isUsingAdvancedLoopControls) {\n                return Synth.loopableChipSynth;\n            }\n            return Synth.chipSynth;\n        }\n        else if (instrument.type == 9) {\n            return Synth.chipSynth;\n        }\n        else if (instrument.type == 5) {\n            return Synth.harmonicsSynth;\n        }\n        else if (instrument.type == 6) {\n            return Synth.pulseWidthSynth;\n        }\n        else if (instrument.type == 8) {\n            return Synth.supersawSynth;\n        }\n        else if (instrument.type == 7) {\n            return Synth.pickedStringSynth;\n        }\n        else if (instrument.type == 2) {\n            return Synth.noiseSynth;\n        }\n        else if (instrument.type == 3) {\n            return Synth.spectrumSynth;\n        }\n        else if (instrument.type == 4) {\n            return Synth.drumsetSynth;\n        }\n        else if (instrument.type == 10) {\n            return Synth.modSynth;\n        }\n        else if (instrument.type == 11) {\n            const fingerprint = instrument.customAlgorithm.name + \"_\" + instrument.customFeedbackType.name;\n            if (Synth.fm6SynthFunctionCache[fingerprint] == undefined) {\n                const synthSource = [];\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs = [];\n                        for (let j = 0; j < instrument.customAlgorithm.carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    }\n                    else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j = Config.operatorCount + 2 - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of instrument.customAlgorithm.modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n                                    const feedbackIndices = instrument.customFeedbackType.indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                }\n                                else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    }\n                    else if (line.indexOf(\"#\") != -1) {\n                        for (let j = 0; j < Config.operatorCount + 2; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    }\n                    else {\n                        synthSource.push(line);\n                    }\n                }\n                const wrappedFm6Synth = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n                Synth.fm6SynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFm6Synth)(Config, Synth);\n            }\n            return Synth.fm6SynthFunctionCache[fingerprint];\n        }\n        else {\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\n        }\n    }\n    static wrap(x, b) {\n        return (x % b + b) % b;\n    }\n    static loopableChipSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let chipFunction = Synth.loopableChipFunctionCache[instrumentState.unisonVoices];\n        if (chipFunction == undefined) {\n            let chipSource = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {\";\n            chipSource += `\n            const aliases = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n            // const aliases = false;\n            const data = synth.tempMonoInstrumentSampleBuffer;\n            const wave = instrumentState.wave;\n            const volumeScale = instrumentState.volumeScale;\n            const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n\n            let chipWaveLoopEnd = Math.max(0, Math.min(waveLength, instrumentState.chipWaveLoopEnd));\n            let chipWaveLoopStart = Math.max(0, Math.min(chipWaveLoopEnd - 1, instrumentState.chipWaveLoopStart));\n            `;\n            chipSource += `\n            let chipWaveLoopLength = chipWaveLoopEnd - chipWaveLoopStart;\n            if (chipWaveLoopLength < 2) {\n                chipWaveLoopStart = 0;\n                chipWaveLoopEnd = waveLength;\n                chipWaveLoopLength = waveLength;\n            }\n            const chipWaveLoopMode = instrumentState.chipWaveLoopMode;\n            const chipWavePlayBackwards = instrumentState.chipWavePlayBackwards;\n            const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n            if(instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {\n            `;\n            for (let i = 1; i < voiceCount; i++) {\n                chipSource += `\n                if (instrumentState.unisonVoices <= #)\n                    tone.phases[#] = tone.phases[#-1];\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            }`;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                let phaseDelta# = tone.phaseDeltas[#] * waveLength;\n                let direction# = tone.directions[#];\n                let chipWaveCompletion# = tone.chipWaveCompletions[#];\n\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            if (chipWaveLoopMode === 3 || chipWaveLoopMode === 2 || chipWaveLoopMode === 0) {\n                // If playing once or looping, we force the correct direction,\n                // since it shouldn't really change. This is mostly so that if\n                // the mode is changed midway through playback, it won't get\n                // stuck on the wrong direction.\n                if (!chipWavePlayBackwards) {`;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        direction# = 1;\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `} else {`;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        direction# = -1;\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                }\n            }\n            if (chipWaveLoopMode === 0 || chipWaveLoopMode === 1) {`;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                    chipWaveCompletion# = 0;\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `    \n            }\n            \n            const chipWaveCompletionFadeLength = 1000;\n            let expression = +tone.expression;\n            const expressionDelta = +tone.expressionDelta;\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                let lastWave# = tone.chipWaveCompletionsLastWave[#];\n                const phaseDeltaScale# = +tone.phaseDeltaScales[#];\n                let phase# = Synth.wrap(tone.phases[#], 1) * waveLength;\n                let prevWaveIntegral# = 0;\n\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            if (!aliases) {\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                    const phase#Int = Math.floor(phase#);\n                    const index# = Synth.wrap(phase#Int, waveLength);\n                    const phaseRatio# = phase# - phase#Int;\n                    prevWaveIntegral# = +wave[index#];\n                    prevWaveIntegral# += (wave[Synth.wrap(index# + 1, waveLength)] - prevWaveIntegral#) * phaseRatio#;\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            }\n            const filters = tone.noteFilters;\n            const filterCount = tone.noteFilterCount | 0;\n            let initialFilterInput1 = +tone.initialNoteFilterInput1;\n            let initialFilterInput2 = +tone.initialNoteFilterInput2;\n            const applyFilters = Synth.applyFilters;\n            const stopIndex = bufferIndex + roundedSamplesPerTick;\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                let prevWave# = tone.chipWavePrevWaves[#];\n\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                let wrapped = 0;\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                    if (chipWaveCompletion# > 0 && chipWaveCompletion# < chipWaveCompletionFadeLength) {\n                        chipWaveCompletion#++;\n                    }\n                    phase# += phaseDelta# * direction#;\n\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                if (chipWaveLoopMode === 2) {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        if (direction# === 1) {\n                            if (phase# > waveLength) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = #;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < 0) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = 1;\n                            }\n                        }\n\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                } else if (chipWaveLoopMode === 3) {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        if (direction# === 1) {\n                            if (phase# > chipWaveLoopEnd) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = 1;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < chipWaveLoopStart) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = 1;\n                            }\n                        }\n\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                } else if (chipWaveLoopMode === 0) {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        if (direction# === 1) {\n                            if (phase# > chipWaveLoopEnd) {\n                                phase# = chipWaveLoopStart + Synth.wrap(phase# - chipWaveLoopEnd, chipWaveLoopLength);\n                                // phase# = chipWaveLoopStart;\n                                wrapped = 1;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < chipWaveLoopStart) {\n                                phase# = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phase#, chipWaveLoopLength);\n                                // phase# = chipWaveLoopEnd;\n                                wrapped = 1;\n                            }\n                        }\n\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `    \n                } else if (chipWaveLoopMode === 1) {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        if (direction# === 1) {\n                            if (phase# > chipWaveLoopEnd) {\n                                phase# = chipWaveLoopEnd - Synth.wrap(phase# - chipWaveLoopEnd, chipWaveLoopLength);\n                                // phase# = chipWaveLoopEnd;\n                                direction# = -1;\n                                wrapped = 1;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < chipWaveLoopStart) {\n                                phase# = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phase#, chipWaveLoopLength);\n                                // phase# = chipWaveLoopStart;\n                                direction# = 1;\n                                wrapped = 1;\n                            }\n                        }\n\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `    \n                }\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                    let wave# = 0;\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `    \n                let inputSample = 0;\n                if (aliases) {\n                    inputSample = 0;\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        wave# = wave[Synth.wrap(Math.floor(phase#), waveLength)];\n                        prevWave# = wave#;\n                        const completionFade# = chipWaveCompletion# > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletion#, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                        \n                        if (chipWaveCompletion# > 0) {\n                            inputSample += lastWave# * completionFade#;\n                        } else {\n                            inputSample += wave#;\n                        }\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `   \n                } else {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        const phase#Int = Math.floor(phase#);\n                        const index# = Synth.wrap(phase#Int, waveLength);\n                        let nextWaveIntegral# = wave[index#];\n                        const phaseRatio# = phase# - phase#Int;\n                        nextWaveIntegral# += (wave[Synth.wrap(index# + 1, waveLength)] - nextWaveIntegral#) * phaseRatio#;\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                    if (!(chipWaveLoopMode === 0 && chipWaveLoopStart === 0 && chipWaveLoopEnd === waveLength) && wrapped !== 0) {\n                    `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                            let pwi# = 0;\n                            const phase#_ = Math.max(0, phase# - phaseDelta# * direction#);\n                            const phase#Int = Math.floor(phase#_);\n                            const index# = Synth.wrap(phase#Int, waveLength);\n                            pwi# = wave[index#];\n                            pwi# += (wave[Synth.wrap(index# + 1, waveLength)] - pwi#) * (phase#_ - phase#Int) * direction#;\n                            prevWaveIntegral# = pwi#;\n                            `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `    \n                    }\n                    if (chipWaveLoopMode === 1 && wrapped !== 0) {\n                    `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                            wave# = prevWave#;\n                            `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                    } else {\n                    `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                            wave# = (nextWaveIntegral# - prevWaveIntegral#) / (phaseDelta# * direction#);\n                            `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                    }\n                    `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                        prevWave# = wave#;\n                        prevWaveIntegral# = nextWaveIntegral#;\n                        const completionFade# = chipWaveCompletion# > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletion#, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                        if (chipWaveCompletion# > 0) {\n                            inputSample += lastWave# * completionFade#;\n                        } else {\n                            inputSample += wave#;\n                        }\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n                }\n                const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n                initialFilterInput2 = initialFilterInput1;\n                initialFilterInput1 = inputSample * volumeScale;\n                const output = sample * expression;\n                expression += expressionDelta;\n                data[sampleIndex] += output;\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                    phaseDelta# *= phaseDeltaScale#;\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            }\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                tone.phases[#] = phase# / waveLength;\n                tone.phaseDeltas[#] = phaseDelta# / waveLength;\n                tone.directions[#] = direction#;\n                tone.chipWaveCompletions[#] = chipWaveCompletion#;\n                tone.chipWavePrevWaves[#] = prevWave#;\n                tone.chipWaveCompletionsLastWave[#] = lastWave#;\n                \n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n            tone.expression = expression;\n            synth.sanitizeFilters(filters);\n            tone.initialNoteFilterInput1 = initialFilterInput1;\n            tone.initialNoteFilterInput2 = initialFilterInput2;\n        }`;\n            chipFunction = new Function(\"Config\", \"Synth\", \"effectsIncludeDistortion\", chipSource)(Config, Synth, effectsIncludeDistortion);\n            Synth.loopableChipFunctionCache[instrumentState.unisonVoices] = chipFunction;\n        }\n        chipFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static chipSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let chipFunction = Synth.chipFunctionCache[instrumentState.unisonVoices];\n        if (chipFunction == undefined) {\n            let chipSource = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {\";\n            chipSource += `\n        const aliases = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n        const volumeScale = instrumentState.volumeScale;\n\n        const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `let phaseDelta# = tone.phaseDeltas[#] * waveLength;\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            `.replaceAll(\"#\", i + \"\");\n            }\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `let phase# = (tone.phases[#] % 1) * waveLength;\n            let prevWaveIntegral# = 0.0;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        if (!aliases) {\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `const phase#Int = phase# | 0;\n                const index# = phase#Int % waveLength;\n                prevWaveIntegral# = +wave[index#]\n                const phase#Ratio = phase# - phase#Int;\n                prevWaveIntegral# += (wave[index# + 1] - prevWaveIntegral#) * phase#Ratio;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `\n        } \n\n        const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        let inputSample = 0;\n            if (aliases) {\n                `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `phase# += phaseDelta#;\n\n                    const inputSample# = wave[(0 | phase#) % waveLength];\n                    `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleListA = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleListA.push(\"inputSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            chipSource += \"inputSample = \" + sampleListA.join(\" + \") + \";\";\n            chipSource += `} else {\n                    `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `phase# += phaseDelta#;\n\n                     \n                        const phase#Int = phase# | 0;\n                        const index# = phase#Int % waveLength;\n                        let nextWaveIntegral# = wave[index#]\n                        const phase#Ratio = phase# - phase#Int;\n                        nextWaveIntegral# += (wave[index# + 1] - nextWaveIntegral#) * phase#Ratio;\n                        const wave# = (nextWaveIntegral# - prevWaveIntegral#) / phaseDelta#;\n                        prevWaveIntegral# = nextWaveIntegral#;\n                        let inputSample# = wave#;\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleListB = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleListB.push(\"inputSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            chipSource += \"inputSample = \" + sampleListB.join(\" + \") + \";\";\n            chipSource += `}\n        `;\n            chipSource += `const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample * volumeScale;`;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += `const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                chipSource += `tone.phases[#] = phase# / waveLength;\n            tone.phaseDeltas[#] = phaseDelta# / waveLength;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            chipSource += \"tone.expression = expression;\";\n            chipSource += `\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            chipFunction = new Function(\"Config\", \"Synth\", \"effectsIncludeDistortion\", chipSource)(Config, Synth, effectsIncludeDistortion);\n            Synth.chipFunctionCache[instrumentState.unisonVoices] = chipFunction;\n        }\n        chipFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static harmonicsSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let harmonicsFunction = Synth.harmonicsFunctionCache[instrumentState.unisonVoices];\n        if (harmonicsFunction == undefined) {\n            let harmonicsSource = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {\";\n            harmonicsSource += `\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n        const waveLength = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n         `;\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `let phaseDelta# = tone.phaseDeltas[#] * waveLength;\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            `.replaceAll(\"#\", i + \"\");\n            }\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `let phase# = (tone.phases[#] % 1) * waveLength;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            harmonicsSource += `const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `const phase#Int = phase# | 0;\n            const index# = phase#Int % waveLength;\n            prevWaveIntegral# = +wave[index#]\n            const phase#Ratio = phase# - phase#Int;\n            prevWaveIntegral# += (wave[index# + 1] - prevWaveIntegral#) * phase#Ratio;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            harmonicsSource += `const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `\n                        phase# += phaseDelta#;\n                        const phase#Int = phase# | 0;\n                        const index# = phase#Int % waveLength;\n                        let nextWaveIntegral# = wave[index#]\n                        const phase#Ratio = phase# - phase#Int;\n                        nextWaveIntegral# += (wave[index# + 1] - nextWaveIntegral#) * phase#Ratio;\n                        const wave# = (nextWaveIntegral# - prevWaveIntegral#) / phaseDelta#;\n                        prevWaveIntegral# = nextWaveIntegral#;\n                        let inputSample# = wave#;\n                        `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"inputSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            harmonicsSource += \"inputSample = \" + sampleList.join(\" + \") + \";\";\n            harmonicsSource += `const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;`;\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            harmonicsSource += `const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                harmonicsSource += `tone.phases[#] = phase# / waveLength;\n            tone.phaseDeltas[#] = phaseDelta# / waveLength;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            harmonicsSource += \"tone.expression = expression;\";\n            harmonicsSource += `\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            harmonicsFunction = new Function(\"Config\", \"Synth\", harmonicsSource)(Config, Synth);\n            Synth.harmonicsFunctionCache[instrumentState.unisonVoices] = harmonicsFunction;\n        }\n        harmonicsFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static pickedStringSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = instrumentState.unisonVoices;\n        let pickedStringFunction = Synth.pickedStringFunctionCache[voiceCount];\n        if (pickedStringFunction == undefined) {\n            let pickedStringSource = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n            pickedStringSource += `\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n                if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[1] = tone.phases[0];\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (`;\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            pickedStringSource += sampleList.join(\" + \");\n            pickedStringSource += `) * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t\t}`;\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\n                const lines = [];\n                for (let voice = 0; voice < voiceCount; voice++) {\n                    lines.push(line.replace(/\\#/g, String(voice)));\n                }\n                return lines.join(\"\\n\");\n            });\n            pickedStringFunction = new Function(\"Config\", \"Synth\", pickedStringSource)(Config, Synth);\n            Synth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\n        }\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static effectsSynth(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) {\n        const usesDistortion = effectsIncludeDistortion(instrumentState.effects);\n        const usesBitcrusher = effectsIncludeBitcrusher(instrumentState.effects);\n        const usesEqFilter = instrumentState.eqFilterCount > 0;\n        const usesPanning = effectsIncludePanning(instrumentState.effects);\n        const usesChorus = effectsIncludeChorus(instrumentState.effects);\n        const usesEcho = effectsIncludeEcho(instrumentState.effects);\n        const usesReverb = effectsIncludeReverb(instrumentState.effects);\n        const usesGranular = effectsIncludeGranular(instrumentState.effects);\n        const usesRingModulation = effectsIncludeRingModulation(instrumentState.effects);\n        let signature = 0;\n        if (usesDistortion)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesBitcrusher)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesEqFilter)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesPanning)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesChorus)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesEcho)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesReverb)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesGranular)\n            signature = signature | 1;\n        signature = signature << 1;\n        if (usesRingModulation)\n            signature = signature | 1;\n        let effectsFunction = Synth.effectsFunctionCache[signature];\n        if (effectsFunction == undefined) {\n            let effectsSource = \"return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {\";\n            const usesDelays = usesChorus || usesReverb || usesEcho || usesGranular;\n            effectsSource += `\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;\n                `;\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`;\n            }\n            if (usesGranular) {\n                effectsSource += `\n                let granularWet = instrumentState.granularMix;\n                const granularMixDelta = instrumentState.granularMixDelta;\n                let granularDry = 1.0 - granularWet; \n                const granularDelayLine = instrumentState.granularDelayLine;\n                const granularGrains = instrumentState.granularGrains;\n                let granularGrainCount = instrumentState.granularGrainsLength;\n                const granularDelayLineLength = granularDelayLine.length;\n                const granularDelayLineMask = granularDelayLineLength - 1;\n                let granularDelayLineIndex = instrumentState.granularDelayLineIndex;\n                const usesRandomGrainLocation = instrumentState.usesRandomGrainLocation;\n                const computeGrains = instrumentState.computeGrains;\n                instrumentState.granularDelayLineDirty = true;\n                `;\n            }\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`;\n            }\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`;\n            }\n            if (usesRingModulation) {\n                effectsSource += `\n\t\t\t\t\n                let ringModMix = +instrumentState.ringModMix;\n                let ringModMixDelta = +instrumentState.ringModMixDelta;\n                let ringModPhase = +instrumentState.ringModPhase;\n                let ringModPhaseDelta = +instrumentState.ringModPhaseDelta;\n                let ringModPhaseDeltaScale = +instrumentState.ringModPhaseDeltaScale;\n                let ringModWaveformIndex = +instrumentState.ringModWaveformIndex;\n                let ringModMixFade = +instrumentState.ringModMixFade;\n                let ringModMixFadeDelta = +instrumentState.ringModMixFadeDelta;\n                \n                let ringModPulseWidth = +instrumentState.ringModPulseWidth;\n\n                let waveform = Config.operatorWaves[ringModWaveformIndex].samples; \n                if (ringModWaveformIndex == Config.operatorWaves.dictionary['pulse width'].index) {\n                    waveform = Synth.getOperatorWave(ringModWaveformIndex, ringModPulseWidth).samples;\n                }\n                const waveformLength = waveform.length - 1;\n                `;\n            }\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;`;\n            }\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`;\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`;\n            }\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`;\n            }\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`;\n            }\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`;\n            }\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n            for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                    `;\n            if (usesGranular) {\n                effectsSource += `\n                let sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n                let granularOutput = 0;\n                for (let grainIndex = 0; grainIndex < granularGrainCount; grainIndex++) {\n                    const grain = granularGrains[grainIndex];\n                    if(computeGrains) {\n                        if(grain.delay > 0) {\n                            grain.delay--;\n                        } else {\n                            const grainDelayLinePosition = grain.delayLinePosition;\n                            const grainDelayLinePositionInt = grainDelayLinePosition | 0;\n                            // const grainDelayLinePositionT = grainDelayLinePosition - grainDelayLinePositionInt;\n                            let grainAgeInSamples = grain.ageInSamples;\n                            const grainMaxAgeInSamples = grain.maxAgeInSamples;\n                            // const grainSample0 = granularDelayLine[((granularDelayLineIndex + (granularDelayLineLength - grainDelayLinePositionInt))    ) & granularDelayLineMask];\n                            // const grainSample1 = granularDelayLine[((granularDelayLineIndex + (granularDelayLineLength - grainDelayLinePositionInt)) + 1) & granularDelayLineMask];\n                            // let grainSample = grainSample0 + (grainSample1 - grainSample0) * grainDelayLinePositionT; // Linear interpolation (@TODO: sounds quite bad?)\n                            let grainSample = granularDelayLine[((granularDelayLineIndex + (granularDelayLineLength - grainDelayLinePositionInt))    ) & granularDelayLineMask]; // No interpolation\n                            `;\n                if (Config.granularEnvelopeType == 0) {\n                    effectsSource += `\n                                const grainEnvelope = grain.parabolicEnvelopeAmplitude;\n                                `;\n                }\n                else if (Config.granularEnvelopeType == 1) {\n                    effectsSource += `\n                                const grainEnvelope = grain.rcbEnvelopeAmplitude;\n                                `;\n                }\n                effectsSource += `\n                            grainSample *= grainEnvelope;\n                            granularOutput += grainSample;\n                            if (grainAgeInSamples > grainMaxAgeInSamples) {\n                                if (granularGrainCount > 0) {\n                                    // Faster equivalent of .pop, ignoring the order in the array.\n                                    const lastGrainIndex = granularGrainCount - 1;\n                                    const lastGrain = granularGrains[lastGrainIndex];\n                                    granularGrains[grainIndex] = lastGrain;\n                                    granularGrains[lastGrainIndex] = grain;\n                                    granularGrainCount--;\n                                    grainIndex--;\n                                    // ^ Dangerous, since this could end up causing an infinite loop,\n                                    // but should be okay in this case.\n                                }\n                            } else {\n                                grainAgeInSamples++;\n                            `;\n                if (Config.granularEnvelopeType == 0) {\n                    effectsSource += `\n                                    grain.parabolicEnvelopeAmplitude += grain.parabolicEnvelopeSlope;\n                                    grain.parabolicEnvelopeSlope += grain.parabolicEnvelopeCurve;\n                                    `;\n                }\n                else if (Config.granularEnvelopeType == 1) {\n                    effectsSource += `\n                                    grain.updateRCBEnvelope();\n                                    `;\n                }\n                effectsSource += `\n                                grain.ageInSamples = grainAgeInSamples;\n                                // if(usesRandomGrainLocation) {\n                                //     grain.delayLine -= grainPitchShift;\n                                // }\n                            }\n                        }\n                    }\n                }\n                granularWet += granularMixDelta;\n                granularDry -= granularMixDelta;\n                granularOutput *= Config.granularOutputLoudnessCompensation;\n                granularDelayLine[granularDelayLineIndex] = sample;\n                granularDelayLineIndex = (granularDelayLineIndex + 1) & granularDelayLineMask;\n                sample = sample * granularDry + granularOutput * granularWet;\n                tempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;\n                `;\n            }\n            else {\n                effectsSource += `let sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n                tempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`;\n            }\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`;\n            }\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`;\n            }\n            if (usesRingModulation) {\n                effectsSource += ` \n                \n                const ringModOutput = sample * waveform[(ringModPhase*waveformLength)|0];\n                const ringModMixF = Math.max(0, ringModMix * ringModMixFade);\n                sample = sample * (1 - ringModMixF) + ringModOutput * ringModMixF;\n\n                ringModMix += ringModMixDelta;\n                ringModPhase += ringModPhaseDelta;\n                ringModPhase = ringModPhase % 1.0;\n                ringModPhaseDelta *= ringModPhaseDeltaScale;\n                ringModMixFade += ringModMixFadeDelta;\n                `;\n            }\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;`;\n            }\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`;\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`;\n            }\n            else {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;`;\n            }\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`;\n            }\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;\n                    `;\n            }\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;`;\n            }\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;`;\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`;\n            }\n            effectsSource += `\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);`;\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`;\n            }\n            if (usesGranular) {\n                effectsSource += `\n                    instrumentState.granularMix = granularWet;\n                    instrumentState.granularGrainsLength = granularGrainCount;\n                    instrumentState.granularDelayLineIndex = granularDelayLineIndex;\n                `;\n            }\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`;\n            }\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`;\n            }\n            if (usesRingModulation) {\n                effectsSource += ` \n                instrumentState.ringModMix = ringModMix;\n                instrumentState.ringModMixDelta = ringModMixDelta;\n                instrumentState.ringModPhase = ringModPhase;\n                instrumentState.ringModPhaseDelta = ringModPhaseDelta;\n                instrumentState.ringModPhaseDeltaScale = ringModPhaseDeltaScale;\n                instrumentState.ringModWaveformIndex = ringModWaveformIndex;\n                instrumentState.ringModPulseWidth = ringModPulseWidth;\n                instrumentState.ringModMixFade = ringModMixFade;\n                 `;\n            }\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`;\n            }\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`;\n            }\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`;\n            }\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`;\n            }\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`;\n            }\n            effectsSource += \"}\";\n            effectsFunction = new Function(\"Config\", \"Synth\", effectsSource)(Config, Synth);\n            Synth.effectsFunctionCache[signature] = effectsFunction;\n        }\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n    }\n    static pulseWidthSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let pulseFunction = Synth.pulseFunctionCache[instrumentState.unisonVoices];\n        if (pulseFunction == undefined) {\n            let pulseSource = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {\";\n            pulseSource += `\n        const data = synth.tempMonoInstrumentSampleBuffer;\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                pulseSource += `let phaseDelta# = tone.phaseDeltas[#];\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            `.replaceAll(\"#\", i + \"\");\n            }\n            for (let i = 0; i < voiceCount; i++) {\n                pulseSource += `phase# = (tone.phases[#] % 1);\n            `.replaceAll(\"#\", i + \"\");\n            }\n            pulseSource += `let pulseWidth = tone.pulseWidth;\n        const pulseWidthDelta = tone.pulseWidthDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                pulseSource += `const sawPhaseA# = phase# % 1;\n                const sawPhaseB# = (phase# + pulseWidth) % 1;\n                let pulseWave# = sawPhaseB# - sawPhaseA#;\n                if (!instrumentState.aliases) {\n                    if (sawPhaseA# < phaseDelta#) {\n                        var t = sawPhaseA# / phaseDelta#;\n                        pulseWave# += (t + t - t * t - 1) * 0.5;\n                    } else if (sawPhaseA# > 1.0 - phaseDelta#) {\n                        var t = (sawPhaseA# - 1.0) / phaseDelta#;\n                        pulseWave# += (t + t + t * t + 1) * 0.5;\n                    }\n                    if (sawPhaseB# < phaseDelta#) {\n                        var t = sawPhaseB# / phaseDelta#;\n                        pulseWave# -= (t + t - t * t - 1) * 0.5;\n                    } else if (sawPhaseB# > 1.0 - phaseDelta#) {\n                        var t = (sawPhaseB# - 1.0) / phaseDelta#;\n                        pulseWave# -= (t + t + t * t + 1) * 0.5;\n                    }\n                }\n\n                `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"pulseWave\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            pulseSource += \"let inputSample = \" + sampleList.join(\" + \") + \";\";\n            pulseSource += `const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;`;\n            for (let i = 0; i < voiceCount; i++) {\n                pulseSource += `phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            pulseSource += `pulseWidth += pulseWidthDelta;\n\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }`;\n            for (let i = 0; i < voiceCount; i++) {\n                pulseSource += `tone.phases[#] = phase#;\n            tone.phaseDeltas[#] = phaseDelta#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            pulseSource += `tone.expression = expression;\n        tone.pulseWidth = pulseWidth;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            pulseFunction = new Function(\"Config\", \"Synth\", pulseSource)(Config, Synth);\n            Synth.pulseFunctionCache[instrumentState.unisonVoices] = pulseFunction;\n        }\n        pulseFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static supersawSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const voiceCount = Config.supersawVoiceCount | 0;\n        let phaseDelta = tone.phaseDeltas[0];\n        const phaseDeltaScale = +tone.phaseDeltaScales[0];\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        let phases = tone.phases;\n        let dynamism = +tone.supersawDynamism;\n        const dynamismDelta = +tone.supersawDynamismDelta;\n        const unisonDetunes = tone.supersawUnisonDetunes;\n        let shape = +tone.supersawShape;\n        const shapeDelta = +tone.supersawShapeDelta;\n        let delayLength = +tone.supersawDelayLength;\n        const delayLengthDelta = +tone.supersawDelayLengthDelta;\n        const delayLine = tone.supersawDelayLine;\n        const delayBufferMask = (delayLine.length - 1) >> 0;\n        let delayIndex = tone.supersawDelayIndex | 0;\n        delayIndex = (delayIndex & delayBufferMask) + delayLine.length;\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            let phase = (phases[0] + phaseDelta) % 1.0;\n            let supersawSample = phase - 0.5 * (1.0 + (voiceCount - 1.0) * dynamism);\n            if (!instrumentState.aliases) {\n                if (phase < phaseDelta) {\n                    var t = phase / phaseDelta;\n                    supersawSample -= (t + t - t * t - 1) * 0.5;\n                }\n                else if (phase > 1.0 - phaseDelta) {\n                    var t = (phase - 1.0) / phaseDelta;\n                    supersawSample -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n            phases[0] = phase;\n            for (let i = 1; i < voiceCount; i++) {\n                const detunedPhaseDelta = phaseDelta * unisonDetunes[i];\n                let phase = (phases[i] + detunedPhaseDelta) % 1.0;\n                supersawSample += phase * dynamism;\n                if (!instrumentState.aliases) {\n                    if (phase < detunedPhaseDelta) {\n                        const t = phase / detunedPhaseDelta;\n                        supersawSample -= (t + t - t * t - 1) * 0.5 * dynamism;\n                    }\n                    else if (phase > 1.0 - detunedPhaseDelta) {\n                        const t = (phase - 1.0) / detunedPhaseDelta;\n                        supersawSample -= (t + t + t * t + 1) * 0.5 * dynamism;\n                    }\n                }\n                phases[i] = phase;\n            }\n            delayLine[delayIndex & delayBufferMask] = supersawSample;\n            const delaySampleTime = delayIndex - delayLength;\n            const lowerIndex = delaySampleTime | 0;\n            const upperIndex = lowerIndex + 1;\n            const delayRatio = delaySampleTime - lowerIndex;\n            const prevDelaySample = delayLine[lowerIndex & delayBufferMask];\n            const nextDelaySample = delayLine[upperIndex & delayBufferMask];\n            const delaySample = prevDelaySample + (nextDelaySample - prevDelaySample) * delayRatio;\n            delayIndex++;\n            const inputSample = supersawSample - delaySample * shape;\n            const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n            phaseDelta *= phaseDeltaScale;\n            dynamism += dynamismDelta;\n            shape += shapeDelta;\n            delayLength += delayLengthDelta;\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n        tone.phaseDeltas[0] = phaseDelta;\n        tone.expression = expression;\n        tone.supersawDynamism = dynamism;\n        tone.supersawShape = shape;\n        tone.supersawDelayLength = delayLength;\n        tone.supersawDelayIndex = delayIndex;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n    static noiseSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let noiseFunction = Synth.noiseFunctionCache[instrumentState.unisonVoices];\n        if (noiseFunction == undefined) {\n            let noiseSource = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n            noiseSource += `\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `\n            let phaseDelta# = tone.phaseDeltas[#];\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n            let noiseSample# = +tone.noiseSamples[#];\n            // This is for a \"legacy\" style simplified 1st order lowpass filter with\n            // a cutoff frequency that is relative to the tone's fundamental frequency.\n            const pitchRelativefilter# = Math.min(1.0, phaseDelta# * instrumentState.noisePitchFilterMult);\n            \n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[#-1];\n            `.replaceAll(\"#\", i + \"\");\n            }\n            noiseSource += `\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        const phaseMask = Config.spectrumNoiseLength - 1;\n\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `let phase# = (tone.phases[#] % 1) * Config.chipNoiseLength;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            noiseSource += \"let test = true;\";\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `\n            if (tone.phases[#] == 0.0) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phase# = Math.random() * Config.chipNoiseLength;\n                if (@ <= # && test && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {`.replaceAll(\"#\", i + \"\").replaceAll(\"@\", voiceCount + \"\").replaceAll(\"~\", tone.phases.length + \"\");\n                for (let j = i + 1; j < tone.phases.length; j++) {\n                    noiseSource += \"phase~ = phase#;\".replaceAll(\"#\", i + \"\").replaceAll(\"~\", j + \"\");\n                }\n                noiseSource += `\n                    test = false;\n                }\n            }`;\n            }\n            noiseSource += `\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            `;\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `\n                let waveSample# = wave[phase# & phaseMask];\n\n                noiseSample# += (waveSample# - noiseSample#) * pitchRelativefilter#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"noiseSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            noiseSource += \"let inputSample = \" + sampleList.join(\" + \") + \";\";\n            noiseSource += `const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;`;\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            noiseSource += `const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }`;\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `tone.phases[#] = phase# / `.replaceAll(\"#\", i + \"\") + Config.chipNoiseLength + `;\n            tone.phaseDeltas[#] = phaseDelta#;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            noiseSource += \"tone.expression = expression;\";\n            for (let i = 0; i < voiceCount; i++) {\n                noiseSource += `tone.noiseSamples[#] = noiseSample#;\n             `.replaceAll(\"#\", i + \"\");\n            }\n            noiseSource += `\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            noiseFunction = new Function(\"Config\", \"Synth\", noiseSource)(Config, Synth);\n            ;\n            Synth.noiseFunctionCache[instrumentState.unisonVoices] = noiseFunction;\n        }\n        noiseFunction(synth, bufferIndex, runLength, tone, instrumentState);\n    }\n    static spectrumSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let spectrumFunction = Synth.spectrumFunctionCache[instrumentState.unisonVoices];\n        if (spectrumFunction == undefined) {\n            let spectrumSource = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n            spectrumSource += `\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n        const samplesInPeriod = (1 << 7);\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `\n                if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[#-1];\n                let phaseDelta# = tone.phaseDeltas[#] * samplesInPeriod;\n                let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n                let noiseSample# = +tone.noiseSamples[#];\n                // This is for a \"legacy\" style simplified 1st order lowpass filter with\n                // a cutoff frequency that is relative to the tone's fundamental frequency.\n                const pitchRelativefilter# = Math.min(1.0, phaseDelta#);\n                `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        const phaseMask = Config.spectrumNoiseLength - 1;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `let phase# = (tone.phases[#] % 1) * Config.spectrumNoiseLength;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `\n            if (tone.phases[0] == 0.0) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phase0 = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta0;\n            `;\n            for (let i = 1; i < voiceCount; i++) {\n                spectrumSource += `\n                if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {\n                    phase# = phase0;\n                }\n            `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `}`;\n            for (let i = 1; i < voiceCount; i++) {\n                spectrumSource += `\n                if (tone.phases[#] == 0.0 && !(instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)) {\n                    // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phase# = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta#;\n                }\n            `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {`;\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `\n                const phase#Int = phase# | 0;\n                const index# = phase#Int & phaseMask;\n                let waveSample# = wave[index#]\n                const phase#Ratio = phase# - phase#Int;\n                waveSample# += (wave[index# + 1] - waveSample#) * phase#Ratio;\n\n                noiseSample# += (waveSample# - noiseSample#) * pitchRelativefilter#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"noiseSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            spectrumSource += \"let inputSample = \" + sampleList.join(\" + \") + \";\";\n            spectrumSource += `const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;`;\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }`;\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `tone.phases[#] = phase# / `.replaceAll(\"#\", i + \"\") + Config.spectrumNoiseLength + `;\n            tone.phaseDeltas[#] = phaseDelta# / samplesInPeriod;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += \"tone.expression = expression;\";\n            for (let i = 0; i < voiceCount; i++) {\n                spectrumSource += `tone.noiseSamples[#] = noiseSample#;\n             `.replaceAll(\"#\", i + \"\");\n            }\n            spectrumSource += `\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            spectrumFunction = new Function(\"Config\", \"Synth\", spectrumSource)(Config, Synth);\n            ;\n            Synth.spectrumFunctionCache[instrumentState.unisonVoices] = spectrumFunction;\n        }\n        spectrumFunction(synth, bufferIndex, runLength, tone, instrumentState);\n    }\n    static drumsetSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const voiceCount = Math.max(2, instrumentState.unisonVoices);\n        let drumFunction = Synth.drumFunctionCache[instrumentState.unisonVoices];\n        if (drumFunction == undefined) {\n            let drumSource = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n            drumSource += `\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        let wave = instrumentState.getDrumsetWave(tone.drumsetPitch);\n        const referenceDelta = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch);\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                drumSource += `let phaseDelta# = tone.phaseDeltas[#] / referenceDelta;\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;`;\n            for (let i = 0; i < voiceCount; i++) {\n                drumSource += `let phase# = (tone.phases[#] % 1) * Config.spectrumNoiseLength;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `\n        if (tone.phases[0] == 0.0) {\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phase0 = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta0;\n        `;\n            for (let i = 1; i < voiceCount; i++) {\n                drumSource += `\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {\n                phase# = phase0;\n            }\n        `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `}`;\n            for (let i = 1; i < voiceCount; i++) {\n                drumSource += `\n            if (tone.phases[#] == 0.0 && !(instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phase# = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta#;\n            }\n        `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `const phaseMask = Config.spectrumNoiseLength - 1;\n\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        `;\n            for (let i = 0; i < voiceCount; i++) {\n                drumSource += `\n                const phase#Int = phase# | 0;\n                const index# = phase#Int & phaseMask;\n                let noiseSample# = wave[index#]\n                const phase#Ratio = phase# - phase#Int;\n                noiseSample# += (wave[index# + 1] - noiseSample#) * phase#Ratio;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"noiseSample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            drumSource += \"let inputSample = \" + sampleList.join(\" + \") + \";\";\n            drumSource += `const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;`;\n            for (let i = 0; i < voiceCount; i++) {\n                drumSource += `phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }`;\n            for (let i = 0; i < voiceCount; i++) {\n                drumSource += `tone.phases[#] = phase# / `.replaceAll(\"#\", i + \"\") + Config.spectrumNoiseLength + `;\n            tone.phaseDeltas[#] = phaseDelta# * referenceDelta;\n            `.replaceAll(\"#\", i + \"\");\n            }\n            drumSource += `tone.expression = expression;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }`;\n            drumFunction = new Function(\"Config\", \"Synth\", \"InstrumentState\", drumSource)(Config, Synth, InstrumentState);\n            ;\n            Synth.drumFunctionCache[instrumentState.unisonVoices] = drumFunction;\n        }\n        drumFunction(synth, bufferIndex, runLength, tone, instrumentState);\n    }\n    static modSynth(synth, stereoBufferIndex, roundedSamplesPerTick, tone, instrument) {\n        if (!synth.song)\n            return;\n        let mod = Config.modCount - 1 - tone.pitches[0];\n        if (instrument.invalidModulators[mod])\n            return;\n        let setting = instrument.modulators[mod];\n        let usedInstruments = [];\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\n            usedInstruments.push(0);\n        }\n        else {\n            if (instrument.modInstruments[mod] == synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                for (let i = 0; i < synth.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                    usedInstruments.push(i);\n                }\n            }\n            else if (instrument.modInstruments[mod] > synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                if (synth.song.getPattern(instrument.modChannels[mod], synth.bar) != null)\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod], synth.bar).instruments;\n            }\n            else {\n                usedInstruments.push(instrument.modInstruments[mod]);\n            }\n        }\n        for (let instrumentIndex = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n            for (let i = 0; i < synth.heldMods.length; i++) {\n                if (Config.modulators[instrument.modulators[mod]].forSong) {\n                    if (synth.heldMods[i].setting == setting)\n                        synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n                }\n                else if (synth.heldMods[i].channelIndex == instrument.modChannels[mod] && synth.heldMods[i].instrumentIndex == usedInstruments[instrumentIndex] && synth.heldMods[i].setting == setting) {\n                    synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n                }\n            }\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\n                synth.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\n            }\n            else if (setting == Config.modulators.dictionary[\"reset envelope\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                const tgtInstrumentState = synth.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    tgtInstrumentState.envelopeTime[envelopeTarget] = 0;\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\n                synth.wantToSkip = true;\n            }\n            else if (setting == Config.modulators.dictionary[\"song eq\"].index) {\n                const tgtSong = synth.song;\n                let dotTarget = instrument.modFilterTypes[mod] | 0;\n                if (dotTarget == 0) {\n                    let pinIdx = 0;\n                    const currentPart = synth.getTicksIntoBar() / Config.ticksPerPart;\n                    while (tone.note.start + tone.note.pins[pinIdx].time <= currentPart)\n                        pinIdx++;\n                    let lerpEndRatio = ((currentPart - tone.note.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note.pins[pinIdx - 1].time) / (tone.note.pins[pinIdx].time - tone.note.pins[pinIdx - 1].time);\n                    if (tgtSong.eqSubFilters[tone.note.pins[pinIdx - 1].size] != null || tgtSong.eqSubFilters[tone.note.pins[pinIdx].size] != null) {\n                        tgtSong.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtSong.eqSubFilters[tone.note.pins[pinIdx - 1].size], tgtSong.eqSubFilters[tone.note.pins[pinIdx].size], lerpEndRatio);\n                    }\n                    else {\n                        tgtSong.tmpEqFilterEnd = tgtSong.eqFilter;\n                    }\n                }\n                else {\n                    for (let i = 0; i < Config.filterMorphCount; i++) {\n                        if (tgtSong.tmpEqFilterEnd == tgtSong.eqSubFilters[i] && tgtSong.tmpEqFilterEnd != null) {\n                            tgtSong.tmpEqFilterEnd = new FilterSettings();\n                            tgtSong.tmpEqFilterEnd.fromJsonObject(tgtSong.eqSubFilters[i].toJsonObject());\n                        }\n                    }\n                    if (tgtSong.tmpEqFilterEnd == null) {\n                        tgtSong.tmpEqFilterEnd = new FilterSettings();\n                        tgtSong.tmpEqFilterEnd.fromJsonObject(tgtSong.eqFilter.toJsonObject());\n                    }\n                    if (tgtSong.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                        if (dotTarget % 2) {\n                            tgtSong.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                        }\n                        else {\n                            tgtSong.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                        }\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"eq filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                if (!tgtInstrument.eqFilterType) {\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n                    if (dotTarget == 0) {\n                        let pinIdx = 0;\n                        const currentPart = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note.start + tone.note.pins[pinIdx].time <= currentPart)\n                            pinIdx++;\n                        let lerpEndRatio = ((currentPart - tone.note.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note.pins[pinIdx - 1].time) / (tone.note.pins[pinIdx].time - tone.note.pins[pinIdx - 1].time);\n                        if (tgtInstrument.eqSubFilters[tone.note.pins[pinIdx - 1].size] != null || tgtInstrument.eqSubFilters[tone.note.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtInstrument.eqSubFilters[tone.note.pins[pinIdx - 1].size], tgtInstrument.eqSubFilters[tone.note.pins[pinIdx].size], lerpEndRatio);\n                        }\n                        else {\n                            tgtInstrument.tmpEqFilterEnd = tgtInstrument.eqFilter;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpEqFilterEnd == tgtInstrument.eqSubFilters[i] && tgtInstrument.tmpEqFilterEnd != null) {\n                                tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqSubFilters[i].toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpEqFilterEnd == null) {\n                            tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqFilter.toJsonObject());\n                        }\n                        if (tgtInstrument.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) {\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            }\n                            else {\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"note filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                if (!tgtInstrument.noteFilterType) {\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n                    if (dotTarget == 0) {\n                        let pinIdx = 0;\n                        const currentPart = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note.start + tone.note.pins[pinIdx].time <= currentPart)\n                            pinIdx++;\n                        let lerpEndRatio = ((currentPart - tone.note.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note.pins[pinIdx - 1].time) / (tone.note.pins[pinIdx].time - tone.note.pins[pinIdx - 1].time);\n                        if (tgtInstrument.noteSubFilters[tone.note.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note.pins[pinIdx - 1].size], tgtInstrument.noteSubFilters[tone.note.pins[pinIdx].size], lerpEndRatio);\n                        }\n                        else {\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i].toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\n                        }\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) {\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            }\n                            else {\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"individual envelope speed\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                let speed = tone.expression + tone.expressionDelta;\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    if (Number.isInteger(speed)) {\n                        tgtInstrument.envelopes[envelopeTarget].tempEnvelopeSpeed = Config.perEnvelopeSpeedIndices[speed];\n                    }\n                    else {\n                        speed = (1 - (speed % 1)) * Config.perEnvelopeSpeedIndices[Math.floor(speed)] + (speed % 1) * Config.perEnvelopeSpeedIndices[Math.ceil(speed)];\n                        tgtInstrument.envelopes[envelopeTarget].tempEnvelopeSpeed = speed;\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"individual envelope lower bound\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                let bound = tone.expression + tone.expressionDelta;\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    tgtInstrument.envelopes[envelopeTarget].tempEnvelopeLowerBound = bound / 10;\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"individual envelope upper bound\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                let bound = tone.expression + tone.expressionDelta;\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    tgtInstrument.envelopes[envelopeTarget].tempEnvelopeUpperBound = bound / 10;\n                }\n            }\n        }\n    }\n    static findRandomZeroCrossing(wave, waveLength) {\n        let phase = Math.random() * waveLength;\n        const phaseMask = waveLength - 1;\n        let indexPrev = phase & phaseMask;\n        let wavePrev = wave[indexPrev];\n        const stride = 16;\n        for (let attemptsRemaining = 128; attemptsRemaining > 0; attemptsRemaining--) {\n            const indexNext = (indexPrev + stride) & phaseMask;\n            const waveNext = wave[indexNext];\n            if (wavePrev * waveNext <= 0.0) {\n                for (let i = 0; i < stride; i++) {\n                    const innerIndexNext = (indexPrev + 1) & phaseMask;\n                    const innerWaveNext = wave[innerIndexNext];\n                    if (wavePrev * innerWaveNext <= 0.0) {\n                        const slope = innerWaveNext - wavePrev;\n                        phase = indexPrev;\n                        if (Math.abs(slope) > 0.00000001) {\n                            phase += -wavePrev / slope;\n                        }\n                        phase = Math.max(0, phase) % waveLength;\n                        break;\n                    }\n                    else {\n                        indexPrev = innerIndexNext;\n                        wavePrev = innerWaveNext;\n                    }\n                }\n                break;\n            }\n            else {\n                indexPrev = indexNext;\n                wavePrev = waveNext;\n            }\n        }\n        return phase;\n    }\n    static instrumentVolumeToVolumeMult(instrumentVolume) {\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\n    }\n    static volumeMultToInstrumentVolume(volumeMult) {\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\n    }\n    static noteSizeToVolumeMult(size) {\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\n    }\n    static volumeMultToNoteSize(volumeMult) {\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\n    }\n    static fadeInSettingToSeconds(setting) {\n        return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\n    }\n    static secondsToFadeInSetting(seconds) {\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\n    }\n    static fadeOutSettingToTicks(setting) {\n        return Config.fadeOutTicks[setting];\n    }\n    static ticksToFadeOutSetting(ticks) {\n        let lower = Config.fadeOutTicks[0];\n        if (ticks <= lower)\n            return 0;\n        for (let i = 1; i < Config.fadeOutTicks.length; i++) {\n            let upper = Config.fadeOutTicks[i];\n            if (ticks <= upper)\n                return (ticks < (lower + upper) / 2) ? i - 1 : i;\n            lower = upper;\n        }\n        return Config.fadeOutTicks.length - 1;\n    }\n    static detuneToCents(detune) {\n        return detune - Config.detuneCenter;\n    }\n    static centsToDetune(cents) {\n        return cents + Config.detuneCenter;\n    }\n    static getOperatorWave(waveform, pulseWidth) {\n        if (waveform != 2) {\n            return Config.operatorWaves[waveform];\n        }\n        else {\n            return Config.pwmOperatorWaves[pulseWidth];\n        }\n    }\n    getSamplesPerTick() {\n        if (this.song == null)\n            return 0;\n        let beatsPerMinute = this.song.getBeatsPerMinute();\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\n        }\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\n    }\n    getSamplesPerTickSpecificBPM(beatsPerMinute) {\n        const beatsPerSecond = beatsPerMinute / 60.0;\n        const partsPerSecond = Config.partsPerBeat * beatsPerSecond;\n        const tickPerSecond = Config.ticksPerPart * partsPerSecond;\n        return this.samplesPerSecond / tickPerSecond;\n    }\n    static fittingPowerOfTwo(x) {\n        return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\n    }\n    sanitizeFilters(filters) {\n        let reset = false;\n        for (const filter of filters) {\n            const output1 = Math.abs(filter.output1);\n            const output2 = Math.abs(filter.output2);\n            if (!(output1 < 100) || !(output2 < 100)) {\n                reset = true;\n                break;\n            }\n            if (output1 < epsilon)\n                filter.output1 = 0.0;\n            if (output2 < epsilon)\n                filter.output2 = 0.0;\n        }\n        if (reset) {\n            for (const filter of filters) {\n                filter.output1 = 0.0;\n                filter.output2 = 0.0;\n            }\n        }\n    }\n    static sanitizeDelayLine(delayLine, lastIndex, mask) {\n        while (true) {\n            lastIndex--;\n            const index = lastIndex & mask;\n            const sample = Math.abs(delayLine[index]);\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon))\n                break;\n            delayLine[index] = 0.0;\n        }\n    }\n    static applyFilters(sample, input1, input2, filterCount, filters) {\n        for (let i = 0; i < filterCount; i++) {\n            const filter = filters[i];\n            const output1 = filter.output1;\n            const output2 = filter.output2;\n            const a1 = filter.a1;\n            const a2 = filter.a2;\n            const b0 = filter.b0;\n            const b1 = filter.b1;\n            const b2 = filter.b2;\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\n            filter.a1 = a1 + filter.a1Delta;\n            filter.a2 = a2 + filter.a2Delta;\n            if (filter.useMultiplicativeInputCoefficients) {\n                filter.b0 = b0 * filter.b0Delta;\n                filter.b1 = b1 * filter.b1Delta;\n                filter.b2 = b2 * filter.b2Delta;\n            }\n            else {\n                filter.b0 = b0 + filter.b0Delta;\n                filter.b1 = b1 + filter.b1Delta;\n                filter.b2 = b2 + filter.b2Delta;\n            }\n            filter.output2 = output1;\n            filter.output1 = sample;\n            input2 = output2;\n            input1 = output1;\n        }\n        return sample;\n    }\n    computeTicksSinceStart(ofBar = false) {\n        var _a, _b;\n        const beatsPerBar = ((_a = this.song) === null || _a === void 0 ? void 0 : _a.beatsPerBar) ? (_b = this.song) === null || _b === void 0 ? void 0 : _b.beatsPerBar : 8;\n        if (ofBar) {\n            return Config.ticksPerPart * Config.partsPerBeat * beatsPerBar * this.bar;\n        }\n        else {\n            return this.tick + Config.ticksPerPart * (this.part + Config.partsPerBeat * (this.beat + beatsPerBar * this.bar));\n        }\n    }\n}\nSynth.tempFilterStartCoefficients = new FilterCoefficients();\nSynth.tempFilterEndCoefficients = new FilterCoefficients();\nSynth.fmSynthFunctionCache = {};\nSynth.fm6SynthFunctionCache = {};\nSynth.effectsFunctionCache = Array(1 << 7).fill(undefined);\nSynth.pickedStringFunctionCache = Array(3).fill(undefined);\nSynth.spectrumFunctionCache = [];\nSynth.noiseFunctionCache = [];\nSynth.drumFunctionCache = [];\nSynth.chipFunctionCache = [];\nSynth.pulseFunctionCache = [];\nSynth.harmonicsFunctionCache = [];\nSynth.loopableChipFunctionCache = Array(Config.unisonVoicesMax + 1).fill(undefined);\nSynth.fmSourceTemplate = (`\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t`).split(\"\\n\");\nSynth.operatorSourceTemplate = (`\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\n                const operator#Sample   = operator#Wave[operator#Index];\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t`).split(\"\\n\");\nexport { Config };\n//# sourceMappingURL=synth.js.map","import { Config } from \"../synth/SynthConfig\";\nimport { ColorConfig } from \"../editor/ColorConfig\";\nimport { Note, Pattern, Instrument, Channel, Synth } from \"../synth/synth\";\nimport { oscilloscopeCanvas } from \"../global/Oscilloscope\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nconst { a, button, div, h1, input, canvas } = HTML;\nconst { svg, circle, rect, path } = SVG;\nconst isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\n\tbody {\n\t\tcolor: ${ColorConfig.primaryText};\n\t\tbackground: ${ColorConfig.editorBackground};\n\t}\n\th1 {\n\t\tfont-weight: bold;\n\t\tfont-size: 14px;\n\t\tline-height: 22px;\n\t\ttext-align: initial;\n\t\tmargin: 0;\n\t}\n\ta {\n\t\tfont-weight: bold;\n\t\tfont-size: 12px;\n\t\tline-height: 22px;\n\t\twhite-space: nowrap;\n\t\tcolor: ${ColorConfig.linkAccent};\n\t}\n\tbutton {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tposition: relative;\n\t\tborder: none;\n\t\tborder-radius: 5px;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t\tcolor: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t\tfont-size: 14px;\n\t\tfont-family: inherit;\n\t}\n\tbutton:hover, button:focus {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\t.playButton, .pauseButton {\n\t\tpadding-left: 24px;\n\t\tpadding-right: 6px;\n\t}\n\t.playButton::before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tleft: 6px;\n\t\ttop: 50%;\n\t\tmargin-top: -6px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tpointer-events: none;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t}\n\t.pauseButton::before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tleft: 6px;\n\t\ttop: 50%;\n\t\tmargin-top: -6px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tpointer-events: none;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t}\n\t\n\tinput[type=range] {\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t\theight: 16px;\n\t\tmargin: 0;\n\t\tcursor: pointer;\n\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\ttouch-action: pan-y;\n\t}\n\tinput[type=range]:focus {\n\t\toutline: none;\n\t}\n\tinput[type=range]::-webkit-slider-runnable-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t}\n\tinput[type=range]::-webkit-slider-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t\t-webkit-appearance: none;\n\t\tmargin-top: -6px;\n\t}\n\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\tinput[type=range]::-moz-range-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t}\n\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\tinput[type=range]::-moz-range-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tborder: none;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t}\n\tinput[type=range]::-ms-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t\tborder-color: transparent;\n\t}\n\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\tinput[type=range]::-ms-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t}\n`));\nconst colorTheme = getLocalStorage(\"colorTheme\");\nColorConfig.setTheme(colorTheme === null ? ColorConfig.defaultTheme : colorTheme);\nlet prevHash = null;\nlet id = ((Math.random() * 0xffffffff) >>> 0).toString(16);\nlet pauseButtonDisplayed = false;\nlet animationRequest;\nlet zoomEnabled = false;\nlet timelineWidth = 1;\nlet outVolumeHistoricTimer = 0;\nlet outVolumeHistoricCap = 0;\nconst synth = new Synth();\nconst oscilloscope = new oscilloscopeCanvas(canvas({ width: isMobile ? 144 : 288, height: isMobile ? 32 : 64, style: `border:2px solid ${ColorConfig.uiWidgetBackground}; overflow: hidden;`, id: \"oscilloscopeAll\" }), isMobile ? 1 : 2);\nconst showOscilloscope = getLocalStorage(\"showOscilloscope\") != \"false\";\nif (!showOscilloscope) {\n    oscilloscope.canvas.style.display = \"none\";\n    synth.oscEnabled = false;\n}\nlet titleText = h1({ style: \"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;\" }, \"\");\nlet editLink = a({ target: \"_top\", style: \"margin: 0 4px;\" }, \"✎ Edit\");\nlet copyLink = a({ href: \"javascript:void(0)\", style: \"margin: 0 4px;\" }, \"⎘ Copy URL\");\nlet shareLink = a({ href: \"javascript:void(0)\", style: \"margin: 0 4px;\" }, \"⤳ Share\");\nlet fullscreenLink = a({ target: \"_top\", style: \"margin: 0 4px;\" }, \"⇱ Fullscreen\");\nlet draggingPlayhead = false;\nconst playButton = button({ style: \"width: 100%; height: 100%; max-height: 50px;\" });\nconst playButtonContainer = div({ style: \"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;\" }, playButton);\nconst loopIcon = path({ d: \"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z\" });\nconst loopButton = button({ title: \"loop\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\" }, svg({ width: 12, height: 12, viewBox: \"0 0 12 12\" }, loopIcon));\nconst volumeIcon = svg({ style: \"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;\", viewBox: \"0 0 12 12\" }, path({ fill: ColorConfig.uiWidgetBackground, d: \"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z\" }));\nconst volumeSlider = input({ title: \"volume\", type: \"range\", value: 75, min: 0, max: 75, step: 1, style: \"width: 12vw; max-width: 100px; margin: 0 1px;\" });\nconst zoomIcon = svg({ width: 12, height: 12, viewBox: \"0 0 12 12\" }, circle({ cx: \"5\", cy: \"5\", r: \"4.5\", \"stroke-width\": \"1\", stroke: \"currentColor\", fill: \"none\" }), path({ stroke: \"currentColor\", \"stroke-width\": \"2\", d: \"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5\", fill: \"none\" }));\nconst zoomButton = button({ title: \"zoom\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\" }, zoomIcon);\nconst timeline = svg({ style: \"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;\" });\nconst playhead = div({ style: `position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${ColorConfig.playhead}; pointer-events: none;` });\nconst timelineContainer = div({ style: \"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;\" }, timeline, playhead);\nconst visualizationContainer = div({ style: \"display: flex; flex-grow: 1; flex-shrink: 1; height: 0; position: relative; align-items: center; overflow: hidden;\" }, timelineContainer);\nlet noteFlashElementsPerBar;\nlet currentNoteFlashElements = [];\nlet currentNoteFlashBar = -1;\nconst notesFlashWhenPlayed = getLocalStorage(\"notesFlashWhenPlayed\") == \"true\";\nconst outVolumeBarBg = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\nconst outVolumeBar = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\nconst outVolumeCap = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\nconst stop1 = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\nconst stop2 = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\nconst stop3 = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\nconst gradient = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, stop1, stop2, stop3);\nconst defs = SVG.defs({}, gradient);\nconst volumeBarContainer = SVG.svg({ style: `touch-action: none; overflow: hidden; margin: auto;`, width: \"160px\", height: \"10px\", preserveAspectRatio: \"none\" }, defs, outVolumeBarBg, outVolumeBar, outVolumeCap);\ndocument.body.appendChild(visualizationContainer);\ndocument.body.appendChild(div({ style: `flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center;` }, playButtonContainer, loopButton, volumeIcon, volumeSlider, zoomButton, volumeBarContainer, oscilloscope.canvas, titleText, editLink, copyLink, shareLink, fullscreenLink));\nfunction setLocalStorage(key, value) {\n    try {\n        localStorage.setItem(key, value);\n    }\n    catch (error) {\n    }\n}\nfunction getLocalStorage(key) {\n    try {\n        return localStorage.getItem(key);\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction removeFromUnorderedArray(array, index) {\n    if (array.length < 1) {\n        return;\n    }\n    if (index === array.length - 1) {\n        array.pop();\n    }\n    else if (index >= 0 && index < array.length - 1) {\n        const lastElement = array.pop();\n        array[index] = lastElement;\n    }\n}\nfunction loadSong(songString, reuseParams) {\n    synth.setSong(songString);\n    synth.snapToStart();\n    const updatedSongString = synth.song.toBase64String();\n    editLink.href = \"../\" + (OFFLINE ? \"index.html\" : \"\") + \"#\" + updatedSongString;\n}\nfunction hashUpdatedExternally() {\n    let myHash = location.hash;\n    if (prevHash == myHash || myHash == \"\")\n        return;\n    prevHash = myHash;\n    if (myHash.charAt(0) == \"#\") {\n        myHash = myHash.substring(1);\n    }\n    fullscreenLink.href = location.href;\n    for (const parameter of myHash.split(/&(?=[a-z]+=)/g)) {\n        let equalsIndex = parameter.indexOf(\"=\");\n        if (equalsIndex != -1) {\n            let paramName = parameter.substring(0, equalsIndex);\n            let value = parameter.substring(equalsIndex + 1);\n            switch (paramName) {\n                case \"song\":\n                    loadSong(value, true);\n                    if (synth.song) {\n                        titleText.textContent = synth.song.title;\n                    }\n                    break;\n                case \"loop\":\n                    synth.loopRepeatCount = (value != \"1\") ? 0 : -1;\n                    renderLoopIcon();\n                    break;\n            }\n        }\n        else {\n            loadSong(myHash, false);\n        }\n    }\n    renderTimeline();\n}\nfunction onWindowResize() {\n    renderTimeline();\n}\nlet pauseIfAnotherPlayerStartsHandle = null;\nfunction pauseIfAnotherPlayerStarts() {\n    if (!synth.playing) {\n        clearInterval(pauseIfAnotherPlayerStartsHandle);\n        return;\n    }\n    const storedPlayerId = getLocalStorage(\"playerId\");\n    if (storedPlayerId != null && storedPlayerId != id) {\n        onTogglePlay();\n        renderPlayhead();\n        clearInterval(pauseIfAnotherPlayerStartsHandle);\n    }\n}\nfunction animate() {\n    if (synth.playing) {\n        animationRequest = requestAnimationFrame(animate);\n        renderPlayhead();\n        volumeUpdate();\n    }\n    if (pauseButtonDisplayed != synth.playing) {\n        renderPlayButton();\n    }\n}\nfunction volumeUpdate() {\n    if (synth.song == null) {\n        outVolumeCap.setAttribute(\"x\", \"5%\");\n        outVolumeBar.setAttribute(\"width\", \"0%\");\n        return;\n    }\n    outVolumeHistoricTimer--;\n    if (outVolumeHistoricTimer <= 0) {\n        outVolumeHistoricCap -= 0.03;\n    }\n    if (synth.song.outVolumeCap > outVolumeHistoricCap) {\n        outVolumeHistoricCap = synth.song.outVolumeCap;\n        outVolumeHistoricTimer = 50;\n    }\n    animateVolume(synth.song.outVolumeCap, outVolumeHistoricCap);\n    if (!synth.playing) {\n        outVolumeCap.setAttribute(\"x\", \"5%\");\n        outVolumeBar.setAttribute(\"width\", \"0%\");\n    }\n}\nfunction animateVolume(useOutVolumeCap, historicOutCap) {\n    outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, useOutVolumeCap * 144));\n    outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\n}\nfunction onTogglePlay() {\n    if (synth.song != null) {\n        if (animationRequest != null)\n            cancelAnimationFrame(animationRequest);\n        animationRequest = null;\n        if (synth.playing) {\n            synth.pause();\n            volumeUpdate();\n        }\n        else {\n            synth.play();\n            setLocalStorage(\"playerId\", id);\n            animate();\n            clearInterval(pauseIfAnotherPlayerStartsHandle);\n            pauseIfAnotherPlayerStartsHandle = setInterval(pauseIfAnotherPlayerStarts, 100);\n        }\n    }\n    renderPlayButton();\n}\nfunction onToggleLoop() {\n    if (synth.loopRepeatCount == -1) {\n        synth.loopRepeatCount = 0;\n    }\n    else {\n        synth.loopRepeatCount = -1;\n    }\n    renderLoopIcon();\n}\nfunction onVolumeChange() {\n    setLocalStorage(\"volume\", volumeSlider.value);\n    setSynthVolume();\n}\nfunction onToggleZoom() {\n    zoomEnabled = !zoomEnabled;\n    renderZoomIcon();\n    renderTimeline();\n}\nfunction onTimelineMouseDown(event) {\n    draggingPlayhead = true;\n    onTimelineMouseMove(event);\n}\nfunction onTimelineMouseMove(event) {\n    if (!draggingPlayhead)\n        return;\n    event.preventDefault();\n    onTimelineCursorMove(event.clientX || event.pageX);\n}\nfunction onTimelineTouchDown(event) {\n    draggingPlayhead = true;\n    onTimelineTouchMove(event);\n}\nfunction onTimelineTouchMove(event) {\n    onTimelineCursorMove(event.touches[0].clientX);\n}\nfunction onTimelineCursorMove(mouseX) {\n    if (draggingPlayhead && synth.song != null) {\n        const boundingRect = visualizationContainer.getBoundingClientRect();\n        synth.playhead = synth.song.barCount * (mouseX - boundingRect.left) / (boundingRect.right - boundingRect.left);\n        synth.computeLatestModValues();\n        renderPlayhead();\n    }\n}\nfunction onTimelineCursorUp() {\n    draggingPlayhead = false;\n}\nfunction setSynthVolume() {\n    const volume = +volumeSlider.value;\n    synth.volume = Math.min(1.0, Math.pow(volume / 50.0, 0.5)) * Math.pow(2.0, (volume - 75.0) / 25.0);\n}\nfunction renderPlayhead() {\n    if (synth.song != null) {\n        let pos = synth.playhead / synth.song.barCount;\n        playhead.style.left = (timelineWidth * pos) + \"px\";\n        const boundingRect = visualizationContainer.getBoundingClientRect();\n        visualizationContainer.scrollLeft = pos * (timelineWidth - boundingRect.width);\n        if (notesFlashWhenPlayed) {\n            const playheadBar = Math.floor(synth.playhead);\n            const modPlayhead = synth.playhead - playheadBar;\n            const partsPerBar = synth.song.beatsPerBar * Config.partsPerBeat;\n            const noteFlashElementsForThisBar = noteFlashElementsPerBar[playheadBar];\n            if (noteFlashElementsForThisBar != null && playheadBar !== currentNoteFlashBar) {\n                for (var i = currentNoteFlashElements.length - 1; i >= 0; i--) {\n                    var element = currentNoteFlashElements[i];\n                    const outsideOfCurrentBar = Number(element.getAttribute(\"note-bar\")) !== playheadBar;\n                    const isInvisible = element.style.opacity === \"0\";\n                    if (outsideOfCurrentBar && isInvisible) {\n                        removeFromUnorderedArray(currentNoteFlashElements, i);\n                    }\n                }\n                for (var i = 0; i < noteFlashElementsForThisBar.length; i++) {\n                    var element = noteFlashElementsForThisBar[i];\n                    currentNoteFlashElements.push(element);\n                }\n            }\n            if (currentNoteFlashElements != null) {\n                for (var i = 0; i < currentNoteFlashElements.length; i++) {\n                    var element = currentNoteFlashElements[i];\n                    const noteStart = Number(element.getAttribute(\"note-start\")) / partsPerBar;\n                    const noteEnd = Number(element.getAttribute(\"note-end\")) / partsPerBar;\n                    const noteBar = Number(element.getAttribute(\"note-bar\"));\n                    if ((modPlayhead >= noteStart) && (noteBar == playheadBar)) {\n                        const dist = noteEnd - noteStart;\n                        element.style.opacity = String((1 - (((modPlayhead - noteStart) - (dist / 2)) / (dist / 2))));\n                    }\n                    else {\n                        element.style.opacity = \"0\";\n                    }\n                }\n            }\n            currentNoteFlashBar = playheadBar;\n        }\n    }\n}\nfunction renderTimeline() {\n    timeline.innerHTML = \"\";\n    if (synth.song == null)\n        return;\n    const boundingRect = visualizationContainer.getBoundingClientRect();\n    let timelineHeight;\n    let windowOctaves;\n    let windowPitchCount;\n    if (zoomEnabled) {\n        timelineHeight = boundingRect.height;\n        windowOctaves = Math.max(1, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * 2))));\n        windowPitchCount = windowOctaves * 12 + 1;\n        const semitoneHeight = (timelineHeight - 1) / windowPitchCount;\n        const targetBeatWidth = Math.max(8, semitoneHeight * 4);\n        timelineWidth = Math.max(boundingRect.width, targetBeatWidth * synth.song.barCount * synth.song.beatsPerBar);\n    }\n    else {\n        timelineWidth = boundingRect.width;\n        const targetSemitoneHeight = Math.max(1, timelineWidth / (synth.song.barCount * synth.song.beatsPerBar) / 6.0);\n        timelineHeight = Math.min(boundingRect.height, targetSemitoneHeight * (Config.maxPitch + 1) + 1);\n        windowOctaves = Math.max(3, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * targetSemitoneHeight))));\n        windowPitchCount = windowOctaves * 12 + 1;\n    }\n    timelineContainer.style.width = timelineWidth + \"px\";\n    timelineContainer.style.height = timelineHeight + \"px\";\n    timeline.style.width = timelineWidth + \"px\";\n    timeline.style.height = timelineHeight + \"px\";\n    const barWidth = timelineWidth / synth.song.barCount;\n    const partWidth = barWidth / (synth.song.beatsPerBar * Config.partsPerBeat);\n    const wavePitchHeight = (timelineHeight - 1) / windowPitchCount;\n    const drumPitchHeight = (timelineHeight - 1) / Config.drumCount;\n    for (let bar = 0; bar < synth.song.barCount + 1; bar++) {\n        const color = (bar == synth.song.loopStart || bar == synth.song.loopStart + synth.song.loopLength) ? ColorConfig.loopAccent : ColorConfig.uiWidgetBackground;\n        timeline.appendChild(rect({ x: bar * barWidth - 1, y: 0, width: 2, height: timelineHeight, fill: color }));\n    }\n    for (let octave = 0; octave <= windowOctaves; octave++) {\n        timeline.appendChild(rect({ x: 0, y: octave * 12 * wavePitchHeight, width: timelineWidth, height: wavePitchHeight + 1, fill: ColorConfig.tonic, opacity: 0.75 }));\n    }\n    let noteFlashColor = \"#ffffff\";\n    let noteFlashColorSecondary = \"#ffffff77\";\n    if (notesFlashWhenPlayed) {\n        noteFlashColor = \"var(--note-flash)\";\n        noteFlashColorSecondary = \"var(--note-flash-secondary)\";\n    }\n    if (notesFlashWhenPlayed) {\n        noteFlashElementsPerBar = [];\n        for (let bar = 0; bar < synth.song.barCount; bar++) {\n            noteFlashElementsPerBar.push([]);\n        }\n        currentNoteFlashBar = -1;\n    }\n    for (let channel = synth.song.channels.length - 1 - synth.song.modChannelCount; channel >= 0; channel--) {\n        const isNoise = synth.song.getChannelIsNoise(channel);\n        const pitchHeight = isNoise ? drumPitchHeight : wavePitchHeight;\n        const configuredOctaveScroll = synth.song.channels[channel].octave;\n        const newOctaveScroll = Math.max(0, Math.min(Config.pitchOctaves - windowOctaves, Math.ceil(configuredOctaveScroll - windowOctaves * 0.5)));\n        const offsetY = newOctaveScroll * pitchHeight * 12 + timelineHeight - pitchHeight * 0.5 - 0.5;\n        for (let bar = 0; bar < synth.song.barCount; bar++) {\n            const pattern = synth.song.getPattern(channel, bar);\n            if (pattern == null)\n                continue;\n            const offsetX = bar * barWidth;\n            for (let i = 0; i < pattern.notes.length; i++) {\n                const note = pattern.notes[i];\n                for (const pitch of note.pitches) {\n                    const d = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\n                    const noteElement = path({ d: d, fill: ColorConfig.getChannelColor(synth.song, channel).primaryChannel });\n                    if (isNoise)\n                        noteElement.style.opacity = String(0.6);\n                    timeline.appendChild(noteElement);\n                    if (notesFlashWhenPlayed) {\n                        const dflash = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\n                        const noteFlashElement = path({ d: dflash, fill: (isNoise ? noteFlashColorSecondary : noteFlashColor) });\n                        noteFlashElement.style.opacity = \"0\";\n                        noteFlashElement.setAttribute('note-start', String(note.start));\n                        noteFlashElement.setAttribute('note-end', String(note.end));\n                        noteFlashElement.setAttribute('note-bar', String(bar));\n                        timeline.appendChild(noteFlashElement);\n                        const noteFlashElementsForThisBar = noteFlashElementsPerBar[bar];\n                        noteFlashElementsForThisBar.push(noteFlashElement);\n                    }\n                }\n            }\n        }\n    }\n    renderPlayhead();\n}\nfunction drawNote(pitch, start, pins, radius, offsetX, offsetY, partWidth, pitchHeight) {\n    let d = `M ${offsetX + partWidth * (start + pins[0].time)} ${offsetY - pitch * pitchHeight + radius * (pins[0].size / Config.noteSizeMax)} `;\n    for (let i = 0; i < pins.length; i++) {\n        const pin = pins[i];\n        const x = offsetX + partWidth * (start + pin.time);\n        const y = offsetY - pitchHeight * (pitch + pin.interval);\n        const expression = pin.size / Config.noteSizeMax;\n        d += `L ${x} ${y - radius * expression} `;\n    }\n    for (let i = pins.length - 1; i >= 0; i--) {\n        const pin = pins[i];\n        const x = offsetX + partWidth * (start + pin.time);\n        const y = offsetY - pitchHeight * (pitch + pin.interval);\n        const expression = pin.size / Config.noteSizeMax;\n        d += `L ${x} ${y + radius * expression} `;\n    }\n    return d;\n}\nfunction renderPlayButton() {\n    if (synth.playing) {\n        playButton.classList.remove(\"playButton\");\n        playButton.classList.add(\"pauseButton\");\n        playButton.title = \"Pause (Space)\";\n        playButton.textContent = \"Pause\";\n    }\n    else {\n        playButton.classList.remove(\"pauseButton\");\n        playButton.classList.add(\"playButton\");\n        playButton.title = \"Play (Space)\";\n        playButton.textContent = \"Play\";\n    }\n    pauseButtonDisplayed = synth.playing;\n}\nfunction renderLoopIcon() {\n    loopIcon.setAttribute(\"fill\", (synth.loopRepeatCount == -1) ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground);\n}\nfunction renderZoomIcon() {\n    zoomIcon.style.color = zoomEnabled ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground;\n}\nfunction onKeyPressed(event) {\n    switch (event.keyCode) {\n        case 70:\n            synth.playhead = 0;\n            synth.computeLatestModValues();\n            renderPlayhead();\n            event.preventDefault();\n            break;\n        case 32:\n            onTogglePlay();\n            synth.computeLatestModValues();\n            event.preventDefault();\n            break;\n        case 219:\n            synth.goToPrevBar();\n            synth.computeLatestModValues();\n            renderPlayhead();\n            event.preventDefault();\n            break;\n        case 221:\n            synth.goToNextBar();\n            synth.computeLatestModValues();\n            renderPlayhead();\n            event.preventDefault();\n            break;\n        case 69:\n        case 80:\n            if (event.shiftKey) {\n                hashUpdatedExternally();\n                location.href = \"../\" + (OFFLINE ? \"index.html\" : \"\") + \"#\" + synth.song.toBase64String();\n                event.preventDefault();\n            }\n            break;\n        case 90:\n        case 187:\n        case 61:\n        case 171:\n        case 189:\n        case 173:\n            onToggleZoom();\n            break;\n        case 76:\n            onToggleLoop();\n            break;\n        case 83:\n            if (event.ctrlKey) {\n                shortenUrl();\n                event.preventDefault();\n            }\n            break;\n        case 67:\n            onCopyClicked();\n            break;\n    }\n}\nfunction shortenUrl() {\n    hashUpdatedExternally();\n    let shortenerStrategy = \"https://tinyurl.com/api-create.php?url=\";\n    const localShortenerStrategy = window.localStorage.getItem(\"shortenerStrategySelect\");\n    if (localShortenerStrategy == \"isgd\")\n        shortenerStrategy = \"https://is.gd/create.php?format=simple&url=\";\n    window.open(shortenerStrategy + encodeURIComponent(new URL(\"#\" + synth.song.toBase64String(), location.href).href));\n}\nfunction onCopyClicked() {\n    let nav;\n    nav = navigator;\n    if (nav.clipboard && nav.clipboard.writeText) {\n        nav.clipboard.writeText(location.href).catch(() => {\n            window.prompt(\"Copy to clipboard:\", location.href);\n        });\n        return;\n    }\n    const textField = document.createElement(\"textarea\");\n    textField.textContent = location.href;\n    document.body.appendChild(textField);\n    textField.select();\n    const succeeded = document.execCommand(\"copy\");\n    textField.remove();\n    if (!succeeded)\n        window.prompt(\"Copy this:\", location.href);\n}\nfunction onShareClicked() {\n    navigator.share({ url: location.href });\n}\nif (top !== self) {\n    copyLink.style.display = \"none\";\n    shareLink.style.display = \"none\";\n}\nelse {\n    fullscreenLink.style.display = \"none\";\n    if (!(\"share\" in navigator))\n        shareLink.style.display = \"none\";\n}\nif (getLocalStorage(\"volume\") != null) {\n    volumeSlider.value = getLocalStorage(\"volume\");\n}\nsetSynthVolume();\nwindow.addEventListener(\"resize\", onWindowResize);\nwindow.addEventListener(\"keydown\", onKeyPressed);\ntimeline.addEventListener(\"mousedown\", onTimelineMouseDown);\nwindow.addEventListener(\"mousemove\", onTimelineMouseMove);\nwindow.addEventListener(\"mouseup\", onTimelineCursorUp);\ntimeline.addEventListener(\"touchstart\", onTimelineTouchDown);\ntimeline.addEventListener(\"touchmove\", onTimelineTouchMove);\ntimeline.addEventListener(\"touchend\", onTimelineCursorUp);\ntimeline.addEventListener(\"touchcancel\", onTimelineCursorUp);\nplayButton.addEventListener(\"click\", onTogglePlay);\nloopButton.addEventListener(\"click\", onToggleLoop);\nvolumeSlider.addEventListener(\"input\", onVolumeChange);\nzoomButton.addEventListener(\"click\", onToggleZoom);\ncopyLink.addEventListener(\"click\", onCopyClicked);\nshareLink.addEventListener(\"click\", onShareClicked);\nwindow.addEventListener(\"hashchange\", hashUpdatedExternally);\nhashUpdatedExternally();\nrenderLoopIcon();\nrenderZoomIcon();\nrenderPlayButton();\nexport { Config, Note, Pattern, Instrument, Channel, Synth };\n//# sourceMappingURL=main.js.map","import { ColorConfig } from \"../editor/ColorConfig\";\nimport { events } from \"./Events\";\nexport class oscilloscopeCanvas {\n    constructor(canvas, scale = 1) {\n        this.canvas = canvas;\n        this.scale = scale;\n        this._EventUpdateCanvas = function (directlinkL, directlinkR) {\n            if (directlinkR) {\n                var ctx = canvas.getContext(\"2d\");\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-L\");\n                for (let i = directlinkL.length - 1; i >= directlinkL.length - 1 - (canvas.width / scale); i--) {\n                    let x = i - (directlinkL.length - 1) + (canvas.width / scale);\n                    let yl = (directlinkL[i] * (canvas.height / scale / 2) + (canvas.height / scale / 2));\n                    ctx.fillRect((x - 1) * scale, (yl - 1) * scale, 1 * scale, 1.5 * scale);\n                    if (x == 0)\n                        break;\n                }\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-R\");\n                for (let i = directlinkR.length - 1; i >= directlinkR.length - 1 - (canvas.width / scale); i--) {\n                    let x = i - (directlinkR.length - 1) + (canvas.width / scale);\n                    let yr = (directlinkR[i] * (canvas.height / scale / 2) + (canvas.height / scale / 2));\n                    ctx.fillRect((x - 1) * scale, (yr - 1) * scale, 1 * scale, 1.5 * scale);\n                    if (x == 0)\n                        break;\n                }\n            }\n        };\n        events.listen(\"oscilloscopeUpdate\", this._EventUpdateCanvas);\n    }\n}\n//# sourceMappingURL=Oscilloscope.js.map"],"mappings":";;;;;;;;;;;;;;;;;;;;;MAqBA,IASIA,EATAC,EAAaC,GAAQA,EAAKD,GAAc,SAAUE,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAQ,CAAG,MAAOG,GAAKL,EAAOK,EAAG,CAAE,CACzF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAQ,CAAG,MAAOG,GAAKL,EAAOK,EAAG,CAAE,CAC5F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAO,KAIhBO,KAAKR,EAAWK,EAAU,CAC5GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OACtE,GACA,EAEO,MAAMO,EAAc,CAAC,OAAQ,KAAM,QAAS,WAAY,UAAW,YAAa,cAAe,gBAAiB,WAAY,gBAAiB,MAAO,aAgBpJ,MAAMC,EAAqB,IAR3B,MACH,WAAAC,GACIpB,KAAKqB,YAAc,GACnBrB,KAAKsB,SAAW,GAChBtB,KAAKuB,aAAe,EACpBvB,KAAKwB,cAAgB,CAC7B,GAGO,MAAMC,UAA0BC,MACnC,WAAAN,CAAYG,EAAcC,GACtBG,MAAM,gBACN3B,KAAKuB,aAAeA,EACpBvB,KAAKwB,cAAgBA,CAC7B,EAEO,MAAMI,UAAyBC,YAClC,WAAAT,GACIO,OACR,EAEO,MAAMG,EAAmB,IAAIF,EAC7B,SAASG,EAAmBC,EAAKC,EAAeC,EAAgBC,EAAgBC,GACnF,OAAOrC,EAAUC,UAAM,OAAQ,GAAQ,YACnC,MAAMqC,EAA2B,IAAIC,aAAa,CAAEC,WAAYH,IAChE,IAAII,GAAiC,EACrC,MAAMC,EAAWC,EAAOC,UAAUV,GAC5BW,EAAcF,EAAOG,aAAaZ,GAClCa,EAAiBJ,EAAOK,gBAAgBd,GAQ9Ce,MAAMhB,GAAKhB,MAAMiC,GACRA,EAASC,GAIPD,EAASE,eAHZhC,EAAmBE,YAAYY,GAAiB,EACzC5B,QAAQE,OAAO,IAAI6C,MAAM,4BAGrCpC,MAAMmC,GACEd,EAAyBgB,gBAAgBF,KACjDnC,MAAMsC,IACL,MAAMC,EAAUC,EAAWC,MAAMC,KAAKJ,EAAYK,eAAe,KAC3DC,EAAoBC,EAAgBN,GAC1Cd,EAASc,QAAUK,EACnBhB,EAAYW,QAAUA,EACtBT,EAAeS,QAAUA,EACrBpB,EAA4C,8BAC5CD,EAAkC,kBAA2C,MAAvCC,EAAkC,kBAAYA,EAAkC,kBAAI,EAC1HD,EAAgC,gBAAyC,MAArCC,EAAgC,gBAAYA,EAAgC,gBAAIoB,EAAQO,OAAS,EACrI5B,EAAiC,iBAA0C,MAAtCC,EAAiC,iBAAYA,EAAiC,iBAAI,EACvHD,EAAsC,sBAAIC,EAAsC,sBAChFD,EAAoC,oBAA6C,MAAzCC,EAAoC,oBAAYA,EAAoC,oBAAI,GAEpIhB,EAAmBK,gBACnBL,EAAmBE,YAAYY,GAAiB,EAChDH,EAAiBiC,cAAc,IAAItC,EAAkBN,EAAmBI,aAAcJ,EAAmBK,gBACpGgB,IACDA,GAAiC,EACjCH,EAAyB2B,QACzC,IACWC,OAAOC,IACN/C,EAAmBE,YAAYY,GAAiB,EAChDkC,MAAM,kBAAoBnC,EAAM,MAAQkC,GACnC1B,IACDA,GAAiC,EACjCH,EAAyB2B,QACzC,GAEA,GACA,CAQA,SAASI,EAAWpC,GAahB,OAZe,IAAI3B,SAAQ,CAACC,EAASC,KACjC,IAAKmC,EAAO2B,2BAA4B,CACpC,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAMzC,EACbuC,SAASG,KAAKC,YAAYL,GAC1BA,EAAOM,iBAAiB,QAASC,IAC7BvE,GAAS,GAEzB,IAKA,CACO,SAASwE,EAAmBC,GAC/B,MACMC,EAA2BtC,EAAOC,UADnB,GAC2CY,QAC1D0B,EAAiBvC,EAAOK,gBAFT,GAEuCQ,QAC5D,GAAW,GAAPwB,EAAU,CACV,MAAMpC,EAAY,CACd,CAAEuC,KAAM,oBAAqBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GACtG,CAAEJ,KAAM,qBAAsBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GACvG,CAAEJ,KAAM,sBAAuBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACzG,CAAEJ,KAAM,mBAAoBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACtG,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GAC7G,CAAEJ,KAAM,uBAAwBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,KAC1G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GAC7G,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,KAC/G,CAAEJ,KAAM,gCAAiCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,KACnH,CAAEJ,KAAM,qBAAsBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACzG,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GAC7G,CAAEJ,KAAM,uBAAwBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GAC1G,CAAEJ,KAAM,qBAAsBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GACzG,CAAEJ,KAAM,+BAAgCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,KACnH,CAAEJ,KAAM,qBAAsBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GACzG,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACjH,CAAEJ,KAAM,8BAA+BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAClH,CAAEJ,KAAM,0BAA2BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC7G,CAAEJ,KAAM,gCAAiCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACpH,CAAEJ,KAAM,+BAAgCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACnH,CAAEJ,KAAM,oBAAqBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,IACvG,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACjH,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,GAC/G,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GAC/G,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GAC7G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GAC3G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC5G,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC9G,CAAEJ,KAAM,uBAAwBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC3G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC7G,CAAEJ,KAAM,uBAAwBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC3G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC7G,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC/G,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MACjH,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACjH,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC9G,CAAEJ,KAAM,0BAA2BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC9G,CAAEJ,KAAM,uCAAwCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC3H,CAAEJ,KAAM,6BAA8BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MACjH,CAAEJ,KAAM,gCAAiCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACpH,CAAEJ,KAAM,+BAAgCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MACnH,CAAEJ,KAAM,0BAA2BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC9G,CAAEJ,KAAM,qBAAsBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACzG,CAAEJ,KAAM,0BAA2BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC9G,CAAEJ,KAAM,yBAA0BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC7G,CAAEJ,KAAM,wBAAyBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC5G,CAAEJ,KAAM,0BAA2BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC7G,CAAEJ,KAAM,mCAAoCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACvH,CAAEJ,KAAM,wCAAyCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC5H,CAAEJ,KAAM,kCAAmCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACtH,CAAEJ,KAAM,wCAAyCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,MAC5H,CAAEJ,KAAM,kCAAmCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MACrH,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC9G,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC/G,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC/G,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC/G,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC9G,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC/G,CAAEJ,KAAM,wCAAyCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC3H,CAAEJ,KAAM,yCAA0CC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC5H,CAAEJ,KAAM,+BAAgCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAClH,CAAEJ,KAAM,8BAA+BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MACjH,CAAEJ,KAAM,qCAAsCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IACxH,CAAEJ,KAAM,0CAA2CC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC7H,CAAEJ,KAAM,mCAAoCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MACtH,CAAEJ,KAAM,uCAAwCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MAC1H,CAAEJ,KAAM,oCAAqCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IACvH,CAAEJ,KAAM,4BAA6BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,IAC/G,CAAEJ,KAAM,kCAAmCC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,MACrH,CAAEJ,KAAM,2BAA4BC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,mBAAoB,KAElHnE,EAAmBI,cAAgBoB,EAAUmB,OAC7C,MAAMyB,EAAa7C,EAAOK,gBAAgBe,OAC1C,IAAK,MAAMrB,KAAYE,EAAW,CAC9B,MAAMV,EAAgBS,EAAOK,gBAAgBe,OACvClB,EAAc,CAAE4C,MAAOvD,EAAeiD,KAAMzC,EAASyC,KAAMC,WAAY1C,EAAS0C,WAAYC,UAAW3C,EAAS2C,UAAWC,aAAc5C,EAAS4C,aAAcC,kBAAmB7C,EAAS6C,kBAAmB/B,QAAS0B,GACxNnC,EAAiB,CAAE0C,MAAOvD,EAAeiD,KAAMzC,EAASyC,KAAMC,WAAY1C,EAAS0C,WAAYC,UAAW3C,EAAS2C,UAAWC,aAAc5C,EAAS4C,aAAcC,kBAAmB7C,EAAS6C,kBAAmB/B,QAAS0B,GAC3NQ,EAAqB,CAAED,MAAOvD,EAAeiD,KAAMzC,EAASyC,KAAMC,WAAY1C,EAAS0C,WAAYC,UAAW3C,EAAS2C,UAAWC,aAAc5C,EAAS4C,aAAcC,kBAAmB7C,EAAS6C,kBAAmB/B,QAASyB,GACrOtC,EAAOK,gBAAgBd,GAAiBa,EACxCJ,EAAOK,gBAAgB2C,WAAWjD,EAASyC,MAAQpC,EACnDJ,EAAOG,aAAaZ,GAAiBW,EACrCF,EAAOG,aAAa6C,WAAWjD,EAASyC,MAAQtC,EAChDF,EAAOC,UAAUV,GAAiBwD,EAClC/C,EAAOC,UAAU+C,WAAWjD,EAASyC,MAAQtC,EAC7CzB,EAAmBE,YAAYY,GAAiB,EAChDd,EAAmBG,SAASW,GAAiB,eACzD,CACQmC,EAAW,cACNpD,MAAK,IAAMoD,EAAW,iBACtBpD,MAAK,IAAMoD,EAAW,iBACtBpD,MAAK,IAAMoD,EAAW,oBACtBpD,MAAK,IAAMoD,EAAW,sBACtBpD,MAAK,IAAMoD,EAAW,sBACtBpD,MAAK,KACN,MAAM2E,EAAkB,CACpBnC,EAAWoC,YACXpC,EAAWqC,aACXrC,EAAWsC,aACXtC,EAAWuC,WACXvC,EAAWwC,iBACXxC,EAAWyC,eACXzC,EAAW0C,iBACX1C,EAAW2C,eACX3C,EAAW4C,uBACX5C,EAAW6C,aACX7C,EAAW8C,mBACX9C,EAAW+C,cACX/C,EAAWgD,aACXhD,EAAWiD,kBACXjD,EAAWkD,aACXlD,EAAWmD,oBACXnD,EAAWoD,qBACXpD,EAAWqD,iBACXrD,EAAWsD,uBACXtD,EAAWuD,qBACXvD,EAAWwD,YACXxD,EAAWyD,qBACXzD,EAAW0D,gBACX1D,EAAW2D,iBACX3D,EAAW4D,mBACX5D,EAAW6D,iBACX7D,EAAW8D,iBACX9D,EAAW+D,aACX/D,EAAWgE,eACXhE,EAAWiE,gBACXjE,EAAWkE,eACXlE,EAAWmE,iBACXnE,EAAWoE,mBACXpE,EAAWqE,cACXrE,EAAWsE,cACXtE,EAAWuE,OACXvE,EAAWwE,UACXxE,EAAWyE,eACXzE,EAAW0E,aACX1E,EAAW2E,gBACX3E,EAAW4E,eACX5E,EAAW6E,gBACX7E,EAAW8E,MACX9E,EAAW+E,UACX/E,EAAWgF,UACXhF,EAAWiF,SACXjF,EAAWkF,UACXlF,EAAWmF,iBACXnF,EAAWoF,iBACXpF,EAAWqF,gBACXrF,EAAWsF,qBACXtF,EAAWuF,gBACXvF,EAAWwF,WACXxF,EAAWyF,YACXzF,EAAW0F,YACX1F,EAAW2F,YACX3F,EAAW4F,UACX5F,EAAW6F,WACX7F,EAAW8F,eACX9F,EAAW+F,gBACX/F,EAAWgG,aACXhG,EAAWiG,YACXjG,EAAWkG,iBACXlG,EAAWmG,mBACXnG,EAAWoG,eACXpG,EAAWqG,kBACXrG,EAAWsG,eACXtG,EAAWuG,WACXvG,EAAWwG,cACXxG,EAAWyG,WAEf,IAAIC,EAAsB,EAC1B,IAAK,MAAMC,KAAkBxE,EAAiB,CAC1C,MAAM1D,EAAgBsD,EAAa2E,EACnCxH,EAAOG,aAAaZ,GAAesB,QAAU4G,EAC7CzH,EAAOK,gBAAgBd,GAAesB,QAAU4G,EAChDzH,EAAOC,UAAUV,GAAesB,QAAUM,EAAgBsG,GAC1DhJ,EAAmBE,YAAYY,GAAiB,EAChDd,EAAmBK,gBACnBM,EAAiBiC,cAAc,IAAItC,EAAkBN,EAAmBI,aAAcJ,EAAmBK,gBACzG0I,GAChB,IAEA,MACS,GAAW,GAAPnF,EAAU,CACf,MAAMpC,EAAY,CACd,CAAEuC,KAAM,mBAAoBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GACrG,CAAEJ,KAAM,cAAeC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GAChG,CAAEJ,KAAM,eAAgBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,GACjG,CAAEJ,KAAM,iBAAkBC,WAAY,EAAKC,WAAW,EAAMC,cAAc,EAAMC,kBAAmB,IAEvGnE,EAAmBI,cAAgBoB,EAAUmB,OAC7C,MAAMyB,EAAa7C,EAAOK,gBAAgBe,OAC1C,IAAK,MAAMrB,KAAYE,EAAW,CAC9B,MAAMV,EAAgBS,EAAOK,gBAAgBe,OACvClB,EAAc,CAAE4C,MAAOvD,EAAeiD,KAAMzC,EAASyC,KAAMC,WAAY1C,EAAS0C,WAAYC,UAAW3C,EAAS2C,UAAWC,aAAc5C,EAAS4C,aAAcC,kBAAmB7C,EAAS6C,kBAAmB/B,QAAS0B,GACxNnC,EAAiB,CAAE0C,MAAOvD,EAAeiD,KAAMzC,EAASyC,KAAMC,WAAY1C,EAAS0C,WAAYC,UAAW3C,EAAS2C,UAAWC,aAAc5C,EAAS4C,aAAcC,kBAAmB7C,EAAS6C,kBAAmB/B,QAAS0B,GAC3NQ,EAAqB,CAAED,MAAOvD,EAAeiD,KAAMzC,EAASyC,KAAMC,WAAY1C,EAAS0C,WAAYC,UAAW3C,EAAS2C,UAAWC,aAAc5C,EAAS4C,aAAcC,kBAAmB7C,EAAS6C,kBAAmB/B,QAASyB,GACrOtC,EAAOK,gBAAgBd,GAAiBa,EACxCJ,EAAOK,gBAAgB2C,WAAWjD,EAASyC,MAAQpC,EACnDJ,EAAOG,aAAaZ,GAAiBW,EACrCF,EAAOG,aAAa6C,WAAWjD,EAASyC,MAAQtC,EAChDF,EAAOC,UAAUV,GAAiBwD,EAClC/C,EAAOC,UAAU+C,WAAWjD,EAASyC,MAAQtC,EAC7CzB,EAAmBE,YAAYY,GAAiB,EAChDd,EAAmBG,SAASW,GAAiB,mBACzD,CACQmC,EAAW,yBACNpD,MAAK,KACN,MAAM2E,EAAkB,CACpBnC,EAAW4G,wBACX5G,EAAW6G,mBACX7G,EAAW8G,iBACX9G,EAAW+G,sBAEf,IAAIL,EAAsB,EAC1B,IAAK,MAAMC,KAAkBxE,EAAiB,CAC1C,MAAM1D,EAAgBsD,EAAa2E,EACnCxH,EAAOG,aAAaZ,GAAesB,QAAU4G,EAC7CzH,EAAOK,gBAAgBd,GAAesB,QAAU4G,EAChDzH,EAAOC,UAAUV,GAAesB,QAAUM,EAAgBsG,GAC1DhJ,EAAmBE,YAAYY,GAAiB,EAChDd,EAAmBK,gBACnBM,EAAiBiC,cAAc,IAAItC,EAAkBN,EAAmBI,aAAcJ,EAAmBK,gBACzG0I,GAChB,IAEA,MACS,GAAW,GAAPnF,EAAU,CACf,MAAMpC,EAAY,CACd,CAAEuC,KAAM,MAAOC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GACxF,CAAEJ,KAAM,UAAWC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GAC3F,CAAEJ,KAAM,QAASC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACzF,CAAEJ,KAAM,OAAQC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACxF,CAAEJ,KAAM,QAASC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IAC1F,CAAEJ,KAAM,OAAQC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,IACzF,CAAEJ,KAAM,cAAeC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GAChG,CAAEJ,KAAM,MAAOC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,GACxF,CAAEJ,KAAM,OAAQC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACxF,CAAEJ,KAAM,OAAQC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,kBAAmB,GACxF,CAAEJ,KAAM,OAAQC,WAAY,EAAGC,WAAW,EAAMC,cAAc,EAAOC,mBAAoB,KAE7FnE,EAAmBI,cAAgBoB,EAAUmB,OAC7C,MAAMyB,EAAa7C,EAAOK,gBAAgBe,OAC1C,IAAK,MAAMrB,KAAYE,EAAW,CAC9B,MAAMV,EAAgBS,EAAOK,gBAAgBe,OACvClB,EAAc,CAAE4C,MAAOvD,EAAeiD,KAAMzC,EAASyC,KAAMC,WAAY1C,EAAS0C,WAAYC,UAAW3C,EAAS2C,UAAWC,aAAc5C,EAAS4C,aAAcC,kBAAmB7C,EAAS6C,kBAAmB/B,QAAS0B,GACxNnC,EAAiB,CAAE0C,MAAOvD,EAAeiD,KAAMzC,EAASyC,KAAMC,WAAY1C,EAAS0C,WAAYC,UAAW3C,EAAS2C,UAAWC,aAAc5C,EAAS4C,aAAcC,kBAAmB7C,EAAS6C,kBAAmB/B,QAAS0B,GAC3NQ,EAAqB,CAAED,MAAOvD,EAAeiD,KAAMzC,EAASyC,KAAMC,WAAY1C,EAAS0C,WAAYC,UAAW3C,EAAS2C,UAAWC,aAAc5C,EAAS4C,aAAcC,kBAAmB7C,EAAS6C,kBAAmB/B,QAASyB,GACrOtC,EAAOK,gBAAgBd,GAAiBa,EACxCJ,EAAOK,gBAAgB2C,WAAWjD,EAASyC,MAAQpC,EACnDJ,EAAOG,aAAaZ,GAAiBW,EACrCF,EAAOG,aAAa6C,WAAWjD,EAASyC,MAAQtC,EAChDF,EAAOC,UAAUV,GAAiBwD,EAClC/C,EAAOC,UAAU+C,WAAWjD,EAASyC,MAAQtC,EAC7CzB,EAAmBE,YAAYY,GAAiB,EAChDd,EAAmBG,SAASW,GAAiB,sBACzD,CACQmC,EAAW,6BACNpD,MAAK,KACN,MAAM2E,EAAkB,CACpBnC,EAAWgH,mBACXhH,EAAWiH,uBACXjH,EAAWkH,qBACXlH,EAAWmH,oBACXnH,EAAWoH,qBACXpH,EAAWqH,oBACXrH,EAAWsH,0BACXtH,EAAWuH,aACXvH,EAAWwH,cACXxH,EAAWyH,oBACXzH,EAAW0H,qBAEf,IAAIhB,EAAsB,EAC1B,IAAK,MAAMC,KAAkBxE,EAAiB,CAC1C,MAAM1D,EAAgBsD,EAAa2E,EACnCxH,EAAOG,aAAaZ,GAAesB,QAAU4G,EAC7CzH,EAAOK,gBAAgBd,GAAesB,QAAU4G,EAChDzH,EAAOC,UAAUV,GAAesB,QAAUM,EAAgBsG,GAC1DhJ,EAAmBE,YAAYY,GAAiB,EAChDd,EAAmBK,gBACnBM,EAAiBiC,cAAc,IAAItC,EAAkBN,EAAmBI,aAAcJ,EAAmBK,gBACzG0I,GAChB,IAEA,MAEQiB,QAAQC,IAAI,kCAEpB,CACO,MAAM1I,EACT,uBAAO2I,GACH,MAAMC,EAAO,IAAIC,aAAazL,EAAG0L,eAAiB,GAClD,IAAK,IAAIC,EAAI,EAAGA,EAAI3L,EAAG0L,eAAiB,EAAGC,IACvCH,EAAKG,GAAKC,KAAKC,IAAIF,EAAIC,KAAKE,GAAK,EAAM9L,EAAG0L,gBAE9C,OAAOF,CACf,CACI,sBAAOO,GACH,MAAMP,EAAO,IAAIC,aAAazL,EAAG0L,eAAiB,GAClD,IAAK,IAAIC,EAAI,EAAGA,EAAI3L,EAAG0L,eAAiB,EAAGC,IACvCH,EAAKG,GAAKC,KAAKI,KAAKJ,KAAKC,IAAIF,EAAIC,KAAKE,GAAK,EAAM9L,EAAG0L,kBAAoBE,KAAKE,GAAK,GAEtF,OAAON,CACf,CACI,4BAAOS,CAAsBC,EAAQ,GACjC,MAAMV,EAAO,IAAIC,aAAazL,EAAG0L,eAAiB,GAClD,IAAK,IAAIC,EAAI,EAAGA,EAAI3L,EAAG0L,eAAiB,EAAGC,IACvCH,EAAKG,GAAKC,KAAKO,KAAK,EAAKP,KAAKQ,IAAI,EAAKR,KAAKI,KAAKJ,KAAKC,IAAIF,EAAIC,KAAKE,GAAK,EAAM9L,EAAG0L,iBAAmBQ,IAExG,OAAOV,CACf,CACI,yBAAOa,CAAmBC,EAAa,GACnC,MAAMd,EAAO,IAAIC,aAAazL,EAAG0L,eAAiB,GAC5Ca,EAAcvM,EAAG0L,eAAiB,EACxC,IAAK,IAAIC,EAAI,EAAGA,EAAI3L,EAAG0L,eAAiB,EAAGC,IACvCH,EAAKG,GAC4F,IADpFC,KAAKY,IAAIb,EAAIY,GAAeD,EAAatM,EAAG0L,eAAiB,GACjEE,KAAKY,IAAIb,EAAI3L,EAAG0L,eAAiBa,GAAeD,EAAatM,EAAG0L,eAAiB,GAAW,EAEzG,OAAOF,CACf,CACI,sBAAOiB,CAAgBC,GAAU,GAC7B,MAAMlB,EAAO,IAAIC,aAAazL,EAAG0L,eAAiB,GAClD,IAAK,IAAIC,EAAI,EAAGA,EAAI3L,EAAG0L,eAAiB,EAAGC,IACvCH,EAAKG,GAAwC,GAAjCA,EAAK3L,EAAG0L,eAAiB,GAAc1L,EAAG0L,eAAkB,EAAI,EAC5EF,EAAKG,GAAKe,GAAWlB,EAAKG,GAAKH,EAAKG,GAExC,OAAOH,CACf,CACI,4BAAOmB,GACH,MAAMnB,EAAO,IAAIC,aAAazL,EAAG0L,eAAiB,GAClD,IAAK,IAAIC,EAAI,EAAGA,EAAI3L,EAAG0L,eAAiB,EAAGC,IACvCH,EAAKG,GAAKC,KAAKgB,MAAMhB,KAAKC,IAAIF,EAAIC,KAAKE,GAAK,EAAM9L,EAAG0L,iBAEzD,OAAOF,CACf,EAi2BA,SAAS9H,EAAW8H,GAChB,IAAIqB,EAAM,EACV,IAAK,IAAIlB,EAAI,EAAGA,EAAIH,EAAKxH,OAAQ2H,IAC7BkB,GAAOrB,EAAKG,GAChB,MAAMmB,EAAUD,EAAMrB,EAAKxH,OAC3B,IAAK,IAAI2H,EAAI,EAAGA,EAAIH,EAAKxH,OAAQ2H,IAC7BH,EAAKG,IAAMmB,EAGf,OAFA/I,EAAgByH,GAChBA,EAAKuB,KAAK,GACH,IAAItB,aAAaD,EAC5B,CACA,SAASwB,EAAuBxB,GAC5B,IAAIyB,EAAO,EACXvJ,EAAW8H,GACX,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAKxH,OAAS,EAAG2H,IACjCsB,GAAQrB,KAAKY,IAAIhB,EAAKG,IAE1B,MAAMuB,EAAUD,GAAQzB,EAAKxH,OAAS,GACtC,IAAK,IAAI2H,EAAI,EAAGA,EAAIH,EAAKxH,OAAS,EAAG2H,IACjCH,EAAKG,GAAKH,EAAKG,GAAKuB,EAExB,OAAO,IAAIzB,aAAaD,EAC5B,CACO,SAASzH,EAAgByH,GAC5B,IAAI2B,EAAa,EACbC,EAAU,IAAI3B,aAAaD,EAAKxH,QACpC,IAAK,IAAI2H,EAAI,EAAGA,EAAIH,EAAKxH,OAAQ2H,IAC7ByB,EAAQzB,GAAKwB,EACbA,GAAc3B,EAAKG,GAEvB,OAAOyB,CACX,CASO,SAASC,EAAmBC,GAC/B,OAAOA,GAAuC,EAAzB1K,EAAO2K,gBAChC,CACO,SAASC,EAAY9H,EAAO+H,EAA6BC,GAC5D,IAAIlC,EAAO5I,EAAO+K,WAAWjI,GAAOjC,QACpC,GAAY,MAAR+H,EAAc,CAGd,GAFAA,EAAO,IAAIC,aAAa7I,EAAOgL,gBAAkB,GACjDhL,EAAO+K,WAAWjI,GAAOjC,QAAU+H,EACtB,GAAT9F,EAAY,CACZ,IAAImI,EAAa,EACjB,IAAK,IAAIlC,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAC7CH,EAAKG,GAAwB,GAAL,EAAbkC,GAAwB,EACnC,IAAIC,EAAYD,GAAc,EACQ,IAAhCA,EAAaC,EAAa,KAC5BA,GAAa,OAEjBD,EAAaC,CAC7B,CACA,MACa,GAAa,GAATpI,EACL,IAAK,IAAIiG,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IACxCH,EAAKG,GAAqB,EAAhBC,KAAKmC,SAAiB,OAGnC,GAAa,GAATrI,EAAY,CACjB,IAAImI,EAAa,EACjB,IAAK,IAAIlC,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAC7CH,EAAKG,GAAwB,GAAL,EAAbkC,GAAwB,EACnC,IAAIC,EAAYD,GAAc,EACQ,IAAhCA,EAAaC,EAAa,KAC5BA,GAAa,OAEjBD,EAAaC,CAC7B,CACA,MACa,GAAa,GAATpI,EAAY,CACjB,IAAImI,EAAa,EACjB,IAAK,IAAIlC,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAC7CH,EAAKG,GAAwB,GAAL,EAAbkC,GAAwB,EACnC,IAAIC,EAAYD,GAAc,EACQ,IAAhCA,EAAaC,EAAa,KAC5BA,GAAa,IAEjBD,EAAaC,CAC7B,CACA,MACa,GAAa,GAATpI,EACLsI,EAAkBxC,EAAM5I,EAAOgL,gBAAiB,GAAI,GAAI,EAAG,EAAG,GAC9DI,EAAkBxC,EAAM5I,EAAOgL,gBAAiB,GAAI,GAAI,MAAO,MAAO,GACtEH,EAA4BjC,EAAM5I,EAAOgL,iBACzCF,EAAsBlC,EAAM,EAAMI,KAAKqC,KAAKrL,EAAOgL,uBAElD,GAAa,GAATlI,EAEL,IADA,IAAImI,EAAa,EACRlC,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAC7CH,EAAKG,GAAwB,GAAL,EAAbkC,GAAwB,EAEG,IAAhCA,GADFC,EAAYD,GAAc,GACE,KAC5BC,GAAa,IAEjBD,EAAaC,CAC7B,MAEa,GAAa,GAATpI,EACLsI,EAAkBxC,EAAM5I,EAAOgL,gBAAiB,EAAG,GAAI,EAAG,EAAG,GAC7DI,EAAkBxC,EAAM5I,EAAOgL,gBAAiB,GAAI,IAAK,GAAI,EAAG,GAChEH,EAA4BjC,EAAM5I,EAAOgL,iBACzCF,EAAsBlC,EAAM,EAAMI,KAAKqC,KAAKrL,EAAOgL,uBAElD,GAAa,GAATlI,EAEL,IADImI,EAAa,EACRlC,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAC7CH,EAAKG,GAAwB,GAAL,EAAbkC,IAAyC,GAAhBjC,KAAKmC,SAAgB,GAAK,EAExB,IAAhCF,GADFC,EAAYD,GAAc,GACE,KAC5BC,GAAa,IAEjBD,EAAaC,CAC7B,MAEa,GAAa,GAATpI,EAEL,IADImI,EAAa,EACRlC,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAC7CH,EAAKG,IAAmB,EAAbkC,GAAkB,EAAM,GAEG,IAAhCA,GADFC,EAAYD,GAAc,GACE,KAC5BC,GAAa,IAEjBD,EAAaC,CAC7B,MAEa,GAAa,GAATpI,EAAY,CACjB,IAAImI,EAAa,EACjB,IAAK,IAAIlC,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAC7CH,EAAKG,GAAwB,GAAL,EAAbkC,GAAwB,IACnC,IAAIC,EAAYD,GAAc,EACQ,IAAhCA,EAAaC,EAAa,KAC5BA,GAAa,QAEjBD,EAAaC,CAC7B,CACA,MACa,GAAa,IAATpI,EACL,IAAK,IAAIiG,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IACxCH,EAAKG,GAAKC,KAAKgB,MAAMhB,KAAKmC,eAG7B,GAAa,IAATrI,EAEL,IADImI,EAAa,EACRlC,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAE7C,IAAImC,EADJtC,EAAKG,GAAKC,KAAKgB,MAAoB,EAAbiB,GAEgB,IAAhCA,GADFC,EAAYD,GAAc,GACE,KAC5BC,GAAa,IAEjBD,EAAaC,CAC7B,MAEa,GAAa,IAATpI,EACL,IAAK,IAAIiG,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAC7C,IAAIuC,EAA2BtC,KAAKmC,SACpCvC,EAAKG,GAAKC,KAAKuC,IAAID,EAA0BtC,KAAKwC,MAAMF,GACxE,MAEa,GAAa,IAATxI,EAAa,CAClB,IAA4B2I,EAAIC,EAAIC,EAAIC,EAApCC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EACzBF,EAAKC,EAAKC,EAAKN,EAAKC,EAAKC,EAAKC,EAAK,EACnC,IAAK,IAAI7C,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAE7C8C,EAAK,OAAUA,EAAa,UADxBG,EAAwB,EAAhBhD,KAAKmC,SAAe,GAEhCW,EAAK,OAAUA,EAAa,SAARE,EACpBD,EAAK,KAAUA,EAAa,QAARC,EACpBP,EAAK,MAAUA,EAAa,SAARO,EACpBN,EAAK,IAAUA,EAAa,SAARM,EACpBL,GAAM,MAASA,EAAa,QAARK,EACpBpD,EAAKG,GAAK8C,EAAKC,EAAKC,EAAKN,EAAKC,EAAKC,EAAKC,EAAa,MAARI,EAC7CpD,EAAKG,IAAM,IACX6C,EAAa,QAARI,CACrB,CACA,KACa,IAAa,IAATlJ,EAUL,MAAM,IAAIpC,MAAM,4BAA8BoC,GAT9C,IAAImJ,EAAU,EACd,IAAK,IAAIlD,EAAI,EAAGA,EAAI/I,EAAOgL,gBAAiBjC,IAAK,CAC7C,IAAIiD,EAAwB,EAAhBhD,KAAKmC,SAAe,EAChCvC,EAAKG,IAAMkD,EAAW,IAAOD,GAAU,KACvCC,EAAUrD,EAAKG,GACfH,EAAKG,IAAM,EAC3B,CAIA,CACQH,EAAK5I,EAAOgL,iBAAmBpC,EAAK,EAC5C,CACI,OAAOA,CACX,CACO,SAASwC,EAAkBxC,EAAMsD,EAAYC,EAAWC,EAAYC,EAAUC,EAAWC,GAC5F,MAEMC,EAAoC,EAAzBxD,KAAKuC,IAAI,EAAGY,GACvBM,EAAYzD,KAAKQ,IAAI0C,GAAc,EAA6B,EAA1BlD,KAAKuC,IAAI,EAAGa,IAClDM,EAAY9B,EAAY,EAAG,KAAM,MACvC,IAAI+B,EAAoB,EACxB,IAAK,IAAI5D,EAAIyD,EAAUzD,EAAI0D,EAAW1D,IAAK,CACvC,IAAI6D,EAASP,GAAYC,EAAYD,IAAarD,KAAK6D,KAAK9D,GAAKoD,IAAcC,EAAaD,GACxFW,EAAY9D,KAAKuC,IAAI,EAAkB,GAAdqB,EAAS,GAAS,GAAKA,EACpDE,GAAa9D,KAAKuC,IAAIxC,EARH,KAQuBwD,GAC1CI,GAAqBG,EACrBA,GAAaJ,EAAU3D,GACvB,MAAMgE,EAAU,aAAgBhE,EAAIA,EAAIC,KAAKE,GAAK,EAClDN,EAAKG,GAAKC,KAAKgE,IAAID,GAAWD,EAC9BlE,EAAKsD,EAAanD,GAAKC,KAAKC,IAAI8D,GAAWD,CACnD,CACI,OAAOH,CACX,CACO,SAASM,EAAsBC,EAAYC,EAAmBC,GACjE,IAAIC,EAAkBrN,EAAOsN,iBAAiBJ,EAAa,GAC3D,OAAuB,MAAnBG,GACkB,GAAdH,GAAwC,GAArBC,IACnBE,EAAkB,CAAC,EAAG,EAAG,EAAG,IAEzBA,EAAgBD,EAAWC,EAAgBjM,SAG3CgM,EAAWF,CAE1B,CACO,SAASK,EAAUC,GACtB,MAAMxK,EAAa,GACnB,IAAK,IAAI+F,EAAI,EAAGA,EAAIyE,EAAMpM,OAAQ2H,IAAK,CACnC,MAAMhL,EAAQyP,EAAMzE,GACpBhL,EAAM+E,MAAQiG,EACd/F,EAAWjF,EAAMyE,MAAQzE,CACjC,CACI,MAAMK,EAASoP,EAEf,OADApP,EAAO4E,WAAaA,EACb5E,CACX,CACO,SAASqP,EAAyBC,GACrC,OAAgC,IAAjB,KAAPA,EACZ,CACO,SAASC,EAAoBD,GAChC,OAAgC,IAAjB,KAAPA,EACZ,CACO,SAASE,EAAyBF,GACrC,OAA+B,IAAhB,IAAPA,EACZ,CACO,SAASG,EAAqBH,GACjC,OAA+B,IAAhB,IAAPA,EACZ,CACO,SAASI,EAAsBJ,GAClC,OAA+B,IAAhB,IAAPA,EACZ,CACO,SAASK,EAAyBL,GACrC,OAA+B,IAAhB,GAAPA,EACZ,CACO,SAASM,EAAyBN,GACrC,OAA+B,IAAhB,EAAPA,EACZ,CACO,SAASO,EAAyBP,GACrC,OAA+B,IAAhB,GAAPA,EACZ,CACO,SAASQ,EAAsBR,GAClC,OAA+B,IAAhB,EAAPA,EACZ,CACO,SAASS,EAAqBT,GACjC,OAA+B,IAAhB,EAAPA,EACZ,CACO,SAASU,EAAmBV,GAC/B,OAA+B,IAAhB,GAAPA,EACZ,CACO,SAASW,EAAqBX,GACjC,OAA+B,IAAhB,EAAPA,EACZ,CACO,SAASY,EAA6BZ,GACzC,OAAgC,IAAjB,KAAPA,EACZ,CACO,SAASa,EAAuBb,GACnC,OAAgC,IAAjB,MAAPA,EACZ,CAIO,SAASc,EAAsBC,EAAUC,EAAiB,GAC7D,OAAgB,GAAZD,EACO,GACPA,EAAW,IACXA,GAAY,EAAIzO,EAAO2O,gBACvBF,EAAW,EAAIzO,EAAO2O,iBACtBF,GAAY,EAAIzO,EAAO2O,gBACpB3F,KAAK4F,MAAM5O,EAAO6O,aAAe7F,KAAKuC,IAAIvL,EAAO8O,aAAe9O,EAAO6O,aAAcJ,IAChG,CAloCArR,EAAK4C,EACLA,EAAO+O,cAAgB,GACvB/O,EAAOgP,QAAU,GACjBhP,EAAOiP,SAAW,GAClBjP,EAAOkP,UAAY,EACnBlP,EAAOmP,WAAa,IACpBnP,EAAO2B,4BAA6B,EACpC3B,EAAOoP,WAAa,cACpBpP,EAAOqP,OAAS9B,EAAU,CACtB,CAAE/K,KAAM,OAAQ8M,SAAU,YAAaC,MAAO,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IACjH,CAAE/M,KAAM,QAAS8M,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,IACpH,CAAE/M,KAAM,QAAS8M,SAAU,UAAWC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IACpH,CAAE/M,KAAM,aAAc8M,SAAU,aAAcC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,IAC5H,CAAE/M,KAAM,SAAU8M,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,IACrH,CAAE/M,KAAM,SAAU8M,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,IACpH,CAAE/M,KAAM,WAAY8M,SAAU,WAAYC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IACxH,CAAE/M,KAAM,UAAW8M,SAAU,UAAWC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,IACtH,CAAE/M,KAAM,kBAAmB8M,SAAU,kBAAmBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,IACtI,CAAE/M,KAAM,oBAAqB8M,SAAU,oBAAqBC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IAC1I,CAAE/M,KAAM,iBAAkB8M,SAAU,iBAAkBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,IACrI,CAAE/M,KAAM,iBAAkB8M,SAAU,iBAAkBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,IACrI,CAAE/M,KAAM,gBAAiB8M,SAAU,gBAAiBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,IACnI,CAAE/M,KAAM,cAAe8M,SAAU,cAAeC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,IAC/H,CAAE/M,KAAM,QAAS8M,SAAU,QAASC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAM,IACnH,CAAE/M,KAAM,UAAW8M,SAAU,UAAWC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,IACtH,CAAE/M,KAAM,mBAAoB8M,SAAU,mBAAoBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,IAC1I,CAAE/M,KAAM,mBAAoB8M,SAAU,mBAAoBC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAM,IAC1I,CAAE/M,KAAM,aAAc8M,SAAU,aAAcC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,IAC7H,CAAE/M,KAAM,YAAa8M,SAAU,YAAaC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,IAC1H,CAAE/M,KAAM,YAAa8M,SAAU,YAAaC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,IAC5H,CAAE/M,KAAM,kBAAmB8M,SAAU,aAAcC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAO,GAAM,IAC/H,CAAE/M,KAAM,mBAAoB8M,SAAU,cAAeC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAM,GAAM,GAAO,GAAM,IAClI,CAAE/M,KAAM,kBAAmB8M,SAAU,MAAOC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,IAC3H,CAAE/M,KAAM,SAAU8M,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAAM,MAEzHvP,EAAOwP,KAAOjC,EAAU,CACpB,CAAE/K,KAAM,IAAKiN,YAAY,EAAMC,UAAW,IAC1C,CAAElN,KAAM,KAAMiN,YAAY,EAAOC,UAAW,IAC5C,CAAElN,KAAM,IAAKiN,YAAY,EAAMC,UAAW,IAC1C,CAAElN,KAAM,KAAMiN,YAAY,EAAOC,UAAW,IAC5C,CAAElN,KAAM,IAAKiN,YAAY,EAAMC,UAAW,IAC1C,CAAElN,KAAM,IAAKiN,YAAY,EAAMC,UAAW,IAC1C,CAAElN,KAAM,KAAMiN,YAAY,EAAOC,UAAW,IAC5C,CAAElN,KAAM,IAAKiN,YAAY,EAAMC,UAAW,IAC1C,CAAElN,KAAM,KAAMiN,YAAY,EAAOC,UAAW,IAC5C,CAAElN,KAAM,IAAKiN,YAAY,EAAMC,UAAW,IAC1C,CAAElN,KAAM,KAAMiN,YAAY,EAAOC,UAAW,IAC5C,CAAElN,KAAM,IAAKiN,YAAY,EAAMC,UAAW,MAE9C1P,EAAO2P,oBAAsB,EAAE,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GACtE3P,EAAO4P,SAAW,EAClB5P,EAAO6P,SAAW,IAClB7P,EAAO8P,WAAa,EACpB9P,EAAO+P,UAAY,EACnB/P,EAAOgQ,eAAiB,GACxBhQ,EAAOiQ,mBAAqB,EAC5BjQ,EAAOkQ,iBAAmB,EAC1BlQ,EAAOmQ,YAAc,IACrBnQ,EAAOoQ,cAAgBpH,KAAKuC,IAAI,GAAM,IACtCvL,EAAOqQ,cAAgB,IACvBrQ,EAAOsQ,gBAAkBtH,KAAKuC,IAAI,GAAM,KACxCvL,EAAOuQ,YAAc,GACrBvQ,EAAOwQ,sBAAwB,MAC/BxQ,EAAOyQ,sBAAwBrT,EAAGoT,sBAAwB,EAC1DxQ,EAAO0Q,eAAiB,EACxB1Q,EAAO2Q,eAAiB,GACxB3Q,EAAO4Q,YAAc,EACrB5Q,EAAO6Q,YAAc,KACrB7Q,EAAO8Q,mBAAqB,EAC5B9Q,EAAO+Q,0BAA4B,GACnC/Q,EAAOgR,0BAA4B,GACnChR,EAAOiR,aAAe,GACtBjR,EAAOkR,aAAe,EACtBlR,EAAOmR,iBAAmB,EAC1BnR,EAAOsN,iBAAmB,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACtJtN,EAAOoR,QAAU7D,EAAU,CACvB,CAAE/K,KAAM,gBAAiB6O,aAAc,EAAGC,kBAAmB,CAAC,EAAG,GAAI,KACrE,CAAE9O,KAAM,gBAAiB6O,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,GAAI,KACxE,CAAE9O,KAAM,KAAM6O,aAAc,EAAGC,kBAAmB,MAClD,CAAE9O,KAAM,KAAM6O,aAAc,EAAGC,kBAAmB,MAClD,CAAE9O,KAAM,MAAO6O,aAAc,GAAIC,kBAAmB,MACpD,CAAE9O,KAAM,WAAY6O,aAAc,GAAIC,kBAAmB,QAE7DtR,EAAOuR,oBAAsB,CAAC,OAAQ,KAAM,QAAS,WAAY,UAAW,YAAa,MAAO,gBAAiB,WAAY,cAAe,MAAO,SACnJvR,EAAOwR,iCAAmC,EAAC,GAAM,GAAM,GAAO,GAAO,GAAO,GAAM,GAAO,GAAO,GAAO,GAAO,GAC9GxR,EAAOyR,mBAAqB,OAC5BzR,EAAO0R,iBAAmB,IAC1B1R,EAAO2R,oBAAsB,IAC7B3R,EAAO4R,uBAAyB,GAChC5R,EAAO6R,sBAAwB,IAC/B7R,EAAO8R,wBAA0B,KACjC9R,EAAO+R,kBAAoB,OAC3B/R,EAAOgS,uBAAyB,QAChChS,EAAOiS,2BAA6B,KACpCjS,EAAOkS,qBAAuB,KAC9BlS,EAAOmS,qBAAuB,IAC9BnS,EAAOoS,mCAAqC,GAC5CpS,EAAOG,aAAeoN,EAAU,CAC5B,CAAE/K,KAAM,UAAWC,WAAY,IAAM5B,QAASC,EAAW,CAAC,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAAM,GAAK,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,GAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,IAAM,KAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAAO,IAAM,KAAO,IAAM,IAAM,IAAM,IAAM,IAAM,MAC1Z,CAAE0B,KAAM,WAAYC,WAAY,EAAK5B,QAASC,EAAW,CAAC,EAAM,GAAM,GAAY,EAAM,GAAM,EAAM,GAAM,GAAY,GAAO,GAAM,GAAO,GAAM,EAAa,EAAa,GAAO,GAAM,GAAO,GAAM,GAAY,EAAM,GAAM,EAAM,GAAM,GAAY,EAAM,IAAO,EAAM,IAAM,IAAc,EAAM,IAAO,EAAM,IAAM,IAAc,GAAO,IAAO,GAAO,IAAM,GAAc,GAAe,GAAO,IAAO,GAAO,IAAM,IAAc,EAAM,IAAO,EAAM,IAAM,IAAc,EAAM,MAChd,CAAE0B,KAAM,SAAUC,WAAY,GAAK5B,QAASC,EAAW,CAAC,GAAM,KAC9D,CAAE0B,KAAM,YAAaC,WAAY,GAAK5B,QAASC,EAAW,CAAC,GAAM,GAAM,GAAM,KAC7E,CAAE0B,KAAM,YAAaC,WAAY,GAAK5B,QAASC,EAAW,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACrG,CAAE0B,KAAM,WAAYC,WAAY,IAAM5B,QAASC,EAAW,CAAC,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAa,GAAe,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,MAC3d,CAAE0B,KAAM,aAAcC,WAAY,GAAK5B,QAASC,EAAW,CAAC,GAAM,IAAM,IAAM,IAAM,IAAM,EAAK,GAAM,IAAM,IAAM,IAAM,GAAK,EAAK,GAAK,GAAK,GAAK,MAChJ,CAAE0B,KAAM,eAAgBC,WAAY,GAAK5B,QAASC,EAAW,CAAC,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,KAChJ,CAAE0B,KAAM,QAASC,WAAY,GAAK5B,QAASC,EAAW,CAAC,GAAM,EAAK,GAAM,EAAK,EAAK,KAClF,CAAE0B,KAAM,OAAQC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KAC3O,CAAE5H,KAAM,QAASC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,KACvJ,CAAE5H,KAAM,OAAQC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACvO,CAAE5H,KAAM,iBAAkBC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACzO,CAAE5H,KAAM,gBAAiBC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KAC7O,CAAE5H,KAAM,WAAYC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACzO,CAAE5H,KAAM,UAAWC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,MACxO,CAAE5H,KAAM,UAAWC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,MACpO,CAAE5H,KAAM,kBAAmBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,GAAM,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,EAAK,EAAK,GAAM,EAAK,EAAK,GAAM,GAAM,GAAM,MACrP,CAAE5H,KAAM,QAASC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KAC5O,CAAE5H,KAAM,YAAaC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KAC9O,CAAE5H,KAAM,SAAUC,WAAY,GAAK5B,QAASC,EAAW,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,KACltC,CAAE0B,KAAM,YAAaC,WAAY,EAAK5B,QAASC,EAAW,CAAC,EAAM,GAAM,GAAY,GAAO,GAAM,GAAO,GAAM,EAAa,EAAa,EAAa,EAAa,EAAa,EAAa,EAAa,EAAa,GAAO,GAAM,GAAO,GAAM,GAAY,EAAM,IAAO,EAAM,IAAM,IAAc,GAAO,IAAO,GAAO,IAAM,GAAc,GAAc,GAAc,GAAc,GAAc,GAAc,GAAc,GAAe,GAAO,IAAO,GAAO,IAAM,IAAc,EAAM,MAC7d,CAAE0B,KAAM,mBAAoBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACpI,CAAE5H,KAAM,sBAAuBC,WAAY,EAAK5B,QAASuJ,EAAuB,CAAC,EAAK,MAAQ,MAAQ,MAAQ,GAAK,IAAM,KAAO,EAAK,EAAK,MAAQ,GAAK,KAAO,KAAO,GAAK,KAAO,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAO,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,IAAM,KAC9S,CAAE5H,KAAM,oBAAqBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,GAAK,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,IAAM,IAAM,KAAO,KAAO,KAAO,KAC7J,CAAE5H,KAAM,aAAcC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAM,GAAM,GAAY,EAAM,GAAM,EAAK,OACjH,CAAE5H,KAAM,gBAAiBC,WAAY,GAAK5B,QAASuJ,EAAuB,EAAE,GAAK,IAAK,GAAM,IAAM,KAAO,KACzG,CAAE5H,KAAM,cAAeC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,IAAM,KAAO,GAAK,IAAM,GAAK,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,GAAK,KAAO,KAAO,GAAK,KAAO,IAAM,KAAO,IAAM,IAAM,KAAO,EAAG,KAAO,IAAM,IAAM,KAAO,IAAM,KAAO,GAAK,KAAO,KAAO,GAAK,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,GAAK,IAAM,GAAK,KAAO,IAAM,GAAM,KAAO,MAAQ,IAAM,KAAO,IAAM,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,IAAM,MAAQ,MAAQ,IAAM,MAAQ,KAAO,MAAQ,KAAO,KAAO,MAAQ,GAAI,MAAQ,KAAO,KAAO,MAAQ,KAAO,MAAQ,IAAM,MAAQ,MAAQ,IAAM,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,IAAM,KAAO,IAAM,MAAQ,OACprB,CAAE5H,KAAM,oBAAqBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACrJ,CAAE5H,KAAM,qBAAsBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACtJ,CAAE5H,KAAM,kBAAmBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACrqB,CAAE5H,KAAM,yBAA0BC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,GAAW,EAAM,EAAK,EAAM,KACrH,CAAE5H,KAAM,eAAgBC,WAAY,IAAM5B,QAASuJ,EAAuB,EAAE,IAAM,GAAM,KAAO,MAAQ,IAAM,IAAM,IAAM,IAAM,MAAQ,MAAQ,IAAM,MAAQ,IAAM,KAAO,MAAQ,KAAO,MAAQ,KAAO,IAAM,KAAO,KAAO,KAAO,IAAM,MAAQ,KAAO,IAAM,GAAK,IAAM,IAAM,KAAO,GAAK,IAAM,IAAM,KAAO,IAAM,IAAM,KAAO,GAAK,IAAM,IAAM,IAAM,GAAK,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,IAAM,IAAM,GAAK,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,GAAK,KAAO,IAAM,GAAK,KAAO,GAAM,KAAO,KAAO,KAAO,KAAO,GAAK,GAAK,KAAO,GAAK,IAAM,IAAM,IAAM,EAAK,IAAM,IAAM,GAAK,KAAO,KAAO,KAAO,KAAO,KAAO,IAAM,MAAQ,IAAM,IAAM,KAAO,KAAO,IAAM,GAAM,MACnpB,CAAE5H,KAAM,eAAgBC,WAAY,IAAM5B,QAASuJ,EAAuB,EAAE,GAAM,KAAO,MAAQ,IAAM,KAAO,IAAM,MAAQ,KAAO,IAAM,IAAM,MAAQ,KAAO,MAAQ,IAAM,MAAQ,IAAM,EAAK,KAAO,KAAO,IAAM,GAAM,IAAM,KAAO,IAAM,KAAO,IAAM,GAAM,IAAM,KAAO,KAAO,GAAM,KAAO,IAAM,IAAM,IAAM,KAAO,IAAM,IAAM,GAAM,IAAM,KAAO,KAAO,KAAO,KAAO,GAAM,IAAM,IAAM,EAAK,GAAK,KAAO,KAAO,GAAK,KAAO,GAAK,GAAK,IAAM,GAAK,KAAO,IAAM,IAAM,IAAM,IAAM,IAAM,GAAK,IAAM,GAAK,GAAK,KAAO,IAAM,IAAM,KAAO,KAAO,KAAO,MAAQ,KAAO,KAAO,KAAO,KAAO,IAAM,KAAO,MAAQ,IAAM,MAAQ,KAAO,QACxmB,CAAE5H,KAAM,uBAAwBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,IAAM,IAAM,IAAM,IAAM,IAAM,KAC1H,CAAE5H,KAAM,cAAeC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,GAAM,EAAK,EAAK,KAAM,KAAM,KAAM,GAAM,IAAM,KACxH,CAAE5H,KAAM,oBAAqBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,KAAM,IAAK,KAAM,OAChG,CAAE5H,KAAM,iBAAkBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAG,EAAG,EAAG,GAAI,IAAM,GAAI,OACnG,CAAE5H,KAAM,qBAAsBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAK,EAAK,IAAK,EAAK,GAAM,OAC1G,CAAE5H,KAAM,kBAAmBC,WAAY,EAAK5B,QAASuJ,EAAuB,CAAC,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,MAC5K,CAAE5H,KAAM,wBAAyBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACrI,CAAE5H,KAAM,0BAA2BC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,GAAK,IAAM,GAAK,IAAM,GAAK,IAAM,GAAK,IAAM,GAAK,GAAM,GAAK,IAAM,GAAK,IAAM,GAAK,IAAM,GAAK,IAAM,GAAK,KACnM,CAAE5H,KAAM,sBAAuBC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,EAAK,IAAK,KAAM,IAAK,IAAK,OAC5G,CAAE5H,KAAM,kBAAmBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACtH,CAAE5H,KAAM,sBAAuBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC5G,CAAE5H,KAAM,oBAAqBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,KAAM,IAAK,IAAK,KAC/F,CAAE5H,KAAM,mBAAoBC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACvL,CAAE5H,KAAM,oBAAqBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,KAC1J,CAAE5H,KAAM,uBAAwBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC3G,CAAE5H,KAAM,qBAAsBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,KAAM,IAAK,KAAM,OACjG,CAAE5H,KAAM,mBAAoBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,IAAK,GAAM,IAAK,GAAM,IAAK,GAAM,IAAK,GAAM,IAAK,KACrI,CAAE5H,KAAM,qBAAsBC,WAAY,IAAK5B,QAASuJ,EAAuB,CAAC,IAAK,IAAa,KAAQ,IAAK,IAAa,KAAQ,GAAK,KAAQ,GAAK,KAAQ,IAAM,KAAQ,IAAM,KAAQ,IAAM,KAAQ,IAAM,KAAQ,IAAM,KAAQ,KAAM,QAAc,IAAc,KAAQ,IAAM,KAAQ,KAAM,EAAc,EAAa,IAAO,IAAM,IAAO,IAAM,IAAa,OAAa,IAAO,IAAM,IAAO,IAAM,IAAO,IAAM,IAAO,IAAM,IAAO,IAAM,IAAO,IAAM,IAAO,GAAK,IAAO,GAAK,IAAY,IAAO,GAAK,OAC/e,CAAE5H,KAAM,sBAAuBC,WAAY,EAAK5B,QAASuJ,EAAuB,CAAC,EAAK,KAAM,GAAM,GAAM,MAAO,KAC/G,CAAE5H,KAAM,qBAAsBC,WAAY,EAAK5B,QAASuJ,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAClf,CAAE5H,KAAM,sBAAuBC,WAAY,EAAK5B,QAASuJ,EAAuB,CAAC,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAK,GAAM,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAClS,CAAE5H,KAAM,qBAAsBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,IAAM,IAAK,MAAO,QAClG,CAAE5H,KAAM,sBAAuBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,MAAQ,MAAQ,MAAQ,GAAK,IAAM,KAAO,GAAM,GAAM,OAAS,IAAM,MAAQ,MAAQ,IAAM,MAAQ,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAQ,MAAQ,KAAO,OAAS,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,IAAM,KAC7T,CAAE5H,KAAM,kBAAmBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,IAAM,KACxF,CAAE5H,KAAM,2BAA4BC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,GAAM,EAAK,EAAK,GAAM,GAAM,KACnK,CAAE5H,KAAM,4BAA6BC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,EAAK,GAAM,EAAK,KAC7G,CAAE5H,KAAM,0BAA2BC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,EAAK,GAAM,EAAK,GAAM,KACjH,CAAE5H,KAAM,oBAAqBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAK,EAAW,IAAM,IAAM,EAAK,IAAM,GAAM,MAC5H,CAAE5H,KAAM,oBAAqBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,EAAM,IAAO,EAAK,GAAY,GAAM,MAAQ,MAChI,CAAE5H,KAAM,qBAAsBC,WAAY,EAAK5B,QAASuJ,EAAuB,CAAC,EAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,KACxH,CAAE5H,KAAM,qBAAsBC,WAAY,EAAK5B,QAASuJ,EAAuB,CAAC,EAAK,KAAM,GAAM,GAAM,MAAO,KAC9G,CAAE5H,KAAM,mBAAoBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,IAAK,EAAK,KAAM,KAAM,GAAM,OAC1G,CAAE5H,KAAM,kBAAmBC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,GAAM,IAAM,IAAM,KAAM,KAAM,EAAK,GAAM,IAAM,IAAM,KAAM,OACzI,CAAE5H,KAAM,oBAAqBC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,EAAG,GAAK,EAAG,GAAK,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,KACpH,CAAE5H,KAAM,uBAAwBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,IAAK,KAAM,EAAG,KAAM,IAAK,KAAM,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,KAC5K,CAAE5H,KAAM,gBAAiBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,IAAK,EAAK,MAAO,GAAK,KAAM,GAAK,GAAM,IAAK,IAAK,EAAK,IAAM,IAAK,GAAK,MAAO,GAAM,OAC9J,CAAE5H,KAAM,qBAAsBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,IAAM,IAAM,IAAM,GAAK,IAAM,IAAM,KAAO,OAC1H,CAAE5H,KAAM,eAAgBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAM,GAAM,GAAM,KAAM,KAAM,MAAO,MAAO,GAAM,KAC5H,CAAE5H,KAAM,sBAAuBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,EAAK,IAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,OACjK,CAAE5H,KAAM,oBAAqBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KACzH,CAAE5H,KAAM,oBAAqBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,KACpI,CAAE5H,KAAM,yBAA0BC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/U,CAAE5H,KAAM,mBAAoBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzU,CAAE5H,KAAM,qBAAsBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAClT,CAAE5H,KAAM,mBAAoBC,WAAY,GAAK5B,QAASC,EAAW,CAAC,GAAM,GAAM,KAC9E,CAAE0B,KAAM,mBAAoBC,WAAY,GAAK5B,QAASC,EAAW,CAAC,GAAM,GAAM,GAAM,GAAM,KAC1F,CAAE0B,KAAM,mBAAoBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAG,GAAK,EAAG,GAAK,KAAM,IAAM,IAAM,IAAM,GAAK,GAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,EAAG,GAAK,GAAK,GAAK,GAAK,GAAK,EAAK,GAAK,GAAK,GAAK,GAAK,MAC7O,CAAE5H,KAAM,oBAAqBC,WAAY,IAAM5B,QAASuJ,EAAuB,CAAC,GAAM,GAAM,GAAM,EAAK,GAAK,GAAK,GAAK,GAAK,IAAM,IAAK,GAAI,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACxc,CAAE5H,KAAM,mBAAoBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,GAAK,GAAI,GAAI,MAAO,GAAI,KAAM,KAAM,GAAI,MAAO,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,KAAM,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,KAAM,KAAM,KAAM,MAAO,KAAO,GAAI,IAAM,KAAM,KAAM,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,GAAI,EAAG,IAAK,EAAG,KAAM,KAAM,KAAM,EAAG,MAAO,GAAI,GAAI,KAAM,GAAI,GAAI,MAAO,MAAO,GAAI,GAAI,KAAM,EAAG,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,KAAM,GAAI,IAAK,EAAG,IAAK,IAAK,IAAK,KAAM,EAAG,IAAK,EAAG,EAAG,EAAG,KAAM,IAAK,EAAG,GAAI,IAAM,GAAI,KAAM,GAAI,GAAI,GAAI,MAAO,GAAI,GAAI,KACxkB,CAAE5H,KAAM,0BAA2BC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAAM,GAAK,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,GAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACnQ,CAAE5H,KAAM,wBAAyBC,WAAY,GAAK5B,QAASuJ,EAAuB,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,KAAM,GAAI,EAAG,EAAG,GAAI,KACzI,CAAE5H,KAAM,yBAA0BC,WAAY,EAAK5B,QAASuJ,EAAugCC,WAAY,GAAK5B,QAASuJ,EAAuB,EAAE,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAS,OAAS,OAAS,QAAU,OAAS,OAAS,QAAU,OAAS,OAAS,OAAS,OAAS,QAAU,QAAU,OAAS,OAAU,QAAU,OAAS,OAAS,MAAS,MAAS,MAAS,QAAU,OAAS,OAAS,OAAS,MAAS,QAAU,QAAU,QAAU,QAAU,OAAS,MAAS,OAAS,OAAS,OAAS,QAAU,QAAU,QAAU,QAAU,OAAS,OAAS,QAAU,OAAS,QAAU,QAAU,OAAS,QAAU,OAAU,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,MAAS,QAAU,OAAS,OAAS,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,YAEn+BpK,EAAOC,UAy8BA,SAA6BoS,GAChC,MAAMC,EAAW,IAAIvR,MAAMsR,EAAIjR,QACzB4B,EAAa,GACnB,IAAK,IAAI+F,EAAI,EAAGA,EAAIuJ,EAASlR,OAAQ2H,IAAK,CACtCuJ,EAASvJ,GAAKwJ,OAAOC,OAAO,GAAIH,EAAItJ,IACpC,MAAMhL,EAAQuU,EAASvJ,GACvBhL,EAAM+E,MAAQiG,EACd/F,EAAWjF,EAAMyE,MAAQzE,CACjC,CACI,IAAK,IAAI0U,KAAOzP,EACZA,EAAWyP,GAAK5R,QAAUM,EAAgB6B,EAAWyP,GAAK5R,SAE9D,MAAMzC,EAASkU,EAEf,OADAlU,EAAO4E,WAAaA,EACb5E,CACX,CAx9BmBsU,CAAoBtV,EAAG+C,cAC1CH,EAAOK,gBAAkBjD,EAAG+C,aAC5BH,EAAO2S,mCAAqCvV,EAAG6C,UAAUmB,OACzDpB,EAAO+K,WAAawC,EAAU,CAC1B,CAAE/K,KAAM,QAASC,WAAY,IAAMiN,UAAW,GAAIkD,gBAAiB,KAAQC,QAAQ,EAAOhS,QAAS,MACnG,CAAE2B,KAAM,QAASC,WAAY,EAAKiN,UAAW,GAAIkD,gBAAiB,EAAKC,QAAQ,EAAMhS,QAAS,MAC9F,CAAE2B,KAAM,QAASC,WAAY,GAAKiN,UAAW,GAAIkD,gBAAiB,KAAQC,QAAQ,EAAOhS,QAAS,MAClG,CAAE2B,KAAM,OAAQC,WAAY,GAAKiN,UAAW,GAAIkD,gBAAiB,KAAQC,QAAQ,EAAOhS,QAAS,MACjG,CAAE2B,KAAM,SAAUC,WAAY,IAAKiN,UAAW,GAAIkD,gBAAiB,EAAKC,QAAQ,EAAMhS,QAAS,MAC/F,CAAE2B,KAAM,QAASC,WAAY,EAAKiN,UAAW,GAAIkD,gBAAiB,KAAQC,QAAQ,EAAOhS,QAAS,MAClG,CAAE2B,KAAM,OAAQC,WAAY,IAAKiN,UAAW,IAAKkD,gBAAiB,KAAQC,QAAQ,EAAMhS,QAAS,MACjG,CAAE2B,KAAM,SAAUC,WAAY,KAAOiN,UAAW,GAAIkD,gBAAiB,KAAQC,QAAQ,EAAOhS,QAAS,MACrG,CAAE2B,KAAM,WAAYC,WAAY,EAAKiN,UAAW,GAAIkD,gBAAiB,KAAQC,QAAQ,EAAOhS,QAAS,MACrG,CAAE2B,KAAM,SAAUC,WAAY,EAAKiN,UAAW,GAAIkD,gBAAiB,KAAQC,QAAQ,EAAOhS,QAAS,MACnG,CAAE2B,KAAM,cAAeC,WAAY,GAAKiN,UAAW,MAAOkD,gBAAiB,KAAQC,QAAQ,EAAOhS,QAAS,MAC3G,CAAE2B,KAAM,iBAAkBC,WAAY,GAAKiN,UAAW,MAAOkD,gBAAiB,KAAQC,QAAQ,EAAOhS,QAAS,MAC9G,CAAE2B,KAAM,YAAaC,WAAY,GAAKiN,UAAW,GAAIkD,gBAAiB,KAAQC,QAAQ,EAAOhS,QAAS,MACtG,CAAE2B,KAAM,OAAQC,WAAY,EAAKiN,UAAW,GAAIkD,gBAAiB,EAAKC,QAAQ,EAAMhS,QAAS,MAC7F,CAAE2B,KAAM,WAAYC,WAAY,EAAKiN,UAAW,GAAIkD,gBAAiB,EAAKC,QAAQ,EAAMhS,QAAS,QAErGb,EAAO8S,eAAiB,EAAM,EAC9B9S,EAAO+S,gBAAkB,GACzB/S,EAAOgT,2BAA6B,GACpChT,EAAOiT,sBAAwB,IAC/BjT,EAAOkT,gBAAkB9V,EAAG6V,sBAAwBjK,KAAKuC,IAAI,EAAKnO,EAAG0V,gBAAkB1V,EAAG2V,gBAAkB,EAAI3V,EAAG4V,6BACnHhT,EAAOmT,gBAAkB,EACzBnT,EAAOoT,gBAAkB,GACzBpT,EAAOqT,iBAAmB,EAC1BrT,EAAOsT,eAAiB,GACxBtT,EAAOuT,gBAAkB,GACzBvT,EAAOwT,gBAAkB,CAAC,WAAY,YAAa,QACnDxT,EAAOyT,iBAAmB,GAC1BzT,EAAO0T,qBAAuB,GAC9B1T,EAAO2T,sBAAwB,EAC/B3T,EAAO4T,YAAc,GACrB5T,EAAO6T,aAAe,EAAE,IAAK,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAChE7T,EAAO8T,eAAiB,EACxB9T,EAAO+T,oBAAsB,GAC7B/T,EAAOgU,YAAczG,EAAU,CAC3B,CAAE/K,KAAM,SAAUyR,YAAY,EAAOC,WAAW,EAAOC,QAAQ,EAAOC,WAAY,EAAGC,yBAAyB,GAC9G,CAAE7R,KAAM,YAAayR,YAAY,EAAMC,WAAW,EAAOC,QAAQ,EAAOC,WAAY,EAAGC,yBAAyB,GAChH,CAAE7R,KAAM,WAAYyR,YAAY,EAAMC,WAAW,EAAMC,QAAQ,EAAOC,WAAY,EAAGC,yBAAyB,GAC9G,CAAE7R,KAAM,QAASyR,YAAY,EAAMC,WAAW,EAAOC,QAAQ,EAAMC,WAAY,EAAGC,yBAAyB,GAC3G,CAAE7R,KAAM,mBAAoByR,YAAY,EAAMC,WAAW,EAAOC,QAAQ,EAAMC,WAAY,EAAGC,yBAAyB,KAE1HrU,EAAOsU,SAAW/G,EAAU,CACxB,CAAE/K,KAAM,OAAQsK,UAAW,EAAKyH,KAAM,EAAGC,WAAY,GACrD,CAAEhS,KAAM,QAASsK,UAAW,IAAMyH,KAAM,EAAGC,WAAY,GACvD,CAAEhS,KAAM,UAAWsK,UAAW,GAAKyH,KAAM,EAAGC,WAAY,IACxD,CAAEhS,KAAM,QAASsK,UAAW,IAAMyH,KAAM,EAAGC,WAAY,GACvD,CAAEhS,KAAM,QAASsK,UAAW,GAAKyH,KAAM,EAAGC,WAAY,KAE1DxU,EAAOyU,aAAelH,EAAU,CAC5B,CAAE/K,KAAM,SAAUkS,eAAgB,CAAC,KAAOC,OAAQ,KAClD,CAAEnS,KAAM,QAASkS,eAAgB,CAAC,IAAM,OAAc,KAAWC,OAAQ,UAE7E3U,EAAO4U,cAAgB,CAAC,EAAG,MAAQ,KAAO,GAAK,IAAM,EAAI,EAAG,GAAK,GAAK,EAAI,EAAG,IAAM,GAAK,GAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,GAChR5U,EAAO6U,QAAUtH,EAAU,CACvB,CAAE/K,KAAM,OAAQsS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,EAAKvS,WAAY,IAAKwS,KAAM,GAC5E,CAAEzS,KAAM,UAAWsS,OAAQ,EAAGC,OAAQ,KAAOC,OAAQ,EAAKvS,WAAY,GAAKwS,KAAM,GACjF,CAAEzS,KAAM,MAAOsS,OAAQ,EAAGC,OAAQ,KAAOC,OAAQ,EAAKvS,WAAY,EAAKwS,KAAM,GAC7E,CAAEzS,KAAM,aAAcsS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAKvS,WAAY,EAAKwS,KAAM,GACnF,CAAEzS,KAAM,YAAasS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAKvS,WAAY,GAAKwS,KAAM,GAClF,CAAEzS,KAAM,QAASsS,OAAQ,EAAGC,OAAQ,IAAKC,OAAQ,IAAKvS,WAAY,GAAKwS,KAAM,GAC7E,CAAEzS,KAAM,SAAUsS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,EAAKvS,WAAY,GAAKwS,KAAM,GAC9E,CAAEzS,KAAM,QAASsS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAKvS,WAAY,EAAKwS,MAAO,GAC/E,CAAEzS,KAAM,QAASsS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAKvS,WAAY,EAAKwS,KAAM,IAC9E,CAAEzS,KAAM,UAAWsS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,IAAMvS,WAAY,GAAKwS,MAAO,IAClF,CAAEzS,KAAM,eAAgBsS,OAAQ,EAAGC,OAAQ,KAAMC,QAAS,EAAKvS,WAAY,GAAKwS,MAAO,IACvF,CAAEzS,KAAM,UAAWsS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAKvS,WAAY,EAAKwS,KAAM,GAChF,CAAEzS,KAAM,SAAUsS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,IAAMvS,WAAY,EAAKwS,KAAM,GAC/E,CAAEzS,KAAM,SAAUsS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,GAAKvS,WAAY,IAAMwS,KAAM,GAC/E,CAAEzS,KAAM,UAAWsS,OAAQ,EAAGC,OAAQ,IAAKC,OAAQ,EAAGvS,WAAY,KAAOwS,KAAM,GAC/E,CAAEzS,KAAM,UAAWsS,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,EAAGvS,WAAY,IAAMwS,KAAM,GAC5E,CAAEzS,KAAM,OAAQsS,OAAQ,EAAGC,OAAQ,EAAGC,QAAS,EAAGvS,WAAY,EAAKwS,KAAM,GACzE,CAAEzS,KAAM,QAASsS,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,GAAKvS,WAAY,KAAOwS,KAAM,GAC7E,CAAEzS,KAAM,aAAcsS,OAAQ,EAAGC,OAAQ,IAAKC,OAAQ,EAAKvS,WAAY,GAAKwS,KAAM,GAClF,CAAEzS,KAAM,UAAWsS,OAAQ,EAAGC,OAAQ,KAAOC,OAAQ,EAAKvS,WAAY,EAAKwS,KAAM,GACjF,CAAEzS,KAAM,SAAUsS,OAAQ,EAAGC,OAAQ,IAAKC,OAAQ,EAAKvS,WAAY,EAAKwS,KAAM,GAC9E,CAAEzS,KAAM,YAAasS,OAAQ,EAAGC,OAAQ,GAAIC,OAAQ,EAAKvS,WAAY,EAAKwS,KAAM,GAChF,CAAEzS,KAAM,OAAQsS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,GAAMvS,WAAY,EAAKwS,KAAM,GAC7E,CAAEzS,KAAM,SAAUsS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,GAAKvS,WAAY,EAAKwS,KAAM,GAC9E,CAAEzS,KAAM,UAAWsS,OAAQ,EAAGC,OAAQ,EAAKC,OAAQ,IAAMvS,WAAY,GAAKwS,KAAM,GAChF,CAAEzS,KAAM,YAAasS,OAAQ,EAAGC,OAAQ,MAAQC,OAAQ,GAAKvS,WAAY,GAAKwS,MAAO,KACrF,CAAEzS,KAAM,OAAQsS,OAAQ,EAAGC,OAAQ,GAAIC,QAAS,EAAGvS,WAAY,EAAKwS,MAAO,GAC3E,CAAEzS,KAAM,YAAasS,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,EAAGvS,WAAY,GAAKwS,KAAM,GAC7E,CAAEzS,KAAM,aAAcsS,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,EAAGvS,WAAY,GAAKwS,KAAM,GAC9E,CAAEzS,KAAM,SAAUsS,OAAQ,EAAGC,OAAQ,IAAMC,OAAQ,EAAGvS,WAAY,IAAMwS,KAAM,GAC9E,CAAEzS,KAAM,QAASsS,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,EAAGvS,WAAY,IAAMwS,KAAM,IAC1E,CAAEzS,KAAM,mBAAoBsS,OAAQ,EAAGC,OAAQ,KAAMC,QAAS,EAAGvS,WAAY,IAAMwS,KAAM,IACzF,CAAEzS,KAAM,MAAOsS,OAAQ,EAAGC,OAAQ,KAAOC,OAAQ,EAAGvS,WAAY,IAAMwS,KAAM,MAEhFjV,EAAOkV,YAAc,CAAC,SAAU,SAAU,UAAW,aAAc,aAAc,cAAe,OAAQ,cAAe,SAAU,UAAW,kBAAmB,aAAc,GAAI,WAAY,YAC7LlV,EAAOmV,YAAc,CAAC,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAChEnV,EAAOoV,YAAc,EACrBpV,EAAOqV,YAAc,GACrBrV,EAAOsV,eAAiB,MACxBtV,EAAOuV,UAAY,GACnBvV,EAAOwV,OAAwB,EAAfpY,EAAGmY,UACnBvV,EAAOyV,mBAAqB,KAC5BzV,EAAO0V,aAAe,EACtB1V,EAAO2O,eAAiB,GACxB3O,EAAO6O,aAAe,GACtB7O,EAAO8O,aAAe,KACtB9O,EAAO2V,iBAAmB,IAC1B3V,EAAO4V,cAAgB,IACvB5V,EAAO6V,cAAgB,EACvB7V,EAAO8V,cAAgB,GACvB9V,EAAO+V,aAAe,GACtB/V,EAAOgW,aAAe,IACtBhW,EAAOiW,cAAgB,GACvBjW,EAAOkW,cAAgB,KACvBlW,EAAOmW,gBAAkB,GACzBnW,EAAOoW,qBAAuB,EAC9BpW,EAAOqW,YAAc,EACrBrW,EAAOsW,oBAAsB,EAC7BtW,EAAOuW,iBAAmB,MAC1BvW,EAAOwW,mBAAqB,CAAC,CAAC,KAAM,IAAM,MAAO,CAAC,KAAM,KAAM,OAC9DxW,EAAOyW,mBAAqB,CAAC,CAAC,EAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IACzDzW,EAAO0W,eAAiBtZ,EAAGmZ,kBAAoB,EAAMnZ,EAAGoZ,mBAAmB,GAAGG,OAAOvZ,EAAGoZ,mBAAmB,IAAII,QAAO,CAACC,EAAGC,IAAM9N,KAAKO,IAAIsN,EAAGC,MAC5I9W,EAAO+W,OAASxJ,EAAU,CACtB,CAAE/K,KAAM,eAAgBwU,gBAAgB,EAAOC,aAAa,EAAOC,WAAY,EAAGC,YAAY,GAC9F,CAAE3U,KAAM,QAASwU,gBAAgB,EAAOC,aAAa,EAAOC,WAAY,EAAGC,YAAY,GACvF,CAAE3U,KAAM,WAAYwU,gBAAgB,EAAOC,aAAa,EAAMC,WAAY,EAAGC,YAAY,GACzF,CAAE3U,KAAM,kBAAmBwU,gBAAgB,EAAMC,aAAa,EAAOC,WAAY,EAAGC,YAAY,GAChG,CAAE3U,KAAM,aAAcwU,gBAAgB,EAAOC,aAAa,EAAOC,WAAY,EAAGC,YAAY,KAEhGnX,EAAOoX,aAAe,EACtBpX,EAAOqX,cAAgB,EACvBrX,EAAOsX,wBAA0BtO,KAAKO,IAAInM,EAAGga,aAAcha,EAAGia,cAAgB,GAC9ErX,EAAOuX,WAAahK,EAAU,CAC1B,CAAE/K,KAAM,YAAagV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,KACxG,CAAElV,KAAM,YAAagV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,GAAI,CAAC,GAAI,KACtG,CAAElV,KAAM,YAAagV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,KACtG,CAAElV,KAAM,YAAagV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,GAAI,KACvG,CAAElV,KAAM,UAAWgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAClG,CAAElV,KAAM,UAAWgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,KACjG,CAAElV,KAAM,YAAagV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,KACrG,CAAElV,KAAM,UAAWgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACjG,CAAElV,KAAM,YAAagV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACpG,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,KAC3G,CAAElV,KAAM,UAAWgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,CAAC,GAAI,KAChG,CAAElV,KAAM,YAAagV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACpG,CAAElV,KAAM,UAAWgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,GAAI,KAC/F,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,KACxG,CAAElV,KAAM,aAAcgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,OAElH1X,EAAO2X,cAAgBpK,EAAU,CAC7B,CAAE/K,KAAM,SAAUgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KACzH,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACtH,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,KACrH,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,KACrH,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,KACpH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,GAAI,CAAC,GAAI,KACzH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,KACzH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,KAC3H,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,KAC1H,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,GAAI,KACzH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAChI,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KAC5H,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,KAC5H,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACvH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KAC1H,CAAElV,KAAM,kBAAmBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,GAAI,KAC3H,CAAElV,KAAM,kBAAmBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACzH,CAAElV,KAAM,kBAAmBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,KAC1I,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACvH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACtH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACtH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,KACrH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,GAAI,KACxH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAKC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KACzH,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACnH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAKC,YAAa,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,KACvH,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,GAAI,GAAI,KACrH,CAAElV,KAAM,gBAAiBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACxH,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KAClH,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KACjH,CAAElV,KAAM,mBAAoBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,KACzJ,CAAElV,KAAM,eAAgBgV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,KACrJ,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,GAAI,KAC7H,CAAElV,KAAM,cAAegV,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,OAE9H1X,EAAO4X,wBAA0B,CAAC,EAAK,KAAO,KAAO,KAAO,KAAO,MACnE5X,EAAO6X,qBAAuB,GAC9B7X,EAAO8X,oBAAsBvK,EAAU,CACnC,CAAE/K,KAAM,QAASuV,KAAM,KAAOC,SAAU,EAAKC,cAAe,GAC5D,CAAEzV,KAAM,QAASuV,KAAM,IAAMC,SAAU,EAAKC,cAAe,GAC3D,CAAEzV,KAAM,OAAQuV,KAAM,GAAKC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,QAASuV,KAAM,IAAMC,SAAU,EAAKC,cAAe,GAC3D,CAAEzV,KAAM,KAAMuV,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEzV,KAAM,MAAOuV,KAAM,EAAKC,SAAU,IAAKC,eAAgB,GACzD,CAAEzV,KAAM,KAAMuV,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEzV,KAAM,MAAOuV,KAAM,EAAKC,UAAW,IAAKC,eAAgB,GAC1D,CAAEzV,KAAM,KAAMuV,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEzV,KAAM,OAAQuV,KAAM,IAAKC,UAAW,IAAMC,cAAe,GAC3D,CAAEzV,KAAM,KAAMuV,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEzV,KAAM,MAAOuV,KAAM,EAAKC,UAAW,IAAKC,eAAgB,GAC1D,CAAEzV,KAAM,KAAMuV,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEzV,KAAM,KAAMuV,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEzV,KAAM,KAAMuV,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEzV,KAAM,KAAMuV,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEzV,KAAM,KAAMuV,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,OAAQuV,KAAM,GAAMC,UAAW,EAAKC,eAAgB,GAC5D,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,MAAOuV,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEzV,KAAM,OAAQuV,KAAM,IAAOC,SAAU,EAAKC,cAAe,GAC3D,CAAEzV,KAAM,OAAQuV,KAAM,IAAOC,SAAU,EAAKC,cAAe,GAC3D,CAAEzV,KAAM,OAAQuV,KAAM,IAAOC,SAAU,EAAKC,cAAe,KAE/DjY,EAAOkY,UAAY3K,EAAU,CACzB,CAAE/K,KAAM,OAAQ+R,KAAM,EAAG4D,MAAO,GAChC,CAAE3V,KAAM,YAAa+R,KAAM,EAAG4D,MAAO,GACrC,CAAE3V,KAAM,QAAS+R,KAAM,EAAG4D,MAAO,GACjC,CAAE3V,KAAM,QAAS+R,KAAM,EAAG4D,MAAO,GACjC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,KACpC,CAAE3V,KAAM,UAAW+R,KAAM,EAAG4D,MAAO,IACnC,CAAE3V,KAAM,UAAW+R,KAAM,EAAG4D,MAAO,GACnC,CAAE3V,KAAM,UAAW+R,KAAM,EAAG4D,MAAO,GACnC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,KACpC,CAAE3V,KAAM,UAAW+R,KAAM,EAAG4D,MAAO,IACnC,CAAE3V,KAAM,UAAW+R,KAAM,EAAG4D,MAAO,GACnC,CAAE3V,KAAM,UAAW+R,KAAM,EAAG4D,MAAO,GACnC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,KACpC,CAAE3V,KAAM,UAAW+R,KAAM,EAAG4D,MAAO,IACnC,CAAE3V,KAAM,UAAW+R,KAAM,EAAG4D,MAAO,GACnC,CAAE3V,KAAM,UAAW+R,KAAM,EAAG4D,MAAO,GACnC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,GAAI4D,MAAO,IACrC,CAAE3V,KAAM,UAAW+R,KAAM,GAAI4D,MAAO,IACpC,CAAE3V,KAAM,UAAW+R,KAAM,GAAI4D,MAAO,GACpC,CAAE3V,KAAM,UAAW+R,KAAM,GAAI4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,GAAI4D,MAAO,KACrC,CAAE3V,KAAM,WAAY+R,KAAM,GAAI4D,MAAO,IACrC,CAAE3V,KAAM,WAAY+R,KAAM,GAAI4D,MAAO,IACrC,CAAE3V,KAAM,WAAY+R,KAAM,GAAI4D,MAAO,GACrC,CAAE3V,KAAM,WAAY+R,KAAM,GAAI4D,MAAO,KACrC,CAAE3V,KAAM,WAAY+R,KAAM,GAAI4D,MAAO,KACrC,CAAE3V,KAAM,WAAY+R,KAAM,GAAI4D,MAAO,IACrC,CAAE3V,KAAM,WAAY+R,KAAM,GAAI4D,MAAO,GACrC,CAAE3V,KAAM,WAAY+R,KAAM,GAAI4D,MAAO,GACrC,CAAE3V,KAAM,UAAW+R,KAAM,GAAI4D,MAAO,KACpC,CAAE3V,KAAM,UAAW+R,KAAM,GAAI4D,MAAO,KACpC,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,IACnC,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,GACnC,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,GACnC,CAAE3V,KAAM,UAAW+R,KAAM,GAAI4D,MAAO,IACpC,CAAE3V,KAAM,UAAW+R,KAAM,GAAI4D,MAAO,GACpC,CAAE3V,KAAM,UAAW+R,KAAM,GAAI4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,IACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,KACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,IACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,GACpC,CAAE3V,KAAM,WAAY+R,KAAM,EAAG4D,MAAO,KACpC,CAAE3V,KAAM,YAAa+R,KAAM,EAAG4D,MAAO,IACrC,CAAE3V,KAAM,YAAa+R,KAAM,EAAG4D,MAAO,IACrC,CAAE3V,KAAM,kBAAmB+R,KAAM,EAAG4D,MAAO,GAC3C,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,GACnC,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,IACnC,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,IACnC,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,GACnC,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,GACnC,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,KAEvCnY,EAAOoY,aAAe7K,EAAU,CAC5B,CAAE/K,KAAM,OAAQ+R,KAAM,EAAG4D,MAAO,GAChC,CAAE3V,KAAM,YAAa+R,KAAM,EAAG4D,MAAO,GACrC,CAAE3V,KAAM,QAAS+R,KAAM,EAAG4D,MAAO,GACjC,CAAE3V,KAAM,SAAU+R,KAAM,EAAG4D,MAAO,GAClC,CAAE3V,KAAM,QAAS+R,KAAM,EAAG4D,MAAO,GACjC,CAAE3V,KAAM,QAAS+R,KAAM,EAAG4D,MAAO,IACjC,CAAE3V,KAAM,QAAS+R,KAAM,EAAG4D,MAAO,IACjC,CAAE3V,KAAM,QAAS+R,KAAM,EAAG4D,MAAO,IACjC,CAAE3V,KAAM,MAAO+R,KAAM,EAAG4D,MAAO,GAC/B,CAAE3V,KAAM,QAAS+R,KAAM,GAAI4D,MAAO,IAClC,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,IACnC,CAAE3V,KAAM,SAAU+R,KAAM,GAAI4D,MAAO,IACnC,CAAE3V,KAAM,OAAQ+R,KAAM,GAAI4D,MAAO,IACjC,CAAE3V,KAAM,OAAQ+R,KAAM,GAAI4D,MAAO,GACjC,CAAE3V,KAAM,OAAQ+R,KAAM,GAAI4D,MAAO,KAErCnY,EAAOqY,UAAY9K,EAAU,CACzB,CAAE/K,KAAM,KAAM8V,QAAS,CAAC,CAAC,GAAI,GAAI,GAAI,KACrC,CAAE9V,KAAM,KAAM8V,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,KACrC,CAAE9V,KAAM,KAAM8V,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACrC,CAAE9V,KAAM,KAAM8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACrC,CAAE9V,KAAM,QAAS8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,KACzC,CAAE9V,KAAM,QAAS8V,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KACzC,CAAE9V,KAAM,WAAY8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAC7C,CAAE9V,KAAM,WAAY8V,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7C,CAAE9V,KAAM,cAAe8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACjD,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,KACtC,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACtC,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACtC,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAE9V,KAAM,UAAW8V,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KAC3C,CAAE9V,KAAM,UAAW8V,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KAC3C,CAAE9V,KAAM,UAAW8V,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC5C,CAAE9V,KAAM,UAAW8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7C,CAAE9V,KAAM,UAAW8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7C,CAAE9V,KAAM,YAAa8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC/C,CAAE9V,KAAM,YAAa8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC/C,CAAE9V,KAAM,YAAa8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,EAAG,EAAG,KAClD,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,OAEjFtY,EAAOuY,aAAehL,EAAU,CAC5B,CAAE/K,KAAM,SAAU8V,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAC7D,CAAE9V,KAAM,KAAM8V,QAAS,CAAC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAC7C,CAAE9V,KAAM,KAAM8V,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,GAAI,KAC7C,CAAE9V,KAAM,KAAM8V,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,KAC7C,CAAE9V,KAAM,KAAM8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,KAC7C,CAAE9V,KAAM,KAAM8V,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KAC7C,CAAE9V,KAAM,KAAM8V,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,KAC7C,CAAE9V,KAAM,QAAS8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,GAAI,KACjD,CAAE9V,KAAM,QAAS8V,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACjD,CAAE9V,KAAM,WAAY8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,KACrD,CAAE9V,KAAM,WAAY8V,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACrD,CAAE9V,KAAM,cAAe8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,GAAI,KACzD,CAAE9V,KAAM,iBAAkB8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAC7D,CAAE9V,KAAM,oBAAqB8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACjE,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,GAAI,GAAI,KAC9C,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,KAC9C,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,KAC9C,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KAC9C,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,KAC9C,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,KAC9C,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,KAC9C,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,KAC9C,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,CAAC,GAAI,KAC9C,CAAE9V,KAAM,cAAe8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACxD,CAAE9V,KAAM,cAAe8V,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACxD,CAAE9V,KAAM,cAAe8V,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC1D,CAAE9V,KAAM,gBAAiB8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7D,CAAE9V,KAAM,gBAAiB8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7D,CAAE9V,KAAM,cAAe8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC3D,CAAE9V,KAAM,cAAe8V,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC3D,CAAE9V,KAAM,gBAAiB8V,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,KACpE,CAAE9V,KAAM,MAAO8V,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,OAEjJtY,EAAOgL,gBAAkB,MACzBhL,EAAOwY,oBAAsB,MAC7BxY,EAAOyY,kBAAoB,GAC3BzY,EAAO0Y,sBAAwB,GAC/B1Y,EAAO2Y,+BAAiC,EACxC3Y,EAAO4Y,yBAA2B,EAClC5Y,EAAO6Y,aAAe,GAAKzb,EAAGwb,0BAA4B,EAC1D5Y,EAAO8Y,uBAAyB,GAChC9Y,EAAO+Y,kBAAoB,GAC3B/Y,EAAOgZ,iCAAmC,IAC1ChZ,EAAOiZ,0BAA4B,EACnCjZ,EAAOkZ,cAAgB,GAAK9b,EAAG6b,2BAA6B,EAC5DjZ,EAAOmZ,oBAAsB,KAC7BnZ,EAAO2K,gBAAkB,GACzB3K,EAAOoZ,oBAAsB,GAC7BpZ,EAAOqZ,mBAAqB,EAC5BrZ,EAAOsZ,oBAAsB,EAC7BtZ,EAAOuZ,kBAAoB,GAC3BvZ,EAAOwZ,iBAAmB,EAC1BxZ,EAAOyZ,qBAAuB,EAC9BzZ,EAAO0Z,qBAAuB,GAC9B1Z,EAAO2Z,qBAAuB,EAC9B3Z,EAAO4Z,qBAAuB,GAC9B5Z,EAAO6Z,mBAAqB,EAC5B7Z,EAAO8Z,mBAAqB,GAC5B9Z,EAAO+Z,cAAgB,EACvB/Z,EAAOga,iBAAmB,GAC1Bha,EAAOia,UAAY,GACnBja,EAAOka,aAAe,EACtBla,EAAOma,SAAW,EAClBna,EAAOoa,SAAWhd,EAAG8c,aAAe9c,EAAG4c,iBACvCha,EAAOqa,uBAA2C,EAAlBjd,EAAGga,aACnCpX,EAAOsa,wBAA0B,CAAC,GAAW,EAAM,GAAM,EAAM,GAAM,GAAW,EAAM,EAAK,EAAM,EAAK,GAAO,GAAM,EAAM,EAAK,GAAW,EAAM,EAAK,EAAM,EAAK,GAAO,GAAM,EAAK,GAAO,GAAM,EAAM,EAAK,IAAW,EAAM,EAAK,EAAM,EAAK,GAAO,GAAM,IAAW,IAAW,EAAM,EAAK,GAAO,EAAK,GAAO,EAAK,GAAKC,KAAI1D,GAAK7N,KAAK6D,KAAKgK,GAAKzZ,EAAG4c,mBAChVha,EAAOwa,gBAAkBpd,EAAGkd,wBAAwBlZ,OACpDpB,EAAOya,iBAAmBrd,EAAGod,iBAAmB,EAChDxa,EAAO0a,aAAe,IACtB1a,EAAO2a,UAAY,IACnB3a,EAAO4a,UAAY,EACnB5a,EAAO6a,cAAgB,EACvB7a,EAAO8a,cAAgB,IACvB9a,EAAO+a,gBAAkB,EACzB/a,EAAOgb,gBAAkB,EACzBhb,EAAOib,iBAAmB,GAC1Bjb,EAAOkb,gBAAkB,GACzBlb,EAAOmb,iBAAmB,GAC1Bnb,EAAOob,gBAAkB,GACzBpb,EAAOqb,qBAAuB,EAC9Brb,EAAOsb,oBAAsB,EAC7Btb,EAAOub,eAAiB,EACxBvb,EAAOwb,cAAgB,EACvBxb,EAAO8I,eAAiB,IACxB9I,EAAOyb,aAAere,EAAG0L,eAAiB,EAC1C9I,EAAO0b,SAAWte,EAAGuL,mBACrB3I,EAAO2b,wBAA0B,CAAC,EAAG,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAK,GAAK,IAAM,GAAK,MAAQ,GAAK,GAAK,GAAK,MAAQ,GAAK,IAAM,GAAK,GAAK,EAAG,KAAM,OAAQ,IAAK,OAAQ,KAAM,EAAG,KAAM,IAAK,KAAM,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KACrV3b,EAAO4b,0BAA4B,CAC/B,EAAG,EACH,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,GAAK,GACL,GAAK,GACL,IAAM,GACN,GAAK,GACL,MAAQ,GACR,GAAK,GACL,GAAK,GACL,GAAK,GACL,MAAQ,GACR,GAAK,GACL,IAAM,GACN,GAAK,GACL,GAAK,GACL,EAAG,GACH,KAAM,GACN,OAAQ,GACR,IAAK,GACL,OAAQ,GACR,KAAM,GACN,EAAG,GACH,KAAM,GACN,IAAK,GACL,KAAM,GACN,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,EAAG,GACH,IAAK,GACL,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,IAAK,GACL,IAAK,IAET5b,EAAO6b,oBAAsB,EAC7B7b,EAAO8b,oBAAsB,EAC7B9b,EAAO+b,sBAAwB,GAC/B/b,EAAOgc,uBAAyB,GAChChc,EAAOic,iCAAmC,IAC1Cjc,EAAOkc,gCAAkC,GACzClc,EAAOmc,+BAAiC,EACxCnc,EAAOoc,oBAAsB,IAC7Bpc,EAAOqc,gBAAkB,EACzBrc,EAAOsc,mBAAqB,GAC5Btc,EAAOuc,gBAAkB,IACzBvc,EAAOwc,uBAAwB,EAC/Bxc,EAAOyc,iBAAmB,CAAC,SAAU,YACrCzc,EAAO0c,oBAAsB,GAC7B1c,EAAO2c,qBAAuB,GAC9B3c,EAAO4c,4BAA8B,EACrC5c,EAAO6c,iBAAmB,GAC1B7c,EAAO8c,uBAAyB,GAChC9c,EAAO+c,4BAA8BxP,EAAU,CAC3C,CAAE/K,KAAM,OAAQwa,aAAc,KAAMC,YAAa,OAAQC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,KAAMC,sBAAuB,MAC/I,CAAE9a,KAAM,aAAcwa,aAAc,EAAGC,YAAa,cAAeC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,KAAMC,sBAAuB,MACzJ,CAAE9a,KAAM,aAAcwa,aAAc,EAAGC,YAAa,cAAeC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,KAAMC,sBAAuB,CAAC,EAAG,IAC7J,CAAE9a,KAAM,gBAAiBwa,aAAc,EAAGC,YAAa,UAAWC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,KAAMC,sBAAuB,CAAC,IACzJ,CAAE9a,KAAM,SAAUwa,aAAc,EAAGC,YAAa,SAAUC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,KAAMC,sBAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACtK,CAAE9a,KAAM,oBAAqBwa,aAAc,EAAGC,YAAa,WAAYC,YAAY,EAAMC,UAAU,EAAOC,SAAUhgB,EAAGia,cAAgB,EAAGgG,OAAQ,KAAMC,sBAAuB,CAAC,EAAG,KACnL,CAAE9a,KAAM,oBAAqBwa,aAAc,GAAIC,YAAa,aAAcC,YAAY,EAAOC,UAAU,EAAOC,SAAUhgB,EAAGia,cAAgB,EAAGgG,OAAQ,KAAMC,sBAAuB,CAAC,EAAG,KACvL,CAAE9a,KAAM,oBAAqBwa,aAAc,GAAIC,YAAa,cAAeC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,KAAMC,sBAAuB,CAAC,EAAG,KACrK,CAAE9a,KAAM,aAAcwa,aAAc,GAAIC,YAAa,cAAeC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MACvJ,CAAE9a,KAAM,SAAUwa,aAAc,GAAIC,YAAa,SAAUC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MAC9I,CAAE9a,KAAM,eAAgBwa,aAAc,GAAIC,YAAa,gBAAiBC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MAC3J,CAAE9a,KAAM,qBAAsBwa,aAAc,EAAGC,YAAa,kBAAmBC,YAAY,EAAOC,UAAU,EAAMC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MACjK,CAAE9a,KAAM,iBAAkBwa,aAAc,GAAIC,YAAa,mBAAoBC,YAAY,EAAOC,UAAU,EAAMC,SAAUhgB,EAAGmW,gBAAiB8J,OAAQ,EAAGC,sBAAuB,MAChL,CAAE9a,KAAM,gBAAiBwa,aAAc,GAAIC,YAAa,iBAAkBC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,KAAMC,sBAAuB,CAAC,EAAG,IACpK,CAAE9a,KAAM,mBAAoBwa,aAAc,GAAIC,YAAa,WAAYC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,KAAMC,sBAAuB,CAAC,IAC9J,CAAE9a,KAAM,iBAAkBwa,aAAc,GAAIC,YAAa,SAAUC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,KAAMC,sBAAuB,CAAC,IAC1J,CAAE9a,KAAM,gBAAiBwa,aAAc,GAAIC,YAAa,YAAaC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,KAAMC,sBAAuB,CAAC,IAC5J,CAAE9a,KAAM,UAAWwa,aAAc,GAAIC,YAAa,UAAWC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MAChJ,CAAE9a,KAAM,aAAcwa,aAAc,GAAIC,YAAa,aAAcC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MACtJ,CAAE9a,KAAM,yBAA0Bwa,aAAc,GAAIC,YAAa,WAAYC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MAChK,CAAE9a,KAAM,sBAAuBwa,aAAc,GAAIC,YAAa,aAAcC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MAC/J,CAAE9a,KAAM,SAAUwa,aAAc,GAAIC,YAAa,SAAUC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MAC9I,CAAE9a,KAAM,cAAewa,aAAc,GAAIC,YAAa,OAAQC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MACjJ,CAAE9a,KAAM,SAAUwa,aAAc,GAAIC,YAAa,SAAUC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,MAC9I,CAAE9a,KAAM,gBAAiBwa,aAAc,GAAIC,YAAa,iBAAkBC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,GAAIC,sBAAuB,MAC9J,CAAE9a,KAAM,iBAAkBwa,aAAc,GAAIC,YAAa,WAAYC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,GAAIC,sBAAuB,MACzJ,CAAE9a,KAAM,mBAAoBwa,aAAc,GAAIC,YAAa,cAAeC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,GAAIC,sBAAuB,MAC9J,CAAE9a,KAAM,WAAYwa,aAAc,GAAIC,YAAa,WAAYC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,GAAIC,sBAAuB,MACnJ,CAAE9a,KAAM,YAAawa,aAAc,GAAIC,YAAa,aAAcC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,GAAIC,sBAAuB,MACtJ,CAAE9a,KAAM,YAAawa,aAAc,GAAIC,YAAa,aAAcC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,GAAIC,sBAAuB,MACtJ,CAAE9a,KAAM,aAAcwa,aAAc,GAAIC,YAAa,cAAeC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,GAAIC,sBAAuB,MACxJ,CAAE9a,KAAM,YAAawa,aAAc,GAAIC,YAAa,aAAcC,YAAY,EAAOC,UAAU,EAAOC,SAAU,EAAGC,OAAQ,EAAGC,sBAAuB,QAEzJtd,EAAOud,cAAgBhQ,EAAU,CAC7B,CAAE/K,KAAM,OAAQ3B,QAASzD,EAAGse,UAC5B,CAAElZ,KAAM,WAAY3B,QAASzD,EAAG+L,mBAChC,CAAE3G,KAAM,cAAe3B,QAASzD,EAAGqM,mBAAmB,KACtD,CAAEjH,KAAM,WAAY3B,QAASzD,EAAGyM,mBAChC,CAAErH,KAAM,OAAQ3B,QAASzD,EAAGyM,iBAAgB,IAC5C,CAAErH,KAAM,YAAa3B,QAASzD,EAAGiM,sBAAsB,IACvD,CAAE7G,KAAM,aAAc3B,QAASzD,EAAG2M,2BAEtC/J,EAAOwd,iBAAmBjQ,EAAU,CAChC,CAAE/K,KAAM,KAAM3B,QAASzD,EAAGqM,mBAAmB,MAC7C,CAAEjH,KAAM,KAAM3B,QAASzD,EAAGqM,mBAAmB,MAC7C,CAAEjH,KAAM,QAAS3B,QAASzD,EAAGqM,mBAAmB,OAChD,CAAEjH,KAAM,MAAO3B,QAASzD,EAAGqM,mBAAmB,MAC9C,CAAEjH,KAAM,MAAO3B,QAASzD,EAAGqM,mBAAmB,EAAI,IAClD,CAAEjH,KAAM,MAAO3B,QAASzD,EAAGqM,mBAAmB,KAC9C,CAAEjH,KAAM,MAAO3B,QAASzD,EAAGqM,mBAAmB,EAAI,IAClD,CAAEjH,KAAM,MAAO3B,QAASzD,EAAGqM,mBAAmB,MAC9C,CAAEjH,KAAM,QAAS3B,QAASzD,EAAGqM,mBAAmB,OAChD,CAAEjH,KAAM,MAAO3B,QAASzD,EAAGqM,mBAAmB,MAC9C,CAAEjH,KAAM,MAAO3B,QAASzD,EAAGqM,mBAAmB,QAElDzJ,EAAOyd,gBAAkB,GACzBzd,EAAO0d,WAAanQ,EAAU,CAC1B,CAAE/K,KAAM,OAAQmb,UAAW,OAAQC,UAAW,EAAGC,WAAY,EAAGC,SAAS,EAAMC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EACjIC,WAAY,iBAAkBC,WAAY,CAAC,4JAA6J,gBAC5M,CAAE3b,KAAM,cAAemb,UAAW,SAAUC,UAAW,IAAKC,WAAY,IAAKC,SAAS,EAAMC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC9IC,WAAY,cAAeC,WAAY,CAAC,yFAA0F,oGAAqG,qCAC3O,CAAE3b,KAAM,QAASmb,UAAW,QAASC,UAAWxgB,EAAGyS,SAAWzS,EAAGwS,SAAUiO,WAAY7U,KAAKoV,MAAMhhB,EAAGyS,SAAWzS,EAAGwS,UAAY,GAAIkO,SAAS,EAAMC,kBAAmB3gB,EAAGwS,SAAUoO,iBAAkB,GAAIC,SAAU,EAC9MC,WAAY,aAAcC,WAAY,CAAC,kFAAmF,4LAA6L,wFAAyF,oCACpZ,CAAE3b,KAAM,cAAemb,UAAW,SAAUC,UAA4B,EAAjBxgB,EAAGmT,YAAiBsN,WAAYzgB,EAAGmT,YAAauN,SAAS,EAAMC,mBAAoB3gB,EAAGmT,YAAayN,iBAAkB,GAAIC,SAAU,EACtLC,WAAY,cAAeC,WAAY,CAAC,iKAAkK,qJAAsJ,iCACpW,CAAE3b,KAAM,WAAYmb,UAAW,WAAYC,UAAW,EAAGC,WAAY,EAAGC,SAAS,EAAMC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EACzIC,WAAY,iBAAkBC,WAAY,CAAC,yJAA0J,yNAA0N,4GAA6G,gBAChhB,CAAE3b,KAAM,cAAemb,UAAW,YAAaC,UAAWxgB,EAAGiY,YAAawI,WAAY7U,KAAKoV,KAAKhhB,EAAGiY,YAAc,GAAIyI,SAAS,EAAOC,kBAAmB/U,KAAKoV,MAAMhhB,EAAGiY,YAAc,GAAM2I,iBAAkB,GAAIC,SAAU,EACtNC,WAAY,cAAeC,WAAY,CAAC,0FAA2F,qOAAsO,wdAAyd,qNAAsN,iCAC5hC,CAAE3b,KAAM,MAAOmb,UAAW,MAAOC,UAAWxgB,EAAGoY,OAAQqI,WAAY7U,KAAKoV,KAAKhhB,EAAGoY,OAAS,GAAIsI,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EAC9JC,WAAY,qBAAsBC,WAAY,CAAC,sFAAuF,+KAAgL,oCAC1T,CAAE3b,KAAM,SAAUmb,UAAW,SAAUC,UAAWxgB,EAAGmT,YAAasN,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EAClJC,WAAY,oBAAqBC,WAAY,CAAC,oFAAqF,8EAA+E,8BACtN,CAAE3b,KAAM,aAAcmb,UAAW,aAAcC,UAAWxgB,EAAGif,gBAAkB,EAAGwB,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EAClKC,WAAY,wBAAyBC,WAAY,CAAC,uGAAwG,kFAAmF,8BACjP,CAAE3b,KAAM,cAAemb,UAAW,OAAQC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC3IC,WAAY,cAAeC,WAAY,CAAC,mHAAoH,6KAA8K,qGAAsG,qCACpb,CAAE3b,KAAM,cAAemb,UAAW,OAAQC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC3IC,WAAY,cAAeC,WAAY,CAAC,oHAAqH,6KAA8K,qGAAsG,qCACrb,CAAE3b,KAAM,cAAemb,UAAW,OAAQC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC3IC,WAAY,cAAeC,WAAY,CAAC,mHAAoH,6KAA8K,qGAAsG,qCACpb,CAAE3b,KAAM,cAAemb,UAAW,OAAQC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC3IC,WAAY,cAAeC,WAAY,CAAC,oHAAqH,6KAA8K,qGAAsG,qCACrb,CAAE3b,KAAM,cAAemb,UAAW,aAAcC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EACjJC,WAAY,cAAeC,WAAY,CAAC,sHAAuH,6KAA8K,qGAAsG,qCACvb,CAAE3b,KAAM,cAAemb,UAAW,cAAeC,UAAWxgB,EAAGuN,gBAAiBkT,WAAYzgB,EAAGuN,gBAAiBmT,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAClLC,WAAY,cAAeC,WAAY,CAAC,qGAAsG,0LAA2L,2IAA4I,sCACzd,CAAE3b,KAAM,SAAUmb,UAAW,SAAUC,UAAWxgB,EAAGud,UAAYvd,EAAGwd,UAAWiD,WAAYzgB,EAAGsd,aAAcoD,SAAS,EAAOC,mBAAoB3gB,EAAGsd,aAAcsD,iBAAkB,EAAGC,SAAU,EAC5LC,WAAY,oBAAqBC,WAAY,CAAC,qFAAsF,8PAA+P,sCACvY,CAAE3b,KAAM,gBAAiBmb,UAAW,gBAAiBC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EACpJC,WAAY,gBAAiBC,WAAY,CAAC,4HAA6H,oKAAqK,0CAChV,CAAE3b,KAAM,cAAemb,UAAW,SAAUC,UAAWxgB,EAAG0d,cAAgB1d,EAAGyd,cAAegD,WAAY7U,KAAKoV,MAAMhhB,EAAG0d,cAAgB1d,EAAGyd,eAAiB,GAAIiD,SAAS,EAAMC,mBAAoB,IAAKC,iBAAkB,GAAIC,SAAU,EAClOC,WAAY,cAAeC,WAAY,CAAC,8FAA+F,gSAAiS,4CAC5a,CAAE3b,KAAM,gBAAiBmb,UAAW,gBAAiBC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EACpJC,WAAY,gBAAiBC,WAAY,CAAC,yFAA0F,4KAA6K,8BACrT,CAAE3b,KAAM,gBAAiBmb,UAAW,gBAAiBC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EACpJC,WAAY,gBAAiBC,WAAY,CAAC,oIAAqI,+NAAgO,0CACnZ,CAAE3b,KAAM,YAAamb,UAAW,YAAaC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC9IC,WAAY,iBAAkBC,WAAY,CAAC,qHAAsH,+GAC7J,gCAAiC,6BAA8B,qCAAsC,yCAA0C,uCAAwC,yCAA0C,uCAAwC,yCAA0C,wCAAyC,wCAAyC,8BAC7Y,CAAE3b,KAAM,YAAamb,UAAW,YAAaC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EAC7IC,WAAY,gBAAiBC,WAAY,CAAC,0GAA2G,4LAA6L,8BACtV,CAAE3b,KAAM,YAAamb,UAAW,YAAaC,UAAW,EAAGC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC5IC,WAAY,iBAAkBC,WAAY,CAAC,2SAA4S,qKAAsK,gBACjgB,CAAE3b,KAAM,YAAamb,UAAW,QAASC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EACzIC,WAAY,YAAaC,WAAY,CAAC,+EAAgF,wjBAAyjB,+PAAgQ,0LAA2L,8BAC9mC,CAAE3b,KAAM,cAAemb,UAAW,QAASC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EAC1IC,WAAY,cAAeC,WAAY,CAAC,iFAAkF,0jBAA2jB,+PAAgQ,0LAA2L,8BACpnC,CAAE3b,KAAM,YAAamb,UAAW,WAAYC,UAAWxgB,EAAGwf,4BAA8B,EAAGiB,WAAY7U,KAAKgB,MAAM5M,EAAGwf,4BAA8B,GAAIkB,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EACxNC,WAAY,uBAAwBC,WAAY,CAAC,0FAA2F,0IAA2I,8BAC3R,CAAE3b,KAAM,aAAcmb,UAAW,aAAcC,UAAWxgB,EAAGsf,oBAAsB,EAAGmB,WAAY7U,KAAKgB,MAAM5M,EAAGsf,oBAAsB,GAAIoB,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EAC3MC,WAAY,6BAA8BC,WAAY,CAAC,iGAAkG,sJAAuJ,8BACpT,CAAE3b,KAAM,OAAQmb,UAAW,OAAQC,UAAWxgB,EAAG8S,iBAAmB,EAAG2N,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EACvJC,WAAY,0BAA2BC,WAAY,CAAC,wGAAyG,4KAA6K,8BAC9U,CAAE3b,KAAM,aAAcmb,UAAW,aAAcC,UAAWxgB,EAAG4S,eAAgB6N,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EAC7JC,WAAY,wBAAyBC,WAAY,CAAC,4FAA6F,8GAA+G,2CAElQ,CAAE3b,KAAM,SAAUmb,UAAW,SAAUC,UAAWxgB,EAAGiZ,YAAc,EAAGwH,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EACtJC,WAAY,oBAAqBC,WAAY,CAAC,6FAA8F,oHAAqH,8BACrQ,CAAE3b,KAAM,cAAemb,UAAW,YAAaC,UAAWxgB,EAAGsW,qBAAuB,EAAGmK,WAAYzgB,EAAGsW,qBAAuB,EAAGoK,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAClMC,WAAY,6BAA8BC,WAAY,CAAC,qGAAsG,iLAAkL,8BACnV,CAAE3b,KAAM,eAAgBmb,UAAW,aAAcC,UAAWxgB,EAAGuW,sBAAwB,EAAGkK,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC3KC,WAAY,sBAAuBC,WAAY,CAAC,uGAAwG,wPAAyP,8BACrZ,CAAE3b,KAAM,gBAAiBmb,UAAW,YAAaC,UAAWxgB,EAAGsW,qBAAuB,EAAGmK,WAAYzgB,EAAGsW,qBAAuB,EAAGoK,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EACnMC,WAAY,+BAAgCC,WAAY,CAAC,qGAAsG,iLAAkL,8BACrV,CAAE3b,KAAM,iBAAkBmb,UAAW,aAAcC,UAAWxgB,EAAGuW,sBAAwB,EAAGkK,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,EAAGC,SAAU,EAC5KC,WAAY,wBAAyBC,WAAY,CAAC,uGAAwG,wPAAyP,8BACvZ,CAAE3b,KAAM,cAAemb,UAAW,cAAeC,UAAWxgB,EAAGod,gBAAkB,EAAGqD,WAAYzgB,EAAGqd,iBAAkBqD,SAAS,EAAOC,mBAAoB3gB,EAAGqd,iBAAkBuD,iBAAkB,EAAGC,SAAU,EACzMC,WAAY,cAAeC,WAAY,CAAC,+FAAgG,sLAAuL,sCACnU,CAAE3b,KAAM,UAAWmb,UAAW,UAAWC,UAAWxgB,EAAGkf,mBAAqB,EAAGuB,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAChKC,WAAY,wBAAyBC,WAAY,CAAC,oGAAqG,2JAA4J,8BACvT,CAAE3b,KAAM,aAAcmb,UAAW,WAAYC,UAAWxgB,EAAGiY,YAAawI,WAAY7U,KAAKoV,KAAKhhB,EAAGiY,YAAc,GAAIyI,SAAS,EAAOC,kBAAmB/U,KAAKoV,MAAMhhB,EAAGiY,YAAc,GAAM2I,iBAAkB,GAAIC,SAAU,EACpNC,WAAY,aAAcC,WAAY,CAAC,6FAA8F,qSAAsS,yJAA0J,iCACzkB,CAAE3b,KAAM,cAAemb,UAAW,OAAQC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC3IC,WAAY,cAAeC,WAAY,CAAC,mHAAoH,6KAA8K,qGAAsG,qCACpb,CAAE3b,KAAM,cAAemb,UAAW,OAAQC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC3IC,WAAY,cAAeC,WAAY,CAAC,mHAAoH,6KAA8K,qGAAsG,qCACpb,CAAE3b,KAAM,iBAAkBmb,UAAW,iBAAkBC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGM,uBAAuB,EAAML,iBAAkB,GAAIC,SAAU,EACpLC,WAAY,iBAAkBC,WAAY,CAAC,oIAAqI,gBACpL,CAAE3b,KAAM,iBAAkBmb,UAAW,cAAeC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EACrJC,WAAY,iBAAkBC,WAAY,CAAC,+EAAgF,sRACvH,gCAAiC,6BAA8B,qCAAsC,yCAA0C,uCAAwC,yCAA0C,uCAAwC,yCAA0C,wCAAyC,wCAAyC,8BAC7Y,CAAE3b,KAAM,WAAYmb,UAAW,WAAYC,UAAWxgB,EAAGkc,oBAAqBuE,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC/JC,WAAY,oBAAqBC,WAAY,CAAC,iGAAkG,gOAAiO,8BACrX,CAAE3b,KAAM,SAAUmb,UAAW,SAAUC,UAAWxgB,EAAGmc,kBAAmBsE,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EACzJC,WAAY,kBAAmBC,WAAY,CAAC,6FAA8F,sMAAuM,8BACrV,CAAE3b,KAAM,YAAamb,UAAW,YAAaC,UAAWxgB,EAAGoc,iBAAkBqE,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC9JC,WAAY,iBAAkBC,WAAY,CAAC,+FAAgG,oKAAqK,kCACpT,CAAE3b,KAAM,4BAA6Bmb,UAAW,aAAcC,UAAW,GAAIC,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU7gB,EAAGyf,iBAAmB,EACrLqB,WAAY,4BAA6BC,WAAY,CAAC,qFAAsF,0QACxI,yCAA0C,4CAA6C,2CAA4C,4CAA6C,yCAA0C,8CAA+C,yCAA0C,mCAAoC,qCAAsC,mCAAoC,mCAAoC,mCAAoC,gCAAiC,8BAClhB,CAAE3b,KAAM,UAAWmb,UAAW,UAAWC,UAAW,GAAIC,WAAY,EAAGC,SAAS,EAAMC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EACxIC,WAAY,iBAAkBC,WAAY,CAAC,mJAAoJ,wjBAAyjB,+PAAgQ,0LAA2L,8BACvrC,CAAE3b,KAAM,iBAAkBmb,UAAW,WAAYC,UAAW,EAAGC,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU7gB,EAAGyf,iBAAmB,EACtKqB,WAAY,iBAAkBC,WAAY,CAAC,2LAA4L,gBAC3O,CAAE3b,KAAM,kBAAmBmb,UAAW,WAAYC,UAAWxgB,EAAGsY,aAAcmI,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC/JC,WAAY,kBAAmBC,WAAY,CAAC,uEAAwE,8BACxH,CAAE3b,KAAM,iBAAkBmb,UAAW,eAAgBC,UAAWxgB,EAAGuR,eAAgBkP,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EACpKC,WAAY,0BAA2BC,WAAY,CAAC,8FAA+F,8BACvJ,CAAE3b,KAAM,WAAYmb,UAAW,WAAYC,UAAWxgB,EAAG0Y,cAAe+H,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EACzJC,WAAY,WAAYC,WAAY,CAAC,gEAAiE,8BAC1G,CAAE3b,KAAM,aAAcmb,UAAW,UAAWC,UAAWxgB,EAAG+Y,gBAAiB0H,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAC5JC,WAAY,cAAeC,WAAY,CAAC,0FAA2F,8BACvI,CAAE3b,KAAM,aAAcmb,UAAW,aAAcC,UAAWxgB,EAAG4Y,aAAe5Y,EAAG6Y,cAAe4H,WAAYzgB,EAAG2Y,aAAe3Y,EAAG6Y,cAAe6H,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAChNC,WAAY,aAAcC,WAAY,CAAC,kFAAmF,wDAA0D/gB,EAAG6Y,cAAgB,iCAAkC,8BAC7O,CAAEzT,KAAM,cAAemb,UAAW,cAAeC,UAAWxgB,EAAG8Y,cAAgB9Y,EAAG6Y,cAAe4H,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU,EAClLC,WAAY,cAAeC,WAAY,CAAC,sIAAuI,wDAA0D/gB,EAAG6Y,cAAgB,iCAAkC,8BAClS,CAAEzT,KAAM,kCAAmCmb,UAAW,aAAcC,UAAoC,GAAzBxgB,EAAG0e,oBAA0B+B,WAAY,EAAGC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU7gB,EAAGyf,iBAAmB,EACnNqB,WAAY,kCAAmCC,WAAY,CAAC,iDAAkD,yIAA0I,sGAC5P,CAAE3b,KAAM,kCAAmCmb,UAAW,YAAaC,UAAoC,GAAzBxgB,EAAG0e,oBAA0B+B,WAAY,GAAIC,SAAS,EAAOC,kBAAmB,EAAGC,iBAAkB,GAAIC,SAAU7gB,EAAGyf,iBAAmB,EACnNqB,WAAY,kCAAmCC,WAAY,CAAC,iDAAkD,uIAAwI,wGCtzC9P,IAAIG,EAAYhhB,GAAQA,EAAKghB,GAAa,SAASC,GAC/C,IAAIC,EAAsB,mBAAXC,QAAyBA,OAAOC,SAAUC,EAAIH,GAAKD,EAAEC,GAAIzV,EAAI,EAC5E,GAAI4V,EAAG,OAAOA,EAAEC,KAAKL,GACrB,GAAIA,GAAyB,iBAAbA,EAAEnd,OAAqB,MAAO,CAC1CnD,KAAM,WAEF,OADIsgB,GAAKxV,GAAKwV,EAAEnd,SAAQmd,OAAI,GACrB,CAAExgB,MAAOwgB,GAAKA,EAAExV,KAAM1K,MAAOkgB,EAChD,GAEI,MAAM,IAAIM,UAAUL,EAAI,0BAA4B,kCACxD,EACIM,EAAUxhB,GAAQA,EAAKwhB,GAAW,SAAUP,EAAGQ,GAC/C,IAAIJ,EAAsB,mBAAXF,QAAyBF,EAAEE,OAAOC,UACjD,IAAKC,EAAG,OAAOJ,EACf,IAAmBS,EAAY9gB,EAA3B6K,EAAI4V,EAAEC,KAAKL,GAAOU,EAAK,GAC3B,IACI,WAAc,IAANF,GAAgBA,KAAM,MAAQC,EAAIjW,EAAE9K,QAAQI,MAAM4gB,EAAG9U,KAAK6U,EAAEjhB,MAC5E,CACI,MAAOyD,GAAStD,EAAI,CAAEsD,MAAOA,EAAQ,CACzC,QACQ,IACQwd,IAAMA,EAAE3gB,OAASsgB,EAAI5V,EAAU,SAAI4V,EAAEC,KAAK7V,EAC1D,CACA,QAAkB,GAAI7K,EAAG,MAAMA,EAAEsD,KAAM,CACvC,CACI,OAAOyd,CACX,EACIC,EAAY5hB,GAAQA,EAAK4hB,GAAa,WACtC,IAAK,IAAID,EAAK,GAAIlW,EAAI,EAAGA,EAAIoW,UAAU/d,OAAQ2H,IAAKkW,EAAKA,EAAGtI,OAAOmI,EAAOK,UAAUpW,KACpF,OAAOkW,CACX,EACO,SAASG,EAAiBC,EAASC,GACtC,IAAIC,EAAKniB,EAAIoiB,EAAKC,EAAIC,EAAKC,EAC3B,IACI,IAAK,IAAIC,EAAStB,EAASgB,GAAOO,EAAWD,EAAO3hB,QAAS4hB,EAASxhB,KAAMwhB,EAAWD,EAAO3hB,OAAQ,CAClG,IAAI6hB,EAAMD,EAAS9hB,MACnB,GAAI+hB,aAAeC,KACfV,EAAQpd,YAAY6d,QAEnB,GAAmB,iBAARA,EACZT,EAAQpd,YAAYJ,SAASme,eAAeF,SAE3C,GAAmB,mBAARA,EACZV,EAAiBC,EAAS,CAACS,WAE1B,GAAI/e,MAAMkf,QAAQH,GACnBV,EAAiBC,EAASS,QAEzB,GAAIA,GAAyB,oBAAXrB,QAA0D,mBAAzBqB,EAAIrB,OAAOC,UAC/DU,EAAiBC,EAASH,EAASY,SAElC,GAAIA,GAAOA,EAAIphB,cAAgB6T,QAAU8M,aAAmBa,QAC7D,IACI,IAAK,IAAIC,GAAMX,OAAM,EAAQlB,EAAS/L,OAAO/C,KAAKsQ,KAAQM,EAAKD,EAAGliB,QAASmiB,EAAG/hB,KAAM+hB,EAAKD,EAAGliB,OAAQ,CAChG,IAAIwU,EAAM2N,EAAGriB,MACTA,EAAQ+hB,EAAIrN,GAChB,GAAY,UAARA,EACqB,iBAAV1U,EACPshB,EAAQgB,aAAa,QAAStiB,GAEzBgD,MAAMkf,QAAQH,IAAS/hB,GAA2B,oBAAX0gB,QAA4D,mBAA3B1gB,EAAM0gB,OAAOC,UAC1FW,EAAQgB,aAAa,QAASnB,EAASnhB,GAAOuiB,KAAK,MAGnD7X,QAAQ8X,KAAK,WAAa9N,EAAM,WAAc1U,EAAQ,QAAWshB,EAAQmB,QAAU,kBAGtF,GAAY,UAAR/N,EACL,GAAI1U,GAASA,EAAMW,cAAgB6T,OAC/B,IACI,IAAK,IAAIkO,GAAMf,OAAM,EAAQpB,EAAS/L,OAAO/C,KAAKzR,KAAU2iB,EAAKD,EAAGxiB,QAASyiB,EAAGriB,KAAMqiB,EAAKD,EAAGxiB,OAAQ,CAClG,IAAI0iB,EAAWD,EAAG3iB,MACd4iB,KAAYtB,EAAQuB,MACpBvB,EAAQuB,MAAMD,GAAY5iB,EAAM4iB,GAGhCtB,EAAQuB,MAAMC,YAAYF,EAAU5iB,EAAM4iB,GAEtF,CACA,CACgC,MAAOG,GAASpB,EAAM,CAAEle,MAAOsf,EAAQ,CACvE,QACoC,IACQJ,IAAOA,EAAGriB,OAASshB,EAAKc,EAAGM,SAASpB,EAAGf,KAAK6B,EACxF,CACA,QAA8C,GAAIf,EAAK,MAAMA,EAAIle,KAAM,CACvE,MAGgC6d,EAAQgB,aAAa5N,EAAK1U,OAGN,mBAAnB,EACLshB,EAAQ5M,GAAO1U,EAES,kBAAnB,EACDA,EACAshB,EAAQgB,aAAa5N,EAAK,IAE1B4M,EAAQ2B,gBAAgBvO,GAG5B4M,EAAQgB,aAAa5N,EAAK1U,EAEtD,CACA,CACgB,MAAOkjB,GAASzB,EAAM,CAAEhe,MAAOyf,EAAQ,CACvD,QACoB,IACQb,IAAOA,EAAG/hB,OAASohB,EAAKU,EAAGY,SAAStB,EAAGb,KAAKuB,EACxE,CACA,QAA8B,GAAIX,EAAK,MAAMA,EAAIhe,KAAM,CACvD,MAGgB6d,EAAQpd,YAAYJ,SAASme,eAAeF,GAE5D,CACA,CACI,MAAOoB,GAAS3B,EAAM,CAAE/d,MAAO0f,EAAQ,CAC3C,QACQ,IACQrB,IAAaA,EAASxhB,OAASjB,EAAKwiB,EAAOmB,SAAS3jB,EAAGwhB,KAAKgB,EAC5E,CACA,QAAkB,GAAIL,EAAK,MAAMA,EAAI/d,KAAM,CAC3C,CACI,OAAO6d,CACX,CACO,IAAI8B,EAAQ,6BChInB,IAWI5B,EAAKniB,EAAIoiB,EAAKC,EAXdnB,EAAYhhB,GAAQA,EAAKghB,GAAa,SAASC,GAC/C,IAAIC,EAAsB,mBAAXC,QAAyBA,OAAOC,SAAUC,EAAIH,GAAKD,EAAEC,GAAIzV,EAAI,EAC5E,GAAI4V,EAAG,OAAOA,EAAEC,KAAKL,GACrB,GAAIA,GAAyB,iBAAbA,EAAEnd,OAAqB,MAAO,CAC1CnD,KAAM,WAEF,OADIsgB,GAAKxV,GAAKwV,EAAEnd,SAAQmd,OAAI,GACrB,CAAExgB,MAAOwgB,GAAKA,EAAExV,KAAM1K,MAAOkgB,EAChD,GAEI,MAAM,IAAIM,UAAUL,EAAI,0BAA4B,kCACxD,EAIW4C,EDmHJ,WAEH,IADA,IAAI9B,EAAO,GACF+B,EAAK,EAAGA,EAAKlC,UAAU/d,OAAQigB,IACpC/B,EAAK+B,GAAMlC,UAAUkC,GAEzB,OAAOxf,SAASyf,cAAcC,yBAAyBjC,EAAKgB,OAChE,ECxHWkB,EDyHJ,WAEH,IADA,IAAIlC,EAAO,GACF+B,EAAK,EAAGA,EAAKlC,UAAU/d,OAAQigB,IACpC/B,EAAK+B,GAAMlC,UAAUkC,GAIzB,IAFA,IAAII,EAAW5f,SAAS6f,yBACpBC,GAAY,IAAIC,WAAYC,gBAAgB,2CAA+CvC,EAAKgB,OAAS,SAAU,iBAAiBwB,gBACxG,OAAzBH,EAAUI,YACblgB,SAASmgB,WAAWL,EAAUI,YAAY,GAC1CN,EAASxf,YAAY0f,EAAUI,YAEnC,OAAON,CACX,ECpIIQ,EAAU,SAAUC,GACpBd,EAAKc,GAAU,WAEX,IADA,IAAI5C,EAAO,GACF+B,EAAK,EAAGA,EAAKlC,UAAU/d,OAAQigB,IACpC/B,EAAK+B,GAAMlC,UAAUkC,GAEzB,OAAOjC,EAAiBvd,SAASC,cAAcogB,GAAS5C,EAChE,CACA,EACA,IACI,IAAK,IAAIK,EAAKrB,EAAS,+jBAA+jB6D,MAAM,MAAOhC,EAAKR,EAAG1hB,QAASkiB,EAAG9hB,KAAM8hB,EAAKR,EAAG1hB,OAAQ,CAEzoBgkB,EADa9B,EAAGpiB,MAExB,CACA,CACA,MAAOmjB,GAAS3B,EAAM,CAAE/d,MAAO0f,EAAQ,CACvC,QACI,IACQf,IAAOA,EAAG9hB,OAASjB,EAAKuiB,EAAGoB,SAAS3jB,EAAGwhB,KAAKe,EACxD,CACA,QAAc,GAAIJ,EAAK,MAAMA,EAAI/d,KAAM,CACvC,CACA,IAAI4gB,EAAU,SAAUC,GAQpB,GAPAb,EAAIa,GAAU,WAEV,IADA,IAAI/C,EAAO,GACF+B,EAAK,EAAGA,EAAKlC,UAAU/d,OAAQigB,IACpC/B,EAAK+B,GAAMlC,UAAUkC,GAEzB,OAAOjC,EAAiBvd,SAASygB,gBAAgBnB,EAAOkB,GAAS/C,EACzE,EACQ,IAAIiD,KAAKF,GAAS,CAClB,IAAIG,EAAgBH,EAAOI,QAAQ,KAAM,KACzCjB,EAAIgB,GAAiB,WAEjB,IADA,IAAIlD,EAAO,GACF+B,EAAK,EAAGA,EAAKlC,UAAU/d,OAAQigB,IACpC/B,EAAK+B,GAAMlC,UAAUkC,GAEzB,OAAOjC,EAAiBvd,SAASygB,gBAAgBnB,EAAOkB,GAAS/C,EAC7E,CACA,CACA,EACA,IACI,IAAK,IAAIc,EAAK9B,EAAS,8vBAA8vB6D,MAAM,MAAO1B,EAAKL,EAAGniB,QAASwiB,EAAGpiB,KAAMoiB,EAAKL,EAAGniB,OAAQ,CAEx0BmkB,EADa3B,EAAG1iB,MAExB,CACA,CACA,MAAOkjB,GAASzB,EAAM,CAAEhe,MAAOyf,EAAQ,CACvC,QACI,IACQR,IAAOA,EAAGpiB,OAASohB,EAAKW,EAAGW,SAAStB,EAAGb,KAAKwB,EACxD,CACA,QAAc,GAAIZ,EAAK,MAAMA,EAAIhe,KAAM,CACvC,CCnEO,MAAMkhB,EACT,kBAAOC,GACHrlB,KAAKslB,YAAYC,OACzB,CACI,8BAAOC,CAAwBvO,EAAMwO,GACjC,IAAKzlB,KAAK0lB,iBAAkB,CACxB,IAAIC,EACJ,OAAQ1O,GACJ,YACI0O,EAAOP,EAAYQ,cAAeH,EAAUzlB,KAAK6lB,aAAgBT,EAAYQ,cAAc9hB,QAC3F,MAEJ,UACI6hB,EAAOP,EAAYU,YAAaL,EAAUzlB,KAAK+lB,WAAcX,EAAYU,YAAYhiB,QACrF,MAGJ,QACI6hB,EAAOP,EAAYY,cAAeP,EAAUzlB,KAAKimB,aAAgBb,EAAYY,cAAcliB,QAInG,IAAIoiB,EAAQ,cAKZ,MAAO,CAAEC,iBAJiBf,EAAYgB,YAAYF,EAAMG,KAAKV,EAAKQ,kBAAkB,IAIpCG,eAHxBlB,EAAYgB,YAAYF,EAAMG,KAAKV,EAAKW,gBAAgB,IAGGC,cAF5DnB,EAAYgB,YAAYF,EAAMG,KAAKV,EAAKY,eAAe,IAEsCC,YAD/FpB,EAAYgB,YAAYF,EAAMG,KAAKV,EAAKa,aAAa,IAEtF,CACQ,IAAIC,EAAyBzmB,KAAK0mB,yBAC9BC,EAAyB3mB,KAAK4mB,yBAC9BC,EAAuB7mB,KAAK8mB,uBAChC,OAAQ7P,GACJ,YAcI,MADuB,CAAEkP,iBAZC,QAAWnmB,KAAK+mB,2BAA+BtB,EAAUzlB,KAAKgnB,gCAAmChnB,KAAKinB,4BAA+B,KAAON,EAA0B,KACzL3mB,KAAKknB,2BAA6BzB,EAAUzlB,KAAKmnB,iCAAmC,MACpFnnB,KAAKonB,2BAA6B3B,EAAUzlB,KAAKqnB,iCAAmC,KAU3Bf,eATxC,QAAWtmB,KAAKsnB,yBAA6B7B,EAAUzlB,KAAKunB,8BAAiCvnB,KAAKinB,4BAA+B,KAAON,EAA0B,KACnL3mB,KAAKwnB,yBAA2B/B,EAAUzlB,KAAKynB,+BAAiC,MAChFznB,KAAK0nB,yBAA2BjC,EAAUzlB,KAAK2nB,+BAAiC,KAOYpB,cAN5E,QAAWvmB,KAAK4nB,wBAA4BnC,EAAUzlB,KAAK6nB,6BAAgC7nB,KAAKinB,4BAA+B,KAAON,EAA0B,KAChL3mB,KAAK8nB,wBAA0BrC,EAAUzlB,KAAK+nB,8BAAgC,MAC9E/nB,KAAKgoB,wBAA0BvC,EAAUzlB,KAAKioB,8BAAgC,KAI+CzB,YAH/G,QAAWxmB,KAAKkoB,sBAA0BzC,EAAUzlB,KAAKmoB,2BAA8BnoB,KAAKinB,4BAA+B,KAAON,EAA0B,KAC1K3mB,KAAKooB,sBAAwB3C,EAAUzlB,KAAKqoB,4BAA8B,MAC1EroB,KAAKsoB,sBAAwB7C,EAAUzlB,KAAKuoB,4BAA8B,MAIrF,UAcI,MADuB,CAAEpC,iBAZC,QAAWnmB,KAAKwoB,yBAA6B/C,EAAUzlB,KAAKyoB,8BAAiCzoB,KAAK0oB,0BAA6B,KAAO7B,EAAwB,KACjL7mB,KAAK2oB,yBAA2BlD,EAAUzlB,KAAK4oB,+BAAiC,MAChF5oB,KAAK6oB,yBAA2BpD,EAAUzlB,KAAK8oB,+BAAiC,KAUvBxC,eATxC,QAAWtmB,KAAK+oB,uBAA2BtD,EAAUzlB,KAAKgpB,4BAA+BhpB,KAAK0oB,0BAA6B,KAAO7B,EAAwB,KAC3K7mB,KAAKipB,uBAAyBxD,EAAUzlB,KAAKkpB,6BAA+B,MAC5ElpB,KAAKmpB,uBAAyB1D,EAAUzlB,KAAKopB,6BAA+B,KAOgB7C,cAN5E,QAAWvmB,KAAKqpB,sBAA0B5D,EAAUzlB,KAAKspB,2BAA8BtpB,KAAK0oB,0BAA6B,KAAO7B,EAAwB,KACxK7mB,KAAKupB,sBAAwB9D,EAAUzlB,KAAKwpB,4BAA8B,MAC1ExpB,KAAKypB,sBAAwBhE,EAAUzlB,KAAK0pB,4BAA8B,KAImDlD,YAH/G,QAAWxmB,KAAK2pB,oBAAwBlE,EAAUzlB,KAAK4pB,yBAA4B5pB,KAAK0oB,0BAA6B,KAAO7B,EAAwB,KAClK7mB,KAAK6pB,oBAAsBpE,EAAUzlB,KAAK8pB,0BAA4B,MACtE9pB,KAAK+pB,oBAAsBtE,EAAUzlB,KAAKgqB,0BAA4B,MAKjF,QAcI,MADuB,CAAE7D,iBAZC,QAAWnmB,KAAKiqB,2BAA8BxE,EAAUzlB,KAAKkqB,gCAAkClqB,KAAKmqB,4BAA+B,KAAO1D,EAA0B,IACvLzmB,KAAKoqB,4BAA8B,EAAKpqB,KAAKqqB,gCAAkC3e,KAAK4F,MAAMmU,EAAU,IAAQ,KAC5GzlB,KAAKsqB,4BAA8B,EAAKtqB,KAAKuqB,gCAAkC7e,KAAK4F,MAAMmU,EAAU,IAAQ,KAUnDa,eATxC,QAAWtmB,KAAKwqB,yBAA4B/E,EAAUzlB,KAAKyqB,8BAAgCzqB,KAAKmqB,4BAA+B,KAAO1D,EAA0B,IACjLzmB,KAAK0qB,0BAA4B,EAAK1qB,KAAK2qB,8BAAgCjf,KAAK4F,MAAMmU,EAAU,IAAQ,KACxGzlB,KAAK4qB,0BAA4B,EAAK5qB,KAAK6qB,8BAAgCnf,KAAK4F,MAAMmU,EAAU,IAAQ,KAOZc,cAN5E,QAAWvmB,KAAK8qB,wBAA2BrF,EAAUzlB,KAAK+qB,6BAA+B/qB,KAAKmqB,4BAA+B,KAAO1D,EAA0B,IAC9KzmB,KAAKgrB,yBAA2B,EAAKhrB,KAAKirB,6BAA+Bvf,KAAK4F,MAAMmU,EAAU,IAAQ,KACtGzlB,KAAKkrB,yBAA2B,EAAKlrB,KAAKmrB,6BAA+Bzf,KAAK4F,MAAMmU,EAAU,IAAQ,KAIuBe,YAH/G,QAAWxmB,KAAKorB,sBAAyB3F,EAAUzlB,KAAKqrB,2BAA6BrrB,KAAKmqB,4BAA+B,KAAO1D,EAA0B,IACxKzmB,KAAKsrB,uBAAyB,EAAKtrB,KAAKurB,2BAA6B7f,KAAK4F,MAAMmU,EAAU,IAAQ,KAClGzlB,KAAKwrB,uBAAyB,EAAKxrB,KAAKyrB,2BAA6B/f,KAAK4F,MAAMmU,EAAU,IAAQ,MAKzH,CACI,8BAAOiG,CAAwBC,EAAMlG,GACjC,GAAKzlB,KAAK0lB,iBAUN,OAAON,EAAYwG,gBAAgBD,EAAMlG,GAVjB,CACxB,IAAIE,EAAOP,EAAYwG,gBAAgBD,EAAMlG,GAC7C,IAAIS,EAAQ,cAKZ,MAAO,CAAEC,iBAJiBf,EAAYgB,YAAYF,EAAMG,KAAKV,EAAKQ,kBAAkB,IAIpCG,eAHxBlB,EAAYgB,YAAYF,EAAMG,KAAKV,EAAKW,gBAAgB,IAGGC,cAF5DnB,EAAYgB,YAAYF,EAAMG,KAAKV,EAAKY,eAAe,IAEsCC,YAD/FpB,EAAYgB,YAAYF,EAAMG,KAAKV,EAAKa,aAAa,IAEtF,CAIA,CAEI,sBAAOoF,CAAgBD,EAAMlG,GACzB,GAAKzlB,KAAK0lB,iBAWL,CACD,GAAIN,EAAYE,YAAYuG,IAAIpG,GAC5B,OAAOL,EAAYE,YAAYwG,IAAIrG,GAElC,CACD,IAAIgB,EAAyBzmB,KAAK0mB,yBAC9BC,EAAyB3mB,KAAK4mB,yBAC9BC,EAAuB7mB,KAAK8mB,uBAChC,GAAIrB,EAAUkG,EAAKI,kBAAmB,CAClC,IAYIC,EAAmB,CAAE7F,iBAZC,QAAWnmB,KAAKiqB,2BAA8BxE,EAAUzlB,KAAKkqB,gCAAkClqB,KAAKmqB,4BAA+B,KAAO1D,EAA0B,IACvLzmB,KAAKoqB,4BAA8B,EAAKpqB,KAAKqqB,gCAAkC3e,KAAK4F,MAAMmU,EAAU,IAAQ,KAC5GzlB,KAAKsqB,4BAA8B,EAAKtqB,KAAKuqB,gCAAkC7e,KAAK4F,MAAMmU,EAAU,IAAQ,KAUnDa,eATxC,QAAWtmB,KAAKwqB,yBAA4B/E,EAAUzlB,KAAKyqB,8BAAgCzqB,KAAKmqB,4BAA+B,KAAO1D,EAA0B,IACjLzmB,KAAK0qB,0BAA4B,EAAK1qB,KAAK2qB,8BAAgCjf,KAAK4F,MAAMmU,EAAU,IAAQ,KACxGzlB,KAAK4qB,0BAA4B,EAAK5qB,KAAK6qB,8BAAgCnf,KAAK4F,MAAMmU,EAAU,IAAQ,KAOZc,cAN5E,QAAWvmB,KAAK8qB,wBAA2BrF,EAAUzlB,KAAK+qB,6BAA+B/qB,KAAKmqB,4BAA+B,KAAO1D,EAA0B,IAC9KzmB,KAAKgrB,yBAA2B,EAAKhrB,KAAKirB,6BAA+Bvf,KAAK4F,MAAMmU,EAAU,IAAQ,KACtGzlB,KAAKkrB,yBAA2B,EAAKlrB,KAAKmrB,6BAA+Bzf,KAAK4F,MAAMmU,EAAU,IAAQ,KAIuBe,YAH/G,QAAWxmB,KAAKorB,sBAAyB3F,EAAUzlB,KAAKqrB,2BAA6BrrB,KAAKmqB,4BAA+B,KAAO1D,EAA0B,IACxKzmB,KAAKsrB,uBAAyB,EAAKtrB,KAAKurB,2BAA6B7f,KAAK4F,MAAMmU,EAAU,IAAQ,KAClGzlB,KAAKwrB,uBAAyB,EAAKxrB,KAAKyrB,2BAA6B/f,KAAK4F,MAAMmU,EAAU,IAAQ,MAGzG,OADAL,EAAYE,YAAYvgB,IAAI0gB,EAASuG,GAC9BA,CAC3B,CACqB,GAAIvG,EAAUkG,EAAKI,kBAAoBJ,EAAKM,kBAAmB,CAChE,IAYID,EAAmB,CAAE7F,iBAZC,QAAWnmB,KAAK+mB,4BAAgCtB,EAAUkG,EAAKI,mBAAqB/rB,KAAKgnB,gCAAmChnB,KAAKinB,4BAA+B,KAAON,EAA0B,KACpN3mB,KAAKknB,2BAA6BzB,EAAUzlB,KAAKmnB,iCAAmC,MACpFnnB,KAAKonB,2BAA6B3B,EAAUzlB,KAAKqnB,iCAAmC,KAU3Bf,eATxC,QAAWtmB,KAAKsnB,0BAA8B7B,EAAUkG,EAAKI,mBAAqB/rB,KAAKunB,8BAAiCvnB,KAAKinB,4BAA+B,KAAON,EAA0B,KAC9M3mB,KAAKwnB,yBAA2B/B,EAAUzlB,KAAKynB,+BAAiC,MAChFznB,KAAK0nB,yBAA2BjC,EAAUzlB,KAAK2nB,+BAAiC,KAOYpB,cAN5E,QAAWvmB,KAAK4nB,yBAA6BnC,EAAUkG,EAAKI,mBAAqB/rB,KAAK6nB,6BAAgC7nB,KAAKinB,4BAA+B,KAAON,EAA0B,KAC3M3mB,KAAK8nB,wBAA0BrC,EAAUzlB,KAAK+nB,8BAAgC,MAC9E/nB,KAAKgoB,wBAA0BvC,EAAUzlB,KAAKioB,8BAAgC,KAI+CzB,YAH/G,QAAWxmB,KAAKkoB,uBAA2BzC,EAAUkG,EAAKI,mBAAqB/rB,KAAKmoB,2BAA8BnoB,KAAKinB,4BAA+B,KAAON,EAA0B,KACrM3mB,KAAKooB,sBAAwB3C,EAAUzlB,KAAKqoB,4BAA8B,MAC1EroB,KAAKsoB,sBAAwB7C,EAAUzlB,KAAKuoB,4BAA8B,MAGjF,OADAnD,EAAYE,YAAYvgB,IAAI0gB,EAASuG,GAC9BA,CAC3B,CACqB,CACD,IAYIA,EAAmB,CAAE7F,iBAZC,QAAWnmB,KAAKwoB,0BAA8B/C,EAAUkG,EAAKI,kBAAoBJ,EAAKM,mBAAqBjsB,KAAKyoB,8BAAiCzoB,KAAK0oB,0BAA6B,KAAO7B,EAAwB,KACrO7mB,KAAK2oB,yBAA2BlD,EAAUzlB,KAAK4oB,+BAAiC,MAChF5oB,KAAK6oB,yBAA2BpD,EAAUzlB,KAAK8oB,+BAAiC,KAUvBxC,eATxC,QAAWtmB,KAAK+oB,wBAA4BtD,EAAUkG,EAAKI,kBAAoBJ,EAAKM,mBAAqBjsB,KAAKgpB,4BAA+BhpB,KAAK0oB,0BAA6B,KAAO7B,EAAwB,KAC/N7mB,KAAKipB,uBAAyBxD,EAAUzlB,KAAKkpB,6BAA+B,MAC5ElpB,KAAKmpB,uBAAyB1D,EAAUzlB,KAAKopB,6BAA+B,KAOgB7C,cAN5E,QAAWvmB,KAAKqpB,uBAA2B5D,EAAUkG,EAAKI,kBAAoBJ,EAAKM,mBAAqBjsB,KAAKspB,2BAA8BtpB,KAAK0oB,0BAA6B,KAAO7B,EAAwB,KAC5N7mB,KAAKupB,sBAAwB9D,EAAUzlB,KAAKwpB,4BAA8B,MAC1ExpB,KAAKypB,sBAAwBhE,EAAUzlB,KAAK0pB,4BAA8B,KAImDlD,YAH/G,QAAWxmB,KAAK2pB,qBAAyBlE,EAAUkG,EAAKI,kBAAoBJ,EAAKM,mBAAqBjsB,KAAK4pB,yBAA4B5pB,KAAK0oB,0BAA6B,KAAO7B,EAAwB,KACtN7mB,KAAK6pB,oBAAsBpE,EAAUzlB,KAAK8pB,0BAA4B,MACtE9pB,KAAK+pB,oBAAsBtE,EAAUzlB,KAAKgqB,0BAA4B,MAG7E,OADA5E,EAAYE,YAAYvgB,IAAI0gB,EAASuG,GAC9BA,CAC3B,CACA,CACA,CAtEY,OAAIvG,EAAUkG,EAAKI,kBACR3G,EAAYY,cAAeP,EAAUzlB,KAAKimB,aAAgBb,EAAYY,cAAcliB,QAEtF2hB,EAAUkG,EAAKI,kBAAoBJ,EAAKM,kBACtC7G,EAAYQ,eAAgBH,EAAUkG,EAAKI,mBAAqB/rB,KAAK6lB,aAAgBT,EAAYQ,cAAc9hB,QAG/GshB,EAAYU,aAAcL,EAAUkG,EAAKI,kBAAoBJ,EAAKM,mBAAqBjsB,KAAK+lB,WAAcX,EAAYU,YAAYhiB,OAgEzJ,CACI,eAAOooB,CAAShnB,GACZ,IAAIinB,EAAQnsB,KAAKosB,OAAOlnB,GACXmnB,MAATF,IACAA,EAAQ/G,EAAYkH,cACxBtsB,KAAKusB,EAAcC,YAAcL,EACjC,IAAIM,EAAc,SACoE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,oDACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,sEACiE,IAAhFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBACtDF,GAAe,2BACkE,IAAjFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,0BACtDF,GAAe,2BACiE,IAAhFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBACtDF,GAAe,0BAC0D,IAAzEC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,kBACtDF,GAAe,yBACoE,IAAnFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACtDF,GAAe,qCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,yBAA2B/pB,EAAO0Z,qBAAuB,KACU,IAAlFsQ,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,yBAA2B/pB,EAAO4Z,qBAAuB,KACQ,IAAhFoQ,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBACtDF,GAAe,uBAAyB/pB,EAAO8Z,mBAAqB,KACsB,IAA1FkQ,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,mCACtDF,GAAe,sCAC2E,IAA1FC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,mCACtDF,GAAe,sCACyE,IAAxFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACtDF,GAAe,oCACiE,IAAhFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBACtDF,GAAe,8BACoE,IAAnFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACtDF,GAAe,gCAC2D,IAA1EC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,mBACtDF,GAAe,uBACkE,IAAjFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,0BACtDF,GAAe,+CAC4D,IAA3EC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,oBACtDF,GAAe,yBAC6D,IAA5EC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,qBACtDF,GAAe,0BACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,iCACyE,IAAxFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,iCACyE,IAAxFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACtDF,GAAe,qCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,+BACuE,IAAtFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACtDF,GAAe,mCACkE,IAAjFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,0BACtDF,GAAe,iCAC+D,IAA9EC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,uBACtDF,GAAe,8BACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACyE,IAAxFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACtDF,GAAe,wCACuE,IAAtFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACtDF,GAAe,sCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACoE,IAAnFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACtDF,GAAe,mCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACwE,IAAvFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACtDF,GAAe,uCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACqE,IAApFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACtDF,GAAe,oCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACoE,IAAnFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACtDF,GAAe,mCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACiE,IAAhFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBACtDF,GAAe,gCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACoE,IAAnFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACtDF,GAAe,mCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACiE,IAAhFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBACtDF,GAAe,gCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACoE,IAAnFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACtDF,GAAe,mCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACiE,IAAhFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBACtDF,GAAe,gCACsE,IAArFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtDF,GAAe,qCACoE,IAAnFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACtDF,GAAe,mCACmE,IAAlFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BACtDF,GAAe,kCACiE,IAAhFC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBACtDF,GAAe,gCACnBA,GAAe,IACfzsB,KAAKusB,EAAcC,YAAcC,EAAczsB,KAAKusB,EAAcC,YAClE,MAAMI,EAAaroB,SAASsoB,cAAc,4BACxB,MAAdD,GACAA,EAAW7J,aAAa,UAAW2J,iBAAiBnoB,SAASigB,iBAAiBmI,iBAAiB,2BAEnG3sB,KAAKqlB,cACLrlB,KAAK0lB,iBAA2G,QAAvFgH,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,uBAAuBG,OACtG9sB,KAAKimB,cAAgByG,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBAC3E3sB,KAAK6lB,cAAgB6G,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBAC3E3sB,KAAK+lB,YAAc2G,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,uBACzE3sB,KAAK0mB,0BAA4BgG,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACvF3sB,KAAK4mB,0BAA4B8F,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACvF3sB,KAAK8mB,wBAA0B4F,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACrF3sB,KAAK+sB,eAAiBL,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,mBAC5E3sB,KAAKgtB,wBAA0BN,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACrF3sB,KAAKitB,qBAAuBP,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BAClF3sB,KAAKktB,sBAAwBR,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACnF3sB,KAAKmtB,mBAAqBT,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yBAChF3sB,KAAKotB,wBAA0BV,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACrF3sB,KAAKqtB,qBAAuBX,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2BAC9E3sB,KAAK0lB,mBACL1lB,KAAKiqB,4BAA8ByC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACzF3sB,KAAKkqB,iCAAmCwC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,uCAC9F3sB,KAAKoqB,4BAA8BsC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACzF3sB,KAAKqqB,iCAAmCqC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,uCAC9F3sB,KAAKsqB,4BAA8BoC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACzF3sB,KAAKuqB,iCAAmCmC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,uCAC9F3sB,KAAKwqB,0BAA4BkC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACvF3sB,KAAKyqB,+BAAiCiC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,qCAC5F3sB,KAAK0qB,0BAA4BgC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACvF3sB,KAAK2qB,+BAAiC+B,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,qCAC5F3sB,KAAK4qB,0BAA4B8B,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACvF3sB,KAAK6qB,+BAAiC6B,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,qCAC5F3sB,KAAK8qB,yBAA2B4B,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtF3sB,KAAK+qB,8BAAgC2B,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,oCAC3F3sB,KAAKgrB,yBAA2B0B,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtF3sB,KAAKirB,8BAAgCyB,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,oCAC3F3sB,KAAKkrB,yBAA2BwB,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtF3sB,KAAKmrB,8BAAgCuB,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,oCAC3F3sB,KAAKorB,uBAAyBsB,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACpF3sB,KAAKqrB,4BAA8BqB,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,kCACzF3sB,KAAKsrB,uBAAyBoB,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACpF3sB,KAAKurB,4BAA8BmB,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,kCACzF3sB,KAAKwrB,uBAAyBkB,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACpF3sB,KAAKyrB,4BAA8BiB,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,kCACzF3sB,KAAK+mB,4BAA8B2F,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACzF3sB,KAAKgnB,iCAAmC0F,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,uCAC9F3sB,KAAKknB,4BAA8BwF,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACzF3sB,KAAKmnB,iCAAmCuF,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,uCAC9F3sB,KAAKonB,4BAA8BsF,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,iCACzF3sB,KAAKqnB,iCAAmCqF,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,uCAC9F3sB,KAAKsnB,0BAA4BoF,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACvF3sB,KAAKunB,+BAAiCmF,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,qCAC5F3sB,KAAKwnB,0BAA4BkF,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACvF3sB,KAAKynB,+BAAiCiF,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,qCAC5F3sB,KAAK0nB,0BAA4BgF,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACvF3sB,KAAK2nB,+BAAiC+E,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,qCAC5F3sB,KAAK4nB,yBAA2B8E,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtF3sB,KAAK6nB,8BAAgC6E,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,oCAC3F3sB,KAAK8nB,yBAA2B4E,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtF3sB,KAAK+nB,8BAAgC2E,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,oCAC3F3sB,KAAKgoB,yBAA2B0E,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,8BACtF3sB,KAAKioB,8BAAgCyE,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,oCAC3F3sB,KAAKkoB,uBAAyBwE,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACpF3sB,KAAKmoB,4BAA8BuE,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,kCACzF3sB,KAAKooB,uBAAyBsE,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACpF3sB,KAAKqoB,4BAA8BqE,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,kCACzF3sB,KAAKsoB,uBAAyBoE,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACpF3sB,KAAKuoB,4BAA8BmE,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,kCACzF3sB,KAAKwoB,0BAA4BkE,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACvF3sB,KAAKyoB,+BAAiCiE,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,qCAC5F3sB,KAAK2oB,0BAA4B+D,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACvF3sB,KAAK4oB,+BAAiC8D,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,qCAC5F3sB,KAAK6oB,0BAA4B6D,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,+BACvF3sB,KAAK8oB,+BAAiC4D,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,qCAC5F3sB,KAAK+oB,wBAA0B2D,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACrF3sB,KAAKgpB,6BAA+B0D,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,mCAC1F3sB,KAAKipB,wBAA0ByD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACrF3sB,KAAKkpB,6BAA+BwD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,mCAC1F3sB,KAAKmpB,wBAA0BuD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,6BACrF3sB,KAAKopB,6BAA+BsD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,mCAC1F3sB,KAAKqpB,uBAAyBqD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACpF3sB,KAAKspB,4BAA8BoD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,kCACzF3sB,KAAKupB,uBAAyBmD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACpF3sB,KAAKwpB,4BAA8BkD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,kCACzF3sB,KAAKypB,uBAAyBiD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4BACpF3sB,KAAK0pB,4BAA8BgD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,kCACzF3sB,KAAK2pB,qBAAuB+C,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,0BAClF3sB,KAAK4pB,0BAA4B8C,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACvF3sB,KAAK6pB,qBAAuB6C,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,0BAClF3sB,KAAK8pB,0BAA4B4C,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACvF3sB,KAAK+pB,qBAAuB2C,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,0BAClF3sB,KAAKgqB,0BAA4B0C,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,gCACgB,IAAnGD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4CACtD3sB,KAAKmqB,6BAA+BuC,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2CACS,IAAnGD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,4CACtD3sB,KAAKinB,6BAA+ByF,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,2CACO,IAAjGD,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,0CACtD3sB,KAAK0oB,2BAA6BgE,iBAAiB1sB,KAAKusB,GAAeI,iBAAiB,yCAExG,CACI,kBAAOvG,CAAYlhB,GACf,OAAOwnB,iBAAiB1sB,KAAKusB,GAAeI,iBAAiBznB,EACrE,EAEAkgB,EAAYE,YAAc,IAAIgI,IAC9BlI,EAAYM,kBAAmB,EAC/BN,EAAYkH,aAAe,cAC3BlH,EAAYgH,OAAS,CACjB,eAAgB,GAChB,mBAAoB,6hBAiBpB,gBAAiB,mzJAuHjB,kBAAmB,qmJA4GnBmB,OAAU,i4JAmHVC,OAAU,s3JAkHVC,SAAY,26IAmHZ,gBAAiB,08KAqIjB,cAAe,8uJAgHfC,aAAgB,m1HAkHhBC,IAAO,g2IAiHPC,UAAa,s3IAiHbC,OAAU,+xIA8GVC,MAAS,0xIA+GTC,OAAU,wxIA+GVC,MAAS,yxIA+GT,iBAAkB,m0IA+GlBC,OAAU,o1HAoGVC,OAAU,0xIA8GV1hB,QAAW,42IAiHX2hB,OAAU,oxIA6GV,YAAa,g+IAsHbC,UAAa,q3IAkHbC,WAAc,q6IAmHdC,KAAQ,wwIA8GRC,UAAa,+zIAgHbC,UAAa,44IAgHbC,QAAW,igIA8GX,gBAAiB,stDA4DjB,iBAAkB,4vGA6ElBC,OAAU,68GAiFV,kBAAmB,2iHAmFnBC,SAAY,o/GAkFZC,SAAY,gsFA6EZ,cAAe,2lHAoFf,cAAe,q0CA0DfC,QAAW,o/GAkFXC,OAAU,mnGAmFV,uBAAwB,yjEAiExB,iBAAkB,q/IAsGlB,kBAAmB,q5EAgEnB,eAAgB,09BAyBhB,mBAAoB,w2IAqGpB,cAAe,+7GAgFfC,OAAU,ggKAwHVC,OAAU,sEAKVC,SAAY,2SAcZC,SAAY,goJA6GZC,aAAgB,q4HAkGhBC,OAAU,ojJAsHVC,SAAY,osJAoHZ,mBAAoB,2+ZA4TpB,iBAAkB,0saA6TlBC,YAAe,y4IAiHfC,SAAY,ugJAoHZC,OAAU,urIA2GV,eAAgB,ygHA6GhB,YAAa,m3KAkJbC,OAAU,GAAGC,aAAaC,QAAQ,iBAAmB,gBAEzDvK,EAAYwK,WAAa,4BACzBxK,EAAYyK,iBAAmB,kCAC/BzK,EAAY0K,aAAe,8BAC3B1K,EAAY2K,SAAW,yBACvB3K,EAAY4K,YAAc,6BAC1B5K,EAAY6K,cAAgB,8BAC5B7K,EAAY8K,aAAe,8BAC3B9K,EAAY+K,cAAgB,+CAC5B/K,EAAYgL,iBAAmB,mDAC/BhL,EAAYiL,WAAa,2BACzBjL,EAAYkL,WAAa,2BACzBlL,EAAYmL,mBAAqB,oCACjCnL,EAAYoL,cAAgB,+BAC5BpL,EAAYqL,gBAAkB,gCAC9BrL,EAAYsL,MAAQ,qBACpBtL,EAAYuL,UAAY,0BACxBvL,EAAYwL,cAAgB,+BAC5BxL,EAAYyL,cAAgB,+BAC5BzL,EAAY0L,kBAAoB,uCAChC1L,EAAY2L,kBAAoB,oCAChC3L,EAAY4L,gBAAkB,kCAC9B5L,EAAY6L,yBAA2B,qCACvC7L,EAAY8L,8BAAgC,2CAC5C9L,EAAY+L,yBAA2B,qCACvC/L,EAAYgM,8BAAgC,2CAC5ChM,EAAYiM,yBAA2B,qCACvCjM,EAAYkM,8BAAgC,2CAC5ClM,EAAYmM,uBAAyB,mCACrCnM,EAAYoM,4BAA8B,yCAC1CpM,EAAYqM,uBAAyB,mCACrCrM,EAAYsM,4BAA8B,yCAC1CtM,EAAYuM,uBAAyB,mCACrCvM,EAAYwM,4BAA8B,yCAC1CxM,EAAYyM,sBAAwB,kCACpCzM,EAAY0M,2BAA6B,wCACzC1M,EAAY2M,sBAAwB,kCACpC3M,EAAY4M,2BAA6B,wCACzC5M,EAAY6M,sBAAwB,kCACpC7M,EAAY8M,2BAA6B,wCACzC9M,EAAY+M,oBAAsB,gCAClC/M,EAAYgN,yBAA2B,sCACvChN,EAAYiN,oBAAsB,gCAClCjN,EAAYkN,yBAA2B,sCACvClN,EAAYmN,oBAAsB,gCAClCnN,EAAYoN,yBAA2B,sCACvCpN,EAAYqN,uBAAyB,mCACrCrN,EAAYsN,4BAA8B,yCAC1CtN,EAAYuN,uBAAyB,mCACrCvN,EAAYwN,4BAA8B,yCAC1CxN,EAAYyN,uBAAyB,mCACrCzN,EAAY0N,4BAA8B,yCAC1C1N,EAAY2N,qBAAuB,iCACnC3N,EAAY4N,0BAA4B,uCACxC5N,EAAY6N,qBAAuB,iCACnC7N,EAAY8N,0BAA4B,uCACxC9N,EAAY+N,qBAAuB,iCACnC/N,EAAYgO,0BAA4B,uCACxChO,EAAYiO,oBAAsB,gCAClCjO,EAAYkO,yBAA2B,sCACvClO,EAAYmO,oBAAsB,gCAClCnO,EAAYoO,yBAA2B,sCACvCpO,EAAYqO,oBAAsB,gCAClCrO,EAAYsO,yBAA2B,sCACvCtO,EAAYuO,kBAAoB,8BAChCvO,EAAYwO,uBAAyB,oCACrCxO,EAAYyO,kBAAoB,8BAChCzO,EAAY0O,uBAAyB,oCACrC1O,EAAY2O,kBAAoB,8BAChC3O,EAAY4O,uBAAyB,oCACrC5O,EAAY6O,yBAA2B,qCACvC7O,EAAY8O,8BAAgC,2CAC5C9O,EAAY+O,yBAA2B,qCACvC/O,EAAYgP,8BAAgC,2CAC5ChP,EAAYiP,yBAA2B,qCACvCjP,EAAYkP,8BAAgC,2CAC5ClP,EAAYmP,uBAAyB,mCACrCnP,EAAYoP,4BAA8B,yCAC1CpP,EAAYqP,uBAAyB,mCACrCrP,EAAYsP,4BAA8B,yCAC1CtP,EAAYuP,uBAAyB,mCACrCvP,EAAYwP,4BAA8B,yCAC1CxP,EAAYyP,sBAAwB,kCACpCzP,EAAY0P,2BAA6B,wCACzC1P,EAAY2P,sBAAwB,kCACpC3P,EAAY4P,2BAA6B,wCACzC5P,EAAY6P,sBAAwB,kCACpC7P,EAAY8P,2BAA6B,wCACzC9P,EAAY+P,oBAAsB,gCAClC/P,EAAYgQ,yBAA2B,sCACvChQ,EAAYiQ,oBAAsB,gCAClCjQ,EAAYkQ,yBAA2B,sCACvClQ,EAAYmQ,oBAAsB,gCAClCnQ,EAAYoQ,yBAA2B,sCACvCpQ,EAAYqQ,mBAAqB,qCACjCrQ,EAAYsQ,sBAAwB,yCACpCtQ,EAAYuQ,mBAAqB,qCACjCvQ,EAAYwQ,sBAAwB,yCACpCxQ,EAAYyQ,iBAAmB,mCAC/BzQ,EAAY0Q,oBAAsB,uCAClC1Q,EAAY2Q,wBAA0B,0CACtC3Q,EAAY4Q,qBAAuB,sCACnC5Q,EAAY6Q,iBAAmB,iCAC/B7Q,EAAY8Q,mBAAqB,mCACjC9Q,EAAY+Q,gBAAkB,oCAC9B/Q,EAAYgR,gBAAkB,iCAC9BhR,EAAYiR,iBAAmB,qCAC/BjR,EAAYkR,cAAgB,kCAC5BlR,EAAYmR,gBAAkB,iCAC9BnR,EAAYoR,sBAAwB,wCACpCpR,EAAYqR,oBAAsB,uCAClCrR,EAAYsR,oBAAsB,qCAClCtR,EAAYuR,sBAAwB,uCACpCvR,EAAY6E,2BAA6B,EACzC7E,EAAY8E,gCAAkC,EAC9C9E,EAAYgF,2BAA6B,EACzChF,EAAYiF,gCAAkC,EAC9CjF,EAAYkF,2BAA6B,EACzClF,EAAYmF,gCAAkC,EAC9CnF,EAAYoF,yBAA2B,EACvCpF,EAAYqF,8BAAgC,EAC5CrF,EAAYsF,yBAA2B,EACvCtF,EAAYuF,8BAAgC,EAC5CvF,EAAYwF,yBAA2B,EACvCxF,EAAYyF,8BAAgC,EAC5CzF,EAAY0F,wBAA0B,EACtC1F,EAAY2F,6BAA+B,EAC3C3F,EAAY4F,wBAA0B,EACtC5F,EAAY6F,6BAA+B,EAC3C7F,EAAY8F,wBAA0B,EACtC9F,EAAY+F,6BAA+B,EAC3C/F,EAAYgG,sBAAwB,EACpChG,EAAYiG,2BAA6B,EACzCjG,EAAYkG,sBAAwB,EACpClG,EAAYmG,2BAA6B,EACzCnG,EAAYoG,sBAAwB,EACpCpG,EAAYqG,2BAA6B,EACzCrG,EAAYoD,yBAA2B,EACvCpD,EAAYqD,8BAAgC,EAC5CrD,EAAYuD,yBAA2B,EACvCvD,EAAYwD,8BAAgC,EAC5CxD,EAAYyD,yBAA2B,EACvCzD,EAAY0D,8BAAgC,EAC5C1D,EAAY2D,uBAAyB,EACrC3D,EAAY4D,4BAA8B,EAC1C5D,EAAY6D,uBAAyB,EACrC7D,EAAY8D,4BAA8B,EAC1C9D,EAAY+D,uBAAyB,EACrC/D,EAAYgE,4BAA8B,EAC1ChE,EAAYiE,sBAAwB,EACpCjE,EAAYkE,2BAA6B,EACzClE,EAAYmE,sBAAwB,EACpCnE,EAAYoE,2BAA6B,EACzCpE,EAAYqE,sBAAwB,EACpCrE,EAAYsE,2BAA6B,EACzCtE,EAAYuE,oBAAsB,EAClCvE,EAAYwE,yBAA2B,EACvCxE,EAAYyE,oBAAsB,EAClCzE,EAAY0E,yBAA2B,EACvC1E,EAAY2E,oBAAsB,EAClC3E,EAAY4E,yBAA2B,EACvC5E,EAAY2B,2BAA6B,EACzC3B,EAAY4B,gCAAkC,EAC9C5B,EAAY8B,2BAA6B,EACzC9B,EAAY+B,gCAAkC,EAC9C/B,EAAYgC,2BAA6B,EACzChC,EAAYiC,gCAAkC,EAC9CjC,EAAYkC,yBAA2B,EACvClC,EAAYmC,8BAAgC,EAC5CnC,EAAYoC,yBAA2B,EACvCpC,EAAYqC,8BAAgC,EAC5CrC,EAAYsC,yBAA2B,EACvCtC,EAAYuC,8BAAgC,EAC5CvC,EAAYwC,wBAA0B,EACtCxC,EAAYyC,6BAA+B,EAC3CzC,EAAY0C,wBAA0B,EACtC1C,EAAY2C,6BAA+B,EAC3C3C,EAAY4C,wBAA0B,EACtC5C,EAAY6C,6BAA+B,EAC3C7C,EAAY8C,sBAAwB,EACpC9C,EAAY+C,2BAA6B,EACzC/C,EAAYgD,sBAAwB,EACpChD,EAAYiD,2BAA6B,EACzCjD,EAAYkD,sBAAwB,EACpClD,EAAYmD,2BAA6B,EACzCnD,EAAY+E,4BAA8B,GAC1C/E,EAAY6B,4BAA8B,GAC1C7B,EAAYsD,0BAA4B,GACxCtD,EAAYa,aAAe,EAC3Bb,EAAYS,aAAe,EAC3BT,EAAYW,WAAa,EACzBX,EAAYsB,yBAA2B,EACvCtB,EAAYwB,yBAA2B,EACvCxB,EAAY0B,uBAAyB,EACrC1B,EAAY2H,eAAiB,GAC7B3H,EAAY4H,wBAA0B,GACtC5H,EAAY6H,qBAAuB,GACnC7H,EAAY8H,sBAAwB,GACpC9H,EAAY+H,mBAAqB,GACjC/H,EAAYgI,wBAA0B,GACtChI,EAAYiI,qBAAuB,GACnCjI,EAAYY,cAAgB/V,EAAU,CAClC,CACI/K,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,UACNihB,iBAAkB,4CAClBG,eAAgB,0CAChBC,cAAe,yCACfC,YAAa,0CAGrBpB,EAAYQ,cAAgB3V,EAAU,CAClC,CACI/K,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,uCACd,CACCthB,KAAM,SACNihB,iBAAkB,2CAClBG,eAAgB,yCAChBC,cAAe,wCACfC,YAAa,yCAGrBpB,EAAYU,YAAc7V,EAAU,CAChC,CACI/K,KAAM,OACNihB,iBAAkB,yCAClBG,eAAgB,uCAChBC,cAAe,sCACfC,YAAa,qCACd,CACCthB,KAAM,OACNihB,iBAAkB,yCAClBG,eAAgB,uCAChBC,cAAe,sCACfC,YAAa,qCACd,CACCthB,KAAM,OACNihB,iBAAkB,yCAClBG,eAAgB,uCAChBC,cAAe,sCACfC,YAAa,qCACd,CACCthB,KAAM,OACNihB,iBAAkB,yCAClBG,eAAgB,uCAChBC,cAAe,sCACfC,YAAa,uCAGrBpB,EAAYmH,EAAgBhoB,SAASG,KAAKC,YAAYmf,EAAKR,MAAM,CAAErM,KAAM,cC5nNjD,4FAA4FgO,KAAK2R,UAAUC,WAI5H,MAAMC,GACT,oBAAOC,CAAcC,GACjB,IAAIl3B,EACJ,MAAMm3B,EAAgBD,GAAe,EAC/BE,EAA4B,GAAdF,EACpB,OAA+D,QAAvDl3B,EAAKg3B,GAAaK,iBAAiBF,UAAmC,IAAPn3B,OAAgB,EAASA,EAAGs3B,QAAQF,EACnH,CACI,+BAAOG,CAAyBC,GAC5B,IAAK,IAAIL,EAAgB,EAAGA,EAAgBH,GAAaK,iBAAiBrzB,OAAQmzB,IAAiB,CAC/F,MAAMM,EAAWT,GAAaK,iBAAiBF,GAC/C,IAAK,IAAIC,EAAc,EAAGA,EAAcK,EAASH,QAAQtzB,OAAQozB,IAAe,CAC5E,MAAMM,EAASD,EAASH,QAAQF,GAChC,GAAIM,EAAOC,aAAeD,EAAOE,aAAeJ,EAC5C,OAAQL,GAAiB,GAAKC,CAClD,CACA,CACQ,OAAO,IACf,CACI,wBAAOS,CAAkBC,GACrB,IAAK,IAAIX,EAAgB,EAAGA,EAAgBH,GAAaK,iBAAiBrzB,OAAQmzB,IAAiB,CAC/F,MAAMM,EAAWT,GAAaK,iBAAiBF,GAC/C,IAAK,IAAIC,EAAc,EAAGA,EAAcK,EAASH,QAAQtzB,OAAQozB,IAAe,CAE5E,GADeK,EAASH,QAAQF,GACrBhyB,MAAQ0yB,EACf,OAAQX,GAAiB,GAAKC,CAClD,CACA,CACQ,OAAO,IACf,CACI,yBAAOW,CAAmBC,GACtB,IAAIh4B,EACJ,OAAsE,QAA9DA,EAAKg3B,GAAaK,iBAAiB,GAAGC,QAAQ1xB,kBAA+B,IAAP5F,OAAgB,EAASA,EAAGoB,aAAiD,EAASA,EAAY42B,GACxL,ECrCO,SAAStqB,GAAsB0C,EAAO6nB,GACzC,IAAK,IAAItsB,EAAI,EAAGA,EAAIyE,EAAMpM,OAAQ2H,IAC9ByE,EAAMzE,IAAMssB,CAEpB,CAIA,SAASC,GAAUvW,GACf,IAJJ,SAAoBA,GAChB,SAASA,GAAOA,EAAKA,EAAI,EAC7B,CAESwW,CAAWxW,GACZ,MAAM,IAAIre,MAAM,0CACpB,OAAOsI,KAAKgB,MAAMhB,KAAKN,IAAIqW,GAAK/V,KAAKN,IAAI,GAC7C,CAqMO,SAASmC,GAA4B2C,EAAOgoB,GAC/C,MAAMC,EAAcH,GAAUE,GAC9B,GAAIA,EAAkB,EAClB,MAAM,IAAI90B,MAAM,wCACpB,IAAK,IAAIg1B,EAAOD,EAAc,EAAGC,GAAQ,EAAGA,IAAQ,CAChD,MAAMC,EAAY,GAAKD,EACjBE,EAAeD,GAAa,EAC5BE,EAASF,GAAa,EACtBG,EAA6B,EAAV9sB,KAAKE,GAAW2sB,EACnCE,EAAe/sB,KAAKgE,IAAI8oB,GACxBE,EAAehtB,KAAKC,IAAI6sB,GACxBG,EAAuB,EAAMF,EACnC,IAAK,IAAIlzB,EAAa,EAAGA,EAAa2yB,EAAiB3yB,GAAcgzB,EAAQ,CACzE,MAAMK,EAAcrzB,EACdszB,EAAYD,EAAcN,EAC1BQ,EAAcF,EAAcP,EAC5BU,EAAYD,EAAcR,EAC1BU,EAAYF,EAAcT,EAC1BY,EAAa/oB,EAAM0oB,GACnBM,EAAahpB,EAAM4oB,GACzB5oB,EAAM0oB,GAAeK,EAAaC,EAClChpB,EAAM2oB,IAAc,EACpB3oB,EAAM4oB,GAAeG,EAAaC,EAClChpB,EAAM6oB,IAAc,EACpB,IAAII,EAAIV,EACJvX,GAAKwX,EACLU,EAAQ,EACRC,EAAQ,EACZ,IAAK,IAAI7zB,EAAQ,EAAGA,EAAQ8yB,EAAc9yB,IAAS,CAC/C,MAAM8zB,EAAUV,EAAcpzB,EACxB+zB,EAAUT,EAActzB,EACxBg0B,EAAUV,EAActzB,EACxBi0B,EAAUT,EAAYxzB,EACtBk0B,EAAQxpB,EAAMopB,GACdK,EAAQzpB,EAAMqpB,GACdK,EAAQ1pB,EAAMspB,GACdK,EAAQ3pB,EAAMupB,GACdK,EAAQJ,EAAQC,EAChBI,EAAQH,EAAQC,EACtB3pB,EAAMopB,GAAWI,EAAQC,EACzBzpB,EAAMqpB,GAAWM,EAAQD,EACzB1pB,EAAMspB,GAAWM,EAAQX,EAAIY,EAAQ7Y,EACrChR,EAAMupB,GAAWM,EAAQZ,EAAIW,EAAQ5Y,EACrC,MAAM8Y,EAAQrB,EAAuBQ,EAAIC,EACnCa,EAAQtB,EAAuBzX,EAAImY,EACzCD,EAAQD,EACRE,EAAQnY,EACRiY,EAAIa,EACJ9Y,EAAI+Y,CACpB,CACA,CACA,CACI,IAAK,IAAIz0B,EAAQ,EAAGA,EAAQ0yB,EAAiB1yB,GAAS,EAAG,CACrD,MAAM00B,EAAS10B,EAAQ,EACjB20B,EAAS30B,EAAQ,EACjB40B,EAAS50B,EAAQ,EACjBk0B,EAAQxpB,EAAM1K,GACdm0B,EAAwB,EAAhBzpB,EAAMgqB,GACdG,EAAQnqB,EAAMiqB,GACdG,EAAwB,EAAhBpqB,EAAMkqB,GACdN,EAAQJ,EAAQW,EAChBN,EAAQL,EAAQW,EACtBnqB,EAAM1K,GAASs0B,EAAQH,EACvBzpB,EAAMgqB,GAAUJ,EAAQH,EACxBzpB,EAAMiqB,GAAUJ,EAAQO,EACxBpqB,EAAMkqB,GAAUL,EAAQO,CAChC,EAtQA,SAA0BpqB,EAAOgoB,GAC7B,MAAMqC,EAAWvC,GAAUE,GAC3B,GAAIqC,EAAW,GACX,MAAM,IAAIn3B,MAAM,mDACpB,MAAMo3B,EAAa,GAAKD,EACxB,IAAK,IAAI9uB,EAAI,EAAGA,EAAIysB,EAAiBzsB,IAAK,CACtC,IAAIgvB,EAKJ,GAJAA,GAAU,MAAJhvB,IAAe,GAAW,MAAJA,IAAe,EAC3CgvB,GAAU,MAAJA,IAAe,GAAW,MAAJA,IAAe,EAC3CA,GAAU,MAAJA,IAAe,GAAW,KAAJA,IAAe,EAC3CA,GAAMA,GAAK,GAAW,IAAJA,IAAa,IAAOD,EAClCC,EAAIhvB,EAAG,CACP,IAAIivB,EAAOxqB,EAAMzE,GACjByE,EAAMzE,GAAKyE,EAAMuqB,GACjBvqB,EAAMuqB,GAAKC,CACvB,CACA,CACA,CAsPIC,CAAiBzqB,EAAOgoB,EAC5B,CD9OApB,GAAa8D,QAAU,QACvB9D,GAAa+D,mBAAqB,iBAAmB/D,GAAa8D,QAClE9D,GAAagE,gBAAkB,qBAC/BhE,GAAaiE,QAAU,QAAQ9V,KAAK2R,UAAUoE,WAAa,YAAY/V,KAAK2R,UAAUC,YAAc,uBAAuB5R,KAAK2R,UAAUoE,WAAa,sBAAsB/V,KAAK2R,UAAUC,WAC5LC,GAAamE,WAAanE,GAAaiE,QAAU,IAAM,QACvDjE,GAAaoE,SAAWpE,GAAaiE,QAAU,UAAY,UAC3DjE,GAAaK,iBAAmBlnB,EAAU,CACtC,CACI/K,KAAM,qBAAsBkyB,QAASnnB,EAAU,CAC3C,CAAE/K,KAAMhE,EAAY,GAAIi6B,WAAY,GACpC,CAAEj2B,KAAMhE,EAAY,GAAIi6B,WAAY,GACpC,CAAEj2B,KAAMhE,EAAY,GAAIi6B,WAAY,GACpC,CAAEj2B,KAAMhE,EAAY,GAAIi6B,WAAY,GACpC,CAAEj2B,KAAMhE,EAAY,GAAIi6B,WAAY,GACpC,CAAEj2B,KAAMhE,EAAY,GAAIi6B,WAAY,GACpC,CAAEj2B,KAAMhE,EAAY,GAAIi6B,WAAY,GACpC,CAAEj2B,KAAMhE,EAAY,GAAIi6B,WAAY,GACpC,CAAEj2B,KAAMhE,EAAY,GAAIi6B,WAAY,GACpC,CAAEj2B,KAAMhE,EAAY,GAAIi6B,WAAY,GACpC,CAAEj2B,KAAMhE,EAAY,IAAKi6B,WAAY,OAG7C,CACIj2B,KAAM,gBAAiBkyB,QAASnnB,EAAU,CACtC,CAAE/K,KAAM,cAAewyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,OAAQokB,SAAY,GAAIjrB,QAAW,CAAC,YAAakrB,WAAc,YAAaC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,WAAYlwB,KAAQ,SAAUmwB,OAAU,OAAQ7gB,UAAa,KACtP,CAAE1V,KAAM,gBAAiBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,OAAQokB,SAAY,GAAIjrB,QAAW,CAAC,YAAakrB,WAAc,YAAaC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,WAAYlwB,KAAQ,WAAYmwB,OAAU,OAAQ7gB,UAAa,KAC1P,CAAE1V,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,OAAQokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,QAAWvrB,QAAW,CAAC,YAAakrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,eAAgBlwB,KAAQ,SAAUmwB,OAAU,MAAO7gB,UAAa,KACvU,CAAE1V,KAAM,kBAAmBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,OAAQokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,KAAQvrB,QAAW,CAAC,YAAakrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,eAAgBlwB,KAAQ,WAAYmwB,OAAU,UAAW7gB,UAAa,KAC9U,CAAE1V,KAAM,kBAAmBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,OAAQokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMvrB,QAAW,CAAC,UAAW,YAAawrB,QAAW,QAASN,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgBlwB,KAAQ,WAAYmwB,OAAU,MAAO7gB,UAAa,KAC5V,CAAE1V,KAAM,aAAcwyB,YAAa,IAAKmE,SAAS,EAAMT,SAAU,CAAEnkB,KAAQ,QAASqkB,WAAc,OAAQlrB,QAAW,CAAC,YAAaorB,MAAS,WAAYM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAU1wB,KAAQ,UAC1O,CAAEpG,KAAM,gBAAiBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,WAAYokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIV,cAAiB,EAAGhlB,cAAiB,EAAGnJ,WAAc,GAAI8uB,SAAY,IAAKzkB,OAAU,GAAI0kB,MAAS,EAAGvhB,UAAa,KAC7S,CAAE1V,KAAM,WAAYwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,GAAIkrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,eAAgBY,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,MAC3f,CAAEN,KAAM,UAAWwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,GAAIkrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,kBAAmBY,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,MACzoB,CAAEN,KAAM,WAAYwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,GAAIkrB,WAAc,SAAUC,cAAiB,MAAQhlB,cAAiB,EAAGilB,MAAS,eAAgBY,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,MAC/f,CAAEN,KAAM,WAAYwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,CAAC,WAAYwrB,QAAW,UAAWN,WAAc,SAAUC,cAAiB,MAAQhlB,cAAiB,EAAGilB,MAAS,kBAAmBY,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,KAAOoL,UAAa,KACne,CAAE1V,KAAM,UAAWwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIsB,cAAgB,EAAMC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAO3sB,QAAW,GAAI4sB,SAAY,GAAIzB,cAAiB,EAAGhlB,cAAiB,EAAG6lB,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,QAAU,CAAET,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,QAAU,CAAET,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,QAAU,CAAET,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,SAAWriB,UAAa,KACxuB,CAAE1V,KAAM,YAAawyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,cAAe7G,QAAW,CAAC,YAAakrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,WAAYH,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,KAAQF,OAAU,OAAQG,QAAW,OAAQhhB,UAAa,GAAIsiB,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACvmB,CAAEh4B,KAAM,gBAAiBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,cAAe7G,QAAW,CAAC,YAAakrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,WAAYH,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,KAAQF,OAAU,OAAQ7gB,UAAa,GAAIsiB,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC3iB,CAAEh4B,KAAM,gBAAiBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,cAAe7G,QAAW,CAAC,YAAakrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,WAAYH,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,KAAQF,OAAU,OAAQ7gB,UAAa,GAAIsiB,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC3iB,CAAEh4B,KAAM,eAAgBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,cAAe7G,QAAW,CAAC,YAAakrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,WAAYH,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,KAAQF,OAAU,OAAQ7gB,UAAa,GAAIsiB,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC3lB,CAAEh4B,KAAM,aAAcwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,cAAe7G,QAAW,CAAC,YAAakrB,WAAc,YAAaC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,WAAYH,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,KAAQF,OAAU,OAAQ7gB,UAAa,GAAIsiB,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,MAC3lB,CAAEh4B,KAAM,eAAgBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,cAAe7G,QAAW,CAAC,YAAakrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,WAAYH,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,KAAQF,OAAU,OAAQ7gB,UAAa,GAAIsiB,eAAkB,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,SAGnjB,CACIh4B,KAAM,mBAAoBkyB,QAASnnB,EAAU,CACzC,CAAE/K,KAAM,gBAAiBwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,IAAMC,WAAc,SAAWvrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,OAAUM,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,eAAgB4B,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,QAAS4B,cAAiB,GAAIziB,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,gBAC9qB,CAAEx3B,KAAM,eAAgBwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,OAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,IAAO,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,SAAWvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,eAAgB4B,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,QAAS4B,cAAiB,GAAIziB,UAAa,KACnmB,CAAE1V,KAAM,iBAAkBwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,OAAQokB,SAAY,GAAIjrB,QAAW,CAAC,eAAgB+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQL,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,eAAgBlwB,KAAQ,YAAamwB,OAAU,UAAW7gB,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,cACpZ,CAAEx3B,KAAM,mBAAoBwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,QAAWvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,eAAgB4B,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,aAAc4B,cAAiB,GAAIziB,UAAa,KAC9e,CAAE1V,KAAM,mBAAoBwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAaokB,SAAY,GAAIjrB,QAAW,CAAC,eAAgB+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQL,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,eAAgB4B,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI3B,OAAU,OAAQ7gB,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,cACzf,CAAEx3B,KAAM,mBAAoBwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,CAAC,eAAgB+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,SAAUC,WAAc,MAASL,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,eAAgBY,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,MAChrB,CAAEN,KAAM,cAAewyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,YAAaykB,SAAY,IAAKC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,SAAUC,WAAc,SAAWvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,eAAgB4B,UAAa,CAAC,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,OAAQ4B,cAAiB,GAAIziB,UAAa,KACjiB,CAAE1V,KAAM,WAAYwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,CAAC,eAAgB+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,SAAUC,WAAc,QAAWL,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,eAAgBY,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,MAAOhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,cACrpB,CAAEx3B,KAAM,WAAYwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,QAAWvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,QAAS4B,UAAa,CAAC,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK3B,OAAU,QAAS4B,cAAiB,GAAIziB,UAAa,KACje,CAAE1V,KAAM,gBAAiBwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAaokB,SAAY,CAAC,CAAEpkB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,IAAMC,WAAc,SAAWvrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,OAAUM,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,eAAgB4B,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK3B,OAAU,QAAS4B,cAAiB,GAAIziB,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,gBACvqB,CAAEx3B,KAAM,gBAAiBwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,GAAK,CAAE1kB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,GAAK,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,MAASvrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,OAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,IAAKC,WAAc,QAAWM,OAAU,GAAIV,cAAiB,EAAGhlB,aAAgB,GAAI6mB,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,QAAS4B,cAAiB,GAAIC,kBAAqB,WAAY1iB,UAAa,CAAC,CAAE6hB,OAAU,iBAAkBC,SAAY,YAAal3B,MAAS,GAAK,CAAEi3B,OAAU,iBAAkBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,iBAAkBC,SAAY,UAAWl3B,MAAS,SAGvjC,CACIN,KAAM,oBAAqBkyB,QAASnnB,EAAU,CAC1C,CAAE/K,KAAM,UAAWwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,cAAeC,aAAgB,QAASC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,MAAOhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,cACtlB,CAAEx3B,KAAM,eAAgBwyB,YAAa,EAAGD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMumB,OAAU,EAAGnC,SAAY,GAAIsB,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAOvF,OAAU,IAAKpnB,QAAW,CAAC,aAAc,cAAe,UAAWorB,MAAS,QAASiC,gBAAkB,EAAMC,cAAiB,GAAIC,gBAAkB,EAAMC,cAAiB,EAAGC,eAAkB,EAAGV,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQM,OAAU,EAAGV,cAAiB,EAAGhlB,aAAgB,GAAI6lB,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,MAAOhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,IAAMwN,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,EAAGC,sBAAyB,EAAGC,sBAAyB,GAAK,CAAEzB,OAAU,oBAAqBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,EAAG14B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,IAAMC,QAAU,IACptD,CAAEj5B,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,QAAS4B,UAAa,CAAC,IAAK,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI3B,OAAU,OAAQ4B,cAAiB,GAAIziB,UAAa,KACpc,CAAE1V,KAAM,cAAewyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,QAAWvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,QAAS4B,UAAa,CAAC,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI3B,OAAU,OAAQ4B,cAAiB,GAAIziB,UAAa,KAClb,CAAE1V,KAAM,aAAcwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACxlB,CAAEx3B,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMumB,OAAU,EAAGnC,SAAY,GAAIsB,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAOvF,OAAU,IAAKpnB,QAAW,CAAC,aAAc,cAAe,UAAWorB,MAAS,QAASiC,gBAAkB,EAAMC,cAAiB,GAAIC,gBAAkB,EAAMC,cAAiB,EAAGC,eAAkB,EAAGV,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,QAAWM,OAAU,EAAGV,cAAiB,EAAGhlB,aAAgB,GAAI6lB,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,MAAOhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,IAAMwN,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,GAAK,CAAEzB,OAAU,oBAAqBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,EAAG14B,MAAS,IAAM24B,QAAU,IACngD,CAAEj5B,KAAM,UAAWwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMumB,OAAU,EAAGnC,SAAY,GAAIsB,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAOvF,OAAU,IAAKpnB,QAAW,CAAC,aAAc,cAAe,UAAWorB,MAAS,QAASiC,gBAAkB,EAAMC,cAAiB,GAAIC,gBAAkB,EAAMC,cAAiB,EAAGC,eAAkB,EAAGV,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQM,OAAU,EAAGV,cAAiB,EAAGhlB,aAAgB,GAAI6lB,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,MAAOhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,IAAMwN,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,GAAK,CAAEzB,OAAU,oBAAqBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,EAAGC,sBAAyB,EAAGC,sBAAyB,EAAG14B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,EAAG14B,MAAS,IAAM24B,QAAU,IACvtD,CAAEj5B,KAAM,YAAawyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,cACnlB,CAAEx3B,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2G,uBAAwB,EAAGhD,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,IAAO,CAAE1kB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,QAAWvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,QAAS4B,UAAa,CAAC,GAAI,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,UAAW4B,cAAiB,GAAIziB,UAAa,KACnjB,CAAE1V,KAAM,aAAcwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,MAAOhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACnkB,CAAEx3B,KAAM,YAAawyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,cAAeC,aAAgB,QAASC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,eACxlB,CAAEx3B,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,UAAWQ,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,aAC7lB,CAAEx3B,KAAM,cAAewyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,aACplB,CAAEx3B,KAAM,QAASwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMumB,OAAU,EAAGnC,SAAY,GAAIsB,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAOvF,OAAU,IAAKpnB,QAAW,CAAC,aAAc,cAAe,UAAWorB,MAAS,QAASiC,gBAAkB,EAAMC,cAAiB,GAAIC,gBAAkB,EAAMC,cAAiB,EAAGC,eAAkB,EAAGV,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQM,OAAU,EAAGV,cAAiB,EAAGhlB,aAAgB,GAAI6lB,UAAa,UAAWC,aAAgB,MAAOC,kBAAqB,GAAIC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,MAAOhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,IAAMwN,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,GAAK,CAAEzB,OAAU,oBAAqBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,IAAMC,QAAU,OAG3/C,CACIj5B,KAAM,iBAAkBkyB,QAASnnB,EAAU,CACvC,CAAE/K,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACnlB,CAAEx3B,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,GAAIjrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,QAAS4B,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,OAAQ4B,cAAiB,GAAIziB,UAAa,KAC7Z,CAAE1V,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACzY,CAAEl4B,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC9Y,CAAEl4B,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,iBAG3lB,CACIx3B,KAAM,sBAAuBkyB,QAASnnB,EAAU,CAC5C,CAAE/K,KAAM,gBAAiBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/Y,CAAEl4B,KAAM,gBAAiBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC/Y,CAAEl4B,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACrlB,CAAEx3B,KAAM,gBAAiBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC3Y,CAAEl4B,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC1Y,CAAEl4B,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,aAC7kB,CAAEx3B,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,WAAa,CAAEF,UAAa,MAAOhtB,UAAa,GAAIktB,SAAY,cACtlB,CAAEx3B,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACnlB,CAAEx3B,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,OAAQqkB,WAAc,OAAQlrB,QAAW,SAAUorB,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAW1wB,KAAQ,WAAY+yB,SAAY,UAAWzC,QAAW,SACxR,CAAE12B,KAAM,kBAAmBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,OAAQokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,QAAWvrB,QAAW,CAAC,cAAe,cAAe+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,MAAOC,WAAc,UAAY2C,iBAAoB,IAAKC,uBAA0B,EAAGjD,WAAc,QAASC,cAAiB,MAAQhlB,cAAiB,EAAGilB,MAAS,WAAYlwB,KAAQ,WAAYmwB,OAAU,OAAQ7gB,UAAa,CAAC,CAAE6hB,OAAU,iBAAkBC,SAAY,UAAWl3B,MAAS,SAG9hB,CACIN,KAAM,wBAAyBkyB,QAASnnB,EAAU,CAC9C,CAAE/K,KAAM,oBAAqBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,cAAeE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,cAAeC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,GAAIktB,SAAY,aAC1mB,CAAEx3B,KAAM,OAAQwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMqkB,WAAc,YAAalrB,QAAW,SAAUorB,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aAC3kB,CAAEx3B,KAAM,QAASwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMqkB,WAAc,YAAalrB,QAAW,SAAUorB,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,cACllB,CAAEx3B,KAAM,QAASwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,QAASM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,aACllB,CAAEx3B,KAAM,UAAWwyB,YAAa,IAAK0D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,QAASM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,aAC/jB,CAAEx3B,KAAM,WAAYwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACvlB,CAAEx3B,KAAM,OAAQwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,MAAOhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,iBAG7lB,CACIx3B,KAAM,qBAAsBkyB,QAASnnB,EAAU,CAC3C,CAAE/K,KAAM,mBAAoBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,OAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,GAAK,CAAE1kB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,GAAK,CAAE1kB,KAAQ,OAAQykB,SAAY,MAAOC,WAAc,KAAQvrB,QAAW,CAAC,cAAe,cAAe+sB,WAAc,CAAC,CAAElmB,KAAQ,YAAaykB,SAAY,MAAOC,WAAc,GAAK,CAAE1kB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,QAAW6C,WAAc,GAAIlD,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,QAAS4B,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,OAAQ4B,cAAiB,GAAIziB,UAAa,CAAC,CAAE6hB,OAAU,iBAAkBC,SAAY,YAAal3B,MAAS,MACh4B,CAAEN,KAAM,oBAAqBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,OAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,GAAK,CAAE1kB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,GAAK,CAAE1kB,KAAQ,OAAQykB,SAAY,MAAOC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,IAAMC,WAAc,MAASvrB,QAAW,CAAC,cAAe,aAAc,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,GAAK,CAAE1kB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,IAAM6C,WAAc,GAAIvC,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,QAAS4B,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,OAAQ4B,cAAiB,GAAIziB,UAAa,CAAC,CAAE6hB,OAAU,iBAAkBC,SAAY,YAAal3B,MAAS,MAC/8B,CAAEN,KAAM,iBAAkBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,SAAUC,WAAc,IAAMvrB,QAAW,GAAIkrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,QAASY,UAAa,YAAaC,aAAgB,UAAWC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,MAAOhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,cAC3jB,CAAEx3B,KAAM,mBAAoBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,IAAMvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,QAASY,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,MAAOhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,KAAOoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,QAASl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,MAC1uB,CAAEN,KAAM,gBAAiBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,MAAOokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,SAAWvrB,QAAW,GAAIkrB,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,QAASpuB,WAAc,SAAUwN,UAAa,CAAC,CAAE6hB,OAAU,aAAcC,SAAY,YACnU,CAAEx3B,KAAM,iBAAkBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,MAAOokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMvrB,QAAW,CAAC,WAAYwrB,QAAW,UAAWN,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,QAASpuB,WAAc,GAAIwN,UAAa,CAAC,CAAE6hB,OAAU,aAAcC,SAAY,cACxV,CAAEx3B,KAAM,eAAgBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,QAASY,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,MAAOhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,MAAOhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,KAAOoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,YACtsB,CAAEx3B,KAAM,gBAAiBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,IAAMvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,cAAiB,EAAGilB,MAAS,QAASY,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,MAAOhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,SAGzpB,CACIN,KAAM,kBAAmBkyB,QAASnnB,EAAU,CACxC,CAAE/K,KAAM,kBAAmBwyB,YAAa,GAAID,aAAa,EAAM2G,uBAAwB,EAAGhD,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACjZ,CAAEl4B,KAAM,kBAAmBwyB,YAAa,GAAI0G,uBAAwB,EAAGhD,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,KACrY,CAAEl4B,KAAM,mBAAoBwyB,YAAa,GAAID,aAAa,EAAM2G,uBAAwB,EAAGhD,SAAU,CAAEnkB,KAAQ,KAAMumB,OAAU,EAAGnC,SAAY,GAAIsB,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAOvF,OAAU,IAAKpnB,QAAW,CAAC,UAAW,cAAe,SAAU,UAAWwrB,QAAW,UAAW6C,aAAgB,GAAKC,aAAgB,KAAMC,aAAgB,GAAIC,YAAe,EAAGjB,gBAAkB,EAAMC,cAAiB,EAAGC,eAAkB,EAAGV,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQkD,OAAU,IAAK5C,OAAU,EAAGV,cAAiB,EAAGhlB,cAAiB,EAAG6lB,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,IAAMwN,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,EAAGC,sBAAyB,EAAGC,sBAAyB,GAAK,CAAEzB,OAAU,oBAAqBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,IAAMC,QAAU,IACzlD,CAAEj5B,KAAM,aAAcwyB,YAAa,GAAID,aAAa,EAAM2G,uBAAwB,EAAGhD,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,kBAAmBkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASJ,QAAW,UAAWQ,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aAC1nB,CAAEx3B,KAAM,aAAcwyB,YAAa,GAAID,aAAa,EAAM2G,uBAAwB,EAAGhD,SAAU,CAAEnkB,KAAQ,KAAMqkB,WAAc,aAAclrB,QAAW,SAAUorB,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACrnB,CAAEx3B,KAAM,aAAcwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzY,CAAEl4B,KAAM,YAAawyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,OAAQ7G,QAAW,SAAUkrB,WAAc,aAAcE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAW1wB,KAAQ,aAAc+yB,SAAY,aAAczC,QAAW,SAChS,CAAE12B,KAAM,YAAawyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqC,SAAY,MAAOzC,QAAW,OAAQwB,UAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACrY,CAAEl4B,KAAM,UAAWwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,aAAcE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,QAASqC,SAAY,MAAOzC,QAAW,OAAQwB,UAAa,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,SAGnZ,CACIl4B,KAAM,iBAAkBkyB,QAASnnB,EAAU,CACvC,CAAE/K,KAAM,WAAYwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,QAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,QAAWvrB,QAAW,CAAC,UAAW,UAAWwrB,QAAW,UAAWK,OAAU,GAAIX,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,EAAGilB,MAAS,eAAgBY,UAAa,cAAeC,aAAgB,MAAOC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,cAC7vB,CAAEx3B,KAAM,QAASwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,aAAcE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,UAAWQ,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aAC1lB,CAAEx3B,KAAM,QAASwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,OAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,MAAOC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,SAAWvrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,KAAOC,WAAc,QAAWM,OAAU,GAAIX,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgBY,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,MAAOhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,MACp4B,CAAEN,KAAM,aAAcwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,aAAcE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,UAAWQ,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,cAC5lB,CAAEx3B,KAAM,SAAUwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,UAAWQ,UAAa,cAAeC,aAAgB,QAASC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,aACrlB,CAAEx3B,KAAM,kBAAmBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMumB,OAAU,EAAGnC,SAAY,GAAIsB,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAO3sB,QAAW,CAAC,cAAe,SAAU,UAAWutB,gBAAkB,EAAMC,cAAiB,EAAGC,eAAkB,EAAGV,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,SAAUC,WAAc,QAAWkD,OAAU,IAAK5C,OAAU,EAAGV,cAAiB,MAAQhlB,aAAgB,GAAI6lB,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,GAAIC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,MAAOhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,IAAMwN,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,UAAWoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,EAAGC,sBAAyB,GAAKC,sBAAyB,IAAMC,QAAU,IAC7vC,CAAEj5B,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,kBAAmBkrB,WAAc,aAAcE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,cAC5lB,CAAEx3B,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,kBAAmBkrB,WAAc,YAAaE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,cAClmB,CAAEx3B,KAAM,kBAAmBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,OAAQqkB,WAAc,YAAalrB,QAAW,kBAAmBorB,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAU1wB,KAAQ,WAAY+yB,SAAY,MAAOzC,QAAW,YACrS,CAAE12B,KAAM,kBAAmBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,kBAAmBkrB,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,GAAIiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACzmB,CAAEx3B,KAAM,kBAAmBwyB,YAAa,GAAID,aAAa,EAAM2G,uBAAwB,EAAGhD,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,kBAAmBkrB,WAAc,YAAaE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,GAAIiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,cAC3oB,CAAEx3B,KAAM,WAAYwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,KAAMC,WAAc,QAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,QAAWvrB,QAAW,CAAC,UAAW,UAAWwrB,QAAW,QAASK,OAAU,GAAIX,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,EAAGilB,MAAS,eAAgBY,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,cACruB,CAAEx3B,KAAM,kBAAmBwyB,YAAa,GAAI0G,uBAAwB,EAAGhD,SAAU,CAAEnkB,KAAQ,KAAMumB,OAAU,EAAGnC,SAAY,GAAIsB,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAOvF,OAAU,IAAKpnB,QAAW,CAAC,UAAW,cAAe,SAAU,UAAWwrB,QAAW,UAAW6C,aAAgB,GAAKC,aAAgB,KAAMC,aAAgB,GAAIC,YAAe,EAAGjB,gBAAkB,EAAMC,cAAiB,GAAIC,eAAkB,EAAGV,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,SAAUC,WAAc,KAAQkD,OAAU,IAAK5C,OAAU,EAAGV,cAAiB,MAAQhlB,aAAgB,GAAI6lB,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,GAAIC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,IAAMwN,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,IAAMC,QAAU,IACx4C,CAAEj5B,KAAM,kBAAmBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,WAAYokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,QAAU,CAAE1kB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,QAAWvrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,YAAaykB,SAAY,IAAKC,WAAc,QAAWM,OAAU,GAAIV,cAAiB,MAAQhlB,aAAgB,EAAGnJ,WAAc,SAAU8uB,SAAY,GAAIzkB,OAAU,EAAG0kB,MAAS,GAAIvhB,UAAa,CAAC,CAAE6hB,OAAU,iBAAkBC,SAAY,UAAWl3B,MAAS,MAC9hB,CAAEN,KAAM,oBAAqBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,WAAYokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAO,CAAE1kB,KAAQ,YAAaykB,SAAY,MAAOC,WAAc,KAAQ,CAAE1kB,KAAQ,OAAQykB,SAAY,IAAMC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,IAAMgB,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAO+B,cAAiB,CAAC,CAAE7nB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAO,CAAE1kB,KAAQ,YAAaykB,SAAY,MAAOC,WAAc,KAAQ,CAAE1kB,KAAQ,OAAQykB,SAAY,IAAMC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,IAAMvrB,QAAW,CAAC,cAAe,SAAU,UAAWutB,gBAAkB,EAAOC,cAAiB,GAAIC,eAAkB,EAAGV,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,IAAMoD,gBAAmB,CAAC,CAAE9nB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,IAAMkD,OAAU,GAAI5C,OAAU,GAAIV,cAAiB,MAAQhlB,cAAiB,EAAGnJ,WAAc,GAAI8uB,SAAY,GAAIzkB,OAAU,GAAI0kB,MAAS,EAAGvhB,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,SAAW,CAAED,OAAU,aAAcC,SAAY,iBAGhtC,CACIx3B,KAAM,gBAAiBkyB,QAASnnB,EAAU,CACtC,CAAE/K,KAAM,gBAAiBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAaokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,GAAK,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,QAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,IAAMC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,MAAOC,WAAc,KAAQ,CAAE1kB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,UAAYvrB,QAAW,CAAC,UAAW,SAAU,UAAWwrB,QAAW,QAASiD,OAAU,IAAK5C,OAAU,GAAIV,cAAiB,MAAQhlB,aAAgB,GAAI6mB,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI3B,OAAU,OAAQ7gB,UAAa,KAC7wB,CAAE1V,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAaokB,SAAY,CAAC,CAAEpkB,KAAQ,OAAQykB,SAAY,IAAMC,WAAc,SAAW,CAAE1kB,KAAQ,OAAQykB,SAAY,OAAQC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,MAAOC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,OAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,MAAOC,WAAc,OAAU,CAAE1kB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,UAAYvrB,QAAW,CAAC,UAAW,SAAU,UAAWwrB,QAAW,QAASiD,OAAU,IAAK5C,OAAU,GAAIX,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgB4B,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,OAAQ7gB,UAAa,KACl0B,CAAE1V,KAAM,aAAcwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,YAAaokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,SAAW,CAAE1kB,KAAQ,OAAQykB,SAAY,MAAOC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,OAAQC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,MAAOC,WAAc,UAAYvrB,QAAW,CAAC,UAAW,SAAU,UAAWwrB,QAAW,QAASiD,OAAU,IAAK5C,OAAU,GAAIX,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgB4B,UAAa,CAAC,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,OAAQ7gB,UAAa,KAC7uB,CAAE1V,KAAM,eAAgBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,YAAaokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,GAAK,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,QAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,IAAMC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,MAAOC,WAAc,MAASvrB,QAAW,CAAC,UAAW,UAAWwrB,QAAW,QAASK,OAAU,GAAIV,cAAiB,MAAQhlB,aAAgB,GAAI6mB,UAAa,CAAC,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI3B,OAAU,OAAQ7gB,UAAa,KAC3pB,CAAE1V,KAAM,aAAcwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,YAAaokB,SAAY,CAAC,CAAEpkB,KAAQ,OAAQykB,SAAY,IAAMC,WAAc,SAAW,CAAE1kB,KAAQ,OAAQykB,SAAY,OAAQC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,MAAOC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,OAAU,CAAE1kB,KAAQ,YAAaykB,SAAY,MAAOC,WAAc,OAAU,CAAE1kB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,UAAYvrB,QAAW,CAAC,UAAW,UAAWwrB,QAAW,QAASK,OAAU,GAAIV,cAAiB,MAAQhlB,aAAgB,GAAI6mB,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,OAAQ7gB,UAAa,KACpuB,CAAE1V,KAAM,YAAawyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,YAAaokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,MAAOC,WAAc,GAAK,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,OAAQC,WAAc,OAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,MAAOC,WAAc,GAAK,CAAE1kB,KAAQ,YAAaykB,SAAY,OAAQC,WAAc,SAAWvrB,QAAW,CAAC,UAAW,UAAWwrB,QAAW,QAASK,OAAU,GAAIX,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgB4B,UAAa,CAAC,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,OAAQ7gB,UAAa,KAC1wB,CAAE1V,KAAM,YAAawyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUqC,SAAY,QAASzC,QAAW,QAASwB,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC3X,CAAEl4B,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,OAAQqkB,WAAc,cAAelrB,QAAW,kBAAmBorB,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAU1wB,KAAQ,UAAW+yB,SAAY,QAASzC,QAAW,UACpS,CAAE12B,KAAM,iBAAkBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,kBAAmBkrB,WAAc,aAAcE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,QAASQ,UAAa,YAAaC,aAAgB,UAAWC,kBAAqB,EAAGiB,iBAAoB,QAAShB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,aACxmB,CAAEx3B,KAAM,aAAcwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,CAAC,UAAW,UAAWwrB,QAAW,UAAWK,OAAU,GAAIX,WAAc,QAASC,cAAiB,MAAQhlB,cAAiB,EAAGilB,MAAS,eAAgBY,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,QAASl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,cACxmB,CAAEx3B,KAAM,QAASwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMumB,OAAU,EAAGnC,SAAY,GAAIsB,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAO3sB,QAAW,CAAC,cAAe,UAAWutB,gBAAkB,EAAMC,cAAiB,EAAGC,eAAkB,EAAGV,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,IAAMM,OAAU,EAAGV,cAAiB,MAAQhlB,aAAgB,EAAG6lB,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,GAAIC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,MAAOhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,IAAMwN,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,UAAWoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,EAAGC,sBAAyB,GAAKC,sBAAyB,GAAK,CAAEzB,OAAU,oBAAqBC,SAAY,UAAWoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,EAAGC,sBAAyB,EAAGC,sBAAyB,IAAMC,QAAU,IACv4C,CAAEj5B,KAAM,QAASwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,CAAC,UAAW,UAAWwrB,QAAW,QAASK,OAAU,GAAIX,WAAc,mBAAoBC,cAAiB,MAAQhlB,cAAiB,EAAGilB,MAAS,eAAgBY,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,aAAcC,SAAY,aAAe,CAAED,OAAU,oBAAqBC,SAAY,cAC9lB,CAAEx3B,KAAM,UAAWwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,SAAW,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,SAAW,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,SAAW,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,cAC7jB,CAAEx3B,KAAM,YAAawyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,kBAAmBkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,QAASJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,MAAOhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,cAC1lB,CAAEx3B,KAAM,aAAcwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,WAAY7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgD,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAG7V,CACI95B,KAAM,gBAAiBkyB,QAASnnB,EAAU,CACtC,CAAE/K,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aAC7kB,CAAEx3B,KAAM,WAAYwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aAC7kB,CAAEx3B,KAAM,OAAQwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACzkB,CAAEx3B,KAAM,gBAAiBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,IAAMC,WAAc,SAAWvrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMM,OAAU,GAAIV,cAAiB,MAAQhlB,cAAiB,EAAG6lB,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,cACj0B,CAAEx3B,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,GAAK,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,SAAWvrB,QAAW,CAAC,UAAW6rB,OAAU,GAAIV,cAAiB,MAAQhlB,cAAiB,EAAG6lB,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,cAC9uB,CAAEx3B,KAAM,gBAAiBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,QAASJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,WAAa,CAAEF,UAAa,MAAOhtB,UAAa,GAAIktB,SAAY,cACvlB,CAAEx3B,KAAM,gBAAiBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,GAAIiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,WAAa,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,cACxlB,CAAEx3B,KAAM,gBAAiBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMqkB,WAAc,OAAQlrB,QAAW,SAAUorB,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,WAAa,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,cACxlB,CAAEx3B,KAAM,cAAewyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,MAAO7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAW5uB,WAAc,GAAI6xB,cAAiB,UAAWrD,QAAW,YAG/Q,CACI12B,KAAM,eAAgBkyB,QAASnnB,EAAU,CACrC,CAAE/K,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,YAC/kB,CAAEx3B,KAAM,WAAYwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,QAAShB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,aAC7kB,CAAEx3B,KAAM,YAAawyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aAC5kB,CAAEx3B,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,YAChlB,CAAEx3B,KAAM,YAAawyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUJ,QAAW,QAASQ,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aAC9jB,CAAEx3B,KAAM,UAAWwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUJ,QAAW,QAASQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aAC5kB,CAAEx3B,KAAM,OAAQwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,aAAcE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,WAAYhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACjlB,CAAEx3B,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,aAAcE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,SAAW,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aACtlB,CAAEx3B,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAKC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,aAC3kB,CAAEx3B,KAAM,WAAYwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACtY,CAAEl4B,KAAM,YAAawyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMumB,OAAU,EAAGnC,SAAY,GAAIsB,cAAgB,EAAOC,YAAe,GAAIC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAOvF,OAAU,IAAKpnB,QAAW,CAAC,cAAe,UAAWutB,gBAAkB,EAAMC,cAAiB,EAAGC,eAAkB,EAAGV,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMuD,gBAAmB,CAAC,CAAEjoB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMM,OAAU,EAAGV,cAAiB,MAAQhlB,cAAiB,EAAG6lB,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,MAAOhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,IAAMwN,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,GAAIC,sBAAyB,EAAGC,sBAAyB,GAAK,CAAEzB,OAAU,oBAAqBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,EAAGC,sBAAyB,EAAGC,sBAAyB,EAAG14B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,WAAYoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,EAAGC,sBAAyB,EAAGC,sBAAyB,IAAMC,QAAU,OAGhuD,CACIj5B,KAAM,gBAAiBkyB,QAASnnB,EAAU,CACtC,CAAE/K,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMumB,OAAU,EAAGnC,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQgB,cAAgB,EAAMC,YAAe,EAAGC,aAAgB,EAAGC,cAAiB,GAAIC,kBAAoB,EAAOvF,OAAU,IAAK2H,cAAiB,GAAI/uB,QAAW,CAAC,UAAW6rB,OAAU,EAAGV,cAAiB,MAAQhlB,cAAiB,EAAG6lB,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,MAAOhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,GAAK,CAAEovB,UAAa,KAAMhtB,UAAa,EAAGytB,SAAY,OAAQ7vB,WAAc,IAAMwN,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,EAAGC,sBAAyB,EAAGC,sBAAyB,EAAG14B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,QAASoB,mBAAsB,EAAGC,iBAAoB,GAAIvxB,SAAW,EAAOwxB,iBAAoB,EAAGC,sBAAyB,EAAGC,sBAAyB,IAAMC,QAAU,IACt2C,CAAEj5B,KAAM,WAAYwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACvY,CAAEl4B,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,kBAAmBkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUqC,SAAY,QAASzC,QAAW,UAAWwB,UAAa,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACvX,CAAEl4B,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUqC,SAAY,QAASzC,QAAW,OAAQwB,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAClX,CAAEl4B,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,GAAIiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,SAAW,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,YAC7kB,CAAEx3B,KAAM,aAAcwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,kBAAmBkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,UAAWQ,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,GAAIiB,iBAAoB,SAAUhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,SAAW,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,WAAa,CAAEF,UAAa,MAAOhtB,UAAa,GAAIktB,SAAY,aAC/lB,CAAEx3B,KAAM,YAAawyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,WAAYokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,SAAWvrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,YAAaykB,SAAY,QAASC,WAAc,QAAWM,OAAU,GAAIV,cAAiB,MAAQhlB,cAAiB,EAAGyoB,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAKpkB,UAAa,CAAC,CAAE6hB,OAAU,iBAAkBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,aAAcC,SAAY,YAChlB,CAAEx3B,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAM7G,QAAW,kBAAmBkrB,WAAc,aAAcE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUJ,QAAW,OAAQQ,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGiB,iBAAoB,UAAWhB,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,GAAIktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,KAAMhtB,UAAa,EAAGktB,SAAY,UAAY,CAAEF,UAAa,MAAOhtB,UAAa,EAAGktB,SAAY,aACxmB,CAAEx3B,KAAM,WAAYwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,WAAYqkB,WAAc,aAAclrB,QAAW,SAAUorB,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUgD,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC7V,CAAE95B,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,WAAY7G,QAAW,SAAUkrB,WAAc,OAAQE,MAAS,UAAWM,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASgD,SAAY,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACpV,CAAE95B,KAAM,eAAgBwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,WAAYokB,SAAY,GAAIjrB,QAAW,CAAC,aAAc,cAAe,UAAWorB,MAAS,QAAS2B,WAAc,CAAC,CAAElmB,KAAQ,YAAaykB,SAAY,MAAOC,WAAc,OAAU,CAAE1kB,KAAQ,WAAYykB,SAAY,KAAOC,WAAc,QAAWM,OAAU,GAAIV,cAAiB,MAAQhlB,aAAgB,GAAIyoB,SAAY,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAIpkB,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,cACvjB,CAAEx3B,KAAM,UAAWwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,YAAa7G,QAAW,SAAUkrB,WAAc,WAAYE,MAAS,UAAWM,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUqC,SAAY,QAASzC,QAAW,UAAWwB,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAGpZ,CACIl4B,KAAM,cAAekyB,QAASnnB,EAAU,CACpC,CAAE/K,KAAM,cAAewyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,CAAC,UAAWyuB,OAAU,IAAKvD,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,eAAgBY,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,MAAOhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,cACpqB,CAAEx3B,KAAM,WAAYwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMkD,OAAU,IAAKvD,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgBY,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,MACjsB,CAAEN,KAAM,gBAAiBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,OAAQokB,SAAY,GAAIjrB,QAAW,CAAC,UAAW,cAAe,UAAWwrB,QAAW,UAAWuB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMkD,OAAU,IAAKvD,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,eAAgBlwB,KAAQ,WAAYmwB,OAAU,aAAc7gB,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,cAC9c,CAAEx3B,KAAM,kBAAmBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,QAAU,CAAE1kB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,QAAWvrB,QAAW,CAAC,UAAWyuB,OAAU,IAAKvD,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgBY,UAAa,YAAaC,aAAgB,cAAeC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,QAASl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,cACzyB,CAAEx3B,KAAM,kBAAmBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,CAAC,eAAgB+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQL,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgBY,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,MACzvB,CAAEN,KAAM,eAAgBwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,CAAC,eAAgB+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQL,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgBY,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,GAAIC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,MAAOhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,cACpuB,CAAEx3B,KAAM,YAAawyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,OAAQokB,SAAY,GAAIjrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,IAAMkD,OAAU,IAAKvD,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgBlwB,KAAQ,WAAYmwB,OAAU,MAAO7gB,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,cACpa,CAAEx3B,KAAM,aAAcwyB,YAAa,GAAID,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMvrB,QAAW,CAAC,SAAU,UAAWyuB,OAAU,IAAK5C,OAAU,GAAIX,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,QAASY,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,MACpwB,CAAEN,KAAM,aAAcwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,gBAAiBokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,IAAMvrB,QAAW,CAAC,UAAWyuB,OAAU,IAAKvD,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgB4B,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK3B,OAAU,SAAU4B,cAAiB,GAAIziB,UAAa,KACte,CAAE1V,KAAM,UAAWwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,UAAYvrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQkD,OAAU,IAAKvD,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgBY,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,GAAIC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,WAAYl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,cAC13B,CAAEx3B,KAAM,SAAUwyB,YAAa,IAAKD,aAAa,EAAM2D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,SAAWvrB,QAAW,CAAC,cAAe,UAAW+sB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,QAASC,WAAc,KAAQkD,OAAU,IAAKvD,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,eAAgBY,UAAa,YAAaC,aAAgB,cAAeC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,MAAOhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,UAAWl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,WAAYl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,cACp4B,CAAEx3B,KAAM,cAAewyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,GAAIjrB,QAAW,CAAC,UAAW,cAAe,UAAWwrB,QAAW,UAAWuB,WAAc,CAAC,CAAElmB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,IAAMkD,OAAU,IAAKvD,WAAc,SAAUC,cAAiB,EAAGhlB,aAAgB,GAAIilB,MAAS,eAAgBY,UAAa,cAAeC,aAAgB,WAAYC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,KAAMhtB,UAAa,GAAK,CAAEgtB,UAAa,MAAOhtB,UAAa,IAAMoL,UAAa,CAAC,CAAE6hB,OAAU,qBAAsBC,SAAY,WAAa,CAAED,OAAU,oBAAqBC,SAAY,WAAYl3B,MAAS,GAAK,CAAEi3B,OAAU,oBAAqBC,SAAY,QAASl3B,MAAS,MACxxB,CAAEN,KAAM,eAAgBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,KAAMokB,SAAY,CAAC,CAAEpkB,KAAQ,OAAQykB,SAAY,QAASC,WAAc,IAAMvrB,QAAW,GAAIkrB,WAAc,SAAUC,cAAiB,MAAQhlB,aAAgB,GAAIilB,MAAS,kBAAmBY,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGC,UAAa,CAAC,CAAEC,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,KAAMhtB,UAAa,IAAM,CAAEgtB,UAAa,MAAOhtB,UAAa,KAAOoL,UAAa,CAAC,CAAE6hB,OAAU,oBAAqBC,SAAY,cACrjB,CAAEx3B,KAAM,eAAgBwyB,YAAa,GAAI0D,SAAU,CAAEnkB,KAAQ,WAAYokB,SAAY,CAAC,CAAEpkB,KAAQ,WAAYykB,SAAY,IAAMC,WAAc,QAAWvrB,QAAW,CAAC,UAAW6rB,OAAU,IAAKV,cAAiB,MAAQhlB,aAAgB,GAAInJ,WAAc,GAAI8uB,SAAY,IAAKzkB,OAAU,GAAI0kB,MAAS,EAAGvhB,UAAa,QAG5T,CACI1V,KAAM,eAAgBkyB,QAASnnB,EAAU,CACrC,CAAE/K,KAAM,mBAAoBwyB,YAAa,IAAKmE,SAAS,EAAMT,SAAU,CAAEnkB,KAAQ,UAAW7G,QAAW,SAAUgvB,MAAS,CAAC,CAAEpD,eAAkB,UAAWgD,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhD,eAAkB,UAAWgD,SAAY,CAAC,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhD,eAAkB,UAAWgD,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhD,eAAkB,UAAWgD,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhD,eAAkB,UAAWgD,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhD,eAAkB,UAAWgD,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhD,eAAkB,UAAWgD,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhD,eAAkB,UAAWgD,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GA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AgBU,EAAqB,SAAE9O,GAC7C,GAA8B,UAA1BoO,EAAoB,MAGpB1yD,MAAMkf,QAAQwzC,EAA2B,aAAI,CAC7C,MAAMY,EAAoBZ,EAA2B,YACrD,IAAK,IAAI1qD,EAAI,EAAGA,EAAIsrD,EAAkBjzD,OAAQ2H,IAAK,CAC/C,MAAM2wC,EAAmB2a,EAAkBtrD,GAC3C,GAAiC,SAA7B2wC,EAAuB,KACvB,SAEJ,GAAgC,MAA5BA,EAAuB,KACvB,SAEJ,MAAM4a,EAAW5a,EAAuB,KAClC6a,EAAQ,CACV,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAEEC,EAAW,CACb,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAEEC,EAAe,CACjB,OACA,QACA,SACA,MACA,YACA,UACA,YACA,eA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"}